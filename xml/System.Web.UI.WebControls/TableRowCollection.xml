<Type Name="TableRowCollection" FullName="System.Web.UI.WebControls.TableRowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="826ba782aab1ec06b7e161265152af109e1ec02a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691433" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableRowCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableRowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableRowCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableRowCollection sealed : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje kolekcję <see cref="T:System.Web.UI.WebControls.TableRow" /> obiektów, które reprezentują pojedynczy wiersz w <see cref="T:System.Web.UI.WebControls.Table" /> formantu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa używana do programowego zarządzania kolekcją <xref:System.Web.UI.WebControls.TableRow> obiektów. Ta klasa jest najczęściej używany do dodawać lub usuwać wiersze z <xref:System.Web.UI.WebControls.Table> formantu.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.Table> formant zawiera <xref:System.Web.UI.WebControls.Table.Rows%2A> kolekcji, która reprezentuje kolekcję <xref:System.Web.UI.WebControls.TableRow> obiektów. Każdy <xref:System.Web.UI.WebControls.TableRow> reprezentuje pojedynczego wiersza w tabeli i zawiera <xref:System.Web.UI.WebControls.TableRow.Cells%2A> kolekcji, która reprezentuje kolekcję <xref:System.Web.UI.WebControls.TableCell> obiektów. Te <xref:System.Web.UI.WebControls.TableCell> reprezentować pojedynczych komórek w tabeli. Aby uzyskać pojedynczych komórek, należy najpierw uzyskać <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.Table.Rows%2A> Kolekcja <xref:System.Web.UI.WebControls.Table> formantu. Następnie można uzyskać <xref:System.Web.UI.WebControls.TableCell> z <xref:System.Web.UI.WebControls.TableRow.Cells%2A> kolekcji <xref:System.Web.UI.WebControls.TableRow>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób programowane Dodawanie wierszy do tabeli, dodając <xref:System.Web.UI.WebControls.TableRow> obiektów, które reprezentują wiersze w tabeli, do <xref:System.Web.UI.WebControls.Table> kontrolować za pośrednictwem <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwości.  
  
 [!code-aspx-csharp[Classic TableRowCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic TableRowCollection Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic TableRowCollection Example/Common/source.xml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TableRow" />
    <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.TableCell" />
    <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
    <altmember cref="T:System.Web.UI.WebControls.Table" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (row As TableRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.TableRow" /> Obiekt do dodania do <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.TableRow" /> obiekt na koniec <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Indeks <see cref="T:System.Web.UI.WebControls.TableRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania <xref:System.Web.UI.WebControls.TableRow> obiekt na koniec <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A> metody w celu dodania <xref:System.Web.UI.WebControls.TableRow> do obiektu <xref:System.Web.UI.WebControls.TableRowCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, row As TableRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja w <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> w której ma zostać dodany <see cref="T:System.Web.UI.WebControls.TableRow" />.</param>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.TableRow" /> Obiekt do dodania do <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Dodaje określony <see cref="T:System.Web.UI.WebControls.TableRow" /> do obiektu <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wstawić określonego <xref:System.Web.UI.WebControls.TableRow> w <xref:System.Web.UI.WebControls.TableRowCollection> pod określonym indeksem.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać <xref:System.Web.UI.WebControls.TableRow> obiekt do środka <xref:System.Web.UI.WebControls.TableRowCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.WebControls.TableRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.WebControls.TableRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rows As TableRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::UI::WebControls::TableRow ^&gt; ^ rows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Web.UI.WebControls.TableRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">Tablica zawierająca <see cref="T:System.Web.UI.WebControls.TableRow" /> obiekty do dodania do kolekcji.</param>
        <summary>Dołącza <see cref="T:System.Web.UI.WebControls.TableRow" /> obiektów z określonej tablicy na końcu kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> metodę, aby dołączyć <xref:System.Web.UI.WebControls.TableRow> obiektów z określonej tablicy do kolekcji. Ta metoda jest często używana podczas są tworzenia tabeli. Aby utworzyć tabelę, należy najpierw utworzyć tablicę <xref:System.Web.UI.WebControls.TableRow> obiekty do reprezentowania wiersze w tabeli. Następnie użyj <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> jest Metoda tablicy jako argument, aby dodać <xref:System.Web.UI.WebControls.TableRow> obiekty do kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="rows" /> parametr jest <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie <see cref="T:System.Web.UI.WebControls.TableRow" /> formantów <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do usuwania wszystkich <xref:System.Web.UI.WebControls.TableRow> obiektów z <xref:System.Web.UI.WebControls.TableRowCollection> i ustaw <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> właściwości na 0.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.Clear%2A> metody, aby usunąć wszystkie <xref:System.Web.UI.WebControls.TableRow> obiektów z <xref:System.Web.UI.WebControls.TableRowCollection> tabeli i zastąp je za pomocą instrukcji new <xref:System.Web.UI.WebControls.TableRow> obiektów.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRowCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <param name="index">Pierwszą pozycję w określonym <see cref="T:System.Array" /> do odbierania skopiowane dane.</param>
        <summary>Kopiuje elementy z <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> do określonego <see cref="T:System.Array" />, począwszy od określonego indeksu w <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia skopiowanie zawartości <xref:System.Web.UI.WebControls.TableRowCollection> do określonego <xref:System.Array?displayProperty=nameWithType>, rozpoczynając od określonego indeksu.  
  
> [!NOTE]
>  `array` Parametr musi być liczony od zera <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.CopyTo%2A> metodę, aby skopiować elementy z <xref:System.Web.UI.WebControls.TableRowCollection> do określonej tablicy.  
  
 [!code-aspx-csharp[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę <see cref="T:System.Web.UI.WebControls.TableRow" /> obiekty w <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Liczba <see cref="T:System.Web.UI.WebControls.TableRow" /> obiekty w <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby wierszy w <xref:System.Web.UI.WebControls.TableRowCollection>. <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> Jest często używana podczas iteracji w kolekcji, aby określić górny powiązany.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> właściwości, aby określić liczbę wierszy w <xref:System.Web.UI.WebControls.TableRowCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy.  
  
 [!code-csharp[Classic TableRowCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic TableRowCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Collections.IEnumerator" /> zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.WebControls.TableRow" /> obiektów w ramach <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" /> zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.WebControls.TableRow" /> obiektów w ramach <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt, który można należy powtórzyć za pomocą łatwo uzyskać każdego elementu w <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
 Użyj <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwości do pobrania elementu obecnie wskazywana w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metody, aby przejść do następnego elementu w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodę, aby przenieść moduł wyliczający z powrotem do pozycji początkowej.  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> Metoda musi zostać wywołana po utworzeniu <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt lub przy użyciu <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodę, aby przenieść modułu wyliczającego do pierwszego elementu w kolekcji. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwość jest niezdefiniowana.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.GetEnumerator%2A> metodę w celu utworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt, który jest iterowane za pośrednictwem w celu wyświetlenia elementów w tabeli.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetRowIndex">
      <MemberSignature Language="C#" Value="public int GetRowIndex (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowIndex(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowIndex (row As TableRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowIndex(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.TableRow" /> Obiektu do wyszukania w <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Zwraca wartość reprezentującą określony indeks <see cref="T:System.Web.UI.WebControls.TableRow" /> z <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>{Numer porządkowy indeks określonego <see cref="T:System.Web.UI.WebControls.TableRow" /> w kolekcji. Wartość domyślna to -1, który wskazuje, że określony <see cref="T:System.Web.UI.WebControls.TableRow" /> nie zostały znalezione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia indeksu określonego <xref:System.Web.UI.WebControls.TableRow> w <xref:System.Web.UI.WebControls.TableRowCollection>. Jeśli określony <xref:System.Web.UI.WebControls.TableRow> jest nie został znaleziony, jest zwracany indeksu-1.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> właściwość, aby wyświetlić indeks wiersza zaznaczonej komórki.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> jest tylko do odczytu.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawsze zwraca `false` z informacją, że <xref:System.Web.UI.WebControls.TableRowCollection> można zapisać we wszystkich przypadkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> jest zsynchronizowany (wątkowo).</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest określana na podstawie <xref:System.Collections.ICollection?displayProperty=nameWithType> i jest zastąpiona w celu zawsze zwracają `false`.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A> właściwości, zobacz <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TableRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableRow ^ default[int] { System::Web::UI::WebControls::TableRow ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Określa wartość indeksu porządkowej <see cref="T:System.Web.UI.WebControls.TableRow" /> obiektu do zwrócenia. Ten indeks jest liczony od zera.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TableRow" /> z <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> pod określonym indeksem.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableRow" /> reprezentujący element w <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego indeksatora, aby pobrać osoby <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.TableRowCollection> pod określonym indeksem za pomocą prostego tablicy notacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia indeksatora, aby uzyskać <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.TableRowCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableRowCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (row As TableRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.TableRow" /> Obiekt do usunięcia z <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Usuwa określoną <see cref="T:System.Web.UI.WebControls.TableRow" /> z <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie określonej <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A> metoda usuwania wiersza z tabeli. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks <see cref="T:System.Web.UI.WebControls.TableRow" /> obiekt do usunięcia z <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.TableRow" /> z <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.TableRowCollection> pod określonym indeksem.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TableRowCollection.RemoveAt%2A> metoda usuwania wiersza z tabeli. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.Table.Rows%2A> właściwość <xref:System.Web.UI.WebControls.Table> jest wystąpieniem <xref:System.Web.UI.WebControls.TableRowCollection> klasy. Należy również zauważyć, że indeks <xref:System.Web.UI.WebControls.Table.Rows%2A> kolekcja jest liczony od zera.  
  
 [!code-aspx-csharp[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony w tej implementacji jest <xref:System.Web.UI.WebControls.TableRowCollection> samej siebie.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A> właściwości, zobacz <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (o As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ o) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do dodania do kolekcji.</param>
        <summary>Dodaje obiekt do kolekcji.</summary>
        <returns>Indeks, w którym obiekt został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle należy używać <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=nameWithType> metody w celu dodania elementu do <xref:System.Web.UI.WebControls.TableRowCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Add%2A> Metoda jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (o As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ o) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony obiekt znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt jest w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Contains%2A> Metoda jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (o As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ o) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do zlokalizowania w kolekcji.</param>
        <summary>Wyszukuje określony obiekt i zwraca liczony od zera indeks pierwszego wystąpienia w kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia obiektu w kolekcji; w przeciwnym razie wartość -1, jeśli obiekt nie jest w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle należy używać <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> metody, aby uzyskać indeks elementu w <xref:System.Web.UI.WebControls.TableRowCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23IndexOf%2A> Metoda jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, o As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ o) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks w kolekcji, w której mają zostać wstawione obiektu.</param>
        <param name="o">Obiekt do wstawienia do kolekcji.</param>
        <summary>Wstawia obiektu do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle należy używać <xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A> metody w celu dodania elementu do <xref:System.Web.UI.WebControls.TableRowCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Insert%2A> Metoda jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> Jeśli lista ma stały rozmiar; w przeciwnym razie wartość <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Element pod określonym indeksem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (o As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ o) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt, który ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle należy używać <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=nameWithType> metodę, aby usunąć element z <xref:System.Web.UI.WebControls.TableRowCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Remove%2A> Metoda jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableRowCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>