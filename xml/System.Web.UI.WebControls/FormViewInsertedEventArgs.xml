<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5596f25cbc90071a394c19fede0b45b9ac6ef7b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691244" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość "Insert") w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. Umożliwia to metoda obsługi zdarzeń, który wykonuje procedury niestandardowych, takich jak sprawdzanie wyniki operacji wstawiania przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów i wszystkie zgłoszone wyjątki, które mogły wystąpić. Aby określić liczbę rekordów wpływ operacji insert, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wyjątki. Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości. Aby uzyskać dostęp do wartości wstawionego rekordu, należy użyć <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po wykonaniu operacji wstawiania. Jeśli wystąpi wyjątek podczas operacji wstawiania, można zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> , zobacz <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> obiekt przekazywany do metody obsługi zdarzeń dla <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji wstawiania.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Liczba wierszy wpływ operacji insert.</param>
        <param name="e">
          <see cref="T:System.Exception" /> Reprezentujący wyjątek, kiedy została wykonana operacja wstawiania. Jeśli nie wystąpił wyjątek, użyj <see langword="null" /> dla tego parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|Wartość `affectedRows` parametru.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Obiektów zawartych w `e` parametru.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Zainicjowane do `false`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Zainicjowane do `false`.|  
  
> [!NOTE]
>  Ten konstruktor jest używany głównie przez deweloperów kontroli podczas wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę wierszy objętych operacji insert.</summary>
        <value>Liczba wierszy wpływ operacji insert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości w celu określenia liczby rekordów wpływ operacji insert. Ta właściwość jest najczęściej używany do Sprawdź, czy poprawną liczbę rekordów została umieszczona w następujących sytuacjach:  
  
-   Upewnij się, że tylko jeden rekord został wstawiony. Czasami instrukcji insert nieprawidłowo napisane można wstawić wielu rekordów.  
  
-   Upewnij się, że rekord został wstawiony, gdy wystąpi błąd podczas operacji wstawiania, który nie zgłaszał wyjątku.  
  
-   Sprawdź, czy rekord został wstawiony podczas kontroli źródła danych obsługującej wykrywania konfliktów (optymistycznej współbieżności), takich jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki, ma swoją <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> ustawioną właściwość `ConflictOptions.CompareAllValues` wartość wyliczenia. W obszarze to ustawienie rekordu, który ma taką samą wartość klucza jako rekord przez innego użytkownika jednocześnie może nie można wstawić.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości, aby sprawdzić, czy rekord został wstawiony podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek (jeśli istnieją) który został zgłoszony podczas operacji wstawiania.</summary>
        <value>
          <see cref="T:System.Exception" /> Reprezentujący wyjątek zgłoszony podczas operacji wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości w celu określenia wyjątku (jeśli istnieją) który został zgłoszony podczas operacji wstawiania. Jeśli zostały zgłoszone żadne wyjątki, ta właściwość zwraca `null`.  
  
> [!NOTE]
>  Jeśli zdecydujesz się obsługiwać wyjątek w obsłudze zdarzeń został zgłoszony wyjątek, należy ustawić <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości `true`; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontroli ponownie zgłasza wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpił wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został zgłoszony podczas operacji wstawiania został obsłużony w zdarzeniu programu obsługi.</summary>
        <value>
          <see langword="true" /> Jeśli określony wyjątek został obsłużony w przypadku obsługi; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest wywoływane podczas operacji wstawiania, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Właściwość wskazująca, czy wyjątek został obsłużony w zdarzeniu programu obsługi. Jeśli ta właściwość jest równa `true`, wyjątek jest uznawany za obsługiwany i nie zostanie ponownie zgłoszony. Jeśli ta właściwość jest ustawiona na `false`, <xref:System.Web.UI.WebControls.FormView> kontroli ponownie zgłasza wyjątek. Aby określić Wystąpił wyjątek, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Właściwość wskazująca, czy wyjątek został obsłużony w zdarzeniu programu obsługi.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.FormView" /> formant może pozostawać w trybie wstawiania po wykonaniu operacji wstawiania.</summary>
        <value>
          <see langword="true" /> pozostaje w trybie wstawiania po wykonaniu operacji wstawiania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.FormView> formant może pozostawać w trybie wstawiania po wykonaniu operacji wstawiania. Aby zachować <xref:System.Web.UI.WebControls.FormView> sterowania w trybie wstawiania, ustawić tę właściwość na `true`.  
  
> [!NOTE]
>  Ta właściwość stosuje się tylko wtedy, gdy jest to sytuacja występuje (na przykład wyjątków zgłaszanych), który wymaga formantu ma zachowywać się inaczej niż w zwykły sposób. Jeśli <xref:System.Web.UI.WebControls.FormView> kontrolka wymaga pozostać w trybie wstawiania domyślnie, ustaw <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości zamiast tego.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwości, aby zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania, gdy wystąpi wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający pary nazwa/wartość pola wstawionego rekordu.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Obiekt, który zawiera słownik par nazwa/wartość pola klucza wstawionego rekordu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwość, aby uzyskać dostęp do wartości pola dla wstawionego rekordu. Na przykład można te wartości rejestrowanie wstawianych rekordów.  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> Zwraca <xref:System.Collections.Specialized.OrderedDictionary> obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfejsu. <xref:System.Collections.Specialized.OrderedDictionary> Zawiera obiekt <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> obiekty reprezentujące pola wstawionego rekordu. Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> właściwość <xref:System.Collections.Specialized.OrderedDictionary> obiektu. Podobnie, mogą korzystać wartości pól za pomocą <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary> obiekt, aby uzyskać dostępu do pola wartości bezpośrednio. Zaletą używania indeksatora jest ona zwracanych wartości pól bezpośrednio. Formanty, które opierają się na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pól tylko przez indeks.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać iterację elementów w <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> kolekcji.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>