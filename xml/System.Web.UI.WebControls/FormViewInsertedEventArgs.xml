<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93a01b61626399a49dc1b1d9ad1b521165fcf9fc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69391921" /></Metadata><TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Wstaw (przycisk z właściwością ustawioną na "INSERT") wewnątrz kontrolki, ale po <xref:System.Web.UI.WebControls.FormView> wstawieniu tego rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemInserted> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, na przykład sprawdzając wyniki operacji wstawiania, gdy wystąpi zdarzenie.  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala określić liczbę rekordów, których to dotyczy, oraz ewentualne wyjątki, które mogły wystąpić. Aby określić liczbę rekordów, których dotyczy operacja wstawiania, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> , aby określić, czy wystąpiły wyjątki. Możesz również wskazać, czy wyjątek został obsłużony w metodzie obsługi zdarzeń przez ustawienie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości. Jeśli musisz uzyskać dostęp do wartości wstawionego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość po operacji wstawiania. Jeśli podczas operacji wstawiania wystąpi wyjątek, można zachować <xref:System.Web.UI.WebControls.FormView> kontrolę w trybie wstawiania, <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> ustawiając właściwość na `true`.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> klasy, <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> obiektu przekazaną do metody obsługi zdarzeń <xref:System.Web.UI.WebControls.FormView.ItemInserted> dla zdarzenia, aby określić, czy wyjątek wystąpił podczas operacji wstawiania.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.FormViewInsertedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Liczba wierszy, na które ma wpływ operacja wstawiania.</param>
        <param name="e"><see cref="T:System.Exception" /> Reprezentuje wyjątek zgłoszony podczas wykonywania operacji wstawiania. Jeśli żaden wyjątek nie został zgłoszony, <see langword="null" /> Użyj dla tego parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|Wartość `affectedRows` parametru.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Obiekt zawarty wparametrze`e` .|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Zainicjowany do `false`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Zainicjowany do `false`.|  
  
> [!NOTE]
>  Ten konstruktor jest używany głównie przez kontrolowanie deweloperów podczas podnoszenia zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę wierszy, na które ma wpływ operacja wstawiania.</summary>
        <value>Liczba wierszy, na które ma wpływ operacja wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> , aby określić liczbę rekordów, których dotyczy operacja wstawiania. Ta właściwość jest często używana do weryfikowania, czy poprawna liczba rekordów została wstawiona w następujących sytuacjach:  
  
-   Sprawdź, czy wstawiony został tylko jeden rekord. Czasami nieprawidłowo zapisane instrukcje INSERT mogą wstawiać wiele rekordów.  
  
-   Sprawdź, czy rekord został wstawiony, gdy wystąpi błąd podczas operacji wstawiania, która nie zgłasza wyjątku.  
  
-   Sprawdź, czy rekord został wstawiony, gdy kontrolka źródła danych obsługująca wykrywanie konfliktów (Optymistyczna współbieżność), taka <xref:System.Web.UI.WebControls.SqlDataSource> jak <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki i, <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> ma ustawioną właściwość `ConflictOptions.CompareAllValues` na wartość wyliczenia. W ramach tego ustawienia rekord, który ma taką samą wartość klucza jak rekord przez innego użytkownika, może nie zostać wstawiony.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości, aby sprawdzić, czy rekord został wstawiony podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek (jeśli istnieje), który został wywołany podczas operacji wstawiania.</summary>
        <value><see cref="T:System.Exception" /> Reprezentuje wyjątek, który został wywołany podczas operacji wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Użyj właściwości, aby określić wyjątek (jeśli istnieje), który został wywołany podczas operacji wstawiania. Jeśli żadne wyjątki nie zostały zgłoszone, ta `null`Właściwość zwraca wartość.  
  
> [!NOTE]
>  Jeśli wyjątek został zgłoszony i podjęto decyzję o obsłudze wyjątku w programie obsługi zdarzeń, należy ustawić <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwość na `true`wartość; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> formant przezgłosi wyjątek.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości, aby określić, czy wyjątek został zgłoszony podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek, który został wywołany podczas operacji wstawiania, został obsłużony w obsłudze zdarzeń.</summary>
        <value><see langword="true" />Jeśli wyjątek został obsłużony w programie obsługi zdarzeń; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wyjątek jest wywoływany podczas operacji wstawiania, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości, aby wskazać, czy wyjątek został obsłużony w programie obsługi zdarzeń. Gdy ta właściwość jest ustawiona na `true`, wyjątek jest uznawany za obsłużony i nie jest ponownie zgłaszany. Jeśli ta właściwość jest ustawiona na `false` <xref:System.Web.UI.WebControls.FormView> , formant ponowne zgłasza wyjątek. Aby określić, który wyjątek został zgłoszony, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości, aby wskazać, że wyjątek został obsłużony w programie obsługi zdarzeń.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka ma pozostać w trybie wstawiania po operacji wstawiania.</summary>
        <value><see langword="true" />do pozostawania w trybie wstawiania po operacji wstawiania; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> , aby określić, <xref:System.Web.UI.WebControls.FormView> czy kontrolka ma pozostać w trybie wstawiania po operacji wstawiania. Aby zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania, należy ustawić tę właściwość na `true`.  
  
> [!NOTE]
>  Ta właściwość powinna być używana tylko wtedy, gdy wystąpi sytuacja (na przykład wyjątek zgłaszany), która wymaga, aby kontrolka zadziałała inaczej niż zwykle. Jeśli kontrolka musi pozostać w trybie wstawiania domyślnie, należy <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> ustawić właściwość. <xref:System.Web.UI.WebControls.FormView>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwości, aby zachować formant w trybie wstawiania, <xref:System.Web.UI.WebControls.FormView> gdy wystąpi wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający pary nazwa pola/wartość dla wstawionego rekordu.</summary>
        <value><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Obiekt, który zawiera słownik par nazwa/wartość pola klucza dla wstawionego rekordu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> Użyj właściwości, aby uzyskać dostęp do wartości pól dla wstawionego rekordu. Można na przykład użyć tych wartości, aby zachować dziennik wstawionych rekordów.  
  
 Właściwość zwraca obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfejs. <xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> <xref:System.Collections.Specialized.OrderedDictionary> Obiekt zawiera<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> obiekty, które reprezentują pola wstawionego rekordu. Aby uzyskać dostęp do nazw pól, użyj <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> właściwości <xref:System.Collections.Specialized.OrderedDictionary> obiektu. Podobnie można uzyskać dostęp do wartości pól przy użyciu <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć indeksatora <xref:System.Collections.Specialized.OrderedDictionary> obiektu, aby uzyskać bezpośredni dostęp do wartości pola. Zalety korzystania z indeksatora polega na tym, że wartości pól są zwracane bezpośrednio. Kontrolki źródła danych, które opierają się na kolejności pól <xref:System.Web.UI.WebControls.AccessDataSource>(takie jak), mogą uzyskiwać dostęp do wartości pól tylko według indeksu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać iterację elementów w <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> kolekcji.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>
