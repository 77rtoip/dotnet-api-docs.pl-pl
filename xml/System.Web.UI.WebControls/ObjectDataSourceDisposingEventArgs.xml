<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8781c3e861884abb7749ec0650543faca4af7b10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69412457" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> zdarzenia <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana w metodzie <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> , aby zapewnić dostęp do wystąpienia obiektu biznesowego po wykonaniu wszystkich operacji na danych, <xref:System.Web.UI.WebControls.ObjectDataSource> które korzystają z formantu i obiektu biznesowego, ale przed zniszczeniem obiektu biznesowego. <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Do obiektu biznesowego uzyskuje się <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> dostęp przy użyciu właściwości. Dodając delegata, aby obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie, możesz uzyskać dostęp do wszystkich publicznie narażonych elementów członkowskich obiektu biznesowego, aby wykonać wszelkie końcowe zadania lub oczyścić.  
  
 Metoda nie jest wywoływana <xref:System.Web.UI.WebControls.ObjectDataSource> przez formant, jeśli metoda, która `static` wykonuje operacje na danych, jest metodą. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Nie jest tworzone wystąpienie obiektu biznesowego, gdy metoda jest statyczna.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant uwidacznia wiele zdarzeń, które można obsłużyć do pracy z bazowym obiektem biznesowym w różnym czasie w jego cyklu życia. Poniższa tabela zawiera listę zdarzeń i skojarzonych <xref:System.EventArgs> klas oraz delegatów obsługi zdarzeń.  
  
|Zdarzenie|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Występuje bezpośrednio przed utworzeniem wystąpienia obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Występuje natychmiast po utworzeniu wystąpienia obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Występuje przed pobraniem danych.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>i .<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting><br /><br /> Występuje przed wykonaniem operacji INSERT, Update lub DELETE.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Występuje po pobraniu danych.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>i .<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted><br /><br /> Występuje po zakończeniu operacji INSERT, Update lub DELETE.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Występuje przed zniszczeniem obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektem biznesowym <xref:System.Web.UI.WebControls.GridView> i kontrolki do wyświetlania informacji. Drugi przykład kodu zawiera przykładowy obiekt biznesowy warstwy środkowej, którego pierwszy przykład kodu używa.  
  
 Poniższy przykład kodu ilustruje sposób używania <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektem biznesowym <xref:System.Web.UI.WebControls.GridView> i kontrolki do wyświetlania informacji. Możesz współpracować z obiektem biznesowym, który jest bardzo kosztowny (w odniesieniu do czasu lub zasobów) do tworzenia dla każdej operacji na danych wykonywanej przez stronę sieci Web. Jednym ze sposobów pracy z kosztownym obiektem może być utworzenie wystąpienia go raz, a następnie buforowanie go dla kolejnych operacji, zamiast tworzenia i niszczenia go dla każdej operacji na danych. Ten przykład ilustruje ten wzorzec. Możesz obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenie, aby najpierw sprawdzić pamięć podręczną dla obiektu, a następnie utworzyć wystąpienie, tylko wtedy, gdy nie jest już w pamięci podręcznej. Następnie należy obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie buforowania obiektu biznesowego do użytku w przyszłości, zamiast zniszczyć go. W tym <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> przykładzie właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> `true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> obiektu jest ustawiona na<xref:System.IDisposable.Dispose%2A> , aby skierować metodę, aby nie wywoływać metody w wystąpieniu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowy obiekt biznesowy warstwy środkowej, który jest użyty w poprzednim przykładzie kodu. Przykład kodu składa się z podstawowego obiektu biznesowego zdefiniowanego przez `EmployeeLogic` klasę, która jest klasą, która zachowuje stan i hermetyzuje logikę biznesową. Aby uzyskać pełny przykład roboczy, należy skompilować ten kod jako bibliotekę, a następnie użyć tych klas ze strony ASP.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Obiekt biznesowy, z którym <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> współdziała do wykonywania operacji na danych.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> klasy przy użyciu określonego obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje obiekt biznesowy, z którym <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formant wykonuje operacje na danych.</summary>
        <value>Obiekt biznesowy wykorzystywany <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> przez operacje na danych; <see langword="null" />w przeciwnym razie, <see langword="null" /> <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />jeśli jest przenoszona do.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli metody operacji na danych (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>i <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) są metodami wystąpień, wystąpienie obiektu biznesowego jest tworzone przed wykonaniem metody. Można zapobiec tworzeniu obiektu biznesowego dla każdego wywołania przez zapisanie obiektu we <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> właściwości <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> w programie obsługi zdarzeń. W kolejnych <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzeniach można pobrać obiekt biznesowy <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> z właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektem biznesowym <xref:System.Web.UI.WebControls.GridView> i kontrolki do wyświetlania informacji. Możesz współpracować z obiektem biznesowym, który jest bardzo kosztowny (w odniesieniu do czasu lub zasobów) do tworzenia dla każdej operacji na danych wykonywanej przez stronę sieci Web. Jednym ze sposobów pracy z kosztownym obiektem może być utworzenie wystąpienia go raz, a następnie buforowanie go dla kolejnych operacji, zamiast tworzenia i niszczenia go dla każdej operacji na danych. Ten przykład ilustruje ten wzorzec. Możesz obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenie, aby najpierw sprawdzić pamięć podręczną dla obiektu, a następnie utworzyć wystąpienie, tylko wtedy, gdy nie jest już w pamięci podręcznej. Następnie należy obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie buforowania obiektu biznesowego do użytku w przyszłości, zamiast zniszczyć go. W <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> tym przykładzie <xref:System.IDisposable.Dispose%2A> Właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> klasy jest ustawiona <xref:System.Web.UI.WebControls.ObjectDataSource> na `true`, aby skierować wywołanie do niewywołującego wystąpienia.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>
