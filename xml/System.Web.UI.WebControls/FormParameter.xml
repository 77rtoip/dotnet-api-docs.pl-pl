<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e3b37da0b971eec52e9eb85a9f022b7abbcccc9" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39938307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wiąże wartość żądanie HTTP <see cref="P:System.Web.HttpRequest.Form" /> pole w obiekcie parametru.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.FormParameter> klasy, aby powiązać wartości zmiennej w postaci <xref:System.Web.HttpRequest.Form%2A> kolekcję, aby parametr używany w zapytaniu sparametryzowanym lub polecenie. Formanty, które powiązać dane z parametru może zgłosić wyjątek, jeśli <xref:System.Web.UI.WebControls.FormParameter> jest określony, ale nie odpowiednią zmienną formularza jest przekazywany. One może również nie wyświetla żadnych danych Jeśli zmienną formularza zostanie przekazana bez odpowiednich wartości. Ustaw <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> Aby uniknąć sytuacji, gdzie jest to odpowiednie.  
  
 <xref:System.Web.UI.WebControls.FormParameter> Klasa udostępnia <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> właściwość, która identyfikuje nazwę zmiennej formularza można powiązać, oprócz tych odziedziczone <xref:System.Web.UI.WebControls.Parameter> klasy.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element formularza w jakikolwiek sposób; zostanie użyta wartość raw. W większości przypadków można sprawdzić poprawność wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez kontrolę źródła danych, takich jak obsługa zdarzeń `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez formant źródła danych, którego używasz. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, można anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i prostą stronę sieci Web platformy ASP.NET. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> kontrolek i kliknięcie przycisku. Po kliknięciu przycisku, określone wartości są wstawiane do bazy danych, a <xref:System.Web.UI.WebControls.DropDownList> jest odświeżane.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie nienazwane <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> obiekt utworzony za pomocą <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest inicjowany z wartościami domyślnymi dla jego właściwości. <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Jest inicjowany do <xref:System.String.Empty?displayProperty=nameWithType>. Ponadto <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość jest inicjowana do <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwość jest inicjowana do <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość jest inicjowana do <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana. wartość null (`Nothing` w języku Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element formularza w jakikolwiek sposób; zostanie użyta wartość raw. W większości przypadków można sprawdzić poprawność wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez kontrolę źródła danych, takich jak obsługa zdarzeń `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez formant źródła danych, którego używasz. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, można anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">A <see cref="T:System.Web.UI.WebControls.FormParameter" /> bieżące wystąpienie jest inicjowany z wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy przy użyciu wartości wystąpienia określonego przez <paramref name="original" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest `protected` Konstruktor kopiujący, używany do klonowania <xref:System.Web.UI.WebControls.FormParameter> wystąpienia. Wartości <xref:System.Web.UI.WebControls.FormParameter>, w tym <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, i <xref:System.Web.UI.WebControls.Parameter.Type%2A> wszystkie przechodzą do nowego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="formField">Nazwa zmiennej formularza, powiązany z obiektem parametrów. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie nazwane wystąpienie programu <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, aby zidentyfikować pole zmienną formularza, które można powiązać przy użyciu określonego ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> obiekt utworzony za pomocą <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest inicjowany za pomocą określona nazwa parametru i ciąg, który identyfikuje Zmienna formularza, który wiąże parametr. <xref:System.Web.UI.WebControls.Parameter.Type%2A> i <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości są inicjowane przy użyciu wartości domyślnych.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element formularza w jakikolwiek sposób; zostanie użyta wartość raw. W większości przypadków można sprawdzić poprawność wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez kontrolę źródła danych, takich jak obsługa zdarzeń `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez formant źródła danych, którego używasz. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, można anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych parametru.</param>
        <param name="formField">Nazwa zmiennej formularza, powiązany z obiektem parametrów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, aby zidentyfikować pole zmienną formularza, które można powiązać przy użyciu określonego ciągu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Typ, który reprezentuje parametr. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nazwa zmiennej formularza, powiązany z obiektem parametrów. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie nazwane i silnie typizowanej klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, aby zidentyfikować zmienną formularza, które można powiązać przy użyciu określonego ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> obiekt utworzony za pomocą <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest inicjowany za pomocą określona nazwa parametru, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, a ciąg, który identyfikuje Zmienna formularza, który wiąże parametr. Tylko <xref:System.Web.UI.WebControls.Parameter.Direction%2A> i <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> właściwości są inicjowane przy użyciu wartości domyślnych.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element formularza w jakikolwiek sposób; zostanie użyta wartość raw. W większości przypadków można sprawdzić poprawność wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez kontrolę źródła danych, takich jak obsługa zdarzeń `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez formant źródła danych, którego używasz. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, można anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.Web.UI.WebControls.FormParameter" /> wystąpienia.</summary>
        <returns>Element <see cref="T:System.Web.UI.WebControls.FormParameter" /> jest identyczna z obecnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> Wywołania metody <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor Kopiuj, aby zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormParameter> klasy przy użyciu wartości bieżącego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżący <see cref="T:System.Web.HttpContext" /> żądania.</param>
        <param name="control">A <see cref="T:System.Web.UI.Control" /> skojarzony ze stroną gdzie <see cref="T:System.Web.UI.WebControls.FormParameter" /> jest używany.</param>
        <summary>Aktualizacje i zwraca wartość <see cref="T:System.Web.UI.WebControls.FormParameter" /> obiektu.</summary>
        <returns>Obiekt, który reprezentuje zaktualizowaną i bieżących wartości parametru. Jeśli kontekst lub żądania ma wartość null (<see langword="Nothing" /> w języku Visual Basic), <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> metoda zwraca wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> Próbuje każdym razem, gdy zmienna formularza należy powiązać <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metoda jest wywoływana.  
  
 `context` Parametr jest używany przez <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodę, aby pobrać wartość określonego pola formularza z żądania. `control` Parametr jest ignorowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zmiennej formularz, który wiąże parametr.</summary>
        <value>Ciąg, który identyfikuje zmienną formularza, do którego wiąże parametr.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Identyfikuje pary nazwa/wartość, które zostały przekazane <xref:System.Web.HttpRequest.Form%2A> kolekcji. Gdy <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> właściwość identyfikuje nazwa pary, <xref:System.Web.UI.WebControls.FormParameter> wiąże się z jego wartość w czasie wykonywania. Jeśli pary nazwa/wartość ciągu zmiennych oczekiwanego formularza nie zostanie przekazany do strony sieci Web platformy ASP.NET w kolekcji, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metoda powiązuje parametr z wartością <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość, jeśli jest ustawiona. Jeśli <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> nie jest ustawiona, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metoda nie powiedzie się powiązać parametr z wartością.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wyświetlania odfiltrowane dane przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.FormParameter> do pobierania danych z obiektu biznesowego warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki.  
  
 Przykładowy kod, który składa się z <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> kontroli <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i przycisk Prześlij. Domyślnie <xref:System.Web.UI.WebControls.TextBox> jest wypełnione nazwą jednego z pracowników Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Wyświetla informacje dotyczące pracowników identyfikowane przez nazwę w <xref:System.Web.UI.WebControls.TextBox>. Aby pobrać dane na innemu pracownikowi, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox> i kliknij przycisk.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwość określa wyrażenia używane do filtrowania danych pobranych przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Ta właściwość używa symbole zastępcze parametrów, które są obliczane na parametry zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie jest symbol zastępczy parametrów <xref:System.Web.UI.WebControls.FormParameter> powiązana wartość <xref:System.Web.UI.WebControls.TextBox> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje obiektu firm warstwy środkowej, który używa w poprzednim przykładzie kodu. W tym przykładzie składa się z dwóch klas podstawowych: `EmployeeLogic` klasa hermetyzuje logikę biznesową i `NorthwindEmployee` klasa jest klasą modelu, który zawiera tylko podstawowe funkcje wymagane do załadowania i utrwalenia danych z warstwy danych. Dla uproszczenia `EmployeeLogic` klasy tworzy statyczny zestaw danych, zamiast pobierania danych z warstwy danych. Jest również przydatne w tym przykładzie, ponieważ przykład opiera się na użytkownika Podaj imię i nazwisko pracownika Northwind Traders, aby zademonstrować, filtrowanie. Pełny przykład pracy należy skompilować i korzystając z tych klas z podanych przykładów kodu platformy ASP.NET.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element formularza w jakikolwiek sposób; zostanie użyta wartość raw. W większości przypadków można sprawdzić poprawność wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez kontrolę źródła danych, takich jak obsługa zdarzeń `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez formant źródła danych, którego używasz. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, można anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy klient, danych wejściowych w parametrze jest zweryfikowany.</summary>
        <value>
          <see langword="true" /> Jeśli dane wejściowe klienta zostanie zweryfikowana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>