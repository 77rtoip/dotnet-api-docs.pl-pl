<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88237153ce4c8ace34a6d78f89772fef2d7b0878" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wiąże wartość żądanie HTTP <see cref="P:System.Web.HttpRequest.Form" /> do obiektu parameter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.WebControls.FormParameter> klasy można powiązać wartości zmiennej formularza w <xref:System.Web.HttpRequest.Form%2A> kolekcji do parametru używane w zapytaniu sparametryzowanym lub polecenie. Formanty, które powiązać dane z parametrem może zgłosić wyjątek, jeśli <xref:System.Web.UI.WebControls.FormParameter> jest określony, ale nie odpowiednią zmienną formularza jest przekazywana. One może również nie wyświetla żadnych danych, jeśli zmienna formularza jest przekazywany z nie odpowiadającej jej wartości. Ustaw <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> Aby uniknąć tych sytuacji, gdzie jest to odpowiednie.  
  
 <xref:System.Web.UI.WebControls.FormParameter> Klasa udostępnia <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> właściwość, która identyfikuje nazwę zmiennej formularza do powiązania, oprócz tych odziedziczone <xref:System.Web.UI.WebControls.Parameter> klasy.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element form w żaden sposób; używa nieprzetworzonej wartości. W większości przypadków można sprawdzić poprawności wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez formant źródła danych dzięki obsłudze zdarzeń, takich jak `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez używasz kontroli źródła danych. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, możesz anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy do `true`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wstawianie danych do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> prostą stronę sieci Web ASP.NET i kontroli. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> kontrolek i kliknięcie przycisku. Po kliknięciu przycisku określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> zostanie odświeżony.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie nienazwane <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> konstruktor został zainicjowany z wartościami domyślnymi dla wszystkich jego właściwości. <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Jest ustawiana na <xref:System.String.Empty?displayProperty=nameWithType>. Ponadto <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość jest inicjowana na <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwość jest inicjowana na <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana. wartość null (`Nothing` w języku Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element form w żaden sposób; używa nieprzetworzonej wartości. W większości przypadków można sprawdzić poprawności wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez formant źródła danych dzięki obsłudze zdarzeń, takich jak `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez używasz kontroli źródła danych. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, możesz anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy do `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">A <see cref="T:System.Web.UI.WebControls.FormParameter" /> wystąpienia inicjowane z bieżącego wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy z wartościami wystąpienia określonego przez <paramref name="original" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest `protected` Konstruktor kopiujący używany do klonowania <xref:System.Web.UI.WebControls.FormParameter> wystąpienia. Wartości <xref:System.Web.UI.WebControls.FormParameter>, takie jak <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, i <xref:System.Web.UI.WebControls.Parameter.Type%2A> wszystkie przechodzą do nowego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="formField">Nazwa zmiennej obiektu parameter jest powiązany z formularza. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowy nazwane wystąpienie programu <see cref="T:System.Web.UI.WebControls.FormParameter" /> przy użyciu określonego ciągu do identyfikowania pole zmiennej formularza, które chcesz powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest inicjowany z określona nazwa parametru i ciąg, który identyfikuje zmiennej formularza, który wiąże parametr. <xref:System.Web.UI.WebControls.Parameter.Type%2A> i <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element form w żaden sposób; używa nieprzetworzonej wartości. W większości przypadków można sprawdzić poprawności wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez formant źródła danych dzięki obsłudze zdarzeń, takich jak `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez używasz kontroli źródła danych. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, możesz anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy do `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych parametru.</param>
        <param name="formField">Nazwa zmiennej obiektu parameter jest powiązany z formularza.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> przy użyciu określonego ciągu do identyfikowania pole zmiennej formularza, które chcesz powiązać.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Typ, który reprezentuje parametr. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nazwa zmiennej obiektu parameter jest powiązany z formularza. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie nazwane i silnie typizowanej klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> przy użyciu określonego ciągu do identyfikowania które zmienną formularza, aby powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> obiektów utworzonych za pomocą <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor jest inicjowany z określona nazwa parametru, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, a ciąg identyfikujący zmiennej formularza, który wiąże parametr. Tylko <xref:System.Web.UI.WebControls.Parameter.Direction%2A> i <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> właściwości są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element form w żaden sposób; używa nieprzetworzonej wartości. W większości przypadków można sprawdzić poprawności wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez formant źródła danych dzięki obsłudze zdarzeń, takich jak `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez używasz kontroli źródła danych. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, możesz anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy do `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.Web.UI.WebControls.FormParameter" /> wystąpienia.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.FormParameter" /> jest identyczna z bieżącej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> Wywołania metody <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor kopiujący zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormParameter> klasy z wartościami bieżącego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżący <see cref="T:System.Web.HttpContext" /> żądania.</param>
        <param name="control">A <see cref="T:System.Web.UI.Control" /> skojarzonego ze stroną, gdzie <see cref="T:System.Web.UI.WebControls.FormParameter" /> jest używany.</param>
        <summary>Aktualizacje i zwraca wartość <see cref="T:System.Web.UI.WebControls.FormParameter" /> obiektu.</summary>
        <returns>Obiekt, który reprezentuje aktualizację wartości parametru. Jeśli kontekst lub żądania ma wartość null (<see langword="Nothing" /> w języku Visual Basic), <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> metoda zwraca wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> Próbuje powiązać zmiennej formularza zawsze <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metoda jest wywoływana.  
  
 `context` Parametr jest używany przez <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metodę, aby pobrać wartość określonego pola formularza z żądania. `control` Parametr jest ignorowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zmiennej formularza, który wiąże parametr.</summary>
        <value>Ciąg, który identyfikuje Zmienna formularza, do którego wiąże parametr.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Identyfikuje pary nazwa/wartość, która jest przekazywany w <xref:System.Web.HttpRequest.Form%2A> kolekcji. Gdy <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> właściwość identyfikuje nazwa pary, <xref:System.Web.UI.WebControls.FormParameter> wiąże się z jego wartość w czasie wykonywania. Jeśli pary nazwa/wartość ciągu zmiennych formularza oczekiwanego nie zostanie przekazany do strony sieci Web ASP.NET w kolekcji, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> metody wiąże parametr wartość <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwości, jeśli jest ustawiona. Jeśli <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> nie jest ustawiona, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> — metoda nie powiedzie się powiązać parametr wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych filtrowanych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.FormParameter> do pobierania danych z obiektem biznesowym warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki.  
  
 Przykładowy kod składa się z <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> kontroli, <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i przycisk przesyłania. Domyślnie <xref:System.Web.UI.WebControls.TextBox> jest wypełniana nazwę jednego z pracowników Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Wyświetla informacje dotyczące pracowników, określanego przez nazwę w <xref:System.Web.UI.WebControls.TextBox>. Aby pobrać dane na innego pracownika, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox> i kliknij przycisk.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwość określa wyrażenie używane do filtrowania danych pobranych przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Ta właściwość używa symbole zastępcze parametrów, które są oceniane w parametrach zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie jest symbol zastępczy parametru <xref:System.Web.UI.WebControls.FormParameter> powiązany z wartością <xref:System.Web.UI.WebControls.TextBox> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje obiekt biznesowym warstwy środkowej, który korzysta z poprzednim przykładzie kodu. W tym przykładzie składa się z dwóch klas podstawowych: `EmployeeLogic` klasa hermetyzuje logiki biznesowej i `NorthwindEmployee` klasy jest klasę modelu, który zawiera tylko podstawowe funkcje wymagane do załadowania i utrwalenia danych z warstwy danych. Dla uproszczenia `EmployeeLogic` klasy tworzy statyczny zestaw danych, zamiast pobierania danych z warstwy danych. Jest również przydatne na przykład, ponieważ próbki zależy od użytkownika podania imię i nazwisko pracownika Northwind Traders, aby zademonstrować filtrowania. Pełny przykład pracy należy skompilować i użyć tych klas z ASP.NET przykładowy kod podany.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie można zweryfikować wartości przekazywane przez element form w żaden sposób; używa nieprzetworzonej wartości. W większości przypadków można sprawdzić poprawności wartości <xref:System.Web.UI.WebControls.FormParameter> zanim zostanie on użyty przez formant źródła danych dzięki obsłudze zdarzeń, takich jak `Selecting`, `Updating`, `Inserting`, lub `Deleting` zdarzeń udostępnianych przez używasz kontroli źródła danych. Jeśli wartość parametru nie przejdzie testy sprawdzania poprawności, możesz anulować operacji danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonego <xref:System.ComponentModel.CancelEventArgs> klasy do `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sprawdzania poprawności danych wejściowych w parametrze klienta.</summary>
        <value>
          <see langword="true" /> Jeśli sprawdzania poprawności danych wejściowych klienta; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>