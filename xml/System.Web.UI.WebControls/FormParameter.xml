<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62c3981309708b26f5302cfabb21c33eb092fdec" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69400818" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wiąże wartość pola żądania <see cref="P:System.Web.HttpRequest.Form" /> http z obiektem Parameter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć klasy, <xref:System.Web.UI.WebControls.FormParameter> aby powiązać wartość zmiennej formularza <xref:System.Web.HttpRequest.Form%2A> w kolekcji z parametrem używanym w zapytaniu sparametryzowanym lub w poleceniu. Kontrolki, które wiążą dane z parametrem, mogą zgłosić <xref:System.Web.UI.WebControls.FormParameter> wyjątek, jeśli jest określony, ale nie zostanie przeniesiona odpowiadająca Zmienna formularza. Mogą również wyświetlać dane, jeśli zmienna formularza jest przenoszona bez odpowiadającej wartości. Ustaw, <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> aby uniknąć sytuacji, w których jest to konieczne.  
  
 Klasa zawiera właściwość, która określa nazwę zmiennej formularza, z którą ma zostać utworzone powiązanie, poza tymi dziedziczonymi z <xref:System.Web.UI.WebControls.Parameter> klasy. <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.Web.UI.WebControls.FormParameter>  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie sprawdza poprawności wartości przesłanej przez element form w jakikolwiek sposób; używa wartości pierwotnej. W większości przypadków można sprawdzić poprawność <xref:System.Web.UI.WebControls.FormParameter> wartości, zanim zostanie ona użyta przez kontrolę źródła danych przez obsługę zdarzenia, takiego `Selecting`jak, `Updating` `Inserting`, lub `Deleting` zdarzenia uwidocznionego przez używany formant źródła danych. Jeśli wartość parametru nie przeszedł testu weryfikacyjnego, można anulować operację na danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonej <xref:System.ComponentModel.CancelEventArgs> klasy na `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki i prostej strony sieci Web ASP.NET. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontrolce. Nowe rekordy można dodać, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> kontrolkach i klikając przycisk. Po kliknięciu przycisku określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> odświeżane.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe nienazwane wystąpienie <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> Obiekt utworzony <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> za pomocą konstruktora jest inicjowany z wartościami domyślnymi dla wszystkich jego właściwości. Jest inicjowany do <xref:System.String.Empty?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.TypeCode.Object?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.String.Empty?displayProperty=nameWithType> <xref:System.Data.ParameterDirection.Input> <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Ponadto właściwość jest inicjowana do, właściwość jest inicjowana do, właściwość jest inicjowana do, a właściwość jest inicjowana. <xref:System.Web.UI.WebControls.Parameter.Name%2A> na wartość null`Nothing` (w Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie sprawdza poprawności wartości przesłanej przez element form w jakikolwiek sposób; używa wartości pierwotnej. W większości przypadków można sprawdzić poprawność <xref:System.Web.UI.WebControls.FormParameter> wartości, zanim zostanie ona użyta przez kontrolę źródła danych przez obsługę zdarzenia, takiego `Selecting`jak, `Updating` `Inserting`, lub `Deleting` zdarzenia uwidocznionego przez używany formant źródła danych. Jeśli wartość parametru nie przeszedł testu weryfikacyjnego, można anulować operację na danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonej <xref:System.ComponentModel.CancelEventArgs> klasy na `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original"><see cref="T:System.Web.UI.WebControls.FormParameter" /> Wystąpienie, z którego jest inicjowane bieżące wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy z wartościami wystąpienia określonego <paramref name="original" /> przez parametr.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest konstruktorem kopiującym używanym do klonowania wystąpienia.<xref:System.Web.UI.WebControls.FormParameter> `protected` <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Wartości <xref:System.Web.UI.WebControls.FormParameter>, w <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>tym, i<xref:System.Web.UI.WebControls.Parameter.Type%2A> są transferowane do nowego wystąpienia. <xref:System.Web.UI.WebControls.Parameter.Name%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="formField">Nazwa zmiennej formularza, z którą jest powiązany obiekt parametru. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe nazwane wystąpienie <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, używając określonego ciągu do identyfikacji pola zmiennej formularza, z którym ma zostać utworzone powiązanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> Obiekt utworzony <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> za pomocą konstruktora jest inicjowany z określoną nazwą parametru i ciągiem, który identyfikuje zmienną formularza, z którą jest powiązany parametr. Właściwości <xref:System.Web.UI.WebControls.Parameter.Type%2A> i<xref:System.Web.UI.WebControls.Parameter.Direction%2A> są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie sprawdza poprawności wartości przesłanej przez element form w jakikolwiek sposób; używa wartości pierwotnej. W większości przypadków można sprawdzić poprawność <xref:System.Web.UI.WebControls.FormParameter> wartości, zanim zostanie ona użyta przez kontrolę źródła danych przez obsługę zdarzenia, takiego `Selecting`jak, `Updating` `Inserting`, lub `Deleting` zdarzenia uwidocznionego przez używany formant źródła danych. Jeśli wartość parametru nie przeszedł testu weryfikacyjnego, można anulować operację na danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonej <xref:System.ComponentModel.CancelEventArgs> klasy na `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych parametru.</param>
        <param name="formField">Nazwa zmiennej formularza, z którą jest powiązany obiekt parametru.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, używając określonego ciągu do identyfikacji pola zmiennej formularza, z którym ma zostać utworzone powiązanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Typ, który reprezentuje parametr. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nazwa zmiennej formularza, z którą jest powiązany obiekt parametru. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe nazwane i silnie wpisane wystąpienie <see cref="T:System.Web.UI.WebControls.FormParameter" /> klasy, używając określonego ciągu do identyfikacji, z którą zmienną formularza powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt utworzony za pomocą konstruktora jest inicjowany z określoną nazwą parametru, <xref:System.Web.UI.WebControls.Parameter.Type%2A>i ciągiem, który identyfikuje zmienną formularza, z którą jest powiązany parametr. <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.FormParameter> Tylko właściwości <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> i są inicjowane z wartościami domyślnymi. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie sprawdza poprawności wartości przesłanej przez element form w jakikolwiek sposób; używa wartości pierwotnej. W większości przypadków można sprawdzić poprawność <xref:System.Web.UI.WebControls.FormParameter> wartości, zanim zostanie ona użyta przez kontrolę źródła danych przez obsługę zdarzenia, takiego `Selecting`jak, `Updating` `Inserting`, lub `Deleting` zdarzenia uwidocznionego przez używany formant źródła danych. Jeśli wartość parametru nie przeszedł testu weryfikacyjnego, można anulować operację na danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonej <xref:System.ComponentModel.CancelEventArgs> klasy na `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca duplikat bieżącego <see cref="T:System.Web.UI.WebControls.FormParameter" /> wystąpienia.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormParameter" /> Jest to dokładny duplikat bieżącego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje konstruktora kopiującego<xref:System.Web.UI.WebControls.FormParameter> , aby zainicjować nowe wystąpienie klasy z wartościami bieżącego wystąpienia. <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżąca <see cref="T:System.Web.HttpContext" /> część żądania.</param>
        <param name="control">Element <see cref="T:System.Web.UI.Control" /> skojarzony ze stroną, w <see cref="T:System.Web.UI.WebControls.FormParameter" /> której jest używany.</param>
        <summary>Aktualizuje i zwraca wartość <see cref="T:System.Web.UI.WebControls.FormParameter" /> obiektu.</summary>
        <returns>Obiekt, który reprezentuje zaktualizowaną i bieżącą wartość parametru. Jeśli kontekst lub żądanie ma wartość null (<see langword="Nothing" /> w Visual Basic) <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> , metoda zwraca wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próby powiązania z zmienną formularza za każdym razem, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> gdy wywoływana jest metoda. <xref:System.Web.UI.WebControls.FormParameter>  
  
 Parametr jest używany <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> przez metodę do pobrania wartości określonego pola formularza z żądania. `context` `control` Parametr jest ignorowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zmiennej formularza, z którą jest powiązany parametr.</summary>
        <value>Ciąg, który identyfikuje zmienną formularza, z którą jest powiązany parametr.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikuje parę nazwa/wartość, która została przeniesiona <xref:System.Web.HttpRequest.Form%2A> do kolekcji. <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.Web.UI.WebControls.FormParameter> Podczas gdy <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Właściwość identyfikuje nazwę pary, tworzy powiązanie z odpowiadającą jej wartością w czasie wykonywania. Jeśli oczekiwana para nazwa ciąg/wartość zmiennej formularza nie jest przenoszona do strony sieci Web ASP.NET w kolekcji, <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Metoda wiąże parametr z wartością <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwości, jeśli jest ustawiona. Jeśli nie <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> jest ustawiona, metoda nie może powiązać parametru z wartością. <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wyświetlania filtrowanych danych za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki i a <xref:System.Web.UI.WebControls.FormParameter> do pobierania danych z obiektu biznesowego <xref:System.Web.UI.WebControls.GridView> warstwy środkowej i kontrolki do wyświetlania wyników.  
  
 Przykład kodu składa się z <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.GridView> , kontrolki, <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki i przycisku przesyłania. Domyślnie <xref:System.Web.UI.WebControls.TextBox> jest wypełniony nazwą jednego z pracowników firmy Northwind Traders. Wyświetla informacje o pracowniku identyfikowane przez nazwę <xref:System.Web.UI.WebControls.TextBox>w. <xref:System.Web.UI.WebControls.GridView> Aby pobrać dane z innego pracownika, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox> i kliknij przycisk.  
  
 Właściwość określa wyrażenie służące do filtrowania danych pobranych <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>przez. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Ta właściwość używa symboli zastępczych parametrów, które są oceniane do parametrów zawartych w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie symbol zastępczy parametru jest <xref:System.Web.UI.WebControls.FormParameter> powiązany z wartością <xref:System.Web.UI.WebControls.TextBox> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje obiekt biznesowy warstwy środkowej, który jest wykorzystywany przez poprzedni przykład kodu. Ten przykład składa się z dwóch podstawowych klas: Klasa hermetyzuje logikę biznesową, `NorthwindEmployee` a Klasa jest klasą modelu, która zawiera tylko podstawowe funkcje wymagane do ładowania i utrwalania danych z warstwy danych. `EmployeeLogic` Dla uproszczenia `EmployeeLogic` Klasa tworzy statyczny zestaw danych, zamiast pobierać dane z warstwy danych. Jest on również przydatny w tym przykładzie, ponieważ przykład polega na podaniu pełnej nazwy pracownika Northwind Traders do zademonstrowania filtrowania. Aby zapoznać się z kompletnym przykładem pracy, należy skompilować i użyć tych klas z podanymi przykładami kodu ASP.NET.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> Nie sprawdza poprawności wartości przesłanej przez element form w jakikolwiek sposób; używa wartości pierwotnej. W większości przypadków można sprawdzić poprawność <xref:System.Web.UI.WebControls.FormParameter> wartości, zanim zostanie ona użyta przez kontrolę źródła danych przez obsługę zdarzenia, takiego `Selecting`jak, `Updating` `Inserting`, lub `Deleting` zdarzenia uwidocznionego przez używany formant źródła danych. Jeśli wartość parametru nie przeszedł testu weryfikacyjnego, można anulować operację na danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości skojarzonej <xref:System.ComponentModel.CancelEventArgs> klasy na `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane wejściowe klienta w parametrze są sprawdzane.</summary>
        <value><see langword="true" />Jeśli dane wejściowe klienta są zweryfikowane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
