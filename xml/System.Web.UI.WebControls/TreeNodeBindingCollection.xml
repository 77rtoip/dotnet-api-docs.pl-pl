<Type Name="TreeNodeBindingCollection" FullName="System.Web.UI.WebControls.TreeNodeBindingCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c10faf8fcabe06bd1a4ce9f27ee87884dfcbbf4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691376" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeBindingCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeBindingCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeBindingCollection sealed : System::Web::UI::StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekty w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Klasa jest używana do przechowywania i zarządzanie kolekcją <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty w <xref:System.Web.UI.WebControls.TreeView> formantu. <xref:System.Web.UI.WebControls.TreeView> Kontrolować używa <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> klasy dla jego <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Zawiera właściwość <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany. Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), węzeł Wyświetla wartość, która jest zwracana przez `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Węzeł właściwość elementu danych z konkretnych można powiązać, określając powiązania węzła drzewa. Mimo że <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji można wypełniać programowo, jest zwykle ustawiana deklaratywnie.  
  
 Aby ustawić powiązania węzła drzewa deklaratywnie:  
  
1.  Zagnieździć otwierające i zamykające `<DataBindings>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
2.  Miejsce `<asp:TreeNodeBinding>` elementy między otwarcia i zamknięcia `<DataBindings>` znaczniki dla każdego powiązania węzła drzewa, który ma zostać określony.  
  
 Można programowo zarządzać <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> przez dodawanie i usuwanie <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów. Aby dodać <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu do kolekcji, użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> metody. Do usuwania węzłów z kolekcji, użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>, lub <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=nameWithType> metody.  
  
 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Klasa obsługuje dostęp do elementów w kolekcji na kilka sposobów:  
  
-   Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> indeksatora, aby pobrać <xref:System.Web.UI.WebControls.TreeNode> obiektu bezpośrednio od określonego indeksu liczony od zera.  
  
-   Użyj <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=nameWithType> metodę w celu utworzenia moduł wyliczający, który może służyć do iterowania po kolekcji.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak można wypełnić <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt deklaratywnie. W drugim przykładzie kodu pokazano, jak można wypełnić <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt programowo.  
  
 Poniższy przykładowy kod przedstawia sposób wypełnienia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt deklaratywnie. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Poniższy przykładowy kod przedstawia sposób wypełnienia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt programowo. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w powyższych przykładach kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
       <Section Heading="Section 1">  
       </Section>  
       <Section Heading="Section 2">  
       </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do dołączenia.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt na koniec <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu.</summary>
        <returns>Liczony od zera indeks lokalizację dodany <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> w <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> metody można dołączyć określonego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt na koniec <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu.  
  
 Alternatywnie, można wstawić <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> na przy użyciu określonego indeksu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> metodę, aby dodać nowy <xref:System.Web.UI.WebControls.TreeNodeBinding> programowo do obiektu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w poprzednim przykładzie kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (binding As TreeNodeBinding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Można znaleźć.</param>
        <summary>Określa, czy określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains%2A> metodę, aby określić, czy <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt znajduje się w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Ta metoda jest najczęściej używany do sprawdzenia istnienia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przed wykonaniem zadania, takie jak dodawanie lub usuwanie <xref:System.Web.UI.WebControls.TreeNodeBinding> z kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (bindingArray As TreeNodeBinding(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNodeBinding ^&gt; ^ bindingArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingArray" Type="System.Web.UI.WebControls.TreeNodeBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bindingArray">Liczony od zera tablicę <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów, które otrzymuje skopiowane elementy z <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</param>
        <param name="index">Pozycja w <c>bindingArray</c> w którym należy rozpocząć odbieranie skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu zgodne tablicy jednowymiarowej tablicy <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów, zaczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> metodę, aby skopiować zawartość <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt do `bindingArray`. Elementy są kopiowane, zaczynając od `index`. Można następnie użyć tablicy dostęp do elementów, które znajdują się w kolekcji.  
  
 Alternatywnie, można użyć <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> metodę w celu utworzenia moduł wyliczający, który umożliwia dostęp do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> metodę, aby skopiować zawartość <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do tablicy.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/CS/treenodebindingcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/VB/treenodebindingcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do zlokalizowania.</param>
        <summary>Określa indeks określonego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu w kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia <paramref name="binding" /> w <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf%2A> metodę, aby określić liczony od zera indeks określonego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Jeśli węzeł nie jest w kolekcji, metoda zwraca wartość -1.  
  
> [!NOTE]
>  Jeśli określony <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt pojawia się wiele razy w kolekcji, jest zwracany indeks pierwszego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizację liczony od zera indeks, w której mają zostać wstawione <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <param name="binding">
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt do <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiekt w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> do wstawienia określonego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt na `index`.  
  
 Alternatywnie, można dołączyć <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt na koniec <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> przy użyciu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> metodę, aby wstawić nowy <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt programowo w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w poprzednim przykładzie kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBinding Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(i As Integer) As TreeNodeBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBinding ^ default[int] { System::Web::UI::WebControls::TreeNodeBinding ^ get(int i); void set(int i, System::Web::UI::WebControls::TreeNodeBinding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Liczony od zera indeks <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> do pobrania.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu pod określonym indeksem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Pod określonym indeksem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> indeksatora, aby uzyskać dostęp do <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt znajdujący się w `i` tablicy notacji. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> Indeksatora pozwala na modyfikację lub Zastąp <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu w kolekcji bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> indeksatora dostęp do elementów, które znajdują się w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. <xref:System.Web.UI.WebControls.TreeNodeBinding> Programowo aktualizacji obiektu dla węzłów trzeciego poziomu nowymi wartościami. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/CS/treenodebindingcollectionindexercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/VB/treenodebindingcollectionindexervb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w poprzednim przykładzie kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do usunięcia.</param>
        <summary>Usuwa określoną <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt z <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> metodę, aby usunąć określony <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt z kolekcji. Wszystkie elementy, które należy wykonać w tym węźle są następnie przenieść w górę do wypełnienia zwolni pozycji. Indeksy przeniesione elementy również zostaną zaktualizowane.  
  
 Alternatywnie, można usunąć węzła na przy użyciu określonego indeksu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> metody. Można również usunąć każdego węzła w kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt programowo z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w poprzednim przykładzie kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt w określonej lokalizacji indeksu z <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt znajdujący się w `index` z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Wszystkie elementy, które należy wykonać w tym węźle są następnie przenieść w górę do wypełnienia zwolni pozycji. Indeksy przeniesione elementy również zostaną zaktualizowane.  
  
 Alternatywnie, można usunąć określonego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przy użyciu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> metody. Można również usunąć każdego węzła w kolekcji, używając <xref:System.Web.UI.StateManagedCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt programowo z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. W tym przykładzie działał prawidłowo należy skopiować dane XML, który znajduje się na końcu tej sekcji w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML w poprzednim przykładzie kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>