<Type Name="TreeNodeBindingCollection" FullName="System.Web.UI.WebControls.TreeNodeBindingCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="024eaa62373414ff488c04a7133814130aeb7584" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399539" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeBindingCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeBindingCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeBindingCollection sealed : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type TreeNodeBindingCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana do przechowywania <xref:System.Web.UI.WebControls.TreeNodeBinding> kolekcji obiektów w <xref:System.Web.UI.WebControls.TreeView> kontrolce i zarządzania nią. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Kontrolka używa klasy do jej <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>właściwości. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> <xref:System.Web.UI.WebControls.TreeView>  
  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Właściwość zawiera<xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty, które definiują relację między elementem danych i węzłem, z którym jest powiązany. W przypadku tworzenia powiązania ze źródłem danych, gdzie każdy element danych zawiera wiele właściwości (takich jak element XML z kilkoma atrybutami), węzeł wyświetla wartość, która jest zwracana domyślnie `ToString` przez metodę elementu danych. W przypadku elementu XML węzeł wyświetla nazwę elementu, który pokazuje podstawową strukturę drzewa, ale nie jest bardzo użyteczny w przeciwnym razie. Można powiązać węzeł z określoną właściwością elementu danych, określając powiązania węzłów drzewa. <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Chociaż kolekcja może być wypełniana programowo, jest zazwyczaj ustawiana deklaratywnie.  
  
 Aby ustawić deklaratywne powiązania węzłów drzewa:  
  
1.  Zagnieżdżaj otwierające `<DataBindings>` i zamykające Tagi między otwierającym i zamykającym tagiem <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
2.  Umieść `<asp:TreeNodeBinding>` elementy między tagiem otwierającym i `<DataBindings>` zamykającym dla każdego powiązania węzła drzewa, które chcesz określić.  
  
 Można programowo zarządzać <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> przez dodawanie i usuwanie <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów. Aby dodać <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt do kolekcji, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> Użyj metody lub <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> . Aby usunąć węzły z kolekcji, użyj <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>metody, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>lub <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=nameWithType> .  
  
 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Klasa obsługuje kilka sposobów uzyskiwania dostępu do elementów w kolekcji:  
  
-   Użyj indeksatora, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> aby <xref:System.Web.UI.WebControls.TreeNode> pobrać obiekt bezpośrednio w określonym indeksie liczonym od zera.  
  
-   <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=nameWithType> Użyj metody, aby utworzyć moduł wyliczający, który może być używany do iteracji kolekcji.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób deklaratywnego wypełniania <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Drugi przykład kodu demonstruje sposób programistycznego wypełniania <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu.  
  
 Poniższy przykład kodu demonstruje sposób deklaratywnego wypełniania <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób programistycznego wypełniania <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla powyższych przykładów kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
       <Section Heading="Section 1">  
       </Section>  
       <Section Heading="Section 2">  
       </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.Add binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do dołączenia.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt do końca <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu.</summary>
        <returns>Indeks (liczony od zera) lokalizacji dodanej <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />do.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> , aby dołączyć określony <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> do końca obiektu.  
  
 Alternatywnie można wstawić <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> w określonym indeksie przy użyciu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> metody do programistycznego dodawania nowego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (binding As TreeNodeBinding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNodeBinding -&gt; bool" Usage="treeNodeBindingCollection.Contains binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do znalezienia.</param>
        <summary>Określa, czy określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli znajduje się w kolekcji; <see langword="false" />w przeciwnym razie. <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains%2A> , aby określić, <xref:System.Web.UI.WebControls.TreeNodeBinding> czy <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt jest zawarty w obiekcie. Ta metoda jest często używana do testowania pod kątem istnienia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przed wykonaniem zadania, takiego jak dodanie lub usunięcie elementu <xref:System.Web.UI.WebControls.TreeNodeBinding> z kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (bindingArray As TreeNodeBinding(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNodeBinding ^&gt; ^ bindingArray, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Web.UI.WebControls.TreeNodeBinding[] * int -&gt; unit" Usage="treeNodeBindingCollection.CopyTo (bindingArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingArray" Type="System.Web.UI.WebControls.TreeNodeBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bindingArray">Tablica <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów na podstawie zera, która odbiera skopiowane elementy <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />z.</param>
        <param name="index">Pozycja w <paramref name="bindingArray" /> lokalizacji, w której ma zostać rozpoczęte otrzymywanie skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> obiektu do zgodnej jednowymiarowej <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> tablicy obiektów, rozpoczynając od określonego indeksu w tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> , aby skopiować zawartość <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu do `bindingArray`. Elementy są kopiowane od `index`. Następnie możesz użyć tablicy, aby uzyskać dostęp do elementów znajdujących się w kolekcji.  
  
 Alternatywnie można użyć <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> metody, aby utworzyć moduł wyliczający, który może służyć do uzyskiwania dostępu do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> metody skopiować zawartość <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do tablicy.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/CS/treenodebindingcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/VB/treenodebindingcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="treeNodeBindingCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="treeNodeBindingCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.IndexOf binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Aby zlokalizować.</param>
        <summary>Określa indeks określonego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu w kolekcji.</summary>
        <returns>Indeks (liczony od zera) pierwszego wystąpienia <paramref name="binding" /> <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />w, jeśli został znaleziony; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby określić indeks (liczony od zera) określonego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu w <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekcie. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf%2A> Jeśli węzeł nie znajduje się w kolekcji, metoda zwróci wartość-1.  
  
> [!NOTE]
>  Jeśli określony <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt pojawia się wiele razy w kolekcji, zwracany jest indeks pierwszego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Insert (index, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera), w którym należy <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />wstawić.</param>
        <param name="binding"><see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> do obiektu w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby wstawić określony <xref:System.Web.UI.WebControls.TreeNodeBinding> <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt do obiektu w. `index` <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>  
  
 Alternatywnie można dołączyć <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt na końcu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> za pomocą <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> metody w celu programistycznego wstawienia nowego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBinding Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(i As Integer) As TreeNodeBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBinding ^ default[int] { System::Web::UI::WebControls::TreeNodeBinding ^ get(int i); void set(int i, System::Web::UI::WebControls::TreeNodeBinding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNodeBinding with get, set" Usage="System.Web.UI.WebControls.TreeNodeBindingCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Indeks (liczony od zera) <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> do pobrania.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt pod określonym indeksem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> w obiekcie.</summary>
        <value>Pod określonym indeksem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />w. <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj indeksatora, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> aby <xref:System.Web.UI.WebControls.TreeNodeBinding> uzyskać dostęp do obiektu `i` z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu znajdującego się przy użyciu notacji tablicy. Indeksator umożliwia bezpośrednie modyfikowanie lub <xref:System.Web.UI.WebControls.TreeNodeBinding> zastępowanie obiektu w kolekcji. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> indeksatora uzyskać dostęp do elementów, które znajdują się <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> w obiekcie. <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt na węzłach trzeciego poziomu jest aktualizowany programowo przy użyciu nowych wartości. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/CS/treenodebindingcollectionindexercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/VB/treenodebindingcollectionindexervb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClear();" />
      <MemberSignature Language="F#" Value="override this.OnClear : unit -&gt; unit" Usage="treeNodeBindingCollection.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemoveComplete : int * obj -&gt; unit" Usage="treeNodeBindingCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="treeNodeBindingCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Remove binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> Do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> z obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> , aby usunąć określony <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt z kolekcji. Wszystkie elementy, które są zgodne z tym węzłem, zostaną następnie przesunięte w górę w celu wypełnienia wolnej pozycji. Zostaną również zaktualizowane indeksy przeniesionych elementów.  
  
 Alternatywnie można usunąć węzeł w określonym indeksie przy użyciu <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> metody. Możesz również usunąć każdy węzeł w kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> metody w celu programistycznego <xref:System.Web.UI.WebControls.TreeNodeBinding> usunięcia obiektu z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeBindingCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeksowana od zera lokalizacja <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> do usunięcia.</param>
        <summary>Usuwa obiekt znajdujący się w określonej lokalizacji indeksu <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> z obiektu. <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby <xref:System.Web.UI.WebControls.TreeNodeBinding> `index` usunąć<xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiekt znajdujący się w lokalizacji z obiektu. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> Wszystkie elementy, które są zgodne z tym węzłem, zostaną następnie przesunięte w górę w celu wypełnienia wolnej pozycji. Zostaną również zaktualizowane indeksy przeniesionych elementów.  
  
 Alternatywnie można usunąć konkretny <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt za <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> pomocą metody. Można również usunąć każdy węzeł w kolekcji przy użyciu <xref:System.Web.UI.StateManagedCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> metody w celu programistycznego <xref:System.Web.UI.WebControls.TreeNodeBinding> usunięcia obiektu z <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> obiektu. Aby ten przykład działał prawidłowo, należy skopiować dane XML, które znajdują się na końcu tej sekcji, do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Poniżej przedstawiono dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="treeNodeBindingCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
