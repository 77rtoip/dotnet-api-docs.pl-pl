<Type Name="LiteralControlBuilder" FullName="System.Web.UI.WebControls.LiteralControlBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cafe5c6161d054bed26fa0b479feff767c28f9ca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30690497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LiteralControlBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralControlBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LiteralControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralControlBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralControlBuilder : System::Web::UI::ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Współdziała z analizatora do tworzenia <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana głównie do deweloperów formantu. Można utworzyć konstruktora kontrolek niestandardowych dla <xref:System.Web.UI.WebControls.Literal> pochodnych kontroli, muszą dziedziczyć po tej klasie.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ControlBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LiteralControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LiteralControlBuilder" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LiteralControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy konstruktora formant ma być przetwarzana literały biały znak, które są reprezentowane przez <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
        <returns>
          <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LiteralControlBuilder.AllowWhitespaceLiterals%2A> Metoda zastępuje dziedziczone wykonania <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=nameWithType> metody zawsze wskazująca, czy biały spacje w tekście, które są skojarzone z <xref:System.Web.UI.WebControls.Literal> formantu nie są reprezentowane przez <xref:System.Web.UI.WebControls.Literal?displayProperty=nameWithType> obiektów.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
        <altmember cref="T:System.Web.UI.ControlBuilder" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public override void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LiteralControlBuilder.AppendLiteralString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AppendLiteralString (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AppendLiteralString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Zawartość można dodać do formantu.</param>
        <summary>Dodaje określony Zawartość literalna do formantu. <see cref="M:System.Web.UI.WebControls.LiteralControlBuilder.AppendLiteralString(System.String)" /> Metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ciąg jest biały znak, zostanie obsłużony zgodnie z ustawieniem <xref:System.Web.UI.WebControls.LiteralControlBuilder.AllowWhitespaceLiterals%2A> metody. W przeciwnym razie jest traktowana tak, jakby reprezentuje tekst wewnętrzny <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Literał ciągu nie jest poprawnie sformułowany.</exception>
        <altmember cref="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AppendSubBuilder">
      <MemberSignature Language="C#" Value="public override void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendSubBuilder(class System.Web.UI.ControlBuilder subBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LiteralControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AppendSubBuilder (subBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AppendSubBuilder(System::Web::UI::ControlBuilder ^ subBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="subBuilder">
          <see cref="T:System.Web.UI.ControlBuilder" /> Obiekt do dodania producenci formantu podrzędnego.</param>
        <summary>Zgłasza wyjątek <see cref="T:System.Web.HttpException" />, ponieważ dodanie konstruktorów kontrolki podrzędnej nie ma zastosowania do <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Web.UI.ControlBuilder> klasy podstawowej, ta metoda dodaje Konstruktorzy wszystkie formanty podrzędne skojarzone z <xref:System.Web.UI.WebControls.Literal> formantu do określonego <xref:System.Web.UI.ControlBuilder?displayProperty=nameWithType> obiektu. Ta metoda jest odziedziczone <xref:System.Web.UI.ControlBuilder?displayProperty=nameWithType> klasy i nie ma zastosowania do <xref:System.Web.UI.WebControls.LiteralControlBuilder>. W implementacji przesłoniętych w <xref:System.Web.UI.WebControls.LiteralControlBuilder>, metoda zawsze zwraca <xref:System.Web.HttpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Podejmowana jest próba przy użyciu tej metody.</exception>
        <altmember cref="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>