<Type Name="CookieParameter" FullName="System.Web.UI.WebControls.CookieParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="274ac968fa75954773cbf7984767de6f5ee04b0e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401607" /></Metadata><TypeSignature Language="C#" Value="public class CookieParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CookieParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CookieParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class CookieParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type CookieParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("CookieName")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wiąże wartość pliku cookie HTTP po stronie klienta z obiektem Parameter. Parametru można użyć w zapytaniu sparametryzowanym lub w poleceniu, aby wybrać, filtrować lub aktualizować dane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CookieParameter> Klasy można użyć do powiązania wartości plików cookie HTTP po stronie klienta przekazaną w ramach żądania HTTP do parametru używanego przez kontrolki źródła danych ASP.NET.  
  
 Klasa zawiera właściwość, która <xref:System.Web.HttpCookie> określa nazwę obiektu <xref:System.Web.UI.WebControls.Parameter> , z którym ma zostać utworzone powiązanie, oprócz tych dziedziczonych z klasy. <xref:System.Web.UI.WebControls.CookieParameter.CookieName%2A> <xref:System.Web.UI.WebControls.CookieParameter> Klasa próbuje powiązać z nazwanym plikiem cookie za każdym razem <xref:System.Web.UI.WebControls.CookieParameter.Evaluate%2A> , gdy wywoływana jest metoda. <xref:System.Web.UI.WebControls.CookieParameter>  
  
> [!IMPORTANT]
>  Kontrolki, które wiążą dane z parametrem, mogą zgłosić <xref:System.Web.UI.WebControls.CookieParameter> wyjątek, jeśli określono obiekt, ale do żądania HTTP nie jest przesyłany odpowiedni plik cookie. Podobnie mogą nie wyświetlać żadnych danych, jeśli plik cookie jest przesyłany `null`z. Ustaw właściwość <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> , aby uniknąć sytuacji, w których jest to konieczne.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki i <xref:System.Web.UI.WebControls.CookieParameter> obiektu powiązanego z plikiem cookie HTTP w celu wyświetlania danych z bazy danych <xref:System.Web.UI.WebControls.GridView> Northwind Traders w formancie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.CookieParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_1/CS/cp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.CookieParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_1/VB/cp1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe nienazwane wystąpienie <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CookieParameter> Obiekt utworzony <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> za pomocą konstruktora jest inicjowany z wartościami domyślnymi dla wszystkich jego właściwości. Właściwość jest inicjowana do <xref:System.String.Empty?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.CookieParameter.CookieName%2A> <xref:System.TypeCode.Object?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.String.Empty?displayProperty=nameWithType> <xref:System.Data.ParameterDirection.Input> <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Ponadto właściwość jest inicjowana do, właściwość jest inicjowana do, właściwość jest inicjowana do, a właściwość jest inicjowana. <xref:System.Web.UI.WebControls.Parameter.Name%2A> do `null`programu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.UI.WebControls.CookieParameter> , jak utworzyć obiekt <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> przy użyciu <xref:System.Web.UI.WebControls.Parameter.Type%2A>konstruktora, ustawić jego <xref:System.Web.UI.WebControls.Parameter.Name%2A>właściwości,, <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> i <xref:System.Web.UI.WebControls.CookieParameter.CookieName%2A> , a następnie dodać go do <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki zbiera.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.CookieParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/CS/cookieparam2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.CookieParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/VB/cookieparam2vb.aspx#1)]  
  
 Następujący moduł związany z kodem jest używany z poprzednią stroną formularzy sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.CookieParameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/CS/cookieparam2cs.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.CookieParameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/VB/cookieparam2vb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieParameter (System.Web.UI.WebControls.CookieParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CookieParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.#ctor(System.Web.UI.WebControls.CookieParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As CookieParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieParameter(System::Web::UI::WebControls::CookieParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CookieParameter : System.Web.UI.WebControls.CookieParameter -&gt; System.Web.UI.WebControls.CookieParameter" Usage="new System.Web.UI.WebControls.CookieParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.CookieParameter" />
      </Parameters>
      <Docs>
        <param name="original">A <see cref="T:System.Web.UI.WebControls.CookieParameter" /> , z którego jest inicjowane bieżące wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy z wartościami wystąpienia określonego <paramref name="original" /> przez parametr.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest konstruktorem kopiującym używanym do klonowania wystąpienia.<xref:System.Web.UI.WebControls.CookieParameter> `protected` <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> Wartości <xref:System.Web.UI.WebControls.CookieParameter> właściwości obiektu, w tym <xref:System.Web.UI.WebControls.CookieParameter.CookieName%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>i <xref:System.Web.UI.WebControls.Parameter.Type%2A>, są przesyłane do nowego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CookieParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieParameter (string name, string cookieName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string cookieName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, cookieName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieParameter(System::String ^ name, System::String ^ cookieName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CookieParameter : string * string -&gt; System.Web.UI.WebControls.CookieParameter" Usage="new System.Web.UI.WebControls.CookieParameter (name, cookieName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cookieName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="cookieName">Nazwa pliku cookie HTTP, z którym jest powiązany obiekt Parameter. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe nazwane wystąpienie <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy, używając określonego ciągu do identyfikacji pliku cookie HTTP, z którym ma zostać utworzone powiązanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CookieParameter> Obiekt utworzony <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> za pomocą konstruktora jest inicjowany z określoną nazwą parametru i ciągiem, który identyfikuje plik cookie, z którym jest powiązany parametr. Inne właściwości, w <xref:System.Web.UI.WebControls.Parameter.Type%2A> tym <xref:System.Web.UI.WebControls.Parameter.Direction%2A>i, są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób <xref:System.Web.UI.WebControls.CookieParameter> tworzenia obiektu <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> za pomocą konstruktora <xref:System.Web.UI.WebControls.SqlDataSource> i dodawania <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> go do kolekcji kontrolki.  
  
 [!code-csharp[System.Web.UI.WebControls.CookieParameter_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_4/CS/cp4cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.CookieParameter_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_4/VB/cp4vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.CookieParameter.CookieName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieParameter (string name, System.Data.DbType dbType, string cookieName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string cookieName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ cookieName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CookieParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.CookieParameter" Usage="new System.Web.UI.WebControls.CookieParameter (name, dbType, cookieName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="cookieName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych reprezentowanej przez parametr.</param>
        <param name="cookieName">Nazwa pliku cookie HTTP, z którym jest powiązany obiekt Parameter. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy, która ma określoną nazwę i typ bazy danych, która jest powiązana z określonym plikiem cookie HTTP.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.CookieParameter.CookieName" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DbType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieParameter (string name, TypeCode type, string cookieName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string cookieName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, cookieName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieParameter(System::String ^ name, TypeCode type, System::String ^ cookieName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CookieParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.CookieParameter" Usage="new System.Web.UI.WebControls.CookieParameter (name, type, cookieName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="cookieName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Typ, który reprezentuje parametr. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</param>
        <param name="cookieName">Nazwa pliku cookie HTTP, z którym jest powiązany obiekt Parameter. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe nazwane i silnie wpisane wystąpienie <see cref="T:System.Web.UI.WebControls.CookieParameter" /> klasy, używając określonego ciągu do identyfikacji pliku cookie HTTP, z którym ma zostać utworzone powiązanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt utworzony za pomocą konstruktora jest inicjowany z określoną nazwą parametru, <xref:System.Web.UI.WebControls.Parameter.Type%2A>i ciągiem, który identyfikuje plik cookie, z którym jest powiązany parametr. <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.CookieParameter> Tylko właściwości <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> i są inicjowane z wartościami domyślnymi. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób <xref:System.Web.UI.WebControls.CookieParameter> tworzenia obiektu <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> za pomocą konstruktora <xref:System.Web.UI.WebControls.SqlDataSource> i dodawania <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> go do kolekcji kontrolki.  
  
 [!code-csharp[System.Web.UI.WebControls.CookieParameter_3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_3/CS/cp3cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.CookieParameter_3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_3/VB/cp3vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.CookieParameter.CookieName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="cookieParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca duplikat bieżącego <see cref="T:System.Web.UI.WebControls.CookieParameter" /> wystąpienia.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.CookieParameter" /> Jest to dokładny duplikat bieżącego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje konstruktora kopiującego<xref:System.Web.UI.WebControls.CookieParameter> , aby zainicjować nowe wystąpienie klasy z wartościami bieżącego wystąpienia. <xref:System.Web.UI.WebControls.CookieParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.CookieParameter.Clone%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CookieParameter.#ctor(System.Web.UI.WebControls.CookieParameter)" />
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CookieParameter.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.UI.WebControls.CookieParameter.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pliku cookie HTTP, z którym jest powiązany parametr.</summary>
        <value>Ciąg, który identyfikuje plik cookie HTTP po stronie klienta, z którym jest powiązany parametr.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość identyfikuje plik cookie HTTP, który jest reprezentowany <xref:System.Web.HttpCookie> przez obiekt i jest dostępny za pośrednictwem bieżącego <xref:System.Web.HttpRequest> obiektu. <xref:System.Web.UI.WebControls.CookieParameter.CookieName%2A> Jeśli plik cookie protokołu HTTP nie jest dostępny w bieżącym <xref:System.Web.HttpRequest> obiekcie <xref:System.Web.UI.WebControls.CookieParameter.Evaluate%2A> , Metoda wiąże parametr <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> z wartością właściwości, jeśli jest ustawiona. Jeśli właściwość nie jest ustawiona <xref:System.Web.UI.WebControls.CookieParameter.Evaluate%2A> , metoda nie może powiązać parametru z wartością. <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.CookieParameter> , jak deklaratywnie użyć kontrolki i obiektu powiązanego z plikiem cookie HTTP w celu wyświetlenia danych z bazy danych <xref:System.Web.UI.WebControls.GridView> Northwind Traders w formancie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.CookieParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_1/CS/cp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.CookieParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_1/VB/cp1vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób programowego tworzenia <xref:System.Web.UI.WebControls.CookieParameter> obiektu, ustawiania jego właściwości i dodawania go <xref:System.Web.UI.WebControls.SqlDataSource> do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji kontrolki.  
  
 [!code-csharp[System.Web.UI.WebControls.CookieParameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/CS/cookieparam2cs.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.CookieParameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.CookieParameter_2/VB/cookieparam2vb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CookieParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="cookieParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżąca <see cref="T:System.Web.HttpContext" /> część żądania.</param>
        <param name="control">Skojarzone ze stroną formularzy sieci Web, <see cref="T:System.Web.UI.WebControls.CookieParameter" /> gdzie jest używana. <see cref="T:System.Web.UI.Control" /></param>
        <summary>Aktualizuje i zwraca wartość <see cref="T:System.Web.UI.WebControls.CookieParameter" /> obiektu.</summary>
        <returns>Obiekt, który reprezentuje zaktualizowaną i bieżącą wartość parametru. Jeśli kontekst lub żądanie jest <see langword="null" /> <see cref="M:System.Web.UI.WebControls.CookieParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> , metoda zwraca wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr jest używany <xref:System.Web.UI.WebControls.CookieParameter.Evaluate%2A> przez metodę do pobierania kolekcji plików cookie i wartość pliku cookie, z którym <xref:System.Web.UI.WebControls.CookieParameter> jest powiązany obiekt. `context` `control` Parametr jest ignorowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CookieParameter.CookieName" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CookieParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.CookieParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy wartość parametru jest sprawdzana.</summary>
        <value><see langword="true" />Jeśli wartość parametru jest zweryfikowana; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
