<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fab33d8ebbc73e4028e4c915742468326c153117" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691772" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje obiekt biznesowy, którego źródłem danych formanty powiązane z danymi w wielowarstwowych architekturach aplikacji sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Cel](#purpose)  
  
-   [Pobieranie danych](#retrieving_data)  
  
-   [Wykonywanie operacji na danych](#performing_data_operations)  
  
-   [Filtrowanie danych](#filtering_data)  
  
-   [Buforowanie](#caching)  
  
-   [Funkcje](#features)  
  
-   [Widok danych](#data_view)  
  
-   [Za pomocą LINQ do SQL](#using_linq_to_sql)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Działania kontroli z klasą utworzony. Tworzenie metody, które pobierania i aktualizowania danych, i podanie nazwy tych metod, które <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w znaczniku. Podczas renderowania lub odświeżania strony przetwarzania <xref:System.Web.UI.WebControls.ObjectDataSource> wywołuje metody, które zostały określone.  
  
 Nie istnieje żadne visual renderowania <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W związku z tym <xref:System.Web.UI.WebControls.ObjectDataSource> nie obsługuje visual funkcji, takich jak <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> lub <xref:System.Web.UI.DataSourceControl.SkinID%2A> właściwości.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Cel  
 Bardzo popularną praktyką projektowania aplikacji jest do oddzielania warstwę prezentacji z logiki biznesowej i Hermetyzowanie logiki biznesowej obiektów biznesowych. Te obiekty biznesowe tworzą różne warstwy między warstwą prezentacji a warstwą danych, co powoduje architektury trójwarstwowej aplikacji. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli umożliwia deweloperom korzystanie z kontroli źródła danych programu ASP.NET przy zachowaniu ich architektury trójwarstwowej aplikacji.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli używa odbicia do tworzenia wystąpień obiektów biznesowych i do wywołania metody je, aby pobrać, zaktualizować, wstawianie i usuwanie danych. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Właściwości identyfikuje nazwę klasy, która <xref:System.Web.UI.WebControls.ObjectDataSource> współpracuje z. <xref:System.Web.UI.WebControls.ObjectDataSource> Tworzy i niszczy wystąpienia klasy dla każdego wywołania metody kontroli; nie przechowuje obiekt w pamięci przez czas ich istnienia żądania sieci Web. Jest to bardzo ważna kwestia, jeśli obiekt biznesowy, którego używasz wymaga wielu zasobów lub jest kosztowne do tworzenia i zniszcz. Używanie obiektu kosztowne może nie być optymalne wyboru, ale cyklu życia obiektu można kontrolować przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia.  
  
> [!NOTE]
>  Metody, które są identyfikowane za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości można instancji metody lub `static` (`Shared` w języku Visual Basic) metod. Jeśli te metody są `static` (`Shared` w języku Visual Basic), nie jest tworzone wystąpienie obiektu biznesowego i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia nie są zgłaszane.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Pobieranie danych  
 Aby pobrać dane z obiektu biznesowego, ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość na nazwę metody, która pobiera dane. Jeśli metoda nie zwraca <xref:System.Collections.IEnumerable> lub <xref:System.Data.DataSet> obiektu, obiekt jest ujęte w czasie wykonywania w <xref:System.Collections.IEnumerable> kolekcji. Jeśli podpis metody ma parametry, można dodać <xref:System.Web.UI.WebControls.Parameter> obiekty do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji, a następnie powiązać je na wartości, które mają zostać przekazane do metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Aby <xref:System.Web.UI.WebControls.ObjectDataSource> sterowania, aby użyć parametrów, parametry muszą być zgodne, nazwy i typy parametrów w podpisie metody. Aby uzyskać więcej informacji, zobacz [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli pobiera dane zawsze, gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda jest wywoływana. Ta metoda zapewnia dostęp programistyczny do metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Metodę, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości jest wywoływana automatycznie przez formanty, które są powiązane z <xref:System.Web.UI.WebControls.ObjectDataSource> po ich `DataBind` metoda jest wywoływana. Jeśli ustawisz `DataSourceID` właściwości formantu powiązanego z danymi, formantu automatycznie tworzy powiązanie z danymi ze źródła danych, zgodnie z potrzebami. Ustawienie `DataSourceID` właściwości jest to zalecana metoda powiązania <xref:System.Web.UI.WebControls.ObjectDataSource> formant do formantu powiązanego z danymi. Alternatywnie, można ustawić `DataSource` właściwości, a następnie użytkownik musi jawnie wywołać `DataBind` metodę formantu powiązanego z danymi. Możesz wywołać <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody programowo w dowolnym momencie można pobrać danych.  
  
 Aby uzyskać więcej informacji na temat powiązanie formantów powiązanych z danymi z kontrolki źródła danych, zobacz [powiązanie z danych przy użyciu formantu źródła danych](http://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Wykonywanie operacji na danych  
 W zależności od możliwości biznesowe obiekt <xref:System.Web.UI.WebControls.ObjectDataSource> z działania kontroli, można wykonać operacji na danych, takich jak aktualizacje, wstawienia i usunięcia. Aby wykonać te operacje na danych, ustaw nazwę odpowiedniej metody oraz wszelkie skojarzone parametry dla operacji, która ma zostać wykonana. Na przykład operacji aktualizacji, należy ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość na nazwę metody obiektu biznesowych, która wykonuje aktualizacje i dodać wszystkie wymagane parametry <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzony z kontrolką powiązane z danymi, parametry są dodawane przez formant powiązany z danymi. W takim przypadku należy się upewnić, że nazwy parametrów metody odpowiadać nazwom pól w formancie powiązane z danymi. Aktualizacja jest wykonywana po <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metoda jest wywoływana bezpośrednio przez kod lub automatycznie przez formant powiązany z danymi. Tego samego wzorca ogólne obowiązuje w przypadku <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacji. Obiekty biznesowe są zakłada, że do wykonania tych typów danych operacji jeden rekord w czasie, a nie umieścić w zadaniu wsadowym.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Filtrowanie danych  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formantu można filtrować dane, które są pobierane przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości, jeśli dane są zwracane jako <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu. Można ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwość do filtrowania wyrażenia przy użyciu formatu ciągu składni i powiązać wartości w wyrażeniu parametrów, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji.  
  
<a name="caching"></a>   
## <a name="caching"></a>Buforowanie  
 Mimo że <xref:System.Web.UI.WebControls.ObjectDataSource> nie zachowuje wystąpienie obiektu biznesowego dla wielu żądań przesyłanych, może buforować wynik wywołania metody identyfikowane przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Gdy dane są buforowane, kolejne wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda zwracać buforowane dane zamiast tworzenia obiektu biznesowego i wywoływania jego <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> za pomocą odbicia. Buforowanie pozwala uniknąć tworzenia obiektu i wywołanie metody danych kosztem pamięci na serwerze sieci Web. <xref:System.Web.UI.WebControls.ObjectDataSource> Automatycznie buforuje dane w przypadku <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true`i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwość jest ustawiona na liczbę sekund, które pamięć podręczna przechowuje dane przed pamięci podręcznej zostaną odrzucone. Można również określić <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwości i opcjonalnie <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> właściwości. <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie umożliwia pamięci podręcznej wszystkich typów danych, ale nie powinien buforować obiektów, które zachowania zasobów lub stan, który nie może być współużytkowana do obsługi wielu żądań (na przykład otwórz <xref:System.Data.SqlClient.SqlDataReader> obiektu), ponieważ tego samego wystąpienia obiektu będzie służyć do obsługi wielu żądań.  
  
<a name="features"></a>   
## <a name="features"></a>Funkcje  
 W poniższej tabeli opisano funkcje <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
|Możliwość|Wymagania|  
|----------------|------------------|  
|Wybieranie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> dla właściwości nazwy firmy obiektu metodę, która wybiera danych i uwzględnia wszystkie niezbędne parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji programowo lub za pomocą formantu powiązanego z danymi.|  
|Sortowanie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> właściwość na nazwę parametru w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metoda uwzględniająca kryteriów sortowania.|  
|Filtrowanie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości do filtrowania wyrażenia i opcjonalnie Dodaj żadnych parametrów <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji do filtrowania danych podczas <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda jest wywoływana. Metoda określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> musi zwracać właściwość <xref:System.Data.DataSet> lub <xref:System.Data.DataTable>.|  
|Stronicowania|Stronicowanie źródła danych jest obsługiwana, jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metoda zawiera parametry maksymalną liczbę rekordów do pobrania i indeks pierwszego rekordu do pobrania. Nazwy parametrów muszą być ustawione w <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> właściwości, odpowiednio. Kontrolki powiązane z danymi będzie mógł wykonywać stronicowanie, nawet jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> formant nie obsługuje stronicowania bezpośrednio w metodzie określonym przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Wymagania dla kontrolki powiązania danych można było w tym celu jest określenia przez metodę <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości zwracają obiekt, który implementuje <xref:System.Collections.ICollection> interfejsu.|  
|Aktualizowanie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> dla właściwości nazwy firmy obiektu metody, która aktualizuje dane i uwzględnia wszystkie niezbędne parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji.|  
|Usuwanie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> dla właściwości nazwy firmy obiekt metody lub funkcji, które powoduje usunięcie danych i uwzględnia wszystkie niezbędne parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji.|  
|Wstawianie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> dla właściwości nazwy firmy obiektu metody lub funkcji, która wstawia dane i uwzględnia wszystkie niezbędne parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji.|  
|Buforowanie|Ustaw <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwości `true`i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwości zgodnie z zachowanie buforowania dla pamięci podręcznej danych.|  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource> klasę, aby zaktualizować ani wstawić danych, ciągów, które zostaną wprowadzone po stronie klienta nie są automatycznie konwertowane z formatu kultury klienta do formatu kultury serwera. Na przykład kulturę klienta może określać DD/MM/RRRR jako formatu daty i format daty na serwerze może być MM/DD/RRRR. W takim przypadku 5 października 2009 zostaną wprowadzone do <xref:System.Web.UI.WebControls.TextBox> kontrolować jako 2009-5/10, ale będą interpretowane jako 10 maja 2009. 15 października 2009 zostanie wprowadzona jako 15/10/2009 i może zostać odrzucone jako nieprawidłową datę.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Widok danych  
 Podobnie jak w przypadku wszystkich kontrolki źródła danych, <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzone z klasą widoku źródła danych. Gdy <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest interfejs, który używa projektant strony do pracy z danymi, <xref:System.Web.UI.WebControls.ObjectDataSourceView> klasa jest interfejsem współpracujące z formantów powiązanych z danymi. Ponadto <xref:System.Web.UI.WebControls.ObjectDataSourceView> klasa zawiera opis możliwości kontroli źródła danych i wykonuje całą pracę. <xref:System.Web.UI.WebControls.ObjectDataSource> Formant ma tylko jedną skojarzone <xref:System.Web.UI.WebControls.ObjectDataSourceView>, i jest zawsze nazwane `DefaultView`. Gdy <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu jest udostępniany przez <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> metody, wiele właściwości i metody są ujęte i udostępniane bezpośrednio przez <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W tle <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu wykonuje wszystkie operacje danych, w tym pobieranie, wstawianie, aktualizowanie, usuwanie, filtrowania i sortowania danych. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Za pomocą LINQ do SQL  
 Można użyć <xref:System.Web.UI.WebControls.ObjectDataSource> formantu za pomocą LINQ do SQL klasy. Aby to zrobić, należy ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> dla właściwości Nazwa klasy kontekstu danych. Można również ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> metod w klasie kontekstu danych, które wykonują operacje odpowiedniej metody. Należy utworzyć programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzeń, aby anulować usuwanie klasy kontekstu danych. Ten krok jest konieczne, ponieważ składnik LINQ to SQL obsługuje wykonanie odroczone, podczas gdy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli podejmie próbę usunięcia kontekstu danych po wykonaniu operacji Select. Aby uzyskać więcej informacji na temat tworzenia LINQ w klasach SQL, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Na przykład jak anulować usuwanie klasy kontekstu danych zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzeń.  
  
## <a name="using-the-entity-framework"></a>Przy użyciu programu Entity Framework  
 Można również użyć <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z programu Entity Framework. Aby uzyskać więcej informacji, zobacz [przy użyciu programu Entity Framework i kontrolki ObjectDataSource](http://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Projekt programu Visual Studio Web lokacji z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 W tej sekcji przedstawiono <xref:System.Web.UI.WebControls.ObjectDataSource> w znaczniku w aspx strony i przedstawia obiektów biznesowych, z których korzysta. Przykładem jest strony .aspx. Zawiera on <xref:System.Web.UI.WebControls.GridView> formant, który jest powiązany z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. <xref:System.Web.UI.WebControls.ObjectDataSource> Znaczników kontroli określa nazwę obiektu biznesowego i nazwę metody obiektu biznesowych do wywołania w celu pobrania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 W poniższym przykładzie przedstawiono obiektu biznesowego <xref:System.Web.UI.WebControls.ObjectDataSource> używa kontrolki strony .aspx. (Wielu innych <xref:System.Web.UI.WebControls.ObjectDataSource> przykłady kodu jest używany również tego obiektu biznesowego.) Przykład obejmuje dwie podstawowe klasy:  
  
-   `EmployeeLogic` Klasy jest klasa logiki biznesowej, które <xref:System.Web.UI.WebControls.ObjectDataSource> używa.  
  
-   `NorthwindEmployee` Klasa definiuje obiekt danych, który jest zwracany przez `GetAllEmployees` metody `EmployeeLogic` klasy.  
  
 Dodatkowe `NorthwindDataException` klasy jest dostarczane jako udogodnienie.  
  
 Ten zestaw klas przykład współdziała z bazy danych Northwind Traders, która jest dostępna w programie Microsoft SQL Server i programu Microsoft Access. Pełny przykład pracy możesz skompilować i użyć tych klas z udostępnionych przykładów strony .aspx. Aby uzyskać informacje o sposobie instalowania bazy danych Northwind Traders, zobacz [porady: Instalowanie przykładowe bazy danych](http://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa klasy, która <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> współpracuje z.</param>
        <param name="selectMethod">Nazwa metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> wywołuje do pobierania danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> z określonej nazwy typu i nazwę metody pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `typeName` parametr może być częściowo kwalifikowanej typ kodu, który znajduje się w katalogu Bin lub App_Code lub w pełni kwalifikowana nazwa typu dla kodu, który jest zarejestrowany w globalnej pamięci podręcznej zestawów. Użycie pamięci podręcznej GAC, należy dodać odpowiednie odwołanie do `assemblies` sekcji pliku konfiguracji w pliku Machine.config lub Web.config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, w sekundach, jaki kontroli źródła danych przechowuje dane są pobierane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> właściwości.</summary>
        <value>Liczba sekund, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> buforuje wyniki <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> wywołania właściwości. Wartość domyślna to 0. Wartość nie może być ujemna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, wywołań <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodę pobierania danych z pamięci podręcznej, a nie z firmy obiekt, który <xref:System.Web.UI.WebControls.ObjectDataSource> współpracuje z. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda pobiera dane z obiektu biznesowego, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
 Pamięć podręczna jest regulowane przez kombinację czas trwania i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> ustawienia. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.ObjectDataSource> buforuje dane w pierwszym wywołaniu <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> — metoda i przechowuje ją w pamięci dla co najwyżej ilość czasu, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości. Dane mogą zostać zwolnione, aby czas trwania Jeśli pamięci nie jest konieczne. Następnie odświeżeniu pamięci podręcznej podczas następnego wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartość formantu źródła danych buforuje dane w pierwszym wywołaniu <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda, ale resetuje przedział czasu, dla której przechowuje w pamięci podręcznej w każde kolejne wywołanie <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Bufor wygasa, jeśli nic się nie czasu, która jest równa <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości od czasu ostatniego wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu obsługuje buforowanie. W drugim przykładzie kodu pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu.  
  
 Poniższy przykład kodu pokazuje sposób <xref:System.Web.UI.WebControls.ObjectDataSource> formantu obsługuje buforowanie. Aby włączyć buforowanie, musi implementować metodę, która pobiera dane, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości, aby zwrócić dane jako <xref:System.Data.DataSet> obiektu. W tym przykładzie <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true`i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwości są ustawione. <xref:System.Web.UI.WebControls.ObjectDataSource> Buforuje danych zwracanych przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości 30 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W podstawowej implementacji `EmployeeLogic` klasy `GetAllEmployees` metoda zwraca <xref:System.Collections.ArrayList> obiektu. Zamiast refaktoryzacji obiektu całkowicie do pracy z <xref:System.Web.UI.WebControls.ObjectDataSource> na stronie formularzy sieci Web o nazwie metody otoki `GetAllEmployeesAsDataSet` zostanie dodany, która zwraca zbiór `NorthwindEmployee` dane jako <xref:System.Data.DataSet>.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zachowanie wygaśnięcia pamięci podręcznej, która w połączeniu z czasem trwania, określa zachowanie pamięci podręcznej, która korzysta z kontroli źródła danych.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, wywołań <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodę pobierania danych z pamięci podręcznej, a nie z firmy obiekt, który <xref:System.Web.UI.WebControls.ObjectDataSource> współpracuje z. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda pobiera dane z obiektu biznesowego, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
 Pamięć podręczna jest regulowane przez kombinację czas trwania i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> ustawienia. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.ObjectDataSource> buforuje dane w pierwszym wywołaniu <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> — metoda i przechowuje ją w pamięci dla co najwyżej ilość czasu, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości. Dane mogą zostać zwolnione, aby czas trwania Jeśli pamięci nie jest konieczne. Następnie odświeżeniu pamięci podręcznej podczas następnego wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartość formantu źródła danych buforuje dane w pierwszym wywołaniu <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda, ale resetuje przedział czasu, dla której przechowuje w pamięci podręcznej każde kolejne wywołanie <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Bufor wygasa, jeśli nic się nie czasu, która jest równa <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości od czasu ostatniego wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak <xref:System.Web.UI.WebControls.ObjectDataSource> obiekt obsługuje filtrowanie i buforowania. W drugim przykładzie kodu pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie i filtrowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu.  
  
 Poniższy przykład kodu pokazuje sposób <xref:System.Web.UI.WebControls.ObjectDataSource> sterowanie obsługuje filtrowanie i buforowania. Aby włączyć filtrowania i buforowania, musi implementować metodę, która pobiera dane, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości, aby zwrócić dane jako <xref:System.Data.DataSet> obiektu. W tym przykładzie jest włączone buforowanie ponieważ `EmployeeLogic` obiektu zwraca dane jako <xref:System.Data.DataSet>, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true`i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwości są ustawione. <xref:System.Web.UI.WebControls.ObjectDataSource> Buforuje danych zwracanych przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości 30 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie i filtrowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W podstawowej implementacji `EmployeeLogic` klasy `GetAllEmployees` metoda zwraca <xref:System.Collections.ArrayList>. Zamiast refaktoryzacji obiektu całkowicie do pracy z <xref:System.Web.UI.WebControls.ObjectDataSource> na stronie formularzy sieci Web o nazwie metody otoki `GetAllEmployeesAsDataSet` zostanie dodany, która zwraca zbiór `NorthwindEmployee` dane jako <xref:System.Data.DataSet>. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zależność klucza użytkownika połączonego z wszystkie dane obiektów pamięci podręcznej, które zostały utworzone przy użyciu formantu źródła danych.</summary>
        <value>Klucz identyfikujący wszystkich obiektów w pamięci podręcznej utworzone przez <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Właściwość można ustawić dowolną wartość z dowolnego ciągu.  
  
 Po wygaśnięciu klucz jawnie wygasły wszystkich obiektów w pamięci podręcznej. Umożliwia to unieważnienie wpisy w pamięci podręcznej, które są tworzone przez <xref:System.Web.UI.WebControls.ObjectDataSource> ze strony własnego kodu programowo.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, wywołań <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodę pobierania danych z pamięci podręcznej, a nie z firmy obiekt, który <xref:System.Web.UI.WebControls.ObjectDataSource> współpracuje z. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda pobiera dane z obiektu biznesowego, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
 Można ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> właściwość, aby utworzyć zależność między wszystkie wpisy w pamięci podręcznej, które są tworzone przez <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i klucz. Użytkownik może wygaśnie wszystkie wpisy w pamięci podręcznej programowo w dowolnym momencie poprzez wygaszenie klucza. Wygaśnie za pomocą klucza <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> metody z bieżącym <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> wartość jako parametr.  
  
 Wpis pamięci podręcznej unikatowy jest tworzona dla każdej kombinacji <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> właściwości. Wiele <xref:System.Web.UI.WebControls.ObjectDataSource> formanty można użyć tego samego wpisy w pamięci podręcznej w scenariuszach, gdzie są ładowane danych przy użyciu tego samego typu, metody i parametrów.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która pobieranie rekordów z tabeli pracowników w bazie danych Northwind.  
  
 W pierwszym przykładzie strony sieci Web, która zawiera dwa <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, <xref:System.Web.UI.WebControls.DropDownList> kontroli, a <xref:System.Web.UI.WebControls.DetailsView> formantu. Pierwszy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DropDownList> formantu są używane do pobierania i wyświetlania nazwy pracowników z bazy danych. Drugi <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DetailsView> formantu są używane do pobierania i wyświetlania rekordu pracownika, który jest wybierany przez użytkownika.  
  
 Buforowanie jest włączone dla <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W związku z tym każdy rekord są pobierane tylko jeden raz z bazy danych. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Właściwość jest ustawiona na "EmployeeDetails", ale dowolną wartością ciągu może działać jako klucz. Strona sieci Web zawiera również <xref:System.Web.UI.WebControls.Button> formant, który użytkownik może kliknąć wygaśnie buforowane dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.Control.Load> zdarzeń i obsługi dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenie <xref:System.Web.UI.WebControls.Button> formantu. <xref:System.Web.UI.Control.Load> Obsługi zdarzeń tworzy element pamięci podręcznej za pomocą klucza ustawioną <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> wartość. <xref:System.Web.UI.WebControls.Button.Click> Obsługi zdarzeń usuwa element pamięci podręcznej, którego klucz jest równa <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> wartość. Po usunięciu elementu pamięci podręcznej, wszystkie buforowane dane, które jest zależna od klucza wygasł.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 W trzecim przykładzie klasy dostępu do danych, która współdziała z bazy danych Northwind. Klasa używa LINQ do badania tabeli pracowników. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje bazy danych Northwind i tabeli pracowników. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy nowe wartości są przekazywane do <see langword="Update" /> metody ani starych i nowych wartości są przekazywane do <see langword="Update" /> metody.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.ConflictOptions" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy parametry dla starej i nowej wartości są stosowane do metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości. Na przykład, jeśli metoda nie jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zwraca <xref:System.Data.DataTable> kontroli z kolumnami `Name` i `Number`i <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.OverwriteChanges> pola, parametry są tworzone dla `Name` i `Number` dla `Update` metody. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów są tworzone dla `Name`, `Number`, `original_Name`, i `original_Number`. (Zależy od dokładnej nazwy parametrów dla oryginalnej wartości <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości.) <xref:System.Web.UI.WebControls.ObjectDataSource> Określa, czy metoda jest określona w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość ma parametry, które odpowiadają.  
  
 Formant współbieżności to technika, magazyny danych używanego do kontroli, jak dane odczytane i zmienić w magazynie, gdy wielu klientów są uzyskiwanie dostępu i operowanie nimi tych samych danych. Na przykład jeden klient odczytuje dane i wyświetla do użytkownika, gdy inny klient odczytuje tych samych danych i przedstawia on do innego użytkownika. Jeśli użytkownicy zaktualizowanie danych i przesłania go do magazynu danych, może wystąpić nieoczekiwany wynik, ponieważ obaj klienci mogą określić różne wartości dla tych samych danych. To jest traktowany jako konflikt. Przez ustawienie <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> właściwości <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość `Update` metody następnie porównać starej i nowej wartości oryginalne źródło danych do wykrywania konfliktów i obsługiwać je w razie potrzeby.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.Parameter" /> wartości, które są przekazywane do aktualizowania, wstawiania lub operacja usuwania są konwertowane automatycznie z <see langword="null" /> do <see cref="F:System.DBNull.Value" /> wartość o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
        <value>
          <see langword="true" />, jeśli <see langword="null" /> wartości w <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektów przekazany do <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu są konwertowane na <see cref="F:System.DBNull.Value" /> wartości; w przeciwnym razie wartość <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konwertowanie nie `null` do <xref:System.DBNull.Value> wartości może spowodować błędy w czasie wykonywania. Użyj <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> Właściwość wskazująca, czy <xref:System.Web.UI.WebControls.Parameter> wartości, które są przekazywane do aktualizowania, wstawiania lub operacja usuwania są konwertowane automatycznie z `null` do <xref:System.DBNull.Value> wartość o <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę klasy, która <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formant używa parametru do aktualizacji, Wstaw lub usuwanie danych operację, zamiast przekazywanie poszczególne wartości z formantu powiązanego z danymi.</summary>
        <value>Częściowo lub w pełni kwalifikowaną nazwę klasy określający typ obiektu który <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> można użyć jako parametru dla <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />, lub <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operacji. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast określania kilka parametrów, które są przekazywane do <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metod, można utworzyć jeden obiekt, który agreguje wiele wartości pól danych. Ten jeden obiekt jest przekazywany do metody, zamiast kilku parametrów.  
  
 Domyślne zachowanie <xref:System.Web.UI.WebControls.ObjectDataSource> jest formant, który jest powiązany z kontrolki powiązania danych formantu powiązanego z danymi utworzoną za pomocą <xref:System.Web.UI.WebControls.Parameter> obiekt dla każdego parametru w źródle danych. Jeśli obiekt biznesowy ma wiele pól, wynikowy metoda również ma wiele pól. <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Właściwość umożliwia określenie typu, który ma właściwość dla każdego pola danych. Następnie zamiast przekazywanie kilka parametrów, metody, środowisko uruchomieniowe tworzy jeden obiekt i ustawia wszystkie jego właściwości. Ten jeden obiekt jest dodawana do kolekcję parametrów dla wywołania metody.  
  
 Typ, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość musi mieć domyślnego konstruktora, który nie ma parametrów, więc <xref:System.Web.UI.WebControls.ObjectDataSource> formantu można utworzyć wystąpienia typu. Typ musi mieć również można ustawić właściwości, które umożliwiają <xref:System.Web.UI.WebControls.ObjectDataSource> formantu, aby wypełnić obiekt z wartościami, które są przekazywane z formantu powiązanego z danymi. Nazwy właściwości na <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli powinny pasować nazwy parametru wartości, które są przekazywane przez formant powiązany z danymi.  
  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> ustawiono właściwość i <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzony z kontrolką powiązane z danymi, metody, które są określone przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości musi mieć jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.OverwriteChanges> wartość określoną przez metodę <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość musi mieć jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość określoną przez metodę <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość musi mieć dwa parametry typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. Pierwszy parametr zawiera oryginalnych wartości; drugi parametr zawiera nowe wartości.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
   
  
## Examples  
 Sekcja zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak implementuje typu, który łączy wszystkie wartości parametrów w jeden obiekt, za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. Drugi przykładowy kod przedstawia strony sieci Web, która używa dwóch klas, które są używane w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano, jak implementuje typu, który łączy wszystkie wartości parametrów w jeden obiekt, za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. Wybierz metodę `AggregateData` klasy zwraca <xref:System.Data.DataTable> obiektu z kolumnami o nazwie `Name` i `Number`. Podobnie `NewData` klasa definiuje dwie właściwości odczytu/zapisu, `Name` i `Number`. `Insert` Metody `AggregateData` klasy przyjmuje jeden parametr typu `NewData`. `TypeName` Właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> ustawiono `AggregateData` i <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość jest ustawiona na `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 Poniższy przykład kodu pokazuje strony sieci Web, która używa dwóch klas, które są używane w poprzednim przykładzie kodu.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację usuwania, wywołując metodę identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> właściwość z parametrami, które znajdują się w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy usunięte z podstawowej magazynu danych, jeśli <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> właściwość <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> jest ustawiany w <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> zdarzeń; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń zbadać wartości parametrów i wykonać wszelkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operacji. Aby wykonać operację usuwania <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiekt używa odbicia do utworzenia wystąpienia obiektu, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości. Następnie wywołuje metodę, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości, za pomocą powiązane <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> właściwości. Jeśli parametry usunięcia pochodzą z formantu skojarzony z danymi, nazwy parametrów zostanie utworzony zgodnie z <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości. Po <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzenia, sprawdź, czy wszystkie wartości zwrotnych, parametry wyjściowe i wyjątków i wykonać wszelkie przetwarzania końcowego.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Metody deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> metody <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
## <a name="data-bound-controls"></a>Formanty powiązane z danymi  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzony z formantu powiązanego z danymi, takie jak <xref:System.Web.UI.WebControls.GridView> kontroli, nie jest konieczne do wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metody z kodu strony. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Metoda jest wywoływana zamiast bezpośrednio przez formant powiązany z danymi.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operacja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzeń zbadanie wartości zwracanych wartości lub parametry wyjściowe lub w celu ustalenia, czy wystąpił wyjątek po <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operacja została ukończona. Wartość zwrotna, parametrów wyjściowych i właściwości obsługi wyjątków są dostępne z <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Można użyć <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiektu do zwrócenia liczbę wierszy, które zostały usunięte z <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metody. Aby to zrobić, ustaw <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> właściwości. Jeśli liczba usuniętych wierszy jest zwracany z metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwość, wartość jest dostępna z <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiektu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. Początkowo <xref:System.Web.UI.WebControls.GridView> kontrolka ma wyświetlać zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku, operacja usuwania jest wykonywane przy użyciu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed wykonaniem operacji i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzenia po ukończeniu tej operacji do wykonania obsługi wyjątków. W tym przykładzie kodu Jeśli `NorthwindDataException` jest zgłoszony, jest on obsługiwany przez `NorthwindEmployeeDeleted` metody.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> kontroli wywołuje do usunięcia danych.</summary>
        <value>Ciąg, który reprezentuje nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> używa do usunięcia danych. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt biznesowy zakłada, że można usunąć jeden rekord danych w czasie, a nie w partii.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Upewnij się, że nazwy parametrów skonfigurowany dla <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji odpowiada nazwy kolumn, które są zwracane przez metody select.  
  
## <a name="object-lifetime"></a>Okres istnienia obiektu  
 Metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwość może być metodą wystąpienia lub `static` (`Shared` w języku Visual Basic) — metoda. Jeśli jest metodą wystąpienia obiektu biznesowego jest tworzony i zniszczona zawsze <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> nosi nazwę właściwości. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia do pracy z obiektem biznesowym przed <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> nosi nazwę właściwości. Można również obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie, które jest wywoływane po wykonaniu <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> nosi nazwę właściwości. Jeśli obiekt biznesowy implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana przed obiekt zostanie zniszczony. Jeśli metoda jest `static` (`Shared` w języku Visual Basic) metodę, obiekt biznesowy nigdy nie jest tworzony i nie może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia.  
  
## <a name="parameter-merging"></a>Parametr scalania  
 Parametry są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji z trzech źródeł:  
  
-   Z formantu powiązanego z danymi w czasie wykonywania.  
  
-   Z `DeleteParameters` elementu deklaratywnie.  
  
-   Z `Deleting` metody deklaratywnie.  
  
 Po pierwsze, parametry, które są generowane z formantów powiązanych z danymi są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. Na przykład jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.GridView> formantu, który ma kolumny `Name` i `Number`, parametry `Name` i `Number` są dodawane do kolekcji. Zależy od dokładną nazwę parametru <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości. Typ danych z tych parametrów jest `string`. Następnie, parametry, które są wymienione w `DeleteParameters` elementu zostaną dodane. Jeśli parametr w `DeleteParameters` można znaleźć elementu z taką samą nazwę jak parametr, który jest już <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji, istniejące parametru jest modyfikowane parametr, który określono w `DeleteParameters` elementu. Zazwyczaj służy do modyfikowania typu danych w parametrze. Można ponadto programowego dodawania i usuwania parametrów w <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzenie, które występuje przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> uruchomić metody. Metoda zostanie rozwiązany po parametry są łączone ze sobą. Metody rozpoznawania została szczegółowo opisana w następnej sekcji.  
  
## <a name="method-resolution"></a>Rozdzielczość — metoda  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metoda jest wywoływana, pola danych z formantu powiązanego z danymi, parametry, które zostały utworzone deklaratywnie w `DeleteParameters` elementu i parametrów, które zostały dodane w <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> obsługi zdarzeń są wszystkie scalane. (Aby uzyskać więcej informacji, zobacz poprzedniej sekcji). <xref:System.Web.UI.WebControls.ObjectDataSource> Obiektu następnie próbuje odnaleźć metody do wywołania. Najpierw szuka co najmniej jedną metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości. Jeśli nie znaleziono, <xref:System.InvalidOperationException> wyjątku. Jeśli zostanie znaleziony dopasowanie, następnie szuka pasujące nazwy parametru. Na przykład, załóżmy, że typ, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwość ma dwie metody o nazwie `DeleteARecord`. Jeden `DeleteARecord` ma jeden parametr `ID`, a drugi `DeleteARecord` zawiera dwa parametry `Name` i `Number`. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcja zawiera tylko jeden parametr o nazwie `ID`, `DeleteARecord` metody za pomocą tylko `ID` nosi nazwę parametru. Typ parametru nie jest zaznaczona w rozpoznawania metod. Kolejność parametrów nie ma znaczenia.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość jest ustawiona, metoda zostanie rozwiązany w inny sposób. <xref:System.Web.UI.WebControls.ObjectDataSource> Szuka metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwość, która przyjmuje jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. W takim przypadku nazwa parametru nie ma znaczenia.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. Początkowo <xref:System.Web.UI.WebControls.GridView> kontrolka ma wyświetlać zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku, operacja usuwania jest wykonywane przy użyciu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed wykonaniem operacji i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzenia po ukończeniu tej operacji do wykonania obsługi wyjątków. W tym przykładzie Jeśli `NorthwindDataException` jest zgłoszony, jest on obsługiwany przez `NorthwindDataException` delegowanie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> metody.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy i typy parametrów, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> nazwy i typy parametrów w kolekcji musi być zgodna <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> podpis metody. Dotyczy nazw parametrów <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości i czy jest rozróżniana wielkość liter. Parametry w kolekcji są zależne od danych formantu powiązanego z danymi, parametrów, które są określone deklaratywnie oraz parametry, które są dodawane programowo. Aby uzyskać więcej informacji, zobacz "Parametr scalanie" w <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> i [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. Początkowo <xref:System.Web.UI.WebControls.GridView> kontrolka ma wyświetlać zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzenie jest wywoływane z dwoma parametrami. Jeden parametr `EmpID`, pochodzi z <xref:System.Web.UI.WebControls.DataGrid> kontroli i jest oparty na <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> właściwości. Inne parametr pochodzi z deklaratywne <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> właściwości. `EmployeeLogic` Klasy przeciążenia `DeleteEmployee` metody. Trwa przeciążeniami `NorthwindEmployee` parametr i innych przyjmuje <xref:System.Int32> parametru o nazwie `anID`. W <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń, wpisy <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> właściwości są dostosowane do uwzględnienia tylko jeden parametr o nazwie `anID` o wartości od `original_EmpID`. Gdy program obsługi zdarzeń istnieje, dopasowywania `DeleteEmployee` metoda jest wywoływana.  
  
 Poniższy przykład kodu pokazuje strony sieci Web, który wyświetla <xref:System.Web.UI.WebControls.DataGrid> kontroli i uchwytów <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzenie, aby zainicjować dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.ObjectDataSource> formant wykonuje operację usuwania. Parametry są dostępne jako <xref:System.Collections.IDictionary> kolekcji, który jest dostępny przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> obiektu.  
  
 Możesz anulować operację usuwania przez ustawienie <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> do `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. Początkowo <xref:System.Web.UI.WebControls.GridView> kontrolka ma wyświetlać zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku, operacja usuwania jest wykonywane przy użyciu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed wykonaniem operacji i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzenia po ukończeniu tej operacji do wykonania obsługi wyjątków. W tym przykładzie kodu Jeśli `NorthwindDataException` jest zgłoszony, jest on obsługiwany przez `NorthwindEmployeeDeleted` metody.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu jest włączone buforowanie danych.</summary>
        <value>
          <see langword="true" /> Jeśli do kontroli źródła danych; jest włączone buforowanie danych w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, wywołań <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metodę pobierania danych z pamięci podręcznej, a nie <xref:System.Web.UI.WebControls.ObjectDataSource> tworzenia wystąpienia obiektu biznesowego i wywołanie metody jej danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda pobiera dane z obiektu biznesowego, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która pobieranie rekordów z tabeli pracowników w bazie danych Northwind.  
  
 W pierwszym przykładzie strony sieci Web, która zawiera dwa <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, <xref:System.Web.UI.WebControls.DropDownList> kontroli, a <xref:System.Web.UI.WebControls.DetailsView> formantu. Pierwszy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DropDownList> formantu są używane do pobierania i wyświetlania nazwy pracowników z bazy danych. Drugi <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DetailsView> formantu są używane do pobierania i wyświetlania rekordu pracownika, który jest wybierany przez użytkownika.  
  
 Buforowanie jest włączone dla <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W związku z tym każdy rekord są pobierane tylko jeden raz z bazy danych. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Właściwość jest ustawiona na "EmployeeDetails", ale dowolną wartością ciągu może działać jako klucz. Strona sieci Web zawiera również <xref:System.Web.UI.WebControls.Button> formant, który użytkownik może kliknąć wygaśnie buforowane dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.Control.Load> zdarzeń i obsługi dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenie <xref:System.Web.UI.WebControls.Button> formantu. <xref:System.Web.UI.Control.Load> Obsługi zdarzeń tworzy element pamięci podręcznej za pomocą klucza ustawioną <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> wartość. <xref:System.Web.UI.WebControls.Button.Click> Obsługi zdarzeń usuwa element pamięci podręcznej, którego klucz jest równa <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> wartość. Po usunięciu elementu pamięci podręcznej, wszystkie buforowane dane, które jest zależna od klucza wygasł.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 W trzecim przykładzie klasy dostępu do danych, która współdziała z bazy danych Northwind. Klasa używa LINQ do badania tabeli pracowników. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje bazy danych Northwind i tabeli pracowników. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> Właściwość jest ustawiona na <see langword="true" /> gdy metoda określona przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> zwraca właściwość <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant źródła danych obsługuje stronicowania w zestawie danych pobieranych przez go.</summary>
        <value>
          <see langword="true" /> w przypadku formantu źródła danych obsługuje stronicowania przez dane, które pobiera; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stronicowanie przez <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli jest obsługiwany dzięki ustawieniu <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwości <xref:System.Web.UI.WebControls.ObjectDataSource> i definiowanie wybierz metodę obiektu biznesowego z odpowiednich parametrów. Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji zawiera dwa dodatkowe parametry pierwszy wiersz, który jest wymagane i liczbę wierszy, które są wymagane. Te dwa parametry są nazywane zgodnie z definicją w <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> właściwości. `Select` Metoda powinna zwrócić żądanej liczby wierszy, zaczynając od określonego indeksu. Ponieważ danych nie może być równomiernie podzielić przez rozmiar strony, Ostatnia strona może zawierać mniej wierszy. W związku z tym liczbę wierszy, które są żądane jest rzeczywiście maksymalną liczbę wierszy, które są zwracane.  
  
 Włączenie stronicowania w skojarzonym formancie powiązane z danymi formantu powiązanego z danymi wywołuje `Select` metody z początkowy indeks i liczba wierszy, które są wymagane. Ponadto jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość jest ustawiona, formantu powiązanego z danymi wywołuje metodę przed renderowaniem formantami modułu stronicowania. Na przykład jeśli <xref:System.Web.UI.WebControls.GridView> formant ma włączono o rozmiarze strony 5 i metodę, która jest określona przez stronicowania <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość zwraca 20, wyświetlane są tylko 4 strony w pagera.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która umożliwia użytkownikowi pobranie liczbę rekordów są wyświetlane na stronie.  
  
 Strona sieci Web zawiera <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, których <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwość jest ustawiona na nazwę metody, która zwraca wartość całkowita liczba rekordów w zapytaniu. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwości i <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> właściwości są ustawione na nazwy parametrów, które są używane w metodzie Select. Strona zawiera również <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.DropDownList> formantu. Kod w zestawach obsługi <xref:System.Web.UI.WebControls.GridView.PageSize%2A> właściwości wybranej przez użytkownika.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 W trzecim przykładzie klasa dostępu do danych, która pobiera dane z tabeli Klienci. Zawiera metodę o nazwie `GetSubsetOfEmployees`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Przykład zawiera także metodę o nazwie `GetEmployeeCount`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Klasa używa LINQ do badania tabeli Klienci. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli klientów. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie filtrowania, która jest stosowana, gdy metoda, która jest określona przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> nosi nazwę właściwości.</summary>
        <value>Ciąg, który reprezentuje wyrażenie filtrowania, która jest stosowana, gdy dane są pobierane przy użyciu metody lub funkcji identyfikowane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje filtrowania danych tylko wtedy, gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda zwraca <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu.  
  
 Składnię, która jest używana do <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwość jest wyrażenie stylu ciągu formatu. Składnia wyrażenia filtru jest taka sama składnia jest akceptowane przez <xref:System.Data.DataColumn.Expression%2A> właściwości. Jeśli dodasz parametry <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji, mogą również obejmować symbole zastępcze formatu ciągu. Na przykład obejmować `"{0}"` w wyrażeniu do zastąpienia dla wartości parametrów. Symbole zastępcze są zamieniane zgodnie z indeksem parametru w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji.  
  
 Można uwzględnić parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości. Jeśli typ parametru jest typu ciąg lub znak, ujmij parametru w pojedynczy cudzysłów. Znaki cudzysłowu nie są wymagane, jeśli parametr jest typu liczbowego.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Kolekcja zawiera parametry, które są oceniane pod kątem symbole zastępcze, które znajdują się w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
> [!NOTE]
>  Należy sprawdzić, czy wszystkie wartości parametru filtru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru w wyrażeniu filtru i stosuje je do <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu, który jest zwracany przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości, aby ograniczyć liczbę elementów, które są zwracane, należy sprawdzić wartości parametrów, zanim nastąpi jego filtrowanie ze względów bezpieczeństwa.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych filtrowanych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formant do pobierania danych z obiektem biznesowym warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli dane można filtrować tylko wtedy, gdy metoda, która pobiera dane pobiera go jako <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu. Z tego powodu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość określa metodę obiektu biznesowych, która pobiera dane jako <xref:System.Data.DataSet>.  
  
 Przykładowy kod składa się z <xref:System.Web.UI.WebControls.TextBox> kontroli, <xref:System.Web.UI.WebControls.GridView> kontroli, <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, a **przesyłania** przycisk. Domyślnie <xref:System.Web.UI.WebControls.TextBox> jest wypełniana nazwę jednego z pracowników Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Wyświetla informacje dotyczące pracowników, który jest identyfikowane przez nazwę w <xref:System.Web.UI.WebControls.TextBox>. Aby pobrać dane na innego pracownika, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox>, a następnie kliknij przycisk **przesyłania** przycisk.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwość określa wyrażenie, które jest używane do filtrowania danych, które są pobierane za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Używa symbole zastępcze parametrów, które są oceniane z parametrami, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie symbol zastępczy parametru jest ograniczone przez pojedynczy cudzysłów, ponieważ typ parametru jest typu ciąg, który może zawierać spacji. Typ parametru jest typu liczbowego lub daty, ograniczający znaki cudzysłowu nie są wymagane.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Poniższy przykładowy kod jest przykładem obiekt biznesowym warstwy środkowej, który używa w poprzednim przykładzie kodu. Przykładowy kod składa się z dwóch klas podstawowych:  
  
-   `EmployeeLogic` Klasy, która jest klasa, która obejmuje logikę biznesową.  
  
-   `NorthwindEmployee` Klasy, która jest klasa modelu, który zawiera tylko podstawowe funkcje, które są wymagane do załadowania i utrwalenia danych z warstwy danych.  
  
 Dla uproszczenia `EmployeeLogic` klasy tworzy statyczny zestaw danych, zamiast pobierania danych z warstwy danych. Jest również przydatne na przykład, ponieważ zależy od należy podać pełną nazwę pracownika Northwind Traders, aby zademonstrować filtrowania próbki. Pełny przykład pracy można skompilować i użyć tych klas przykładowy kod formularzy sieci Web, które zostały opublikowane.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> Właściwość została ustawiona i <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> metoda nie zwraca <see cref="T:System.Data.DataSet" /> lub <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed operacją filtru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> zdarzeń w celu wykonania operacji sprawdzania poprawności filtru wartości parametru przed <xref:System.Web.UI.WebControls.ObjectDataSource> formant wykonuje operację filtru. Anuluj wybranej operacji, ustawiając <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> do `true`. Zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwość jest ustawiona.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> Zdarzeń deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru filtru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru w wyrażeniu filtru i stosuje je do <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu, który jest zwracany przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości, aby ograniczyć liczbę elementów, które są zwracane, należy sprawdzić wartości parametrów, zanim nastąpi jego filtrowanie ze względów bezpieczeństwa.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są skojarzone z żadnych symboli zastępczych parametru w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> ciągu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierającą zestaw parametrów skojarzonych z dowolnego zastępcze parametru w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje filtrowania danych tylko wtedy, gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda zwraca <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu.  
  
 Składnię, która jest używana do <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> wyrażenie stylu ciągu formatu. Składnia wyrażenia filtru jest taka sama składnia jest akceptowane przez <xref:System.Data.DataColumn.Expression%2A> właściwości. Jeśli dodasz parametry <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji, mogą również obejmować symbole zastępcze formatu ciągu. Na przykład obejmować `"{0}"` w wyrażeniu do zastąpienia dla wartości parametrów. Symbole zastępcze są zamieniane zgodnie z indeksem parametru w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji.  
  
 Można uwzględnić parametry w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości. Jeśli parametr jest typu ciąg lub znak, ujmij parametru w pojedynczy cudzysłów. Znaki cudzysłowu nie są wymagane, jeśli parametr jest typu liczbowego.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano sposób wyświetlania danych filtrowanych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu do pobierania danych z obiektem biznesowym warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki. W drugim przykładzie kodu przedstawiono przykład obiektu biznesowym warstwy środkowej, który jest używany w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych filtrowanych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formant do pobierania danych z obiektem biznesowym warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli dane można filtrować tylko wtedy, gdy metoda, która pobiera dane pobiera go jako <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu. Z tego powodu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość określa metodę obiektu biznesowych, która pobiera dane jako <xref:System.Data.DataSet>.  
  
 Przykładowy kod składa się z <xref:System.Web.UI.WebControls.TextBox> kontroli, <xref:System.Web.UI.WebControls.GridView> kontroli, <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, a **przesyłania** przycisk. Domyślnie <xref:System.Web.UI.WebControls.TextBox> jest wypełniana nazwę jednego z pracowników Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Wyświetla informacje dotyczące pracowników, który jest identyfikowane przez nazwę w <xref:System.Web.UI.WebControls.TextBox>. Do pobierania danych na innemu pracownikowi w <xref:System.Web.UI.WebControls.TextBox>, należy wprowadzić pełną nazwę pracownika, a następnie kliknij przycisk **przesyłania** przycisku.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwość określa wyrażenie, które jest używane do filtrowania danych, które są pobierane przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Używa symbole zastępcze parametrów, które są oceniane z parametrami, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie symbol zastępczy parametru jest ograniczone przez pojedynczy cudzysłów, ponieważ typ parametru jest typu ciąg, który może zawierać spacji. Typ parametru jest typu liczbowego lub daty, ograniczający znaki cudzysłowu nie są wymagane. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Kolekcja zawiera jeden parametr <xref:System.Web.UI.WebControls.FormParameter> obiekt, który jest powiązany z <xref:System.Web.UI.WebControls.TextBox> formantu.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru filtru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru w wyrażeniu filtru i stosuje je do <xref:System.Data.DataView> obiektu, który jest zwracany przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody. Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości, aby ograniczyć liczbę elementów, które są zwracane, należy sprawdzić wartości parametrów, zanim nastąpi jego filtrowanie ze względów bezpieczeństwa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Poniższy przykładowy kod jest przykładem obiekt biznesowym warstwy środkowej, który używa w poprzednim przykładzie kodu. Przykładowy kod składa się z dwóch klas podstawowych:  
  
-   `EmployeeLogic` Klasy, która jest klasa, która obejmuje logikę biznesową.  
  
-   `NorthwindEmployee` Klasy, która jest klasa modelu, który zawiera tylko podstawowe funkcje, które są wymagane do załadowania i utrwalenia danych z warstwy danych.  
  
 Dla uproszczenia `EmployeeLogic` klasy tworzy statyczny zestaw danych, zamiast pobierania danych z warstwy danych. Jest również przydatne na przykład, ponieważ zależy od należy podać pełną nazwę pracownika Northwind Traders, aby zademonstrować filtrowania próbki. Pełny przykład pracy można skompilować i użyć tych klas przykładowy kod formularzy sieci Web, które zostały opublikowane.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Możesz ustawić <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> właściwości i <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> metoda nie zwraca <see cref="T:System.Data.DataSet" /> lub <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania. Ponieważ <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> obsługuje tylko jeden widok <c>viewName</c> jest ignorowana.</param>
        <summary>Pobiera widok źródła danych o nazwie skojarzony z kontroli źródła danych.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> o nazwie <see langword="DefaultView" /> skojarzony z <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje widoku źródła danych tylko jeden. Podobnie jak w przypadku wszystkich obiektów widoku źródła danych, <xref:System.Web.UI.WebControls.ObjectDataSourceView> , który jest powiązany z danymi kontroli źródła definiuje jej możliwości, wykonuje całą pracę, należy pobrać dane z źródłowy magazyn danych, którą wykonuje operacje, takie jak sortowania, Wstawianie, usuwanie i aktualizowanie.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Metoda jest przeznaczona do wywoływania przez formanty powiązane z danymi nie w kodzie strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określony <paramref name="viewName" /> jest <see langword="null" /> lub coś innego niż <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę wyświetlanie obiektów, które są skojarzone z <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje tylko jeden widok o nazwie `DefaultView`, na jej odpowiednie dane. <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Metoda zwraca kolekcję jeden element o tej nazwie jeden widok.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Metoda jest przeznaczona do wywoływania przez formanty powiązane z danymi nie w kodzie strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację wstawiania, wywołując metodę identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> właściwości oraz innych parametrów w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy wstawionych do źródłowy magazyn danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzeń zbadać wartości parametrów i wykonać wszelkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacji. Aby wykonać operację wstawiania, <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiekt używa odbicia do utworzenia wystąpienia obiektu, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości. Następnie wywołuje metodę, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwości, za pomocą powiązane <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> właściwości. Po <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> zdarzenia, sprawdź, czy wszystkie wartości zwrotnych, parametry wyjściowe i wyjątków i wykonać wszelkie przetwarzania końcowego.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Metody deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> metody <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Formanty powiązane z danymi  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource> obiekt jest skojarzony z kontrolką powiązane z danymi, takie jak <xref:System.Web.UI.WebControls.GridView> kontroli, nie jest konieczne do wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metody z kodu strony. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Metoda jest wywoływana zamiast bezpośrednio przez formant powiązany z danymi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> operacja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> zdarzeń zbadanie wartości zwracanych wartości lub parametry wyjściowe lub w celu ustalenia, czy wystąpił wyjątek po <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacja została ukończona. Wartość zwrotna, parametrów wyjściowych i właściwości obsługi wyjątków są dostępne z <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzenie, aby zainicjować dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.ObjectDataSource> formant wykonuje operację wstawiania. Parametry są dostępne jako <xref:System.Collections.IDictionary> kolekcji, który jest dostępny przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> obiektu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. W drugim przykładzie kodu przedstawiono przykład obiektu biznesowym warstwy środkowej, który jest używany w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. Początkowo <xref:System.Web.UI.WebControls.DetailsView> wyświetla nowy `NorthwindEmployee` rekordu wraz z automatycznie wygenerowanym **Wstaw** przycisku. Po wprowadzeniu danych w zakresie <xref:System.Web.UI.WebControls.DetailsView> sterowania, kliknij przycisk **Wstaw** przycisku. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Właściwość identyfikuje, którego metoda wykonuje operację wstawiania.  
  
 W tym przykładzie `UpdateEmployeeInfo` metoda jest używana do wykonywania instrukcji insert; wymaga jednak `NorthwindEmployee` parametru do wstawiania danych. Z tego powodu kolekcji ciągów, które <xref:System.Web.UI.WebControls.DetailsView> sterowania przekazywany automatycznie jest niewystarczająca. `NorthwindEmployeeInserting` Delegat jest <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> obiekt, który obsługuje <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzeń i umożliwia manipulowanie parametry wejściowe przed <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> działanie będzie kontynuowane. Ponieważ `UpdateEmployeeInfo` metoda wymaga `NorthwindEmployee` jedną jest tworzony przy użyciu kolekcji ciągów i jest dodawany do obiektów jako parametru, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> kolekcji przy użyciu nazwy parametru (`ne`), która metoda oczekuje. Może wykonywać czynności, takich jak te w przypadku korzystania z istniejącym obiektem warstwy środkowej jako źródła danych z typów i metod, które nie są zaprojektowane specjalnie dla <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacja została wykonana, metody, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> nosi nazwę właściwości. Jeśli `Insert` metoda obiektu ma podpis metody, która zawiera parametry, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Kolekcja musi zawierać parametr o nazwach odpowiadających parametry podpisu metody dla <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metody pomyślnie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Poniższy przykładowy kod jest przykładem obiekt biznesowym warstwy środkowej, który używa w poprzednim przykładzie kodu. Przykładowy kod składa się z dwóch klas podstawowych:  
  
-   `EmployeeLogic` Klasy, która jest klasą bezstanowych, która obejmuje logikę biznesową.  
  
-   `NorthwindEmployee` Klasy, która jest klasa modelu, który zawiera tylko podstawowe funkcje, które są wymagane do załadowania i utrwalenia danych z warstwy danych.  
  
 Dodatkowe `NorthwindDataException` klasy jest dostarczane jako udogodnienie. Pełny przykład pracy możesz skompilować i używać tych klas. `UpdateEmployeeInfo` Metoda nie jest całkowicie zaimplementowana, dlatego możesz nie wstawia dane do bazy danych Northwind Traders po eksperymentować w tym przykładzie.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> kontroli wywołuje do wstawiania danych.</summary>
        <value>Ciąg, który reprezentuje nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> używane do wstawiania danych. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt biznesowy zakłada, że aby wstawić jeden rekord danych w czasie, a nie w partii.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu.  
  
## <a name="object-lifetime"></a>Okres istnienia obiektu  
 Metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwość może być metodą wystąpienia lub `static` (`Shared` w języku Visual Basic) — metoda. Jeśli jest metodą wystąpienia obiektu biznesowego jest tworzone i niszczone każdorazowo z metodą określoną przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> nosi nazwę właściwości. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia do pracy z obiektem biznesowym przed <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> nosi nazwę właściwości. Można również obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie, które jest wywoływane po wykonaniu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> nosi nazwę właściwości. Jeśli obiekt biznesowy implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana przed obiekt zostanie zniszczony. Jeśli metoda jest `static` (`Shared` w języku Visual Basic), nigdy nie utworzono obiektu biznesowego i nie może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia.  
  
## <a name="parameter-merging"></a>Parametr scalania  
 Parametry są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji z trzech źródeł:  
  
-   Z formantu powiązanego z danymi w czasie wykonywania.  
  
-   Z `InsertParameters` elementu deklaratywnie.  
  
-   Z `Inserting` metody programowo.  
  
 Po pierwsze, parametry, które są generowane z formantów powiązanych z danymi są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji. Na przykład jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.GridView> formantu, który ma kolumny `Name` i `Number`, parametry `Name` i `Number` są dodawane do kolekcji. Typ danych z tych parametrów jest `string`. Następnie, parametry, które są wymienione w `InsertParameters` elementu zostaną dodane. Jeśli parametr w `InsertParameters` można znaleźć elementu z taką samą nazwę jak parametr, który jest już <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji, istniejące parametru jest modyfikowane parametr, który określono w `InsertParameters` elementu. Zazwyczaj służy do modyfikowania typu danych w parametrze. Można ponadto programowego dodawania i usuwania parametrów w <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzenie, które występuje przed <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> uruchomić metody. Metoda zostanie rozwiązany po parametry są łączone ze sobą. Metody rozpoznawania została szczegółowo opisana w następnej sekcji.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwości.  
  
## <a name="method-resolution"></a>Rozdzielczość — metoda  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metoda jest wywoływana, pola danych z formantu powiązanego z danymi, parametry, które zostały utworzone deklaratywnie w `InsertParameters` elementu i parametrów, które zostały dodane w <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> obsługi zdarzeń są wszystkie scalane. (Aby uzyskać więcej informacji, zobacz poprzedniej sekcji). <xref:System.Web.UI.WebControls.ObjectDataSource> Obiektu następnie próbuje odnaleźć metody do wywołania. Najpierw szuka co najmniej jedną metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwości. Jeśli nie znaleziono, <xref:System.InvalidOperationException> wyjątku. Jeśli zostanie znaleziony dopasowanie, następnie szuka pasujące nazwy parametru. Załóżmy na przykład, typu, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwość ma dwie metody o nazwie `InsertARecord`. Jeden `InsertARecord` ma jeden parametr `ID`, a drugi `InsertARecord` zawiera dwa parametry `Name` i `Number`. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcja zawiera tylko jeden parametr o nazwie `ID`, `InsertARecord` metody za pomocą tylko `ID` nosi nazwę parametru. Typ parametru nie jest zaznaczona w rozpoznawania metod. Kolejność parametrów nie ma znaczenia.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość jest ustawiona, metoda zostanie rozwiązany w inny sposób. <xref:System.Web.UI.WebControls.ObjectDataSource> Szuka metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwość, która przyjmuje jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. W takim przypadku nazwa parametru nie ma znaczenia.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. W drugim przykładzie kodu przedstawiono przykład obiektu biznesowym warstwy środkowej, który jest używany w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. Początkowo <xref:System.Web.UI.WebControls.DetailsView> wyświetla nowy `NorthwindEmployee` rekordu wraz z automatycznie wygenerowanym **Wstaw** przycisku. Po wprowadzeniu danych w zakresie <xref:System.Web.UI.WebControls.DetailsView> sterowania, kliknij przycisk **Wstaw** przycisku. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Właściwość identyfikuje, którego metoda wykonuje operację wstawiania.  
  
 W tym przykładzie `UpdateEmployeeInfo` metoda jest używana do wykonywania instrukcji insert; wymaga jednak `NorthwindEmployee` parametru do wstawiania danych. Z tego powodu kolekcji ciągów, które <xref:System.Web.UI.WebControls.DetailsView> sterowania przekazywany automatycznie jest niewystarczająca. `NorthwindEmployeeInserting` Delegat jest <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> obiekt, który obsługuje <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zdarzeń i umożliwia manipulowanie parametry wejściowe przed <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> działanie będzie kontynuowane. Ponieważ `UpdateEmployeeInfo` metoda wymaga `NorthwindEmployee` jedną jest tworzony przy użyciu kolekcji ciągów i jest dodawany do obiektów jako parametru, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> kolekcji przy użyciu nazwy parametru (`ne`), która metoda oczekuje. Może wykonywać czynności, takich jak te w przypadku korzystania z istniejącym obiektem warstwy środkowej jako źródła danych z typów i metod, które nie są zaprojektowane specjalnie dla <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacja została wykonana, metody, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> nosi nazwę właściwości. Jeśli `Insert` metoda obiektu ma podpis metody, która zawiera parametry, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Kolekcja musi zawierać parametr o nazwach odpowiadających parametry podpisu metody dla <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metody pomyślnie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Poniższy przykładowy kod jest przykładem obiekt biznesowym warstwy środkowej, który używa w poprzednim przykładzie kodu. Przykładowy kod składa się z dwóch klas podstawowych:  
  
-   `EmployeeLogic` Klasy, która jest klasą bezstanowych, która obejmuje logikę biznesową.  
  
-   `NorthwindEmployee` Klasy, która jest klasa modelu, który zawiera tylko podstawowe funkcje, które są wymagane do załadowania i utrwalenia danych z warstwy danych.  
  
 Dodatkowe `NorthwindDataException` klasy jest dostarczane jako udogodnienie. Pełny przykład pracy możesz skompilować i używać tych klas. `UpdateEmployeeInfo` Metoda nie jest całkowicie zaimplementowana, dlatego możesz nie wstawia dane do bazy danych Northwind Traders po eksperymentować w tym przykładzie.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> właściwości.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez metodę identyfikowane przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy i typy parametrów, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji muszą być zgodne, nazwy i typy parametrów, które znajdują się w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> podpis właściwości. Nazwy parametrów jest uwzględniana wielkość liter. Podczas pracy z formantów powiązanych z danymi, które Podaj parametry, takie jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formantów, <xref:System.Web.UI.WebControls.ObjectDataSource> żadnych parametrów, które zostały jawnie określone w kolekcji parametrów, które są scalane formantu udostępniane przez formant powiązany z danymi. Jest to ważne, ponieważ formanty powiązane z danymi zawsze podawaj ich parametrów jako <xref:System.String> typów, a jeśli podpis metody zawiera liczbowego lub typu Data, musisz jawnie obejmują parametru w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji poprawnego typu. W przeciwnym razie <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli próbuje rzutowania zgodnie z typem, który jest definiowana za pomocą parametrów w kolekcji parametrów. Aby uzyskać więcej informacji, zobacz [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. Drugim przykładzie kodu przedstawiono przykładem implementacji `Insert` metodę, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.DetailsView> formantu do wstawiania danych. Początkowo <xref:System.Web.UI.WebControls.DetailsView> wyświetla pola tekstowe, w których można wprowadzać dane nowej `NorthwindEmployee` rekordu wraz z automatycznie wygenerowanym **Wstaw** przycisku. Po wprowadzeniu danych w zakresie <xref:System.Web.UI.WebControls.DetailsView> sterowania, kliknij przycisk **Wstaw** przycisku. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Właściwość identyfikuje, którego metoda wykonuje operację wstawiania.  
  
 Jeśli klikniesz przycisk **Wstaw** przycisku, operacja odbywa się za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji. W tym przykładzie kodu jeden parametr jest określony w <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji, która odpowiada przełożonego identyfikatora. Wynika to z faktu, nawet jeśli jest wyświetlany identyfikator <xref:System.Web.UI.WebControls.GridView.Rows%2A> kolekcji dla <xref:System.Web.UI.WebControls.DetailsView> kontrolować jako <xref:System.Web.UI.WebControls.BoundField> obiektu, jest przekazywany jako ciąg, aby <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Dodając jawnie na <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> kolekcji z <xref:System.Web.UI.WebControls.Parameter.Type%2A> ustawioną właściwość <xref:System.TypeCode.Int32> wartość, zostanie przekazana prawidłowo przez <xref:System.Web.UI.WebControls.ObjectDataSource> do metody jako <xref:System.Int32>, a nie jako ciąg.  
  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operacja została wykonana, metody, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> nosi nazwę właściwości. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metoda obiektu ma podpis metody, która zawiera parametry, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Kolekcja musi zawierać parametrów, które mają nazwy, które są zgodne z parametrami podpisie metody dla <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> metody pomyślnie.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładem implementacji `Insert` metody, która używa w poprzednim przykładzie kodu. `InsertNewEmployeeWrapper` Metoda jest dodawana do `EmployeeLogic` obiektu warstwy środkowej, który znajduje się w <xref:System.Web.UI.WebControls.ObjectDataSource> Przegląd klasy, aby włączyć obiekt, aby łatwiej współpracować <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w scenariuszach sieci Web bez znacznej ponownego zapisywania, do rzeczywistych Logika biznesowa.  
  
 Aby uruchomić przykład, musisz mieć `NorthwindEmployee` klasy, która znajduje się w <xref:System.Web.UI.WebControls.ObjectDataSource> Przegląd klasy. Ten przykład przedstawia tylko sposób podłączania <xref:System.Web.UI.WebControls.ObjectDataSource> do metody obiektu biznesowych, która pobiera dane dla nowego rekordu bazy danych przy użyciu parametrów. Przykład nie dodać rekordy w bazie danych, ponieważ `Save` metody `NorthwindEmployee` klasy nie zawiera kod, aby zaktualizować bazę danych.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt zawierający wartości stanu zapisanego widoku formantu.</param>
        <summary>Ładuje wcześniej zapisany widok stanu <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontroli deweloperzy mogą przesłaniać tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> Metoda jest używana do ładowania widoku uprzednio zapisanego stanu <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> Metoda jest używana głównie przez deweloperów sterowania podczas rozszerzania <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę firm obiektu danych pobierania — metoda parametr, który służy do wskazywania liczbę rekordów do pobrania dla obsługę stronicowania źródła danych.</summary>
        <value>Nazwa <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> parametr, który służy do wskazywania liczbę rekordów do pobrania. Wartość domyślna to <c>"maximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwość jest używana do obsługi stronicowania źródła danych. Aby uzyskać informacje o sposobie stronicowania jest obsługiwana przez <xref:System.Web.UI.WebControls.ObjectDataSource> sterowania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która umożliwia użytkownikowi pobranie liczbę rekordów są wyświetlane na stronie.  
  
 Strona sieci Web zawiera <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, których <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwość jest ustawiona na nazwę metody, która zwraca wartość całkowita liczba rekordów w zapytaniu. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwości i <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> właściwości są ustawione na nazwy parametrów, które są używane w metodzie Select. Strona zawiera również <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.DropDownList> formantu. Kod w zestawach obsługi <xref:System.Web.UI.WebControls.GridView.PageSize%2A> właściwości wybranej przez użytkownika.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 W trzecim przykładzie klasa dostępu do danych, która pobiera dane z tabeli Klienci. Zawiera metodę o nazwie `GetSubsetOfEmployees`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Przykład zawiera także metodę o nazwie `GetEmployeeCount`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Klasa używa LINQ do badania tabeli Klienci. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli klientów. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po obiekt, który jest identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> utworzyć właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> zdarzeń, aby wywołać innych metod dla obiektu biznesowego, ustaw właściwości lub wykonywać inne inicjowania specyficzne dla obiektu biznesowego przed <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu wywołuje metodę firm obiektu danych można wykonać operacji danych . Odwołanie do obiektu jest dostępny po <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> obiektu.  
  
 Jeśli metoda identyfikowany do wykonania tej operacji danych jest `static` (`Shared` w języku Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> nigdy nie są generowane zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed obiekt, który jest identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> utworzyć właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli metoda identyfikowany do wykonania tej operacji danych jest `static` (`Shared` w języku Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> nigdy nie są generowane zdarzenia.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formant automatycznie wywołuje domyślny konstruktor obiektu biznesowego, można utworzyć wystąpienia przy użyciu odbicia. Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenie, aby jawnie wywołać konstruktora innego i ustawić wystąpienie obiektu, który powoduje <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> właściwości skojarzonego <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> obiektu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić informacje. Drugim przykładzie kodu przedstawiono obiektem biznesowym warstwy środkowej używanego w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić informacje. Użytkownik może działać na obiektu biznesowego, która jest bardzo kosztowna utworzyć (pod względem czasu i zasobów) dla każdej operacji danych, który wykonuje strony sieci Web. Jednym ze sposobów pracę z obiektem kosztowne może być na raz Utwórz wystąpienie, a następnie buforuje dla kolejnych operacji zamiast tworzenia i niszczenie go dla każdej operacji danych.  
  
> [!NOTE]
>  W aplikacji produkcyjnej mogą wystąpić wiele żądań jednocześnie przy użyciu tego samego wystąpienia. W związku z tym obiektem musi realizowane w sposób wątkowo.  
  
 W tym przykładzie kodu pokazano tego wzorca. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia w celu sprawdzenia pamięci podręcznej dla obiektu, a tylko utworzyć wystąpienia obiektu, jeśli nie jest już buforowany. Następnie należy obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia do pamięci podręcznej obiektu biznesowego do użytku w przyszłości, zamiast niszczenie go. W tym przykładzie kodu <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> obiektu ma ustawioną wartość `true` przekierować <xref:System.Web.UI.WebControls.ObjectDataSource> nie wywołać <xref:System.IDisposable.Dispose%2A> metody dla obiekt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono obiektem biznesowym warstwy środkowej przykład poprzednim przykładzie kodu używane. Przykładowy kod składa się z obiektem biznesowych, zdefiniowane przez `EmployeeLogic` klasy, która jest stanowa klasy, która obejmuje logikę biznesową. Pełny przykład pracy należy skompilowanie tego kodu jako biblioteki i użyć tych klas ze strony programu ASP.NET (plik .aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed obiekt, który jest identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> właściwości zostaną odrzucone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Zdarzenie jest wywoływane zawsze, zanim zostaną odrzucone wystąpienie obiektu biznesowego. Jeśli obiekt biznesowy implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana po to zdarzenie jest wywoływane.  
  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzeń, aby wywołać innych metod dla obiekt, ustaw właściwości lub wykonania oczyszczania, które są specyficzne dla obiekt przed obiekt zostanie zniszczony. Odwołanie do obiektu jest dostępny po <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> obiektu.  
  
 Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource> formantu za pomocą LINQ do SQL klasy, należy anulować usuwania programu obsługi dla klasy kontekstu danych <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzeń. Ten krok jest konieczne, ponieważ składnik LINQ to SQL obsługuje wykonanie odroczone, podczas gdy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli podejmie próbę usunięcia kontekstu danych po wykonaniu operacji Select.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić informacje. Drugim przykładzie kodu przedstawiono obiektem biznesowym warstwy środkowej używanego w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić informacje. Użytkownik może działać na obiektu biznesowego, która jest bardzo kosztowna utworzyć (pod względem czasu i zasobów) dla każdej operacji danych, który wykonuje strony sieci Web. Jednym ze sposobów pracę z obiektem kosztowne może być na raz Utwórz wystąpienie, a następnie buforuje dla kolejnych operacji zamiast tworzenia i niszczenie go dla każdej operacji danych. W tym przykładzie pokazano tego wzorca. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia w celu sprawdzenia pamięci podręcznej dla obiektu, a tylko utworzyć wystąpienia, jeśli nie jest już buforowany. Następnie należy obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia do pamięci podręcznej obiektu biznesowego do użytku w przyszłości, zamiast niszczenie go. W tym przykładzie kodu <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> obiektu ma ustawioną wartość `true` przekierować <xref:System.Web.UI.WebControls.ObjectDataSource> nie wywołać <xref:System.IDisposable.Dispose%2A> metody dla obiekt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono obiektem biznesowym warstwy środkowej przykład poprzednim przykładzie kodu używane. Przykładowy kod składa się z obiektem biznesowych, zdefiniowane przez `EmployeeLogic` klasy, która jest stanowa klasy, która obejmuje logikę biznesową. Pełny przykład pracy należy skompilowanie tego kodu jako biblioteki i użyć tych klas ze strony programu ASP.NET (plik .aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzeń przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formantu za pomocą LINQ do SQL klasy.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu w celu zastosowania do nazwy parametrów dla oryginalnych wartości, które są przekazywane do <see langword="Delete" /> lub <see langword="Update" /> metody.</summary>
        <value>Ciąg reprezentujący ciąg formatu stosowany do nazwy wszelkich <paramref name="oldValues" /> lub klucza parametry przekazywane do <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> lub <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> metody. Wartość domyślna to <c>"{0}"</c>, co oznacza, że nazwa parametru jest nazwą pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> właściwość jest stosowana do kluczy podstawowych, takich jak te, które są oznaczone symbolem `DataKeyNames` właściwości formantu powiązanego z danymi lub w obszarze usuwanie i aktualizowanie scenariusze gdzie <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość i zestaw oryginalne wartości są przekazywane do odpowiedniej metody danych.  
  
 Poniżej przedstawiono dwie typowe scenariusze, w którym można zmienić <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> właściwości:  
  
-   Można zmienić właściwości w celu rozróżnienia starej i nowej wartości w ramach aktualizacji. Gdy <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów dla oryginalnego i nowe wartości są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji. Bez formatowania ciągu dwa parametry o takiej samej nazwie zostałyby utworzone dla każdego pola danych. Zmieniając nazwę parametru oryginalne wartości, możesz porównać dane do oryginalnego źródła danych do wykrywania konfliktów i porównywania wartości klucza.  
  
-   Niektóre wizualnych projektantów implementować schemat nazewnictwa określonego dla oryginalnej wartości i kluczy.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Dodaje <see cref="E:System.Web.UI.Page.LoadComplete" /> program obsługi zdarzeń do strony zawierającej <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, jakie informacje o ustawieniach kulturowych jest używany podczas konwertowania wartości ciągu do rzeczywistego właściwości typów w celu utworzenia obiektu typu oznaczonego <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Informacje o ustawieniach kulturowych. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
        <returns>Zwraca bieżący stan widoku formantu serwera; w przeciwnym razie zwraca <see langword="null" />, jeśli stan jest niedostępny widok skojarzony z formantem.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane z źródłowy magazyn danych, wywołując metodę, która jest określana przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> właściwość z parametrami w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /> kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Lista wierszy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określona metoda może być dowolnym podpis metody, ale musi zwracać lub pochodzić z jednego z typów wymienionych w poniższej tabeli <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w celu wywołania go pomyślnie.  
  
|Zwracany typ|Akcja|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Zwróconego przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> jest tworzona przy użyciu <xref:System.Data.DataTable> i zwrócony przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataView>|<xref:System.Data.DataView> Zwróconego przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataSet>|Pierwszy <xref:System.Data.DataTable> z <xref:System.Data.DataSet> jest wyodrębniany i <xref:System.Data.DataView> zostanie utworzona i zwrócona przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Object>|Obiekt jest ujęte w jeden element <xref:System.Collections.IEnumerable> kolekcji i zwrócony przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
  
 Metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość może być metodą wystąpienia lub `static` (`Shared` w języku Visual Basic) — metoda. Jeśli jest metodą wystąpienia obiektu biznesowego jest tworzone i niszczone zawsze metodę, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości jest wywoływana z tą różnicą, że to samo wystąpienie są używane do wywoływania metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość i Metoda określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwości. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Metoda zwraca <xref:System.Collections.IEnumerable> interfejsu. Jednak aby włączyć buforowanie i filtrowanie scenariuszy, zwracana wartość musi być <xref:System.Data.DataSet> obiektu. Gdy <xref:System.Data.DataSet> klasa nie implementuje <xref:System.Collections.IEnumerable> interfejsu, <xref:System.Web.UI.WebControls.ObjectDataSource> formant automatycznie wyodrębnia domyślnie <xref:System.Data.DataView> kontrolować, które implementuje <xref:System.Collections.IEnumerable>.  
  
 Przed <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzeń zbadać wartości parametrów i wykonać wszelkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operacji. Aby wykonać operację pobierania danych <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiekt używa odbicia do utworzenia wystąpienia obiektu, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości. Następnie wywołuje metodę, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości, za pomocą powiązane <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> właściwości. Po <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> zdarzenia, sprawdź, czy wszystkie wartości zwrotnych, parametry wyjściowe i wyjątków i wykonać wszelkie przetwarzania końcowego.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zwraca <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, lub <xref:System.Data.DataView> obiektu i buforowanie jest włączone, <xref:System.Web.UI.WebControls.ObjectDataSource> pobiera dane z i zapisuje dane w pamięci podręcznej podczas <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operacji. Pamięć podręczna jest tworzony, odrzuconych lub odświeżyć na podstawie zachowania buforowania, określonym przez kombinację <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zwraca <xref:System.Data.DataSet> lub <xref:System.Data.DataTable> obiektu, a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> określono właściwość, ze wszystkimi podana wartość jest szacowana <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> właściwości i wynikowy filtr jest stosowany do wykaz danych podczas <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operacji.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Metody deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> metody <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Formanty powiązane z danymi  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzony z formantu powiązanego z danymi, takie jak <xref:System.Web.UI.WebControls.GridView> kontroli, nie jest konieczne do wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody z kodu strony. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Metoda jest wywoływana zamiast bezpośrednio przez formant powiązany z danymi.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> kontroli wywołuje można pobrać liczby wierszy.</summary>
        <value>Ciąg, który reprezentuje nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> pobiera liczba wierszy. Metoda musi zwracać liczbę całkowitą (<see cref="T:System.Int32" />). Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwość określa metodę obiektu biznesowych, która służy do pobierania całkowitej liczby wierszy, do obsługi stronicowania źródła danych. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Oceny tylko wtedy, gdy właściwość <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Aby uzyskać informacje o sposobie stronicowania jest obsługiwana przez <xref:System.Web.UI.WebControls.ObjectDataSource> sterowania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która umożliwia użytkownikowi pobranie liczbę rekordów są wyświetlane na stronie.  
  
 Strona sieci Web zawiera <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, których <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwość jest ustawiona na nazwę metody, która zwraca wartość całkowita liczba rekordów w zapytaniu. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwości i <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> właściwości są ustawione na nazwy parametrów, które są używane w metodzie Select. Strona zawiera również <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.DropDownList> formantu. Kod w zestawach obsługi <xref:System.Web.UI.WebControls.GridView.PageSize%2A> właściwości wybranej przez użytkownika.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 W trzecim przykładzie klasa dostępu do danych, która pobiera dane z tabeli Klienci. Zawiera metodę o nazwie `GetSubsetOfEmployees`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Przykład zawiera także metodę o nazwie `GetEmployeeCount`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Klasa używa LINQ do badania tabeli Klienci. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli klientów. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> operacja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> zdarzeń zbadanie wartości zwracanych wartości lub parametry wyjściowe lub w celu ustalenia, czy wystąpił wyjątek po <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operacja została ukończona. Wartość zwrotna, parametrów wyjściowych i właściwości obsługi wyjątków są dostępne z <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która włączenie użytkownika do pobierania i aktualizowania rekordów w tabeli pracowników w bazie danych Northwind.  
  
 W pierwszym przykładzie strony sieci Web, która zawiera dwa <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, <xref:System.Web.UI.WebControls.DropDownList> kontroli, a <xref:System.Web.UI.WebControls.DetailsView> formantu. Pierwszy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DropDownList> formantu są używane do pobierania i wyświetlania nazwy pracowników z bazy danych. Drugi <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DetailsView> formantu są używane do pobierania, wyświetlanie i modyfikowanie danych z rekordu pracownika, który jest wybierany przez użytkownika.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 W drugim przykładzie pokazano, programy obsługi dla <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> i <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzenia. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Program obsługi zdarzeń serializuje obiekt, który zawiera dane, który został pobrany z tabeli pracowników. Zserializowany obiekt jest przechowywany w widoku stanu. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Program obsługi zdarzeń deserializuje obiekt w stanie widoku, który zawiera oryginalnych danych rekordu danych, która jest aktualizowana. Obiekt, który zawiera oryginalne dane są przekazywane jako parametr do metody aktualizacji. Oryginalne dane muszą być przekazywane do bazy danych, dzięki czemu może służyć do sprawdzenia, czy dane zostały zmodyfikowane przez inny proces.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 W trzecim przykładzie klasy dostępu do danych, która współdziała z bazy danych Northwind. Klasa używa LINQ do wykonywania zapytań i aktualizowanie tabeli pracowników. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli pracowników. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzenie, aby zainicjować dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.ObjectDataSource> formant wykonuje operację pobierania danych. Parametry są dostępne jako <xref:System.Collections.IDictionary> kolekcji, który jest dostępny przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> obiektu.  
  
 To zdarzenie może generowane dwa razy dla jednego wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość jest ustawiona. <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> obiekt jest używany do określenia, jeśli można pobrać danych lub Pobierz liczbę wywołano wybierz.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> kontroli wywołuje do pobierania danych.</summary>
        <value>Ciąg, który reprezentuje nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> używa do pobierania danych. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określona metoda może mieć żadnych podpis metody, ale aplikacja musi zwracać typów pokazano w poniższej tabeli <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w celu wywołania go pomyślnie.  
  
|Zwracany typ|Akcja|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Zwróconego przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> jest tworzony przy użyciu <xref:System.Data.DataTable> i zwrócony przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataView>|A <xref:System.Data.DataView> zwróconego przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Data.DataSet>|Pierwszy <xref:System.Data.DataTable> z <xref:System.Data.DataSet> jest wyodrębniany i <xref:System.Data.DataView> zostanie utworzona i zwrócona przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
|<xref:System.Object>|Obiekt jest ujęte w jeden element <xref:System.Collections.IEnumerable> kolekcji i zwrócony przez <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody.|  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSource> klasę, aby usunąć lub zaktualizować danych, upewnij się, że nazwy parametrów skonfigurowany dla <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji lub <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji odpowiada nazwy kolumn, które są zwracane przez metody select .  
  
## <a name="object-lifetime"></a>Okres istnienia obiektu  
 Metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość może być metodą wystąpienia lub `static` (`Shared` w języku Visual Basic) — metoda. Jeśli jest metodą wystąpienia obiektu biznesowego jest tworzone i niszczone zawsze metodę, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> nosi nazwę właściwości. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia do pracy z obiektem biznesowym przed wywołaniem metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> nosi nazwę właściwości. Można również obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie, które jest wywoływane po wykonaniu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> nosi nazwę właściwości. Jeśli obiekt biznesowy implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana przed obiekt zostanie zniszczony. Jeśli metoda jest `static` (`Shared` w języku Visual Basic), nigdy nie utworzono obiektu biznesowego i nie może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia.  
  
## <a name="parameter-merging"></a>Parametr scalania  
 Parametry są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji z tych źródeł:  
  
-   Deklaratywnie z `SelectParameters` elementu.  
  
-   Programowo z `Selecting` metody.  
  
 Po pierwsze, parametry wymienione w `SelectParameters` elementu zostaną dodane. Po drugie, parametry programowo są dodawane i usuwane w <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzenie, które występuje przed <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> uruchomić metody. Metoda zostanie rozwiązany po parametry są łączone ze sobą. Metody rozpoznawania została szczegółowo opisana w następnej sekcji.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości.  
  
## <a name="method-resolution"></a>Rozdzielczość — metoda  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda jest wywoływana, pola danych z formantu powiązanego z danymi, parametry, które zostały utworzone deklaratywnie w `SelectParameters` elementu i parametrów, które zostały dodane w <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> obsługi zdarzeń są wszystkie scalane. (Aby uzyskać więcej informacji, zobacz poprzedniej sekcji). <xref:System.Web.UI.WebControls.ObjectDataSource> Kontrolować następnie próbuje znaleźć metodę do wywołania. Najpierw szuka co najmniej jedną metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Jeśli nie znaleziono, <xref:System.InvalidOperationException> wyjątku. Jeśli zostanie znaleziony dopasowanie, następnie szuka pasujące nazwy parametru. Załóżmy na przykład, typu, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwość ma dwie metody o nazwie `SelectARecord`. Jeden `SelectARecord` ma jeden parametr `ID`, a drugi `SelectARecord` zawiera dwa parametry `Name` i `Number`. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcja zawiera tylko jeden parametr o nazwie `ID`, `SelectARecord` metody za pomocą tylko `ID` nosi nazwę parametru. Typ parametru nie jest zaznaczona w rozpoznawania metod. Kolejność parametrów nie ma znaczenia.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość jest ustawiona, metoda zostanie rozwiązany w inny sposób. <xref:System.Web.UI.WebControls.ObjectDataSource> Szuka metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość, która przyjmuje jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. W takim przypadku nazwa parametru nie ma znaczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób <xref:System.Web.UI.WebControls.GridView> formant można wyświetlać danych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formantu strony formularzy sieci Web. <xref:System.Web.UI.WebControls.ObjectDataSource> Identyfikuje częściowo lub w pełni kwalifikowaną nazwę klasy z jego <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości i metody, która jest wywoływana w celu pobrania danych z jego <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. W czasie wykonywania obiekt jest tworzony i metoda jest wywoływana przy użyciu odbicia. <xref:System.Web.UI.WebControls.GridView> Kontroli wylicza <xref:System.Collections.IEnumerable> kolekcji, który jest zwracany przez metodę, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości i wyświetla dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane przez z metodą określoną przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> właściwości.</summary>
        <value>Kolekcja parametrów używanych przez z metodą określoną przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Dodawanie parametrów do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji deklaratywnie przy użyciu `SelectParameters` element lub programowo w programu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzeń. W czasie wykonywania, parametry wymienione w `SelectParameters` elementu są najpierw dodać do kolekcji. Parametry w kolekcji zostały dodane lub usunięte przez program obsługi dla <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zdarzeń. <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Zdarzenie jest wywoływane przed wykonaniem <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> uruchomić metody.  
  
 Przed <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> uruchomić metody nazwy i typy parametrów, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji muszą być zgodne podpis metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Na przykład wybierz metodę o nazwie `GetEmployeesByStateAndAge` przyjmuje `string` i całkowitą jako parametry, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Kolekcja musi zawierać dwa parametry. Pierwszy parametr musi być rozpoznawany jako ciąg, a drugi parametr musi być rozpoznawana na liczbę całkowitą. Oba parametry można określić w znaczniku w `SelectParameters` elementu. Alternatywnie, można je do dodania w <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> w znaczniku można dodać obsługi zdarzeń lub jeden parametr, a jeden z nich można dodać programistycznie.  
  
 Aby uzyskać więcej informacji, zobacz [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) i <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> właściwości.  
  
> [!IMPORTANT]
>  W kodzie <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> obsługi zdarzeń lub w metodzie określonym przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości, upewnij się, sprawdź poprawność wartości parametru odebrane od klienta.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać rekordu danych za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i wyświetl ją w <xref:System.Web.UI.WebControls.DetailsView> formantu. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli pobiera konkretnego pracownika, wywołując `GetEmployee` metody `EmployeeLogic` klasy. `GetEmployee` Metoda wymaga parametru Identyfikatora pracownika. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontrolować używa `QueryStringParameter` element znaczników do utworzenia <xref:System.Web.UI.WebControls.QueryStringParameter> obiekt, który pobiera wartość parametru ciągu zapytania z adresu URL i przekaż go do `GetEmployee` metody.  
  
 Inne klasy parametru może służyć do pobierania wartości z innych źródeł, takich jak właściwości formantu, pól formularza, plików cookie, dane profilu ASP.NET lub stanu sesji. Umożliwia także obiekt parametr, który jest zdefiniowany w znaczniku w celu przekazania wartości stałe do metody select. Aby uzyskać więcej informacji dotyczących parametru klas, które są dostępne, zobacz [przy użyciu parametrów z kontrolki źródła danych dla filtrowanie](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 Aby uruchomić ten przykład, potrzebne następujące elementy:  
  
-   Witryny sieci Web, która ma parametry połączenia o nazwie `NorthwindConnection` które nawiązuje połączenie z bazą danych Northwind Traders. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource> Przegląd klasy.  
  
-   `EmployeeLogic` Klasy, która jest wyświetlana jako jeden z przykładów kodu dla <xref:System.Web.UI.WebControls.ObjectDataSource> Przegląd klasy. Plik klasy musi znajdować się w folderze App_Code.  
  
-   Przykładowy kod może działać jako strony .aspx. Jeśli żądanie strony bez parametru ciągu zapytania, zostanie wyświetlony komunikat o błędzie. Jeśli żądanie strony przy użyciu ciągu zapytania, takich jak `?empid=1` po nazwie plików .aspx, zostanie wyświetlone szczegóły dla żądanego pracownika.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu biznesowego, która <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> parametr umożliwia określenie wyrażenie sortowania dla obsługi sortowania źródła danych.</summary>
        <value>Nazwa parametru metody służy do określania parametrów, które jest używane do sortowania danych. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Właściwość jest używana do obsługi sortowania źródła danych. Gdy <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceSelectArguments> obiektu i przekazane do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metody, <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> wartość Określa nazwę parametru <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> metodę obiektu biznesowe, zgodnie z którym dane są sortowane.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> jest skojarzony z formantem powiązane z danymi wartości, które są przekazywane do podjęcia tego parametru, następuje postaci wartości rozdzielonych przecinkami pól `"ASC"` lub `"DESC"`. Na przykład wartość sortowanie w kolejności rosnącej na `Name` będzie `"Name ASC"`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak wdrożyć typu, który obsługuje sortowanie. W drugim przykładzie kodu pokazano, jak wdrożyć wyrażenie sortowania.  
  
 Poniższy przykład kodu pokazuje sposób implementacji typu, który obsługuje sortowanie. `SelectMethod` z `SortingData` klasy przyjmuje parametr `sortExpression`. Ciąg, który jest przekazywany do `SelectMethod` służy do <xref:System.Data.DataView.Sort%2A> właściwość <xref:System.Data.DataView> obiektu, który jest zwracany przez `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak wdrożyć wyrażenie sortowania. Kod na stronie sieci Web tworzy wystąpienie <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Właściwość jest ustawiona na `SortingData` i <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> właściwość jest ustawiona na `sortExpression`. <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Właściwość <xref:System.Web.UI.WebControls.GridView> kontrola jest ustawiona na `true`. Po kliknięciu przez użytkownika **sortowania** przycisku, nazwy pola, `Name` lub `Number`, są przekazywane do `SelectMethod` w parametrze sortowania.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg rozdzielany średnikami wskazujący, które bazy danych i tabele dla zależności bufora programu Microsoft SQL Server.</summary>
        <value>Ciąg, który wskazuje, które bazy danych i tabel dla zależności bufora SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Sterowanie obsługuje zasady wygasania opcjonalne opartego na <xref:System.Web.Caching.SqlCacheDependency> obiektu pamięci podręcznej danych (usługa musi być skonfigurowana dla serwera bazy danych).  
  
 SQL Server obsługuje dwa mechanizmy unieważniania pamięci podręcznej: sondowania i powiadomień. Każdy mechanizm ma inną składnię <xref:System.Web.Caching.SqlCacheDependency> obiektu.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Obsługuje tylko sondowania. <xref:System.Web.Caching.SqlCacheDependency> Ciąg jest używany do tworzenia <xref:System.Data.SqlClient.SqlDependency> obiekt, który jest przekazywany do <xref:System.Data.Common.DbCommand> Konstruktor przed <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> metoda jest wykonywana. <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Ciąg identyfikuje bazy danych i tabele zgodnie z tym samym formacie, który jest używany przez `@ Page` dyrektywą, w którym pierwsza część ciągu to ciąg połączenia z bazą danych programu SQL Server, a następnie podzielonej średnikami, a na końcu nazwy w tabeli bazy danych (na przykład `"connectionstring1:table1"`). Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> właściwość zależy od więcej niż jednej tabeli, par nazwa ciągu i tabeli połączenia są oddzielone średnikami (na przykład `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Aby wprowadzić obsługę powiadomień, należy napisać logiki pamięci podręcznej w implementacji programu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości i obsługiwać konstrukcji <xref:System.Web.Caching.SqlCacheDependency> obiektu w kodzie.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak utworzyć zależności bufora SQL Server i ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu. W drugim przykładzie kodu pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie i filtrowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> obiektu.  
  
 W poniższym przykładzie pokazano, jak utworzyć zależności bufora SQL Server i ustawić <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W tym przykładzie bazy danych jest wysyłane co 120 sekund. Jeśli dane w firmie Northwind Traders pracowników tabeli zmian podczas tego czasu, dane, które jest buforowany przez <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i wyświetlane przez <xref:System.Web.UI.WebControls.GridView> wygasła kontroli i nowy zestaw danych są pobierane przy kolejnym żądaniu strony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak zaimplementować metodę otoki, która zwraca <xref:System.Data.DataSet> obiekt, aby włączyć buforowanie i filtrowanie z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. W podstawowej implementacji `EmployeeLogic` klasy `GetAllEmployees` metoda zwraca <xref:System.Collections.ArrayList> obiektu. Zamiast refaktoryzacji obiektu całkowicie do pracy z <xref:System.Web.UI.WebControls.ObjectDataSource> na stronie formularzy sieci Web o nazwie metody otoki `GetAllEmployeesAsDataSet` zostanie dodany, która zwraca zbiór `NorthwindEmployee` dane jako <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę parametru metody pobierania danych, który służy do wskazywania wartości identyfikatora pierwszy rekord pobrać obsługę stronicowania źródła danych.</summary>
        <value>Nazwa parametru metody obiektu firm służy do wskazania pierwszy rekord można pobrać. Parametr musi zwracać wartość całkowitą. Wartość domyślna to <c>"startRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Właściwość jest używana do obsługi stronicowania źródła danych. Aby uzyskać informacje o sposobie stronicowania jest obsługiwana przez <xref:System.Web.UI.WebControls.ObjectDataSource> sterowania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która umożliwia użytkownikowi pobranie liczbę rekordów są wyświetlane na stronie.  
  
 Strona sieci Web zawiera <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli, których <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Właściwość jest ustawiona na nazwę metody, która zwraca wartość całkowita liczba rekordów w zapytaniu. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Właściwości i <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> właściwości są ustawione na nazwy parametrów, które są używane w metodzie Select. Strona zawiera również <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 W drugim przykładzie pokazano obsługi dla <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.DropDownList> formantu. Kod w zestawach obsługi <xref:System.Web.UI.WebControls.GridView.PageSize%2A> właściwości wybranej przez użytkownika.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 W trzecim przykładzie klasa dostępu do danych, która pobiera dane z tabeli Klienci. Zawiera metodę o nazwie `GetSubsetOfEmployees`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Przykład zawiera także metodę o nazwie `GetEmployeeCount`, który jest przypisany do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> formantu. Klasa używa LINQ do badania tabeli Klienci. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli klientów. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany stanu widoku <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> , aby mogą być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Metoda zostanie przesłonięta można oznaczyć punkt początkowy, aby rozpocząć śledzenie i zapisywanie zmian do formantu jako część stan widoku dla obiekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę klasy, która <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> reprezentuje obiekt.</summary>
        <value>Nazwy klasy częściowo lub w pełni kwalifikowana, która określa typ obiektu, który <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> reprezentuje. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć wystąpienie obiektu, który <xref:System.Web.UI.WebControls.ObjectDataSource> wiąże formantu, formantu używa odbicia można załadować typu, który jest identyfikowane przez nazwę typu w czasie wykonywania. W związku z tym wartość <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwość może być częściowo kwalifikowanej typ kodu, który znajduje się w katalogu Bin lub App_Code katalogów lub nazwę FQDN typ kodu, który jest zarejestrowany w globalnej pamięci podręcznej zestawów. Użycie pamięci podręcznej GAC, należy dodać odpowiednie odwołanie do `assemblies` sekcji w pliku Machine.config lub Web.config.  
  
 Typ musi mieć konstruktora domyślnego, chyba że obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzeń, aby utworzyć wystąpienie samodzielnie. Dla każdego wywołania tworzone jest wystąpienie typu <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> metody, jeśli to metody na typ elementu członkowskiego metodami. W przypadku metody nie jest tworzone wystąpienie `static` (`Shared` w języku Visual Basic). Jeśli typ implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana przed obiekt zostanie zniszczony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób <xref:System.Web.UI.WebControls.GridView> formant można wyświetlać danych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formantu strony formularzy sieci Web. <xref:System.Web.UI.WebControls.ObjectDataSource> Identyfikuje częściowo lub w pełni kwalifikowaną nazwę klasy z jego <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości i metody, która jest wywoływana w celu pobrania danych z jego <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. W czasie wykonywania obiekt jest tworzony i metoda jest wywoływana przy użyciu odbicia. <xref:System.Web.UI.WebControls.GridView> Kontroli wylicza <xref:System.Collections.IEnumerable> kolekcji, która jest zwracana w wyniku <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości i wyświetla dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 W poniższym przykładzie przedstawiono klasę <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> dotyczy wartości właściwości.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację aktualizacji przez wywołanie metody identyfikowany przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> właściwości i wszelkie parametry, które znajdują się w <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy zaktualizowane w źródłowy magazyn danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt biznesowy zakłada się, że aktualizacja jeden rekord danych w czasie, a nie w partii.  
  
 Przed <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzeń zbadać wartości parametrów i wykonać wszelkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operacji. Próba wykonania operacji aktualizacji, <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiekt używa odbicia do utworzenia wystąpienia obiektu, który jest identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwości. Następnie wywołuje metodę, która jest określana przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości, za pomocą powiązane <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> właściwości. Po <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> zdarzeń. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> zdarzenia, sprawdź, czy wszystkie wartości zwrotnych, parametry wyjściowe i wyjątków i wykonać wszelkie przetwarzania końcowego.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Metody deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> metody <xref:System.Web.UI.WebControls.ObjectDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości.  
  
## <a name="data-bound-controls"></a>Formanty powiązane z danymi  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource> formant jest skojarzony z formantu powiązanego z danymi, takie jak <xref:System.Web.UI.WebControls.GridView> kontroli, nie jest konieczne do wywołania <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metody z kodu strony. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Metoda jest wywoływana zamiast bezpośrednio przez formant powiązany z danymi.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.DropDownList> kontroli, <xref:System.Web.UI.WebControls.TextBox> formantów i kilka <xref:System.Web.UI.WebControls.ObjectDataSource> obiektów, aby zaktualizować dane. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DropDownList> kontroli, <xref:System.Web.UI.WebControls.TextBox> formantów i kilka <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, aby zaktualizować dane. <xref:System.Web.UI.WebControls.DropDownList> Wyświetla nazwę pracownika Northwind, podczas gdy <xref:System.Web.UI.WebControls.TextBox> formantów służą do wprowadzania i aktualizowania informacji dotyczących adresów. Ponieważ <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcja zawiera <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest powiązany z wybranej wartości <xref:System.Web.UI.WebControls.DropDownList>, przycisku, który wywołuje <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operacja jest włączona tylko po wybraniu pracownika.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> operacja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> zdarzeń zbadanie wartości zwracanych wartości lub parametry wyjściowe lub w celu ustalenia, czy wystąpił wyjątek po <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operacja została ukończona. Wartość zwrotna, parametrów wyjściowych i właściwości obsługi wyjątków są dostępne z <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> wywołuje sterowania, aby zaktualizować dane.</summary>
        <value>Ciąg, który reprezentuje nazwę metody lub funkcji, które <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> używa do aktualizacji danych. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Formantu przy założeniu, że metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości wykonuje aktualizacje jednym na raz, a nie w partii.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Upewnij się, że nazwy parametrów skonfigurowany dla <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji odpowiada nazwy kolumn, które są zwracane przez metody select.  
  
## <a name="object-lifetime"></a>Okres istnienia obiektu  
 Metoda identyfikowany przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość może być metodą wystąpienia lub `static` (`Shared` w języku Visual Basic) — metoda. Jeśli jest metodą wystąpienia obiektu biznesowego jest tworzone i niszczone zawsze metodę, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> nosi nazwę właściwości. Może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> zdarzenia do pracy z obiektem biznesowym przed wywołaniem metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> nosi nazwę właściwości. Można również obsługiwać <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenie, które jest wywoływane po wykonaniu metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> nosi nazwę właściwości. Jeśli obiekt biznesowy implementuje <xref:System.IDisposable> interfejsu <xref:System.IDisposable.Dispose%2A> metoda jest wywoływana przed obiekt zostanie zniszczony. Jeśli metoda jest `static` (`Shared` w języku Visual Basic), nigdy nie utworzono obiektu biznesowego i nie może obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, i <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> zdarzenia.  
  
## <a name="parameter-merging"></a>Parametr scalania  
 Parametry są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji z trzech źródeł:  
  
-   Z formantu powiązanego z danymi w czasie wykonywania.  
  
-   Z `UpdateParameters` elementu deklaratywnie.  
  
-   Z <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> program obsługi zdarzeń, programowo.  
  
 Po pierwsze, parametry, które są generowane z formantów powiązanych z danymi są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji. Na przykład jeśli <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.GridView> formantu, który ma kolumny `Name` i `Number`, parametry `Name` i `Number` są dodawane do kolekcji. Zależy od dokładną nazwę parametru <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości. Typ danych z tych parametrów jest `string`. Następnie, parametry, które są wymienione w `UpdateParameters` elementu zostaną dodane. Jeśli parametr w `UpdateParameters` można znaleźć elementu z taką samą nazwę jak parametr, który jest już <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji, istniejące parametru jest modyfikowane parametr, który określono w `UpdateParameters` elementu. Zazwyczaj służy do modyfikowania typu danych w parametrze. Można ponadto programowego dodawania i usuwania parametrów w <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzenie, które występuje przed <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> uruchomić metody. Metoda zostanie rozwiązany po parametry są łączone ze sobą. Metody rozpoznawania została szczegółowo opisana w następnej sekcji.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości.  
  
## <a name="method-resolution"></a>Rozdzielczość — metoda  
 Gdy <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> metoda jest wywoływana, pola danych z formantu powiązanego z danymi, parametry, które zostały utworzone deklaratywnie w `UpdateParameters` elementu i parametrów, które zostały dodane w <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> obsługi zdarzeń są wszystkie scalane. (Aby uzyskać więcej informacji, zobacz poprzedniej sekcji). <xref:System.Web.UI.WebControls.ObjectDataSource> Kontrolować następnie próbuje znaleźć metodę do wywołania. Najpierw szuka co najmniej jedną metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości. Jeśli nie znaleziono, <xref:System.InvalidOperationException> wyjątku. Jeśli zostanie znaleziony dopasowanie, następnie szuka pasujące nazwy parametru. Załóżmy na przykład, typu, który jest określony przez <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> właściwość ma dwie metody o nazwie `UpdateARecord`. Jeden `UpdateARecord` ma jeden parametr `ID`, a drugi `UpdateARecord` zawiera dwa parametry `Name` i `Number`. Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcja zawiera tylko jeden parametr o nazwie `ID`, `UpdateARecord` metody za pomocą tylko `ID` nosi nazwę parametru. Typ parametru nie jest zaznaczona w rozpoznawania metod. Kolejność parametrów nie ma znaczenia.  
  
 Jeśli <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwość jest ustawiona, metoda zostanie rozwiązany w inny sposób. <xref:System.Web.UI.WebControls.ObjectDataSource> Szuka metodę o nazwie określonej w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwość, która przyjmuje jeden parametr typu, który określono w <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> właściwości. W takim przypadku nazwa parametru nie ma znaczenia.  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która włączenie użytkownika do pobierania i aktualizowania rekordów w tabeli pracowników w bazie danych Northwind.  
  
 W pierwszym przykładzie strony sieci Web, która zawiera dwa <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, <xref:System.Web.UI.WebControls.DropDownList> kontroli, a <xref:System.Web.UI.WebControls.DetailsView> formantu. Pierwszy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DropDownList> formantu są używane do pobierania i wyświetlania nazwy pracowników z bazy danych. Drugi <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DetailsView> formantu są używane do pobierania, wyświetlanie i modyfikowanie danych z rekordu pracownika, który jest wybierany przez użytkownika.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 W drugim przykładzie pokazano, programy obsługi dla <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> i <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzenia. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Program obsługi zdarzeń serializuje obiekt, który zawiera dane, który został pobrany z tabeli pracowników. Zserializowany obiekt jest przechowywany w widoku stanu. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Program obsługi zdarzeń deserializuje obiekt w stanie widoku, który zawiera oryginalnych danych rekordu danych, która jest aktualizowana. Obiekt, który zawiera oryginalne dane są przekazywane jako parametr do metody aktualizacji. Oryginalne dane muszą być przekazywane do bazy danych, dzięki czemu może służyć do sprawdzenia, czy dane zostały zmodyfikowane przez inny proces.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 W trzecim przykładzie klasy dostępu do danych, która współdziała z bazy danych Northwind. Klasa używa LINQ do wykonywania zapytań i aktualizowanie tabeli pracowników. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli pracowników. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, która zawiera parametry, które są używane przez metodę, która jest określona przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> właściwości.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez metodę, która jest określona przez <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy i typy parametrów, które są zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> nazwy i typy parametrów w kolekcji musi być zgodna <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> podpis metody. Dotyczy nazw parametrów <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> właściwości i czy jest rozróżniana wielkość liter. Parametry w kolekcji są zależne od danych formantu powiązanego z danymi, parametrów, które są określone deklaratywnie oraz parametry, które są dodawane programowo. Aby uzyskać więcej informacji, zobacz sekcję "Parametr scalanie" w <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> i [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.ObjectDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.ObjectDataSource> formantu.  
  
 Aby uzyskać więcej informacji o parametru scalanie, okres istnienia obiektów i metody rozpoznawania, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Należy sprawdzić, czy wszystkie wartości parametru otrzymanego od klienta. Środowisko uruchomieniowe po prostu zastępuje wartość parametru do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> właściwości.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.DropDownList> kontroli, <xref:System.Web.UI.WebControls.TextBox> formantów i kilka <xref:System.Web.UI.WebControls.ObjectDataSource> obiektów, aby zaktualizować dane. W drugim przykładzie pokazano kod `EmployeeLogic` klasy, która jest używana w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DropDownList> kontroli, <xref:System.Web.UI.WebControls.TextBox> formantów i kilka <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, aby zaktualizować dane. <xref:System.Web.UI.WebControls.DropDownList> Wyświetla nazwę pracownika Northwind, podczas gdy <xref:System.Web.UI.WebControls.TextBox> formantów służą do wprowadzania i aktualizowania informacji dotyczących adresów. Ponieważ <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcja zawiera <xref:System.Web.UI.WebControls.ControlParameter> który jest powiązany z wybranej wartości <xref:System.Web.UI.WebControls.DropDownList>, przycisku, który wywołuje <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operacja jest włączona tylko po wybraniu pracownika.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Poniższy kod przedstawia przykład `EmployeeLogic` klasy, która jest używana w poprzednim przykładzie kodu.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzenie, aby zainicjować dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.ObjectDataSource> formant wykonuje operację aktualizacji. Parametry są dostępne jako <xref:System.Collections.IDictionary> kolekcji, który jest dostępny przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> właściwość, która jest udostępniana przez <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> obiektu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższych przykładach trzy pokazano strony sieci Web, związane z kodem klasę strony i klasy dostęp do danych, która włączenie użytkownika do pobierania i aktualizowania rekordów w tabeli pracowników w bazie danych Northwind.  
  
 W pierwszym przykładzie strony sieci Web, która zawiera dwa <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, <xref:System.Web.UI.WebControls.DropDownList> kontroli, a <xref:System.Web.UI.WebControls.DetailsView> formantu. Pierwszy <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DropDownList> formantu są używane do pobierania i wyświetlania nazwy pracowników z bazy danych. Drugi <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i <xref:System.Web.UI.WebControls.DetailsView> formantu są używane do pobierania, wyświetlanie i modyfikowanie danych z rekordu pracownika, który jest wybierany przez użytkownika.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 W drugim przykładzie pokazano, programy obsługi dla <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> i <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zdarzenia. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Program obsługi zdarzeń serializuje obiekt, który zawiera dane, który został pobrany z tabeli pracowników. Zserializowany obiekt jest przechowywany w widoku stanu. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Program obsługi zdarzeń deserializuje obiekt w stanie widoku, który zawiera oryginalnych danych rekordu danych, która jest aktualizowana. Obiekt, który zawiera oryginalne dane są przekazywane jako parametr do metody aktualizacji. Oryginalne dane muszą być przekazywane do bazy danych, dzięki czemu może służyć do sprawdzenia, czy dane zostały zmodyfikowane przez inny proces.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 W trzecim przykładzie klasy dostępu do danych, która współdziała z bazy danych Northwind. Klasa używa LINQ do wykonywania zapytań i aktualizowanie tabeli pracowników. Przykład wymaga składnika LINQ to SQL klasy, która reprezentuje Northwind — baza danych i tabeli pracowników. Aby uzyskać więcej informacji, zobacz [porady: Tworzenie klasy LINQ do SQL w projekcie sieci Web](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>