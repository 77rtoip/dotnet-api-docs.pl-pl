<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b079858ce055429e370514f22fb069c6222943f9" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla wartości pojedynczego rekordu ze źródła danych za pomocą szablonów zdefiniowane przez użytkownika. <see cref="T:System.Web.UI.WebControls.FormView" /> Sterowanie umożliwia edytowanie, usuwanie i wstawianie rekordów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Szablony](#templates)  
  
-   [Powiązanie danych](#binding_to_data)  
  
-   [Operacje na danych](#data_operations)  
  
-   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)  
  
-   [Zdarzenia](#events)  
  
-   [Ułatwienia dostępu](#accessibility)  
  
-   [Stosowanie stylów CSS](#applying_styles)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.FormView> Kontroli jest używana do wyświetlania pojedynczego rekordu ze źródła danych. Jest on podobny do <xref:System.Web.UI.WebControls.DetailsView> kontrolować, z wyjątkiem Wyświetla zdefiniowane przez użytkownika szablonów, zamiast pola wiersza. Tworzenie własnych szablonów zapewnia większą elastyczność kontroli, jak dane są wyświetlane. <xref:System.Web.UI.WebControls.FormView> Sterowanie obsługuje następujące funkcje:  
  
-   Powiązanie z kontrolki źródła danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Wbudowane możliwości Wstawianie.  
  
-   Wbudowane aktualizowania i usuwania możliwości.  
  
-   Wbudowane funkcje stronicowania.  
  
-   Programowy dostęp do <xref:System.Web.UI.WebControls.FormView> model obiektów dynamicznie Ustaw właściwości obsługi zdarzeń i tak dalej.  
  
-   Można dostosować wygląd za pomocą szablonów zdefiniowanych przez użytkownika, kompozycje i style.  
  
<a name="templates"></a>   
## <a name="templates"></a>Szablony  
 Aby uzyskać <xref:System.Web.UI.WebControls.FormView> sterowania do wyświetlania zawartości, należy utworzyć szablony dla różnych części kontrolki. Większość szablonów jest opcjonalna. jednak należy utworzyć szablon dla tryb, w którym skonfigurowano formantu. Na przykład <xref:System.Web.UI.WebControls.FormView> formant, który obsługuje Wstawianie rekordów musi mieć zdefiniowanego szablonu elementu insert. W poniższej tabeli wymieniono różne szablony, które można utworzyć.  
  
|Typ szablonu|Opis|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiuje zawartości dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji. Ten szablon zawiera zwykle kontrolki wejściowe i przyciski poleceń, z którą użytkownik może edytować istniejącego rekordu.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiuje zawartość dla pustym wierszu danych wyświetlane, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, która nie zawiera żadnych rekordów. Ten szablon zawiera zwykle zawartości, aby ostrzec użytkownika, że źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Określa zawartość wiersza stopki. Ten szablon zawiera zwykle dodatkowej zawartości, którą chcesz wyświetlić w wierszu stopki. **Uwaga:** Alternatywnie, można po prostu określić tekst do wyświetlenia w wierszu stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Określa zawartość nagłówka wiersza. Ten szablon zawiera zwykle dodatkowej zawartości, którą chcesz wyświetlić w wierszu nagłówka. **Uwaga:** Alternatywnie, można po prostu określić tekst do wyświetlenia w wierszu nagłówka przez ustawienie <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiuje zawartości dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu. Ten szablon zawiera zwykle zawartości do wyświetlania wartości istniejącego rekordu.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiuje zawartości dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania. Ten szablon zawiera zwykle kontrolki wejściowe i przyciski poleceń, z którą użytkownik może dodać nowy rekord.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiuje zawartość wiersza pagera wyświetlane, gdy jest włączona funkcja stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`). Ten szablon zawiera zazwyczaj formanty, z którymi użytkownik można przejść do innego rekordu. **Uwaga:** <xref:System.Web.UI.WebControls.FormView> formant ma wbudowane pagera wiersza interfejsu użytkownika (UI). Musisz utworzyć szablon pagera tylko wtedy, gdy chcesz utworzyć własne niestandardowe pagera wiersza.|  
  
 Aby wyświetlić wartości pola w szablonie elementu, użyj wyrażenia powiązania danych. Aby uzyskać więcej informacji dotyczących wyrażenia wiązania danych, zobacz [składni wyrażenia wiązania danych](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Kontrolki wejściowe w pliku szablonu elementu edycji i Wstaw szablon elementu może być powiązana z polami źródła danych przy użyciu wyrażenia powiązania dwukierunkowego. Dzięki temu <xref:System.Web.UI.WebControls.FormView> automatycznie Wyodrębnij wartości kontrolki wprowadzania aktualizacji lub operacji wstawiania. Wiązanie dwukierunkowe wyrażenia również umożliwić kontrolki wejściowe w edycji szablonu elementów do wyświetlenia automatycznie oryginalnej wartości pól. Aby uzyskać więcej informacji na wyrażeniach Wiązanie dwukierunkowe, zobacz [powiązanie z baz danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Wiązanie z danymi  
 <xref:System.Web.UI.WebControls.FormView> Formant może być powiązany do kontroli źródła danych (takich jak <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, lub <xref:System.Web.UI.WebControls.AccessDataSource>) lub do kolekcji źródła danych, która implementuje <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfejsu, takich jak <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, lub inne typy kolekcji. Użyj jednej z następujących metod można powiązać <xref:System.Web.UI.WebControls.FormView> kontroli typowi źródła danych:  
  
-   Aby powiązać z kontroli źródła danych, ustaw <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwość <xref:System.Web.UI.WebControls.FormView> formant <xref:System.Web.UI.Control.ID%2A> wartość formantu źródła danych. <xref:System.Web.UI.WebControls.FormView> Kontroli wiąże określone dane kontroli źródła i automatycznie korzystać ze źródła danych funkcje formantu do wykonania, wstawianie, aktualizowanie, usuwanie i funkcje stronicowania. Jest to preferowana metoda można powiązać z danymi.  
  
-   Można powiązać ze źródłem danych, który implementuje <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfejsu, programowane Ustawianie <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.FormView> kontroli w źródle danych, a następnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> — metoda. Przy użyciu tej metody <xref:System.Web.UI.WebControls.FormView> formant nie zawiera wbudowane Wstawianie, aktualizowanie, usuwanie i funkcje stronicowania. Musisz podać te funkcje przy użyciu odpowiedniego zdarzenia.  
  
 Aby uzyskać więcej informacji w powiązaniu danych, zobacz [Mapa zawartości dostępu do danych programu ASP.NET](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Jeśli to możliwe, zdecydowanie zaleca się czy wartości są zakodowane w formacie HTML przed są wyświetlane w tym formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [wprowadzenie do formantów weryfikacji](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Operacje na danych  
 <xref:System.Web.UI.WebControls.FormView> Kontroli udostępnia wiele wbudowanych możliwości, które umożliwiają użytkownikom aktualizacji, usuwanie, wstawić i przeglądania elementów w formancie. Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana z formantem źródła danych <xref:System.Web.UI.WebControls.FormView> kontroli można wykorzystać źródła danych funkcje formantu i automatyczne aktualizowanie, usuwanie, wstawiania i funkcjonalność stronicowania.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formantu można zapewnić obsługę update, delete, insert i operacji stronicowania z innych typów źródeł danych; jednak, należy podać program obsługi zdarzeń odpowiednie z implementacją tych operacji.  
  
 Ponieważ <xref:System.Web.UI.WebControls.FormView> formantu przy użyciu szablonów, udostępnia metody do automatycznego generowania przyciski poleceń do wykonania, aktualizowanie, usuwanie i wstawianie operacji. Należy ręcznie dołączyć te przyciski poleceń w odpowiedni szablon. <xref:System.Web.UI.WebControls.FormView> Kontroli rozpoznaje niektórych przycisków, które mają ich `CommandName` właściwości mają określone wartości. W poniższej tabeli wymieniono przyciski polecenia, aby <xref:System.Web.UI.WebControls.FormView> formant.  
  
|Przycisk|Wartość CommandName|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Używane w aktualizacji lub operacji wstawiania, aby anulować operację i odrzucić wartości wprowadzonej przez użytkownika. <xref:System.Web.UI.WebControls.FormView> Kontrolować następnie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości.|  
|Usuwanie|"Delete"|Używane w operacji usuwania wyświetlanych usunięty ze źródła danych. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleting> i <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia.|  
|Edytowanie|"Edit"|Używane podczas operacji aktualizowania umieścić <xref:System.Web.UI.WebControls.FormView> formant w trybie edycji. Zawartość określona w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwość jest wyświetlana dla wiersza danych.|  
|Insert|"Insert"|Używane w operacji wstawiania, aby wstawić nowy rekord w źródle danych, używając wartości podanego przez użytkownika. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserting> i <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia.|  
|New|"New"|Używany w operacji wstawiania do put <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania. Zawartość określona w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwość jest wyświetlana dla wiersza danych.|  
|Strona|"Page"|Używana w operacjach stronicowania do reprezentowania przycisk w wierszu pagera, który wykonuje stronicowania. Aby określić stronicowanie, ustaw `CommandArgument` właściwość przycisk "Dalej", "Prev", "Pierwszy", "Ostatni" lub indeks strony, do którego należy przejść. Zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia. **Uwaga:** ten typ przycisku jest zwykle używany tylko w szablonie modułu stronicowania.|  
|Aktualizacja|"Update"|Używane podczas operacji aktualizowania aby podjąć próbę zaktualizowania rekordu wyświetlanych w źródle danych przy użyciu wartości podanego przez użytkownika. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdating> i <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia.|  
  
 W odróżnieniu od przycisk Usuń (co spowoduje usunięcie rekordu wyświetlany natychmiast), po kliknięciu przycisku Edytuj lub nowy <xref:System.Web.UI.WebControls.FormView> formant przechodzi do edycji lub trybie, wstawiania odpowiednio. W trybie edycji zawartości znajdujących się w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwość jest wyświetlana dla bieżącego elementu danych. Zazwyczaj Edytuj szablon elementu jest zdefiniowany tak, aby przycisk Edytuj jest zastępowany aktualizację, a przycisk Anuluj. Formanty, które są odpowiednie dla typu danych wejściowych (takich jak <xref:System.Web.UI.WebControls.TextBox> lub <xref:System.Web.UI.WebControls.CheckBox> kontroli) również zazwyczaj są wyświetlane z wartość pola użytkownik może go zmodyfikować. Kliknięcie przycisku Aktualizuj aktualizacji rekordu w źródle danych, a kliknięcie przycisku Anuluj odstępuje wszelkie zmiany.  
  
 Podobnie, zawartość w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> wyświetlane właściwości elementu danych, gdy formant jest w trybie wstawiania. Wstaw szablon elementu jest zazwyczaj definiowane w taki sposób, że nowy przycisk jest zastępowany Insert i przycisk Anuluj, a pusty kontrolki wejściowe są wyświetlane dla użytkownika o wprowadzenie wartości w nowym rekordzie. Kliknięcie przycisku Wstaw w źródle danych wstawia rekordu, a kliknięcie przycisku Anuluj odstępuje wszelkie zmiany.  
  
 <xref:System.Web.UI.WebControls.FormView> Kontrola zapewnia funkcji stronicowania, który umożliwia użytkownikowi nawigację do innych rekordów w źródle danych. Po włączeniu wiersza pagera jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> formant, który zawiera formanty nawigacji strony. Aby włączyć stronicowanie, ustaw <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwości `true`. Można dostosować wiersz pagera przez ustawienie właściwości obiektów zawartych w <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> i <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości. Zamiast używać wiersza pagera wbudowanego interfejsu użytkownika, można tworzyć własnego interfejsu użytkownika przy użyciu <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizowanie interfejsu użytkownika  
 Można dostosować wygląd <xref:System.Web.UI.WebControls.FormView> kontroli przez ustawienie właściwości stylu dla różnych części kontrolki. W poniższej tabeli wymieniono właściwości inny styl.  
  
|Właściwości stylu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Ustawienia stylu dla pustym wierszu danych wyświetlanych w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Ustawienia stylu dla wiersza stopki <xref:System.Web.UI.WebControls.FormView> formantu.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Ustawienia stylu dla wiersz nagłówka <xref:System.Web.UI.WebControls.FormView> formantu.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Ustawienia stylu dla wierszy pagera wyświetlane w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy jest włączona funkcja stronicowania.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu.|  
  
<a name="events"></a>   
## <a name="events"></a>Zdarzenia  
 <xref:System.Web.UI.WebControls.FormView> Kontrola zapewnia kilka zdarzeń, które można zaprogramować przed. Pozwala na uruchamianie procedury niestandardowe, przy każdym wystąpieniu zdarzenia. W poniższej tabeli wymieniono zdarzenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> formantu.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Występuje, gdy przycisk w <xref:System.Web.UI.WebControls.FormView> formant zostanie kliknięty. To zdarzenie jest często używany do wykonywania zadań, gdy przycisk zostanie kliknięty w formancie.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Występuje po wszystkich <xref:System.Web.UI.WebControls.FormViewRow> obiekty są tworzone w <xref:System.Web.UI.WebControls.FormView> formantu. To zdarzenie jest często używane do modyfikowania wartości rekordu, przed wyświetleniem.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Występuje, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość "Delete") zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli usuwa rekord ze źródła danych. To zdarzenie jest często używana do sprawdzania wyniki operacji usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Występuje, gdy przycisk Usuń zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli usuwa rekord ze źródła danych. To zdarzenie jest często używane, aby anulować operację usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Występuje, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość "Insert") zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. To zdarzenie jest często używana do sprawdzania wyniki operacji insert.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Występuje, gdy przycisk Wstaw zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. To zdarzenie jest często używane do anulowania operacji insert.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Występuje, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość "Update") zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli aktualizacji wiersza. To zdarzenie jest często używana do sprawdzania wyników operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Występuje, gdy aktualizacja przycisku, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli aktualizacji rekordu. To zdarzenie jest często używane do anulowania operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje po <xref:System.Web.UI.WebControls.FormView> kontroli zmian tryby (w celu edycji, wstawiania lub w trybie tylko do odczytu). To zdarzenie jest często używana do wykonywania zadania podczas <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybów.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje przed <xref:System.Web.UI.WebControls.FormView> kontroli zmian tryby (w celu edycji, wstawiania lub w trybie tylko do odczytu). To zdarzenie jest często używana Anuluj zmiany trybu.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje, gdy jeden z przycisków modułu stronicowania zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. To zdarzenie to powszechnie używane, gdy trzeba wykonać zadanie po użytkownik przechodzi do innego rekordu w formancie.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje, gdy jeden z przycisków modułu stronicowania zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Ułatwienia dostępu  
 Aby uzyskać informacje o sposobie konfigurowania tego formantu, dzięki czemu generuje kod znaczników, który jest zgodny ze standardami ułatwień dostępu, zobacz [ułatwień dostępu w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) i [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Stosowanie stylów CSS  
 <xref:System.Web.UI.WebControls.FormView> Kontroli umożliwia określenie reguł stylu CSS w znaczniku. Jeśli szablony umożliwia dostosowanie wyglądu <xref:System.Web.UI.WebControls.FormView> sterowania, można określić style CSS w znaczniku w szablonach. W takim przypadku nie bardzo zewnętrzna tabela jest wymagana. Możesz uniemożliwić tabeli renderowanego przez ustawienie <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> właściwości `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView> formantu do wyświetlania wartości z <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView> formantu, aby edytować istniejące rekordy.  
  
> [!IMPORTANT]
>  W tym przykładzie formantem pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView> formantu wstawianie nowych rekordów.  
  
> [!IMPORTANT]
>  W tym przykładzie formantem pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormView> klasy. Dynamiczne dodawanie <xref:System.Web.UI.WebControls.FormView> sterowania do strony, Utwórz nową <xref:System.Web.UI.WebControls.FormView> obiekt, ustaw jej właściwości, a następnie dodaj go do <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> kolekcji kontenera kontrolować, takich jak <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać dynamicznie <xref:System.Web.UI.WebControls.FormView> formantu do strony.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączona funkcja stronicowania.</summary>
        <value>
          <see langword="true" /> Aby włączyć funkcję stronicowania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Formant ma wbudowane funkcje stronicowania, które umożliwiają użytkownikowi nawigację do innego rekordu w źródle danych. Funkcja stronicowania może być używana z dowolnego obiektu źródła danych, który obsługuje <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu lub źródła danych, które obsługuje możliwości stronicowania.  
  
 Aby włączyć funkcję stronicowania, ustaw <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwości `true`. Całkowita liczba elementów w źródle danych można określić za pomocą <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości. Aby określić indeks aktualnie wyświetlanego elementu, użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Jeśli stronicowanie zostało włączone, dodatkowy wiersz o nazwie wiersza pagera automatycznie jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> formantu. Wiersz pagera zawiera formanty nawigacji strony i mogą być wyświetlane u góry, dolnej lub górnej i dolnej formantu. Wiersz pagera ma cztery pagera wbudowanych tryby wyświetlania. W poniższej tabeli opisano cztery tryby.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Zestaw kontrolek podział na strony składające się z poprzedniego i następnego przycisków.|  
|`PagerButton.NextPreviousFirstLast`|A zestaw kontrolek podział na strony składające się z poprzedniego, następnie przyciski imię i nazwisko.|  
|`PagerButton.Numeric`|Zestaw kontrolek podział na strony składające się z numerowane przyciski łączy do stron dostępu bezpośrednio. Jest to tryb domyślny.|  
|`PagerButton.NumericFirstLast`|Zestaw kontrolek podział na strony składające się z przycisków łącze numerowane i imię i nazwisko.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formant automatycznie ukrywa wiersza pagera, gdy źródło danych zawiera mniej niż dwa rekordy.  
  
 Można kontrolować ustawienia wiersza modułu stronicowania (takie jak tryb wyświetlania pagera, liczba łączy strony do wyświetlenia w czasie i etykiety tekst formantu pagera) przy użyciu <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości. Aby sterować wyglądem wiersza modułu stronicowania (w tym kolor tła i kolor czcionki), należy użyć <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości. <xref:System.Web.UI.WebControls.FormView> Formantu można również zdefiniować szablon niestandardowy dla wiersza modułu stronicowania. Aby uzyskać więcej informacji o tworzeniu szablonu wiersza niestandardowego modułu stronicowania, zobacz <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 <xref:System.Web.UI.WebControls.FormView> Kontrola zapewnia kilka zdarzeń, które służy do wykonywania akcji niestandardowej, gdy wystąpi stronicowania. W poniższej tabeli wymieniono dostępne zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje, gdy jeden z przycisków modułu stronicowania zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. To zdarzenie to powszechnie używane, gdy trzeba wykonać zadanie po użytkownik przechodzi do innego rekordu w formancie.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje, gdy jeden z przycisków modułu stronicowania zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
> [!NOTE]
>  Te zdarzenia nie są wywoływane po zmianie <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości programowo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość, aby włączyć funkcję stronicowania w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu do wyświetlenia w tle <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Adres URL obrazu do wyświetlenia w tle <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> właściwość, aby określić adres URL obrazu do wyświetlenia w tle <xref:System.Web.UI.WebControls.FormView> formantu.  
  
> [!NOTE]
>  Jeśli określonego obrazu jest mniejszy niż <xref:System.Web.UI.WebControls.FormView> kontroli, obraz jest rozmieszczany do wypełnienia tła. Jeśli obraz jest większy niż formant, jest przycięty obraz.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> właściwość, aby wyświetlić obraz niestandardowy w tle <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz pagera wyświetlane w dolnej części <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje pagera dolnym szeregu <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), nazywany wierszem pagera dodatkowy wiersz jest automatycznie wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli. Wiersz pagera zawiera formanty, które umożliwiają użytkownikom przechodzić do innych rekordów i mogą być wyświetlane u góry, dolnej lub górnej i dolnej formantu. Użyj <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości programowo dostępu <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje dolny wiersz pagera w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy dolny wiersz pagera w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowo manipulować dolny wiersz pagera, na przykład podczas dodawania niestandardowych zawartości. Wszelkie zmiany <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwość musi zostać wykonana po <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje dolny pagera wiersz został utworzony; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości do wiersza pagera wyświetlane w dolnej części <xref:System.Web.UI.WebControls.FormView> formantu. Wiersz pagera jest następnie aktualizowany dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst przeznaczony do renderowania w elemencie HTML podpisu w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. Ta właściwość jest udostępniana, aby łatwiej dostępne dla użytkowników urządzeń ułatwianiem formantu.</summary>
        <value>Ciąg reprezentujący tekstu do renderowania w elemencie HTML podpisu w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości w celu określenia tekstu do renderowania w elemencie HTML podpisu w <xref:System.Web.UI.WebControls.FormView> formantu. Określony tekst zawiera urządzenia ułatwianiem opis tabeli, która może służyć do udostępnić formantu.  
  
 Obsługa dodatkowych ułatwień dostępu dla <xref:System.Web.UI.WebControls.FormView> kontroli jest zapewniana przez <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia wyrównanie elementu podpis HTML w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości w celu określenia tekst dla elementu podpis HTML renderowane w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie w pionie lub podpis elementu HTML w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. Ta właściwość jest udostępniana, aby łatwiej dostępne dla użytkowników urządzeń ułatwianiem formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości. Wartość domyślna to <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia położenie w pionie lub podpis elementu HTML w <xref:System.Web.UI.WebControls.FormView> formantu. Ta właściwość jest udostępniana, aby łatwiej dostępne dla użytkowników urządzeń ułatwianiem formantu.  
  
 Ta właściwość jest ustawiona przy użyciu jednej z <xref:System.Web.UI.WebControls.TableCaptionAlign> wartości wyliczenia. W poniższej tabeli przedstawiono możliwe wartości.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Element podpisu jest wyrównywana z dołu tabeli.|  
|`TableCaptionAlign.Left`|Element podpisu jest wyrównany do lewej tabeli.|  
|`TableCaptionAlign.NotSet`|Wyrównanie elementu podpis nie jest ustawiona.|  
|`TableCaptionAlign.Right`|Element podpisu jest wyrównany do prawej krawędzi tabeli.|  
|`TableCaptionAlign.Top`|Element podpisu jest wyrównywana z górnej części tabeli.|  
  
> [!NOTE]
>  Jeśli ta właściwość jest równa `TableCaptionAlign.NotSet`, zostanie użyta wartość domyślna przeglądarka.  
  
 Obsługa dodatkowych ułatwień dostępu dla <xref:System.Web.UI.WebControls.FormView> kontroli jest zapewniana przez <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości w celu określenia tekstu do renderowania w elemencie HTML podpisu w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia, czy kod HTML podpis elementu <xref:System.Web.UI.WebControls.FormView> formant ma być renderowany po lewej stronie formantu.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między zawartość komórki i krawędzi komórki.</summary>
        <value>Ilość miejsca w pikselach między zawartość komórki i krawędzi komórki. Wartość domyślna wynosi -1, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości odległość między zawartość komórki i krawędzi komórki. Wielkość dopełnienia określony jest dodawany do wszystkich czterech krawędzi komórki.  
  
 Wszystkie komórki w tej samej kolumnie <xref:System.Web.UI.WebControls.FormView> formant ma tej samej szerokości. Wielkość dopełnienia jest stosowany do komórek najszerszych, wszystkich komórek w kolumnie są dostosowane do tej szerokość komórki. Podobnie wszystkie komórki w tym samym wierszu mają taką samą wysokość. Wielkość dopełnienia dotyczy najwyższego komórki w wierszu, wszystkie komórki w wierszu są dostosowane do tej wysokość komórki. Nie można określić rozmiary pojedynczych komórek.  
  
 Aby dostosować odstępy między komórkami, należy użyć <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości.  
  
> [!NOTE]
>  Gdy ta właściwość nie jest ustawiona, zostanie użyta domyślna wartość przeglądarki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości w celu określenia wielkości odstępów między zawartość komórki i krawędzi komórki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między komórkami.</summary>
        <value>Ilość miejsca w pikselach między komórkami. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości odległość między sąsiednich komórek w <xref:System.Web.UI.WebControls.FormView> formantu. Odstępy ten jest stosowany w pionie i w poziomie. Odstępy między komórkami jest jednolita dla całej formantu. Nie można określić poszczególnych odstępy między wierszy lub kolumn.  
  
> [!NOTE]
>  Jeśli ustawienie tej właściwości na wartość większą niż 0, a następnie ustaw <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwości na wartość, która wyświetla obramowań komórek, wyświetlone przerwy między obramowań sąsiadujących komórek. W takiej sytuacji <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwość określa rozmiar odstępu.  
  
 Aby dostosować odstępy między zawartość komórki, obramowania komórki, należy użyć <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości w celu określenia wielkości odstępów między sąsiadujących komórek.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Jeden z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</param>
        <summary>Przełączniki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli tryb wprowadzania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metodę, aby przełączyć programowo <xref:System.Web.UI.WebControls.FormView> kontrola między edycji, wstawiania i tryb tylko do odczytu. Ta metoda aktualizuje również <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości z określonym trybem. W poniższej tabeli wymieniono wartości innego trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie edycji, który umożliwia użytkownikowi zaktualizować wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który zezwala użytkownikowi na dodawanie nowych rekordów do źródła danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest tryb wyświetlania normalnego.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia nie są wywoływane, gdy ta metoda jest wywoływana.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metodę, aby zwrócić <xref:System.Web.UI.WebControls.FormView> formantu do trybu tylko do odczytu, gdy użytkownik przechodzi do innego rekordu.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" /> Reprezentujący źródło danych używane do tworzenia hierarchii formantu.</param>
        <param name="dataBinding">
          <see langword="true" /> Aby wskazać, że hierarchii formant został utworzony bezpośrednio w źródle danych. <see langword="false" /> wskazująca formantu hierarchii jest tworzona na podstawie stanu widoku.</param>
        <summary>Tworzy hierarchii kontroli używany do renderowania <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki z określonego źródła danych.</summary>
        <returns>Liczba elementów utworzonych ze źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu można utworzyć hierarchii dla formantu <xref:System.Web.UI.WebControls.FormView> formantu. Gdy `dataBinding` parametr jest `true`, powiązanie danych odbywa się przed utworzeniem hierarchii formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.DataSourceView" /> z <see cref="T:System.Web.UI.IDataSource" /> do której <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć hierarchię formantu.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy obiekt domyślny styl tabeli dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> zawierający domyślny styl tabeli dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> kontroli do tworzenia własnego obiektu styl tabeli domyślnej. Poza ustawieniem domyślny styl <xref:System.Web.UI.WebControls.TableStyle> obiektu, ta metoda określa również <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości na 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można przesłonić tę metodę, aby utworzyć własny styl domyślny.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.DataSourceSelectArguments" /> obiekt, który zawiera argumenty, które są przekazywane do źródła danych do przetwarzania.</summary>
        <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> zawiera argumenty, które są przekazywane do źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć <xref:System.Web.UI.DataSourceSelectArguments> obiekt, który zawiera argument przekazany do źródła danych. W tej implementacji <xref:System.Web.UI.DataSourceSelectArguments> obiekt zawiera argumenty operacji stronicowania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można przesłonić tę metodę, aby określić własne wartości, które są przekazywane do źródła danych.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Liczony od zera indeks elementu danych do wyświetlenia.</param>
        <param name="rowType">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> wartości wyliczenia.</param>
        <param name="rowState">Bitowe połączenie <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości wyliczenia.</param>
        <summary>Tworzy <see cref="T:System.Web.UI.WebControls.FormViewRow" /> przy użyciu określonego elementu indeksu, typ wiersza i stanu wiersza.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> z określonego elementu indeksu, typ wiersza i stanu wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć <xref:System.Web.UI.WebControls.FormViewRow> obiekt używany do reprezentowania wierszy wewnątrz formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby zwrócić <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiektu z użyciem ustawień niestandardowych.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy tabeli zawierającej dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Table" /> reprezentujący tabeli zawierającej dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć tabelę, która działa jako kontener dla formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb wprowadzania danych <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> umożliwia określenie, czy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu, wstawiania lub edycji. W poniższej tabeli wymieniono wartości innego trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie edycji, który umożliwia użytkownikowi zaktualizować wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który zezwala użytkownikowi na dodawanie nowych rekordów do źródła danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest tryb wyświetlania normalnego.|  
  
 Ta wartość jest zwykle ustawiana automatycznie przez <xref:System.Web.UI.WebControls.FormView> kontroli, gdy kliknięto przycisk polecenia Nowy, Update, Insert, Delete lub Anuluj. Gdy <xref:System.Web.UI.WebControls.FormView> kontroli zmianę trybów w odpowiedzi na akcję, pojawienia się zdarzenia w poniższej tabeli. Dzięki temu można utworzyć program obsługi zdarzeń niestandardowych, który wykonuje odpowiednie procedury po wystąpieniu zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje, gdy <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybach, ale po zmianie trybu. To zdarzenie jest najczęściej używany do wykonywania zadań przy każdym <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybów.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje, gdy <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybach, ale przed zmianą trybu. To zdarzenie jest najczęściej używany do Anuluj zmiany trybu.|  
  
 **Uwaga** te zdarzenia nie są zgłaszane w przypadku programowo zmienić tryb przy użyciu <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> umożliwia określenie, czy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu, wstawiania lub edycji. Jeśli użytkownik próbuje przejdź do innego rekordu podczas <xref:System.Web.UI.WebControls.FormView> formant jest w edycji, stronicowanie zostało anulowane.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wiąże źródła danych, aby <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataBind> metodę, aby powiązać dane ze źródła danych do <xref:System.Web.UI.WebControls.FormView> formantu. Ta metoda usuwa wszystkie wyrażenia wiązania danych w szablonie aktywnego formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element dane powiązane z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>
          <see cref="T:System.Object" /> Czy reprezentuje element danych powiązany <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItem%2A> właściwość dostępu do elementu danych powiązana z <xref:System.Web.UI.WebControls.FormView> formantu. Element danych jest często używane do bezpośredniego dostępu wartości pól bieżącego rekordu. Typ <xref:System.Object> zwróconych przez to właściwość może być różna w zależności od źródła danych. Na przykład, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.FormView> kontroli, <xref:System.Data.DataRowView> obiekt jest zwracany.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko wtedy, gdy podczas wiązania z danymi. Przed danych powiązania występuje, ta właściwość zwraca `null`. Ta właściwość również nie ma zastosowania podczas <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania i zwraca `null`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.DataItem%2A> właściwości w celu określenia wartości pola w elemencie danych.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów danych w źródle danych.</summary>
        <value>Liczba elementów danych w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> właściwości w celu ustalenia liczby elementów danych zawartych w źródle danych. Ta właściwość zawiera taką samą wartość jak <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks elementu dane powiązane z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu ze źródła danych.</summary>
        <value>Indeks elementu dane powiązane z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu ze źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> właściwość, aby określić indeks elementu danych powiązana z <xref:System.Web.UI.WebControls.FormView> formantu ze źródła danych. Ta właściwość zawiera taką samą wartość jak <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
> [!NOTE]
>  Ta właściwość nie ma zastosowania podczas <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania. Gdy formant jest w trybie wstawiania <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> właściwość zwraca wartość -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.DataKey" /> obiekt, który reprezentuje klucz podstawowy wyświetlany rekord.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataKey" /> obiekt, który reprezentuje klucz podstawowy wyświetlany rekord.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość jest ustawiona, <xref:System.Web.UI.WebControls.FormView> formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz wartość pola lub pól na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. Użyj <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwość, aby uzyskać dostęp do tej <xref:System.Web.UI.WebControls.DataKey> obiektu. Ta właściwość jest najczęściej używany do uzyskiwania kluczy i ich wartości dla pola określone w <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości w celu określenia wartości pierwszego pola klucza na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości w celu określenia wartości pola klucza.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę, która zawiera nazwy pól kluczy dla źródła danych.</summary>
        <value>Tablica zawierająca nazwy pól kluczy dla źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości w celu określenia rozdzielana przecinkami lista nazw pól, które reprezentują klucza podstawowego źródła danych. Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość jest ustawiona, <xref:System.Web.UI.WebControls.FormView> formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz wartość pola lub pól na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.DataKey> Następnie jest przechowywany w <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości.  
  
> [!NOTE]
>  Należy ustawić <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość wbudowanych aktualizowanie, usuwanie i Wstawianie funkcji <xref:System.Web.UI.WebControls.FormView> działanie sterowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości w celu określenia pola klucza dla źródła danych jest powiązany z <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb wprowadzania danych, do którego <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli zwraca po aktualizacji, Wstaw lub Anuluj operację.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości. Wartość domyślna to <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.FormView> kontroli zwraca do edycji, wstawiania lub w trybie tylko do odczytu po aktualizacji, wstawiania lub operacji anulowania jest wykonywana. Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu tylko do odczytu; jednak można zachować <xref:System.Web.UI.WebControls.FormView> kontroli w edycji lub tryb wstawiania przez ustawienie dla tej właściwości na odpowiednią wartość. W poniższej tabeli wymieniono wartości innego trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie edycji, który umożliwia użytkownikowi zaktualizować wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który zezwala użytkownikowi na dodawanie nowych rekordów do źródła danych.|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest tryb wyświetlania normalnego.|  
  
 Ta właściwość jest zwykle używana, gdy <xref:System.Web.UI.WebControls.FormView> formant ma jeden cel, takich jak tylko do wstawienia lub edytowania rekordów.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości, aby zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie edycji po wykonaniu operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa rekord bieżący w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodę, aby usunąć programowo z bieżącym rekordem <xref:System.Web.UI.WebControls.FormView> formantu ze źródła danych. Ta metoda jest często stosowany podczas należy usunąć bieżący rekord z poza <xref:System.Web.UI.WebControls.FormView> kontrolowane, na przykład wyświetlanie inny formant na stronie. Wywołanie tej metody również zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleted> i <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodę, aby usunąć programowo z bieżącym rekordem <xref:System.Web.UI.WebControls.FormView> formantu ze źródła danych.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie wywoływanej, gdy formant wykonuje operację usuwania.</summary>
        <value>Nazwa metody na stronie wywoływanej, gdy formant wykonuje operację usuwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Samouczek serii na użyciu wiązania modelu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla elementu w trybie edycji.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest w trybie edycji. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontroli renderuje innego szablonu dla wiersza danych na podstawie bieżącego trybu formantu (określonego przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> wiersz właściwości do zdefiniowania własnego interfejsu użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji. Edytuj szablon elementu zwykle zawiera kontrolki wejściowe dla użytkownika zaktualizować wartości istniejącego rekordu, a także przyciski poleceń w celu zaktualizowania rekordu, a do anulowania operacji aktualizacji.  
  
 Aby określić szablon niestandardowy, najpierw `<EditItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<EditItemTemplate>` tagów. Przy użyciu wyrażenia Wiązanie dwukierunkowe, pole można skojarzyć z kontrolki wprowadzania. Dzięki temu <xref:System.Web.UI.WebControls.FormView> formantu, aby automatycznie wyświetlić oryginalną wartość pola w skojarzonym formancie wejściowego w trybie edycji. Podczas aktualizacji rekordu <xref:System.Web.UI.WebControls.FormView> formant automatycznie wyodrębnia wartości pola zaktualizowane z skojarzone kontrolki wprowadzania. Aby uzyskać więcej informacji na wyrażeniach Wiązanie dwukierunkowe, zobacz [powiązanie z baz danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski poleceń, które wykonują operacje aktualizacji i Anuluj wbudowanych, Dodaj formant przycisku polecenia do szablonu z jego `CommandName` właściwości ustawione na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Aktualizacja|"Update"|  
  
 Można sterować wyglądem szablon elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób definiowania szablonu niestandardowego dla wiersza danych w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd danych wiersza, kiedy <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest w trybie edycji.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> czy reprezentuje styl danych wiersz kiedy <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest w trybie edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> właściwości, aby sterować wyglądem danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji. Gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji, wiersz danych wyświetla zawartość zdefiniowane przez użytkownika określonego przez <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `EditRowStyle-ForeColor`).  
  
-   Gniazdo `<EditRowStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `EditRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> wiersz do określenia stylu niestandardowego dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu pustym wierszu danych wyświetlane, gdy powiązany ze źródłem danych <see cref="T:System.Web.UI.WebControls.FormView" /> formantu nie zawiera żadnych rekordów.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> pozwala to określić wygląd pustym wierszu danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości, aby sterować wyglądem pustym wierszu danych w <xref:System.Web.UI.WebControls.FormView> formantu. Pustym wierszu danych jest wyświetlane, gdy powiązany do kontroli źródła danych nie zawiera żadnych rekordów. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `EmptyDataRowStyle-ForeColor`).  
  
-   Gniazdo `<EmptyDataRowStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `EmptyDataRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości w celu określenia stylu niestandardowego dla pustym wierszu danych wyświetlane, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, która nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowane przez użytkownika do renderowania pustym wierszu danych, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana ze źródłem danych, która nie zawiera żadnych rekordów.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla pustym wierszu danych. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pustym wierszu danych jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych, które jest powiązane z formantem nie zawiera żadnych rekordów. Możesz definiować własnego niestandardowego interfejsu użytkownika (UI) dla pustym wierszu danych za pomocą <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości. Aby określić niestandardowy szablon dla pustym wierszu danych, należy najpierw umieścić `<EmptyDataTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<EmptyDataTemplate>` tagów. Aby kontrolować styl pustym wierszu danych, użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Można również użyć wbudowanego interfejsu użytkownika dla pustym wierszu danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> i <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości ma pierwszeństwo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób definiowania szablonu niestandardowego dla pustym wierszu danych wyświetlane, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, która nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w pustym wierszu danych renderowane podczas obliczania <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana ze źródłem danych, która nie zawiera żadnych rekordów.</summary>
        <value>Tekst wyświetlany w pustym wierszu danych. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pustym wierszu danych jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych, które jest powiązane z formantem nie zawiera żadnych rekordów. Użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości w celu określenia tekst wyświetlany w pustym wierszu danych. Aby kontrolować styl pustym wierszu danych, użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla pustym wierszu danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> i <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości ma pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości w celu określenia tekst wyświetlany w pustym wierszu danych.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolki modułu walidacji obsługi wyjątków, które podczas wstawiania lub operacje aktualizacji.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolki modułu walidacji obsługi wyjątków, które podczas wstawiania lub zaktualizować operacji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawia, że niektóre który <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana z danymi, gdy jest to konieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Metoda jest używana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> klasy upewnij się, że <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana z danymi, gdy jest to konieczne. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Zazwyczaj wywoływana jest metoda podczas <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> metody do powiązania kontrolki do źródła danych, gdy formant powiązany z danymi nie jest jeszcze powiązany, ale wymaga powiązania danych. Ta wersja metody została zastąpiona zapobiegające wiązania danych wystąpienia podczas <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Używany do przechowywania wartości pola z bieżącego elementu danych.</param>
        <param name="includeKeys">
          <see langword="true" /> Aby uwzględnić pola klucza; w przeciwnym razie <see langword="false" />.</param>
        <summary>Pobiera wartości każdego pola zadeklarowane w wierszu danych i zapisuje je w określonym <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu można pobrać wartości każdego pola zadeklarowany w obrębie wiersza danych. Ponieważ wiersz danych wyświetla inny szablon, w oparciu o bieżący tryb, ta metoda pobiera zadeklarowane w szablonie, który odpowiada bieżący tryb tylko wartości pól. W poniższej tabeli przedstawiono dostępne tryby i odpowiednie szablony.  
  
|Tryb|Szablon|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Można określić, czy wartości wyodrębnionego zawierać lub pól klucza przy użyciu `includeKeys` parametru.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własną procedury można pobrać wartości pól.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopka jest wyświetlana w dolnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwości programowo dostępu <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz stopki.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersza stopki w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowo manipulować wiersza stopce strony, na przykład podczas dodawania niestandardowych zawartości. Wszelkie zmiany <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwość musi zostać wykonana po <xref:System.Web.UI.WebControls.FormView> kontroli zostało wyrenderowane, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
 Aby kontrolować styl stopki wiersza, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwości programowo modyfikowanie właściwości wiersza stopki podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu w wierszu stopki <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl stopki wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopka jest wyświetlana w dolnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości, aby sterować wyglądem wiersza stopki w <xref:System.Web.UI.WebControls.FormView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `FooterStyle-ForeColor`).  
  
-   Gniazdo `<FooterStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `FooterStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości w celu określenia stylu niestandardowego dla stopki wiersza.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowane przez użytkownika dla wiersza stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla stopki wiersza. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopka jest wyświetlana w dolnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Możesz definiować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza stopki za pomocą <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości. Aby określić szablon niestandardowy dla wiersza stopce strony, należy najpierw umieścić `<FooterTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<FooterTemplate>` tagów. Aby kontrolować styl stopki wiersza, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie można po prostu wyświetlić tekst w wierszu stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.FooterText%2A> i <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości ma pierwszeństwo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości, aby zdefiniować szablon niestandardowy do renderowania stopki wiersza.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do wyświetlenia w wierszu stopki <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Tekst do wyświetlenia w wierszu stopki. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopka jest wyświetlana w dolnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości w celu określenia tekst do wyświetlenia w wierszu stopki. Aby kontrolować styl stopki wiersza, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.FooterText%2A> i <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości ma pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości w celu określenia tekst do wyświetlenia w wierszu stopki.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.GridLines" /> wartości. Wartość domyślna to <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwości w celu określenia styl linii siatki <xref:System.Web.UI.WebControls.FormView> formantu. W poniższej tabeli wymieniono dostępne style.  
  
|Styl|Opis|  
|-----------|-----------------|  
|`GridLines.None`|Linie siatki nie są wyświetlane.|  
|`GridLines.Horizontal`|Wyświetla tylko poziome linie siatki.|  
|`GridLines.Vertical`|Wyświetla tylko pionowych linii siatki.|  
|`GridLines.Both`|Wyświetla poziome i pionowe siatki.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwość, aby wyświetlić poziome i pionowe siatki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz nagłówków w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz nagłówków w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagłówek jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości programowo dostępu <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz nagłówka.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersz nagłówków w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowo manipulować wiersz nagłówka, na przykład podczas dodawania niestandardowej zawartości. Wszelkie zmiany <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwość musi zostać wykonana po <xref:System.Web.UI.WebControls.FormView> kontroli zostało wyrenderowane, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości programowo modyfikowanie właściwości wiersz nagłówka podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu w wierszu nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersz nagłówków w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagłówek jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości, aby sterować wyglądem wiersz nagłówków w <xref:System.Web.UI.WebControls.FormView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `HeaderStyle-ForeColor`).  
  
-   Gniazdo `<HeaderStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `HeaderStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości w celu określenia stylu niestandardowego nagłówka wiersza.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowane przez użytkownika w wierszu nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla nagłówka wiersza. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagłówek jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Możesz definiować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza nagłówka przy użyciu <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości. Aby określić szablon niestandardowy dla wiersza nagłówka, należy najpierw umieścić `<HeaderTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<HeaderTemplate>` tagów. Aby kontrolować styl wiersz nagłówka, użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie można po prostu wyświetlić tekst w wierszu nagłówka przez ustawienie <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> i <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości ma pierwszeństwo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości, aby zdefiniować szablon niestandardowy do renderowania nagłówka wiersza.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do wyświetlenia w wierszu nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Tekst do wyświetlenia w wierszu nagłówka. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagłówek jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości w celu określenia tekst do wyświetlenia w wierszu nagłówka. Aby kontrolować styl wiersz nagłówka, użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza nagłówka przez ustawienie <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> i <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości ma pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości w celu określenia tekst do wyświetlenia w wierszu nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie w poziomie <see cref="T:System.Web.UI.WebControls.FormView" /> formantu na stronie.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> wartości. Wartość domyślna to <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> właściwości w celu określenia wyrównanie poziome <xref:System.Web.UI.WebControls.FormView> formantu na stronie. W poniższej tabeli wymieniono style różnych wyrównanie w poziomie.  
  
|Wartość HorizontalAlign|Opis|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Wyrównanie poziome <xref:System.Web.UI.WebControls.FormView> formantu nie została ustawiona.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany na stronie.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> Kontroli skupia się na stronie.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany do prawej strony.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany do lewego i prawego marginesu strony.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> właściwości, aby określić, że <xref:System.Web.UI.WebControls.FormView> formant powinien być wyśrodkowany na stronie.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Zawiera wiersz modułu stronicowania.</param>
        <param name="pagedDataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> zawierający dane dla bieżącej strony.</param>
        <summary>Tworzy wiersz pagera <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantami modułu stronicowania wiersza. Tworzy <xref:System.Web.UI.WebControls.TableCell> obiekt, który zawiera formanty nawigacji za pomocą właściwości <xref:System.Web.UI.WebControls.PagedDataSource> obiektów zawartych w `pagedDataSource` parametru. Komórka jest dodawane do wiersza określony przez `row` parametru.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własny wiersz modułu stronicowania.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Zainicjować.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> sterowania, zainicjować określonego <xref:System.Web.UI.WebControls.FormViewRow> obiektu. <xref:System.Web.UI.WebControls.FormViewRow> Zainicjować obiektu na podstawie typu wiersz i wiersz stanu określonego przez jego <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> i <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> właściwości, odpowiednio. Odpowiednia zawartość jest dodawane do <xref:System.Web.UI.WebControls.FormViewRow> obiektu. W poniższej tabeli opisano, jak każdego typu wiersz został zainicjowany.  
  
|Typ wiersza|Opis|  
|--------------|-----------------|  
|Wiersz danych|Zawartość <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, lub <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości są dodawane do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od wartości <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> właściwości.|  
|Pustym wierszu danych|Wartość <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości lub zawartość <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość została ustawiona. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości ma pierwszeństwo.|  
|Wiersz stopki|Wartość <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości lub zawartość <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość została ustawiona. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości ma pierwszeństwo.|  
|Wiersz nagłówka|Wartość <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości lub zawartość <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość została ustawiona. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości ma pierwszeństwo.|  
  
> [!NOTE]
>  Ta metoda nie inicjuje wiersza modułu stronicowania. Aby utworzyć wiersza pagera, użyj <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własne niestandardowe wiersza.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> do wykonywania sprawdzania poprawności strony, gdy wywoływana jest metoda; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wstawia bieżącego rekordu w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania, użyj <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metodę programowane Wstawianie bieżącego rekordu w źródle danych. Ta metoda jest często stosowany podczas należy wstawić bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> kontrolowane, na przykład wyświetlanie inny formant na stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formantu musi być w trybie wstawiania, gdy ta metoda jest wywołana; w przeciwnym razie <xref:System.Web.HttpException> jest generowany.  
  
 Aby określić, czy strona sprawdzania poprawności jest wykonywane przed wykonaniem operacji insert, użyj `causesValidation` parametru. Wywołanie tej metody również zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted> i <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> do wstawienia programowo z bieżącym rekordem <xref:System.Web.UI.WebControls.FormView> kontroli źródła danych.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest w trybie wstawiania.  - lub - <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla elementu w trybie wstawiania.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest w trybie wstawiania. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontroli renderuje innego szablonu dla wiersza danych na podstawie bieżącego trybu formantu (określonego przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> wiersz właściwości do zdefiniowania własnego interfejsu użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania. Szablon elementu insert zwykle zawiera kontrolki wejściowe dla użytkownika, wprowadź wartości dla nowego rekordu, jak również polecenia przycisków do wstawienia rekordu i anulowania operacji insert.  
  
 Aby określić szablon niestandardowy, najpierw `<InsertItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<InsertItemTemplate>` tagów. Przy użyciu wyrażenia Wiązanie dwukierunkowe, pole można skojarzyć z kontrolki wprowadzania. Po wstawieniu rekordu <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie pobiera wartość pola z skojarzone kontrolki wprowadzania. Aby uzyskać więcej informacji na wyrażeniach Wiązanie dwukierunkowe, zobacz [powiązanie z baz danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski poleceń, wykonaj wbudowanych Anuluj i liczba operacji wstawienia, należy dodać kontrolkę przycisku polecenia do szablonu o jego `CommandName` właściwości ustawione na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Insert|"Insert"|  
  
 Można sterować wyglądem szablon elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób definiowania szablonu niestandardowego dla wiersza danych w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie wywoływanej, gdy formant wykonuje operację wstawiania.</summary>
        <value>Nazwa metody na stronie wywoływanej, gdy formant wykonuje operację wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Samouczek serii na użyciu wiązania modelu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy formant jest w trybie wstawiania.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy formant jest w trybie wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> właściwości, aby sterować wyglądem danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania. Gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania, wiersz danych wyświetla zawartość zdefiniowane przez użytkownika określonego przez <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca.  
  
 Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `InsertRowStyle-ForeColor`).  
  
-   Gniazdo `<InsertRowStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `InsertRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> wiersz do określenia stylu niestandardowego dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ danych do sprawdzenia.</param>
        <summary>Określa, czy określony typ danych może być powiązana z polem <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli określony typ danych może być powiązana z polem w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby określić, czy określony typ danych może być powiązana z polem w formancie. <xref:System.Web.UI.WebControls.FormView> Sterowanie obsługuje następujące typy danych:  
  
-   Wszystkie dane pierwotne typy, takich jak <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>i tak dalej.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można przesłonić tę metodę, aby dodać lub ograniczyć typy danych, które mogą być używane w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk w <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> Zdarzenie jest zgłaszane, gdy przycisk w <xref:System.Web.UI.WebControls.FormView> formant zostanie kliknięty. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
 Przyciski w <xref:System.Web.UI.WebControls.FormView> formantu można także wywoływać niektórych wbudowanych funkcji formantu. Aby wykonać jedną z tych operacji, należy ustawić `CommandName` właściwość przycisku do jednej z wartości w tabeli poniżej.  
  
|Wartość CommandName|Opis|  
|-----------------------|-----------------|  
|"Cancel"|Anuluje operację edycji i wstawiania i zwraca <xref:System.Web.UI.WebControls.FormView> formantu określony przez tryb <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości. Zgłasza <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Delete"|Umożliwia usunięcie bieżącego rekordu. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleted> i <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia.|  
|"Edit"|Umieszcza <xref:System.Web.UI.WebControls.FormView> formant w trybie edycji. Zgłasza <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Insert"|Wstawia bieżącego rekordu w źródle danych. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted> i <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia.|  
|"New"|Umieszcza <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania. Zgłasza <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Page"|Wykonuje operację stronicowania. Ustaw `CommandArgument` właściwość przycisk "Pierwszy", "Last", "Dalej", "Prev" lub numer strony, aby określić typ operacji stronicowania, do wykonania. Zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenia.|  
|"Update"|Aktualizuje bieżącego rekordu w źródle danych. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated> i <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia.|  
  
 Mimo że <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzenie jest wywoływane po kliknięciu przycisku wymienione w powyższej tabeli, zaleca się, że używasz zdarzenia wymienione w tabeli dla operacji.  
  
 A <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić nazwę polecenia i argumentów polecenia kliknięciu przycisku. Aby określić nazwę polecenia i argumentów polecenia, użyj <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> i <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwości, odpowiednio. Można także przejść do formantu, który wywołał zdarzenie przy użyciu <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzeń do obsługi kliknięcie przycisku w <xref:System.Web.UI.WebControls.FormView> formantu. Gdy użytkownik kliknie przycisk Dodaj, aktualnie wyświetlanego elementu zostanie dodane do <xref:System.Web.UI.WebControls.ListBox> formantu.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utworzeniu wszystkie wiersze w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCreated> Zdarzenie jest wywoływane po utworzeniu wszystkie wiersze w <xref:System.Web.UI.WebControls.FormView> formantu. Może to występować, gdy renderowania formantu, lub gdy użytkownik przechodzi do innego rekordu. To zdarzenie służy do nadania metody obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak dodawanie do lub modyfikowania zawartości wiersza, przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ItemCreated> Zdarzenie występuje przed <xref:System.Web.UI.WebControls.FormView> formant jest powiązany z danymi. Aby zmodyfikować wartość pole powiązane, należy użyć <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> zdarzeń.  
  
 Można uzyskać dostępu do wierszy Nagłówek, stopka i pagera w <xref:System.Web.UI.WebControls.FormView> formantu przy użyciu <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, lub <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości, odpowiednio. Aby uzyskać dostęp do wiersza danych, należy użyć <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń, aby zaktualizować tekst <xref:System.Web.UI.WebControls.Label> kontroli zawarte w tym wierszu modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Usuń, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale po operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenie, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość "Delete") w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli umożliwia usunięcie rekordu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyniki operacji delete, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów i wszystkie zgłoszone wyjątki, które mogły wystąpić. Aby określić liczbę zmodyfikowanych przez operację usuwania rekordów, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wyjątki. Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> właściwości. Jeśli chcesz uzyskać dostęp pary nazwa/wartość z pola klucza i pola klucza usuniętego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> właściwości, odpowiednio.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji usuwania.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Usuń, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale przed wykonaniem operacji delete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenie, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość "Delete") w formancie zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli umożliwia usunięcie rekordu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie rekordu przed jego usunięciem, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić indeksu Trwa usuwanie rekordu i wskazują, że można anulować operację usuwania. Aby określić indeks rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> właściwości. Aby anulować operację usuwania, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`. Mogą również korzystać za pomocą pola klucza i pola klucza <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> właściwości, odpowiednio.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzeń, aby anulować operację usuwania.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk wstawiania w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale po wykonaniu operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość "Insert") w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. Umożliwia to metoda obsługi zdarzeń, który wykonuje procedury niestandardowych, takich jak sprawdzanie wyniki operacji wstawiania przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów i wszystkie zgłoszone wyjątki, które mogły wystąpić. Aby określić liczbę rekordów wpływ operacji insert, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wyjątki. Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości. Aby uzyskać dostęp do wartości wstawionego rekordu, należy użyć <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po wykonaniu operacji wstawiania. Aby zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trybie wstawiania, ustaw <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk wstawiania w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale przed wykonaniem operacji insert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość "Insert") w formancie zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak HTML kodowanie wartości rekordu przed wstawieniem w źródle danych, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić wartość argumentu opcjonalne polecenia wysyłane do <xref:System.Web.UI.WebControls.FormView> kontroli i wskazać, czy można anulować operacji insert. Odpowiada wartości argumentów polecenia `CommandArgument` właściwość przycisk Wstaw. Gdy `CommandArgument` właściwość przycisku Wstaw wartość, użyj <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> właściwości, aby określić wartość argumentu polecenia. Aby anulować operację wstawiania, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`. Można odczytywać lub modyfikować wartości pól w nowym rekordzie za pomocą <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzeń, aby anulować operację wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy formant jest w trybie tylko do odczytu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest w trybie tylko do odczytu. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontroli renderuje innego szablonu dla wiersza danych na podstawie bieżącego trybu formantu (określonego przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> wiersz właściwości do zdefiniowania własnego interfejsu użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu. Szablon elementu zwykle zawiera formanty do wyświetlania wartości pola rekordu, a także polecenia przycisków na edytowanie, wstawianie i usuwanie rekordu.  
  
 Aby określić szablon niestandardowy, najpierw `<ItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<ItemTemplate>` tagów. Aby wyświetlić wartości pola powiązane z formantem źródła danych, użyj wyrażenia wiązania danych. Aby uzyskać więcej informacji na wyrażenia wiązania danych, zobacz [składni wyrażenia wiązania danych](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Aby utworzyć przyciski umożliwiające wykonywanie wbudowanych delete, edytowanie i nowych rekordów operacji, Dodaj formant przycisku polecenia do szablonu z jego `CommandName` właściwości ustawione na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Usuwanie|"Delete"|  
|Edytowanie|"Edit"|  
|New|"New"|  
  
 Można sterować wyglądem szablon elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób definiowania szablonu niestandardowego dla wiersza danych w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Aktualizuj, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale po wykonaniu operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość "Update") w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> kontroli aktualizacji rekordu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyników operacji aktualizacji, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów i wszystkie zgłoszone wyjątki, które mogły wystąpić. Aby określić liczbę rekordów dotyczy operacji aktualizacji, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wyjątki. Można również określić, czy wyjątek został obsłużony w metoda obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości. Jeśli trzeba uzyskać dostępu do wartości pola klucza zaktualizowanych rekordów, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwości. Wartości pól klucza oryginalny i zaktualizowany można uzyskać dostęp za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> i <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> właściwości, odpowiednio.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> kontroli powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po wykonaniu operacji aktualizacji. Aby zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji, ustaw <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji update.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Aktualizuj, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> formant zostanie kliknięty, ale przed wykonaniem operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość "Update") w formancie zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> kontroli aktualizacji rekordu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak HTML kodowanie wartości rekordu przed zaktualizowaniem w źródle danych, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić wartość argumentu opcjonalne polecenia wysyłane do <xref:System.Web.UI.WebControls.FormView> kontroli i wskaż, czy można anulować operacji aktualizacji. Odpowiada wartości argumentów polecenia `CommandArgument` właściwość przycisk Aktualizuj. Gdy `CommandArgument` ustawiono właściwość przycisk Aktualizuj, użyj <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> właściwości, aby określić wartość argumentu polecenia. Aby anulować operację aktualizacji, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`. Można także odczytywać lub modyfikować nowe wartości wprowadzonej przez użytkownika za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwości. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Właściwość zawiera pola klucza, podczas gdy <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwość zawiera pola klucza. Jeśli potrzebujesz dostępu oryginalnych wartości pola klucza, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzeń, aby anulować operację aktualizowania.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości formantu, które muszą zostać utrwalony, nawet wtedy, gdy <see cref="P:System.Web.UI.Control.EnableViewState" /> właściwość jest ustawiona na <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> Metoda jest używana do ładowania stanu <xref:System.Web.UI.WebControls.FormView> właściwości formantu, które muszą zostać utrwalony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `false`.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</param>
        <summary>Ładuje wcześniej zapisany widok stanu <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> Metoda jest używana do ładowania widoku uprzednio zapisanego stanu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować przełączników między edycji, wstawiania i tryb tylko do odczytu, ale po zmianie trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanged> Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.FormView> kontroli próbuje przełączyć się między edycji, wstawiania i tryb tylko do odczytu, ale po faktycznie zmiany trybu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak synchronizacja <xref:System.Web.UI.WebControls.FormView> formantu z innego formantu przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzeń, aby wyświetlić bieżący tryb w wierszu nagłówka <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować przełączników między edycji, wstawiania i tryb tylko do odczytu, ale przed zmianą trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanging> Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.FormView> kontroli próbuje przełączyć się między edycji, wstawiania i tryb tylko do odczytu, ale przed faktycznie zmiany trybu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak konfigurowanie <xref:System.Web.UI.WebControls.FormView> kontroli dla określonego trybu lub anulowanie zmiana trybu przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewModeEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić trybu, do którego <xref:System.Web.UI.WebControls.FormView> kontroli jest przełączania, aby określić, czy <xref:System.Web.UI.WebControls.FormView.ModeChanging> wywołano zdarzenie wyniku użytkownika anulowanie operacji edycji lub Aby wskazać, że można anulować operację wstawiania. Aby określić nowy tryb, użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> właściwości. Można również użyć <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> właściwości, aby przełączyć do trybu alternatywnego przez ustawienie jej na jeden z <xref:System.Web.UI.WebControls.FormViewMode> wartości wyliczenia. Użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> właściwości w celu określenia, czy użytkownik anulował operację edycji. Aby anulować operację wstawiania, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanging> wiersz zdarzeń, aby ukryć pagera, gdy <xref:System.Web.UI.WebControls.FormView> kontrolować przejścia do trybu edycji.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy reguły stylu CSS specyficzna dla tabeli, które są skojarzone z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu są ustawione na wartości domyślne.</summary>
        <returns>Domyślne reguły stylu CSS skojarzonych z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reguły stylu CSS specyficzna dla tabeli są ustawione wartości domyślne przy użyciu <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> i <xref:System.Web.UI.WebControls.Style.Font%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Obsługuje zdarzenie przekazywane hierarchii formantu.</summary>
        <returns>
          <see langword="true" /> Aby wskazać, że zdarzenia mają być przekazywane dodatkowe hierarchii kontroli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Metoda jest używana przez formant do opcjonalnie obsługi zdarzeń przekazywane hierarchii kontroli przez <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metody. Określa, czy do obsługi zdarzenia przez sprawdzenie właściwości <xref:System.EventArgs> obiektów zawartych w `e` parametru. Gdy zdarzenie musi zostać obsłużony, metoda wykonuje odpowiednie działanie. Inne zdarzenia, są ignorowane i przekazywane w hierarchii formantu. Ta metoda określa, czy do przekazywania zdarzenia dalsze hierarchii kontroli za pośrednictwem jego wartości zwracanej.  
  
 <xref:System.Web.UI.WebControls.FormView> Formant przesłania Podstawowa implementacja tej metody, aby wykonać odpowiednie działania, gdy jeden z przycisków rozpoznany przez formant zostanie kliknięty. W poniższej tabeli wymieniono przyciski polecenia, aby <xref:System.Web.UI.WebControls.FormView> formant.  
  
|Przycisk|Wartość CommandName|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Używane w aktualizacji lub operacji wstawiania, aby anulować operację i odrzucić wartości wprowadzonej przez użytkownika. <xref:System.Web.UI.WebControls.FormView> Kontrolować następnie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości.|  
|Usuwanie|"Delete"|Używane w operacji usuwania wyświetlanych usunięty ze źródła danych. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleting> i <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia.|  
|Edytowanie|"Edit"|Używane podczas operacji aktualizowania umieścić <xref:System.Web.UI.WebControls.FormView> formant w trybie edycji. Zawartość określona w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwość jest wyświetlana dla wiersza danych.|  
|Insert|"Insert"|Używany w operacji wstawiania próbę wstawić nowy rekord w źródle danych przy użyciu wartości podanego przez użytkownika. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserting> i <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia.|  
|New|"New"|Używany w operacji wstawiania do put <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania. Zawartość określona w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwość jest wyświetlana dla wiersza danych.|  
|Strona|"Page"|Używana w operacjach stronicowania do reprezentowania przycisk w wierszu pagera, który wykonuje stronicowania. Aby określić stronicowanie, ustaw `CommandArgument` właściwość przycisk "Dalej", "Prev", "Pierwszy", "Ostatni" lub indeks strony, do którego należy przejść. Zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia. **Uwaga:** ten typ przycisku jest zwykle używany tylko w szablonie modułu stronicowania.|  
|Aktualizacja|"Update"|Używane podczas operacji aktualizowania aby podjąć próbę zaktualizowania rekordu wyświetlanych w źródle danych przy użyciu wartości podanego przez użytkownika. Zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdating> i <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia.|  
  
 Ta wersja metoda zwraca `true` gdy jeden z tych przycisków jest obsługiwane. Aby uzyskać więcej informacji o wystąpieniu zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę do obsługi własnych zdarzeń. Upewnij się, że Użyj wartości zwracanej, aby wskazać, czy zdarzenia mają być przekazywane dodatkowe hierarchii kontroli.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.Control.Init> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operację usuwania i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operację wstawiania i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operację aktualizacji i obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, Zmień tryb nie zostało anulowane i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> formantu, aby podnieść <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, stronicowanie nie zostało anulowane i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera całkowitą liczbę stron wymaganych do wyświetlania każdego rekordu w źródle danych.</summary>
        <value>Liczba elementów w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości w celu określenia całkowita liczba rekordów w źródle danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.Web.UI.WebControls.FormView> formant zawiera tylko jeden rekord w czasie, ta wartość odpowiada całkowita liczba stron wymaganych do wyświetlania każdego rekordu w źródle danych. Ta wartość nie jest dokładne dopiero po wystąpieniu powiązania danych.  
  
 Aby określić indeks bieżącego rekordu ze źródła danych, użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości w celu określenia całkowita liczba rekordów wyświetlanych w formancie.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wyświetlaną stronę.</summary>
        <value>Liczony od zera indeks elementu danych wyświetlany w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości, aby określić indeks aktualnie wyświetlanego rekordu. Ta właściwość umożliwia również programowo zmienić wyświetlany rekord.  
  
> [!NOTE]
>  Po włączeniu funkcji stronicowania, umożliwia także tej właściwości do określenia strony liczby wyświetlane; należy jednak pamiętać, że ta właściwość jest liczony od zera.  
  
 Aby określić całkowitą liczbę elementów w źródle danych, użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości w celu określenia indeksu strony wyświetlany rekord.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmiany właściwości po zakończeniu operacji stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenie, gdy przycisk pagera (przycisk z jego `CommandName` właściwość "Page") w formancie zostanie kliknięty, ale po <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  To zdarzenie nie jest wywoływane, gdy programowane Ustawianie <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Przycisków modułu stronicowania zwykle znajdują się w wierszu pagera <xref:System.Web.UI.WebControls.FormView> formantu. To zdarzenie jest często używane do synchronizowania <xref:System.Web.UI.WebControls.FormView> sterować za pomocą <xref:System.Web.UI.WebControls.GridView> kontroli lub ustawienie zachowania <xref:System.Web.UI.WebControls.FormView> kontroli po operacji stronicowania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzeń do zwrócenia <xref:System.Web.UI.WebControls.FormView> do trybu tylko do odczytu, gdy użytkownik przechodzi do innego rekordu.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmiany właściwości przed operacji stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenie, gdy przycisk pagera (przycisk z jego `CommandName` właściwość "Page") w formancie zostanie kliknięty, ale przed wysłaniem <xref:System.Web.UI.WebControls.FormView> formantu obsługuje stronicowanie. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak anulowanie operacji stronicowania, przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  To zdarzenie nie jest wywoływane, gdy programowane Ustawianie <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Przycisków modułu stronicowania zwykle znajdują się w wierszu pagera <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 A <xref:System.Web.UI.WebControls.FormViewPageEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić indeksu strony wybranego przez użytkownika i wskazują, że można anulować operacji stronicowania. Aby określić indeks strony wybranego przez użytkownika, użyj <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> właściwości. Aby anulować operację stronicowanie, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.FormViewPageEventArgs> do obiektu `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzeń, aby anulować operację stronicowania.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> obiekt, który służy do ustawiania właściwości przycisków modułu stronicowania w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> który umożliwia ustawienie właściwości przycisków modułu stronicowania w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości do kontrolowania ustawień na wiersz pagera <xref:System.Web.UI.WebControls.FormView> formantu. Wiersz pagera jest wyświetlane, gdy jest włączona funkcja stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera formanty, które umożliwiają użytkownikom przechodzenie do różnych rekordów w formancie. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.PagerSettings> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.PagerSettings> obiektu (na przykład `PagerSettings-Mode`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `PagerSettings.Mode`). Typowe ustawienia obejmują zazwyczaj tryb wyświetlania wiersza pagera i niestandardowego tekstu lub obrazów dla formantów nawigacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości w celu określenia właściwości wiersza modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu wierszy pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości, aby sterować wyglądem wiersza pagera w <xref:System.Web.UI.WebControls.FormView> formantu. Wiersz pagera jest wyświetlane, gdy jest włączona funkcja stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera formanty, które umożliwiają użytkownikowi nawigację do różnych stron w formancie. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `PagerStyle-ForeColor`).  
  
-   Gniazdo `<PagerRowStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `PagerStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości w celu określenia ustawienia stylu dla wierszy modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla wiersza pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla wiersza modułu stronicowania. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz pagera jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy jest włączona funkcja stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na wartość true). Wiersz pagera zawiera formanty, które umożliwiają użytkownikowi nawigację do różnych stron w formancie. Zamiast używać wbudowanych pagera wiersza interfejsu użytkownika (UI), możesz definiować własnego interfejsu użytkownika za pomocą <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> ustawiono właściwość zastępuje on wiersza pagera wbudowanego interfejsu użytkownika.  
  
 Aby określić szablon niestandardowy dla wiersza pagera, należy najpierw umieścić `<PagerTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<PagerTemplate>` tagów. Aby sterować wyglądem wiersza pagera, użyj <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości.  
  
 Zazwyczaj kontrolki przycisku są dodawane do szablonu modułu stronicowania w celu wykonania operacji stronicowania. <xref:System.Web.UI.WebControls.FormView> Formant wykonuje operację stronicowania po formantu przycisku o jego `CommandName` właściwość "Page" zostanie kliknięty. Przycisk `CommandArgument` właściwość określa typ operacji stronicowania do wykonania. W poniższej tabeli wymieniono wartości argumentów polecenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> formantu.  
  
|Wartość CommandArgument|Opis|  
|---------------------------|-----------------|  
|"Dalej"|Przechodzi do następnej strony.|  
|"Poprzedni"|Powoduje przejście do poprzedniej strony.|  
|"Pierwszy"|Powoduje przejście do pierwszej strony.|  
|"Ostatni"|Powoduje przejście do ostatniej strony.|  
|Wartość całkowita|Przechodzi do strony o określonym numerze.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób definiowania szablonu niestandardowego modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IEnumerable" /> Reprezentujący źródło danych.</param>
        <summary>Jest powiązany z określonego źródła danych do <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu można powiązać z określonego źródła danych do formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> metody jest zapieczętowany, powinny przesłaniać tę metodę, jeśli należy wykonać wszelkie dodatkowe zadania podczas wiązania danych.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia w górę hierarchii kontroli <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby skonfigurować hierarchię kontroli w <xref:System.Web.UI.WebControls.FormView> kontrolować przed wyświetleniem formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia, z którym ma zostać utworzony <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> zdarzenie lub zdarzenia, które są wywoływane.</param>
        <summary>Uruchamia odpowiednie zdarzenia <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy ogłoszenia na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołań strony <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> metody po wystąpieniu zdarzenia odświeżania strony, który wywołuje odpowiednie zdarzenia <xref:System.Web.UI.WebControls.FormView> formantu. Po zakończeniu ładowania i zmień powiadomienie, ale przed prerendering występuje, to wywołanie występuje w cyklu życia strony. Ta metoda została zaimplementowana do utworzenia <xref:System.Web.UI.WebControls.CommandEventArgs> obiektu dla zdarzeń, które są wywoływane.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formant do rozszerzenia <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający strumienia wyjściowego do renderowania na kliencie.</param>
        <summary>Wyświetla <see cref="T:System.Web.UI.WebControls.FormView" /> sterowania na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.Render%2A> Metody jest używany do renderowania zawartość sterującą serwera do przeglądarki klienta przy użyciu określonego <xref:System.Web.UI.HtmlTextWriter> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant umieszcza HTML renderowanych w <see langword="table" /> element, aby móc zastosować style wbudowane.</summary>
        <value>
          <see langword="true" /> Jeśli formant umieszcza HTML renderowanych w <see langword="table" /> elementu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić właściwości stylu w tekście takich jak <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> dotyczą HTML, który jest renderowany formantu, ASP.NET umieszcza renderowany kod HTML w `table` elementu. Jeśli nie chcesz zewnętrznego `table` element do renderowania, ta właściwość jest ustawiona na `false`. W takim przypadku Jeśli spróbujesz ustawić wbudowanej właściwości stylu, które mają zastosowanie do całego kontroli, jest zwracany wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Reprezentujący wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości programowo dostępu <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz danych. Wiersz danych zawiera różne zawartości na podstawie szablonu renderowany bieżący tryb (określonego przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). Dostępne są tylko zawartość szablonu dla bieżącego trybu. W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.Row%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersza danych w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowo manipulować wiersza danych, na przykład podczas dodawania niestandardowych zawartości. Wszelkie zmiany <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwość musi zostać wykonana po <xref:System.Web.UI.WebControls.FormView> powiązaniu formantu z danymi, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwość, aby uzyskać dostęp do właściwości wiersza danych podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który umożliwia określenie wyglądu wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy formant jest w trybie tylko do odczytu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy formant jest w trybie tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> właściwości, aby sterować wyglądem danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu (wyświetlanie). Gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu, wiersz danych wyświetla zawartość zdefiniowane przez użytkownika określonego przez <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formantu w postaci `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `RowStyle-ForeColor`).  
  
-   Gniazdo `<RowStyle>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `RowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> wiersz do określenia stylu niestandardowego dla danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości formantu, które muszą zostać utrwalony, nawet wtedy, gdy <see cref="P:System.Web.UI.Control.EnableViewState" /> właściwość jest ustawiona na <see langword="false" />.</summary>
        <returns>Zwraca bieżący stan widoku formantu serwera. Jeśli stan jest niedostępny widok skojarzony z formantem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do zapisania stanu <xref:System.Web.UI.WebControls.FormView> właściwości formantu, które muszą zostać utrwalony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> właściwość jest ustawiona na `false`.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formant do rozszerzenia <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierającego zapisany stan <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby zapisać stan formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość klucza danych bieżącego rekordu w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Dane wartości z bieżącym rekordem klucza <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość jest ustawiona, <xref:System.Web.UI.WebControls.FormView> formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz wartość pola lub pól na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.DataKey> Obiekt reprezentuje klucz podstawowy lub pól dla bieżącego rekordu i są przechowywane w <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości. Zamiast <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwość, aby uzyskać dostęp do danych wartości klucza, można użyć <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwość jako skrót.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> wielu pól listy właściwości, ta właściwość zwraca wartość pierwszego pola, które są wymienione.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości w celu określenia wartości pola klucza.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks, który ma zostać ustawiona.</param>
        <summary>Ustawia indeks bieżącej strony w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Obiekt, który reprezentuje indeksu ekranu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.IDataItemContainer> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Zawsze zwraca wartość 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.IDataItemContainer> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Informuje o zdarzeniach dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy ogłoszenia na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołań strony <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> metody po wystąpieniu zdarzenia odświeżania strony. To wywołanie występuje w cyklu życia strony po zakończeniu ładowania i zmień powiadomienie, ale przed realizacją strony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę, która zawiera nazwy pól klucza podstawowego elementy, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Tablica zawierająca nazwy pól klucza podstawowego elementy, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę listy elementów danych, które <see cref="T:System.Web.UI.WebControls.FormView" /> wiąże kontroli, gdy źródło danych zawiera więcej niż jedną listę elementów danych.</summary>
        <value>Nazwa wykazu danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> wiąże formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera listę danych który <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</summary>
        <value>Obiekt, który zawiera listę danych który <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator formantu źródła danych, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</summary>
        <value>Identyfikator formantu źródła danych, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dane obiektu źródłowego, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</summary>
        <value>Obiekt źródła danych, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> pobiera kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt reprezentujący wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Obiekt reprezentujący wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Formant przycisku, który opublikowane strony do serwera.</param>
        <summary>Określa opcje zdarzenie ogłaszania zwrotnego strony dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>Opcje zdarzenie ogłaszania zwrotnego strony dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć <xref:System.Web.UI.PostBackOptions> obiekt, który zawiera opcje zdarzenie ogłaszania zwrotnego strony dla formantu. <xref:System.Web.UI.PostBackOptions> Obiekt jest zwykle używany jako parametr <xref:System.Web.UI.Page.GetPostBackEventReference%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt znajdujący się w <paramref name="buttonControl" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> Właściwość <paramref name="buttonControl" /> jest <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Zawsze zwraca <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A> Właściwość umożliwia strumienia wyjściowego do zapisu odpowiedni kod znaczników HTML dla <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić tę właściwość, aby określić, które <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość dla formantu pochodnych.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz pagera wyświetlany u góry <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz top pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), nazywany wierszem pagera dodatkowy wiersz jest automatycznie wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli. Wiersz pagera zawiera formanty, które umożliwiają użytkownikom przechodzić do innych rekordów i mogą być wyświetlane u góry, dolnej lub górnej i dolnej formantu. Użyj <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwości programowo dostępu <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz top pagera w <xref:System.Web.UI.WebControls.FormView> formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersza top pagera w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowo manipulować wiersza pagera top, na przykład podczas dodawania niestandardowych zawartości. Wszelkie zmiany <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwość musi zostać wykonana po <xref:System.Web.UI.WebControls.FormView> powiązaniu formantu powiązanego z danymi, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwości do wiersza pagera wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> formantu. Wiersz pagera jest następnie aktualizowany dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza punkt początkowy, od którego należy zacząć śledzenia i zapisywania stanu widoku zmieni się na <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zostanie przesłonięta można oznaczyć punkt początkowy, od której ma rozpocząć śledzenie i zapisywanie zmian do formantu jako część stan widoku formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> do wykonywania sprawdzania poprawności strony, gdy wywoływana jest metoda; w przeciwnym razie <see langword="false" />.</param>
        <summary>Aktualizuje bieżącego rekordu w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie edycji, użyj <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metodę programowo aktualizowania bieżącego rekordu w źródle danych. Ta metoda jest często stosowany podczas należy zaktualizować bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> kontrolowane, na przykład wyświetlanie inny formant na stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formantu musi być w trybie edycji, gdy ta metoda jest wywołana; w przeciwnym razie <xref:System.Web.HttpException> jest generowany.  
  
 Aby określić, czy strona sprawdzania poprawności jest wykonywane przed wykonaniem operacji aktualizacji, użyj `causesValidation` parametru. Wywołanie tej metody również zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated> i <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metody programowo zaktualizować rekord bieżący w <xref:System.Web.UI.WebControls.FormView> kontroli źródła danych.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest w trybie edycji.  - lub - <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie wywoływanej, gdy formant wykonuje operację aktualizowania.</summary>
        <value>Nazwa metody na stronie wywoływanej, gdy formant wykonuje operację aktualizowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Samouczek serii na użyciu wiązania modelu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>