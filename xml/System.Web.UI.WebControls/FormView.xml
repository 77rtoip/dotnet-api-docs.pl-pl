<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad692010f4442830c3129eec8b972e5ca7a37e88" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37594913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla wartości pojedynczy rekord ze źródła danych za pomocą szablonów zdefiniowanych przez użytkownika. <see cref="T:System.Web.UI.WebControls.FormView" /> Sterowanie umożliwia edytowanie, usuwanie i wstawianie rekordów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Szablony](#templates)  
  
-   [Powiązanie z danymi](#binding_to_data)  
  
-   [Operacje na danych](#data_operations)  
  
-   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)  
  
-   [Zdarzenia](#events)  
  
-   [Ułatwienia dostępu](#accessibility)  
  
-   [Stosowanie stylów CSS](#applying_styles)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.FormView> Formant jest używany do wyświetlania jeden rekord ze źródła danych. Jest on podobny do <xref:System.Web.UI.WebControls.DetailsView> kontrolować, z wyjątkiem Wyświetla zdefiniowanych przez użytkownika szablonów, zamiast pola wiersza. Tworzenie własnych szablonów zapewnia większą elastyczność w kontrolowaniu, jak dane są wyświetlane. <xref:System.Web.UI.WebControls.FormView> Kontrolka obsługuje następujące funkcje:  
  
-   Powiązanie z kontrolki źródła danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Wbudowane możliwości Wstawianie.  
  
-   Wbudowane aktualizowanie i usuwanie możliwości.  
  
-   Wbudowane możliwości stronicowania.  
  
-   Dostęp programowy do <xref:System.Web.UI.WebControls.FormView> modelu obiektów, aby dynamicznie ustawić właściwości, obsługa zdarzeń i tak dalej.  
  
-   Można dostosować wygląd za pomocą szablonów zdefiniowanych przez użytkownika, kompozycje i style.  
  
<a name="templates"></a>   
## <a name="templates"></a>Szablony  
 Aby uzyskać <xref:System.Web.UI.WebControls.FormView> sterowania do wyświetlania zawartości, należy utworzyć szablony dla różnych części kontrolki. Większość szablonów są opcjonalne; Jednakże należy utworzyć szablonu tryb, w którym skonfigurowano formantu. Na przykład <xref:System.Web.UI.WebControls.FormView> formant, który obsługuje Wstawianie rekordów musi mieć zdefiniowany szablon elementu insert. W poniższej tabeli wymieniono różne szablony, które można utworzyć.  
  
|Typ szablonu|Opis|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiuje zawartość dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji. Ten szablon zawiera zazwyczaj kontrolek wejściowych oraz przyciski poleceń, z którą użytkownik może edytować istniejący rekord.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiuje zawartość w pustym wierszu danych wyświetlony, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, który nie zawiera żadnych rekordów. Ten szablon zawiera zazwyczaj zawartości, aby ostrzec użytkownika, że źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definiuje zawartość wiersza stopki. Ten szablon zawiera zazwyczaj dodatkowej zawartości, którą chcesz wyświetlić w wierszu stopki. **Uwaga:** jako alternatywę, można po prostu określić tekst do wyświetlenia w wierszu stopki, ustawiając <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definiuje zawartość wiersza nagłówka. Ten szablon zawiera zazwyczaj dodatkowej zawartości, które mają być wyświetlane w wierszu nagłówka. **Uwaga:** jako alternatywę, można po prostu określić tekst do wyświetlenia w wierszu nagłówka ustawiając <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiuje zawartość dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu. Ten szablon zawiera zazwyczaj zawartość, aby wyświetlić wartości istniejącego rekordu.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiuje zawartość dla danych, gdy wiersz <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania. Ten szablon zawiera zazwyczaj kontrolek wejściowych oraz przyciski poleceń, z którym użytkownik może dodać nowy rekord.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiuje zawartość wiersza pagera, wyświetlane po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`). Ten szablon zawiera zazwyczaj formantów, z którymi użytkownik może przejść do innego rekordu. **Uwaga:** <xref:System.Web.UI.WebControls.FormView> kontrolkę pagera wbudowanych wiersza interfejsu użytkownika (UI). Musisz utworzyć szablon pagera, tylko wtedy, gdy chcesz utworzyć własne niestandardowe pagera wiersz.|  
  
 Aby wyświetlić wartości pola w szablonie elementu, należy użyć wyrażenia wiązania danych. Aby uzyskać więcej informacji na temat wyrażenia wiązania danych, zobacz [składni wyrażenia wiązania danych](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Kontrolek wejściowych w edycji szablonu elementu i Wstaw szablon elementu może być powiązana z polami źródła danych za pomocą wyrażenia określają powiązanie dwukierunkowe. Dzięki temu <xref:System.Web.UI.WebControls.FormView> formantu, aby automatycznie wyodrębnić wartości kontrolki wprowadzania aktualizacji lub operacji wstawiania. Wyrażenia określają powiązanie dwukierunkowe również umożliwiać kontrolek wejściowych w szablonie elementu edycji, aby automatycznie wyświetlać oryginalnej wartości pól. Aby uzyskać więcej informacji na temat wyrażeń określają powiązanie dwukierunkowe, zobacz [powiązanie z bazy danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Wiązanie z danymi  
 <xref:System.Web.UI.WebControls.FormView> Formant może być powiązany do kontroli źródła danych (takich jak <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, lub <xref:System.Web.UI.WebControls.AccessDataSource>) lub do kolekcji źródła danych, która implementuje <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfejsu, takich jak <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, lub inne typy kolekcji. Użyj jednej z następujących metod, aby powiązać <xref:System.Web.UI.WebControls.FormView> kontrolki na typ źródła danych:  
  
-   Aby powiązać formant źródła danych, należy ustawić <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwość <xref:System.Web.UI.WebControls.FormView> kontrolę <xref:System.Web.UI.Control.ID%2A> wartość do kontroli źródła danych. <xref:System.Web.UI.WebControls.FormView> Kontroli automatycznie wiąże określone dane do kontroli źródła i korzystać z zalet źródła danych kontrolki możliwości w celu określenia, wstawianie, aktualizowanie, usuwanie i funkcje stronicowania. Jest to preferowana metoda można powiązać z danymi.  
  
-   Aby powiązać ze źródłem danych, który implementuje <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interfejsu, programowo ustawić <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.FormView> kontrolę źródła danych, a następnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metody. Przy użyciu tej metody <xref:System.Web.UI.WebControls.FormView> formantu nie zapewnia wbudowanego Wstawianie, aktualizowanie, usuwanie i funkcje stronicowania. Musisz podać tę funkcję za pomocą odpowiedniego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat wiązania danych, zobacz [Mapa zawartości dostępu do danych ASP.NET](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skrypt po stronie klienta złośliwe. Sprawdź wszystkie informacje, które są wysyłane przez klienta dla pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Jeśli to możliwe, zdecydowanie zaleca się że wartości są zakodowane w formacie HTML przed są wyświetlane w tym elemencie sterującym. Program ASP.NET zapewnia funkcję weryfikacji danych wejściowych żądania bloku skryptu i HTML w danych wejściowych użytkownika. Formanty serwera sprawdzania poprawności, również są dostarczone do oceny, dane wejściowe użytkownika. Aby uzyskać więcej informacji, zobacz [wprowadzenie do kontrolek weryfikacji](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Operacje na danych  
 <xref:System.Web.UI.WebControls.FormView> Control oferuje wiele wbudowanych możliwości, które pozwalają użytkownikowi na aktualizowanie, usuwanie, Wstaw i strony za pomocą elementów w formancie. Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana z kontroli źródła danych, <xref:System.Web.UI.WebControls.FormView> kontroli można skorzystać z źródła danych funkcje formantu i zapewnia automatyczne aktualizowanie, usuwanie, wstawianie i funkcje stronicowania.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Kontroli można zapewnić obsługę update, delete, insert i operacje stronicowania przy użyciu innych typów źródeł danych; jednak użytkownik musi podać program obsługi zdarzeń odpowiedniej implementacji dla tych operacji.  
  
 Ponieważ <xref:System.Web.UI.WebControls.FormView> kontroli przy użyciu szablonów, nie zapewnia możliwości automatycznego generowania przycisków poleceń do wykonania, aktualizowanie, usuwanie lub operacje wstawiania. Przyciski te polecenia musisz ręcznie dołączyć odpowiedni szablon. <xref:System.Web.UI.WebControls.FormView> Kontroli rozpoznaje określone przyciski, które mają ich `CommandName` równa określonej wartości właściwości. W poniższej tabeli wymieniono polecenia przycisków, które <xref:System.Web.UI.WebControls.FormView> rozpoznaje kontroli.  
  
|Przycisk|Wartość CommandName|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Używane w aktualizacji lub operacji wstawiania, aby anulować operację i odrzucić wartości wprowadzonej przez użytkownika. <xref:System.Web.UI.WebControls.FormView> Kontrolować następnie zwraca tryb określony przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości.|  
|Usuwanie|"Delete"|Używany podczas operacji usuwania, można usunąć wyświetlany rekord ze źródła danych. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemDeleting> i <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia.|  
|Edytowanie|"Edit"|Umożliwia podczas aktualizowania operacji put <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji. Zawartości określona w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości są wyświetlane dla wiersza danych.|  
|Insert|"Insert"|Używane w operacji wstawiania, aby wstawić nowy rekord w źródle danych przy użyciu wartości dostarczone przez użytkownika. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemInserting> i <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia.|  
|New|"New"|Używana w operacji wstawiania do umieszczenia <xref:System.Web.UI.WebControls.FormView> kontroli w trybie wstawiania. Zawartości określona w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości są wyświetlane dla wiersza danych.|  
|Strona|"Page"|Używana w operacjach stronicowania do reprezentowania przycisku w wierszu pagera, który wykonuje stronicowania. Aby określić stronicowanie, ustaw `CommandArgument` właściwości przycisku "Dalej", "Wstecz", "First", "Last" lub indeks strony, dla której chcesz przejść. Wywołuje <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia. **Uwaga:** tego typu przycisku zwykle jest używana tylko w szablonie pager.|  
|Aktualizacja|"Aktualizuj"|Używany podczas aktualizowania operacji próbuje zaktualizować wyświetlany rekord w źródle danych przy użyciu wartości podanych przez użytkownika. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemUpdating> i <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia.|  
  
 W odróżnieniu od przycisk Usuń (który od razu usuwa wyświetlany rekord), po kliknięciu przycisku edycji lub New <xref:System.Web.UI.WebControls.FormView> kontrola przechodzi do edycji lub Wstaw tryb, odpowiednio. W trybie edycji zawartości znajdujących się w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości są wyświetlane dla bieżącego elementu danych. Edytuj szablon elementu zdefiniowano zazwyczaj taki sposób, że przycisk Edytuj została zastąpiona aktualizacja i przycisk Anuluj. Formanty, które są odpowiednie dla typu danych wejściowych (takich jak <xref:System.Web.UI.WebControls.TextBox> lub <xref:System.Web.UI.WebControls.CheckBox> kontroli) również zwykle są wyświetlane z wartość pola użytkownik może go zmodyfikować. Klikając przycisk Aktualizuj aktualizacji rekordu w źródle danych, a kliknięcie przycisku Anuluj porzuca wszystkie zmiany.  
  
 Podobnie, zawartość w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości jest wyświetlana dla elementu danych, gdy kontrolka jest w trybie wstawiania. Wstaw szablon elementu zwykle jest zdefiniowany w taki sposób, że nowy przycisk zostaje zastąpiona opcją wstawiania i przycisk Anuluj, a pusty kontrolki wejściowe są wyświetlane dla użytkownika o podanie wartości dla nowego rekordu. Kliknięcie przycisku Wstaw wstawia rekord w źródle danych, a kliknięcie przycisku Anuluj porzuca wszystkie zmiany.  
  
 <xref:System.Web.UI.WebControls.FormView> Kontroli udostępnia funkcję stronicowanie, dzięki czemu można przejść do innych rekordów w źródle danych. Po włączeniu w wyświetlany jest wiersz pagera <xref:System.Web.UI.WebControls.FormView> formant, który zawiera formanty nawigacji na stronie. Aby włączyć stronicowania, ustaw <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość `true`. Można dostosować wiersz pagera przez ustawienie właściwości obiektów zawartych w <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> i <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości. Zamiast korzystać z wiersza pagera wbudowanego interfejsu użytkownika, można utworzyć własnego interfejsu użytkownika przy użyciu <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizowanie interfejsu użytkownika  
 Można dostosować wygląd <xref:System.Web.UI.WebControls.FormView> kontroli przez ustawienie właściwości stylu dla różnych części kontrolki. W poniższej tabeli wymieniono właściwości innego stylu.  
  
|Właściwości stylu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Ustawienia stylu dla pustym wierszu danych wyświetlanych w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Ustawienia stylu dla wiersza stopki <xref:System.Web.UI.WebControls.FormView> kontroli.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Ustawienia stylu dla wiersza nagłówka <xref:System.Web.UI.WebControls.FormView> kontroli.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Ustawienia stylu wyświetlany jest wiersz pagera <xref:System.Web.UI.WebControls.FormView> kontroli, gdy jest włączona funkcja stronicowania.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Ustawienia stylu dla danych wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu.|  
  
<a name="events"></a>   
## <a name="events"></a>Zdarzenia  
 <xref:System.Web.UI.WebControls.FormView> Kontrola zapewnia kilka zdarzeń, które można programować względem. Dzięki temu można uruchomić procedury niestandardowe zawsze wtedy, gdy wystąpi zdarzenie. W poniższej tabeli wymieniono zdarzenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Występuje, gdy przycisk w ramach <xref:System.Web.UI.WebControls.FormView> kliknięciu formantu. To zdarzenie jest często używane do wykonywania zadań, po kliknięciu przycisku w formancie.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Występuje, gdy wszystkie <xref:System.Web.UI.WebControls.FormViewRow> obiekty są tworzone w <xref:System.Web.UI.WebControls.FormView> kontroli. To zdarzenie jest często używane do modyfikowania wartości rekordu, przed wyświetleniem.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Występuje, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość ustawioną na "Delete") zostanie wybrana, ale po <xref:System.Web.UI.WebControls.FormView> kontroli usuwa rekord ze źródła danych. To zdarzenie jest często używane, aby sprawdzić wyniki operacji usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Występuje, gdy przycisk Usuń kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli usuwa rekord ze źródła danych. To zdarzenie jest często używane, aby anulować operację usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Występuje, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość ustawioną na "Insert") zostanie wybrana, ale po <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. To zdarzenie jest często używane, aby sprawdzić wyniki operacji wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Występuje, gdy Insert przycisku, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. To zdarzenie jest często używane do anulowania operacji wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Występuje, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość ustawioną na "Aktualizuj") zostanie wybrana, ale po <xref:System.Web.UI.WebControls.FormView> kontroli aktualizuje wiersz. To zdarzenie jest często używane do sprawdzania wyników operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Występuje, gdy aktualizacja przycisku, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli aktualizuje rekord. To zdarzenie jest często używane do anulowania operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje po <xref:System.Web.UI.WebControls.FormView> kontroli zmian tryby (w celu edycji, wstawiania lub w trybie tylko do odczytu). To zdarzenie jest często używana do wykonywania zadań podczas <xref:System.Web.UI.WebControls.FormView> tryby zmienia się kontrolka.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje przed <xref:System.Web.UI.WebControls.FormView> kontroli zmian tryby (w celu edycji, wstawiania lub w trybie tylko do odczytu). To zdarzenie jest często używane do anulowania zmiany trybu.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje, gdy jeden z przycisków pagera kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. To zdarzenie jest często używane, gdy trzeba wykonać zadanie po użytkownik przechodzi do innego rekordu w kontrolce.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje, gdy jeden z przycisków pagera kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Ułatwienia dostępu  
 Aby uzyskać informacje o sposobie konfigurowania tej kontrolki, tak aby generuje kod znaczników, który jest zgodny ze standardami ułatwień dostępu, zobacz [ułatwień dostępu w programie Visual Studio i platformy ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) i [kontrolki ASP.NET orazułatwieńdostępu](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Stosowanie stylów CSS  
 <xref:System.Web.UI.WebControls.FormView> Kontroli umożliwia określenie reguł stylów CSS w znacznikach. Jeśli używasz szablonów do dostosowywania wyglądu <xref:System.Web.UI.WebControls.FormView> kontrolę, można określić style CSS w znaczniku w szablonach. W takim przypadku nie bardzo zewnętrzne tabeli jest wymagany. Możesz uniemożliwić tabeli są renderowane przez ustawienie <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> właściwość `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView> sterowania do wyświetlania wartości z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView> formantu, aby edytować istniejące rekordy.  
  
> [!IMPORTANT]
>  W tym przykładzie kontrolkę pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView> kontrolki wstawianie nowych rekordów.  
  
> [!IMPORTANT]
>  W tym przykładzie kontrolkę pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormView> klasy. Dynamicznie dodać <xref:System.Web.UI.WebControls.FormView> sterowania do strony, Utwórz nową <xref:System.Web.UI.WebControls.FormView> obiektu, ustaw jego właściwości, a następnie dodaj go do <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> kontrolować kolekcji kontenera, takich jak <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dynamicznie dodać <xref:System.Web.UI.WebControls.FormView> formantu do strony.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączona funkcja stronicowania.</summary>
        <value>
          <see langword="true" /> Aby włączyć funkcję stronicowania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka ma wbudowanych możliwości stronicowania, dzięki czemu użytkownik przejść do innego rekordu w źródle danych. Funkcja stronicowania może być używana z dowolnego obiektu źródła danych, która obsługuje <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu lub źródła danych, które obsługuje możliwości stronicowania.  
  
 Aby włączyć funkcję stronicowania, ustaw <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość `true`. Łączna liczba elementów w źródle danych można określić za pomocą <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości. Aby określić indeks elementu aktualnie wyświetlany, należy użyć <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Gdy jest włączone stronicowanie, dodatkowy wiersz o nazwie wiersz pagera jest automatycznie wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli. Wiersz pagera zawiera formanty nawigacji na stronie i mogą być wyświetlane w górnej, dolnej, lub zarówno górnej i dolnej części kontrolki. Wiersz pagera ma cztery wbudowane pagera tryby wyświetlania. W poniższej tabeli opisano cztery tryby.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Zestaw formantów dzielenia na strony składający się z poprzednich i dalej przycisków.|  
|`PagerButton.NextPreviousFirstLast`|Element zestaw kontrolek dzielenia na strony składający się z poprzednim, następnie przyciski imię i nazwisko.|  
|`PagerButton.Numeric`|Zestaw formantów dzielenia na strony składający się z numerowane przyciski łączy do stron dostępu bezpośrednio. Jest to domyślny tryb.|  
|`PagerButton.NumericFirstLast`|Zestaw formantów dzielenia na strony składający się z przyciski łączy numerowane i imię i nazwisko.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Kontroli automatycznie ukrywa wiersz pagera, gdy źródło danych zawiera mniej niż dwa rekordy.  
  
 Można kontrolować ustawienia wiersza pagera (takie jak tryb wyświetlania pagera, liczba łączy strony do wyświetlenia w czasie i formant pagera tekst etykiety) za pomocą <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości. Aby sterować wyglądem wiersz pagera (w tym jej kolor tła i koloru czcionki), należy użyć <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości. <xref:System.Web.UI.WebControls.FormView> Kontroli umożliwia również zdefiniować niestandardowy szablon dla wiersza pager. Aby uzyskać więcej informacji na temat tworzenia szablonu wiersza pagera niestandardowych, zobacz <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 <xref:System.Web.UI.WebControls.FormView> Kontrola zapewnia kilka zdarzeń, które umożliwia wykonywanie niestandardowej akcji w przypadku stronicowania. W poniższej tabeli wymieniono dostępne zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje, gdy jeden z przycisków pagera kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. To zdarzenie jest często używane, gdy trzeba wykonać zadanie po użytkownik przechodzi do innego rekordu w kontrolce.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje, gdy jeden z przycisków pagera kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
> [!NOTE]
>  Te zdarzenia nie są wywoływane, gdy zmienisz <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość programowo.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość, aby włączyć funkcję stronicowania w <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu do wyświetlenia w tle <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Adres URL obrazu, aby wyświetlić w tle <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> właściwość, aby określić adres URL obrazu do wyświetlenia w tle <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
> [!NOTE]
>  Jeśli określony obraz jest mniejszy niż <xref:System.Web.UI.WebControls.FormView> kontrolki, obraz jest rozmieszczany do wypełnienia tła. Jeśli obraz jest większy niż formant, obraz zostanie przycięty.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> właściwość do wyświetlenia obrazu niestandardowego w tle <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz pagera wyświetlane w dolnej części <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje dolnym wierszu pagera <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest włączone stronicowanie (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), nazywany wierszem pagera dodatkowy wiersz jest automatycznie wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli. Wiersz pagera zawiera formanty, które umożliwiają użytkownikom przechodzić do innych rekordów i mogą być wyświetlane na górnej, dolnej lub górnej i dolnej części kontrolki. Użyj <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwość programistycznie uzyskują dostęp <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje dolny wiersz pagera w <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy dolny wiersz pagera w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowe Zmienianie dolny wiersz pagera, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości muszą być wykonywane po <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje dolny wiersz pagera został utworzony; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwość do dostępu do wierszy pagera wyświetlane w dolnej części <xref:System.Web.UI.WebControls.FormView> kontroli. Następnie zaktualizować wiersza pagera, dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do renderowania w elemencie HTML podpis w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli. Ta właściwość jest udostępniana, aby formant stał się łatwiej dostępne dla użytkowników urządzeń technologii pomocniczej.</summary>
        <value>Ciąg, który reprezentuje tekst do renderowania w elemencie HTML podpis w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości w celu określenia tekstu do renderowania w elemencie HTML podpis w <xref:System.Web.UI.WebControls.FormView> kontroli. Tekst, który określisz udostępnia ułatwianiem urządzeń z opisem w tabeli, która może służyć do udostępnienie formantu.  
  
 Obsługa dodatkowych ułatwień dostępu <xref:System.Web.UI.WebControls.FormView> kontrolki są dostarczane przez <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia wyrównania podpisu elementu HTML w <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości, aby określić tekst dla elementu podpis HTML renderowane w <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie w pionie lub podpis elementu HTML w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli. Ta właściwość jest udostępniana, aby formant stał się łatwiej dostępne dla użytkowników urządzeń technologii pomocniczej.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości. Wartość domyślna to <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia położenie w pionie lub podpis elementu HTML w <xref:System.Web.UI.WebControls.FormView> kontroli. Ta właściwość jest udostępniana, aby formant stał się łatwiej dostępne dla użytkowników urządzeń technologii pomocniczej.  
  
 Ta właściwość jest ustawiona, przy użyciu jednej z <xref:System.Web.UI.WebControls.TableCaptionAlign> wartości wyliczenia. Poniższa tabela zawiera listę możliwych wartości.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Caption element jest powiązana z dołu tabeli.|  
|`TableCaptionAlign.Left`|Caption element jest powiązana z tabeli po lewej stronie.|  
|`TableCaptionAlign.NotSet`|Nie ustawiono caption element wyrównania.|  
|`TableCaptionAlign.Right`|Caption element jest wyrównany do prawej krawędzi tabeli.|  
|`TableCaptionAlign.Top`|Caption element jest powiązana z góry tabeli.|  
  
> [!NOTE]
>  Jeśli ta właściwość jest równa `TableCaptionAlign.NotSet`, używana jest wartość domyślna w przeglądarce.  
  
 Obsługa dodatkowych ułatwień dostępu <xref:System.Web.UI.WebControls.FormView> kontrolki są dostarczane przez <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości w celu określenia tekstu do renderowania w elemencie HTML podpis w <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości w celu określenia, czy kod HTML podpisu elementu w <xref:System.Web.UI.WebControls.FormView> kontrolki powinien być renderowany lewej strony formantu.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między zawartość komórki i krawędzi komórki.</summary>
        <value>Ilość wolnego miejsca, w pikselach między zawartość komórki i krawędzi komórki. Wartość domyślna to -1, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości, aby kontrolować odstępy między zawartość komórki i krawędzi komórki. Wielkość uzupełnienia określony jest dodawany do wszystkich czterech krawędzi komórki.  
  
 Wszystkie komórki w tej samej kolumnie <xref:System.Web.UI.WebControls.FormView> kontrolka ma taką samą szerokość. Wielkość uzupełnienia dotyczy najszerszej komórki i innych komórek w kolumnie są dostosowywane do szerokość tej komórki. Podobnie wszystkie komórki w tym samym wierszu mają taką samą wysokość. Wielkość uzupełnienia do najwyższej komórki w wierszu, a wszystkie komórki w wierszu są dostosowywane do wysokość tej komórki. Nie można określić rozmiary pojedyncze komórki.  
  
 Aby dostosować odstępy między komórkami, należy użyć <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości.  
  
> [!NOTE]
>  Gdy ta właściwość nie jest ustawiona, wartość domyślna przeglądarka jest używany.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości w celu określenia wielkości odstępów między zawartość komórki i krawędzi komórki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między komórek.</summary>
        <value>Ilość wolnego miejsca, w pikselach, między komórek. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości, aby kontrolować odstępy między sąsiednich komórek w <xref:System.Web.UI.WebControls.FormView> kontroli. Odstępy w tym jest stosowana w pionie i w poziomie. Odstępy jest jednolita dla całego formantu. Nie można określić poszczególnych odstępy między wierszy lub kolumn.  
  
> [!NOTE]
>  Jeśli ustawiona na wartość większą niż 0, a następnie ustaw <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwości na wartość, która wyświetla obramowań komórek, wyświetlone przerwę między obramowań sąsiadujących komórek. W takiej sytuacji <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwość steruje rozmiarem pamięci przerwa.  
  
 Aby dostosować odstępy między zawartość komórki i krawędzi komórki, należy użyć <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości w celu określenia wielkości odstępów między sąsiadujących komórek.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Jedną z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</param>
        <summary>Przełączniki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli przekładają się na wprowadzanie danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metodę, aby programowo przełączać <xref:System.Web.UI.WebControls.FormView> sterowania między trybów edycji, wstawiania i tylko do odczytu. Ta metoda aktualizuje również <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości z określonym trybem. W poniższej tabeli wymieniono wartości inny tryb.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, który umożliwia użytkownikowi zaktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie wstawiania, co pozwala użytkownikowi na dodawanie nowego rekordu w źródle danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie tylko do odczytu, który jest tryb wyświetlania normalny.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia nie są wywoływane, gdy ta metoda jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metodę, aby zwrócić <xref:System.Web.UI.WebControls.FormView> formantu do trybu tylko do odczytu w każdym przypadku, gdy użytkownik przechodzi do innego rekordu.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" /> Reprezentujący źródło danych używane do tworzenia hierarchii kontroli.</param>
        <param name="dataBinding">
          <see langword="true" /> Aby wskazać, czy hierarchii kontroli został utworzony bezpośrednio w źródle danych. <see langword="false" /> do wskazania kontrolki hierarchia jest tworzona ze stanu widoku.</param>
        <summary>Tworzy hierarchii kontroli, używany do renderowania <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki z określonym źródłem danych.</summary>
        <returns>Liczba elementów utworzonych ze źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> tworzenie hierarchii kontroli dla <xref:System.Web.UI.WebControls.FormView> kontroli. Gdy `dataBinding` parametr jest `true`, powiązań danych odbywa się przed utworzeniem hierarchii kontroli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.DataSourceView" /> z <see cref="T:System.Web.UI.IDataSource" /> do której <see cref="T:System.Web.UI.WebControls.FormView" /> formantem jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę w celu tworzenia hierarchii kontroli.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy domyślny obiekt styl tabeli dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> zawiera domyślny styl tabeli dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć jej domyślny obiekt stylu tabeli. Oprócz skonfigurowania domyślnego stylu <xref:System.Web.UI.WebControls.TableStyle> obiektu to metoda ustawia również <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości na wartość 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własny styl domyślny.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.DataSourceSelectArguments" /> obiekt, który zawiera argumenty, które są przekazywane do źródła danych w celu przetwarzania.</summary>
        <returns>Element <see cref="T:System.Web.UI.DataSourceSelectArguments" /> zawiera argumenty, które są przekazywane do źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> tworzenie <xref:System.Web.UI.DataSourceSelectArguments> obiekt, który zawiera argumenty przekazywane do źródła danych. W tej implementacji <xref:System.Web.UI.DataSourceSelectArguments> obiekt zawiera argumenty operacji stronicowania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby określić własne wartości, które są przekazywane do źródła danych.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Liczony od zera indeks elementu danych do wyświetlenia.</param>
        <param name="rowType">Jedną z <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> wartości wyliczenia.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości wyliczenia.</param>
        <summary>Tworzy <see cref="T:System.Web.UI.WebControls.FormViewRow" /> przy użyciu indeksu określonego elementu, typ wiersza i stanu wiersza.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> indeksu określonego elementu, typ wiersza i stanu wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> tworzenie <xref:System.Web.UI.WebControls.FormViewRow> obiekt używany do reprezentowania wierszy w kontrolce.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby zwrócić <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiektu z ustawieniami niestandardowymi.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy tablicę zawierającą <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Table" /> reprezentujący tabeli zawierającej dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby utworzyć tabelę, która działa jako kontener dla formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb wprowadzania danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości, aby określić, czy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu, wstawiania lub edycji. W poniższej tabeli wymieniono wartości inny tryb.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, który umożliwia użytkownikowi zaktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie wstawiania, co pozwala użytkownikowi na dodawanie nowego rekordu w źródle danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie tylko do odczytu, który jest tryb wyświetlania normalny.|  
  
 Ta wartość jest zwykle ustawiana automatycznie przez <xref:System.Web.UI.WebControls.FormView> kontrolować, po kliknięciu przycisku polecenia Nowy, Update, Insert, usuń lub Anuluj. Gdy <xref:System.Web.UI.WebControls.FormView> kontroli zmian tryby w odpowiedzi na akcję, są generowane zdarzenia w poniższej tabeli. Pozwala na tworzenie obsługi zdarzeń niestandardowych, który wykonuje odpowiednie procedury po wystąpieniu zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje, gdy <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybach, ale po zmianie trybu. To zdarzenie jest najczęściej używany do wykonania zadania zawsze wtedy, gdy <xref:System.Web.UI.WebControls.FormView> tryby zmienia się kontrolka.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje po <xref:System.Web.UI.WebControls.FormView> kontroli zmian trybach, ale zanim zmiany trybu. To zdarzenie jest najczęściej używany do anulowania zmiany trybu.|  
  
 **Uwaga** te zdarzenia nie są wywoływane, gdy programowo zmienić tryb za pomocą <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości, aby określić, czy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu, wstawiania lub edycji. Jeśli użytkownik próbuje przejdź do innego rekordu trochę <xref:System.Web.UI.WebControls.FormView> kontrolka jest w edycji, stronicowanie zostało anulowane.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Źródło danych do powiązania <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataBind> metodę, aby powiązać dane ze źródła danych do <xref:System.Web.UI.WebControls.FormView> kontroli. Ta metoda usuwa wszystkie wyrażenia wiązania danych aktywnego szablonu kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element danych powiązany z <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>
          <see cref="T:System.Object" /> Czy reprezentuje element danych powiązany <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItem%2A> właściwości dostępu do elementu danych powiązany z <xref:System.Web.UI.WebControls.FormView> kontroli. Element danych jest często używane do bezpośredniego dostępu do wartości pola bieżącego rekordu. Typ <xref:System.Object> zwróconych przez to właściwość różni się zależnie od źródła danych. Na przykład, gdy <xref:System.Web.UI.WebControls.SqlDataSource> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.FormView> kontroli <xref:System.Data.DataRowView> obiekt jest zwracany.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko wtedy, gdy wystąpił powiązanie danych. Przed danych powiązania wystąpi, właściwość ta zwraca `null`. Ta właściwość dotyczy również nie kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania i zwraca `null`.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataItem%2A> właściwości w celu określenia wartości pola w elemencie danych.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów danych w źródle danych.</summary>
        <value>Liczba elementów danych w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> właściwości, aby określić liczbę elementów danych zawartych w źródle danych. Ta właściwość zawiera taką samą wartość jak <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks elementu danych powiązany z <see cref="T:System.Web.UI.WebControls.FormView" /> formant ze źródła danych.</summary>
        <value>Indeks elementu danych powiązany z <see cref="T:System.Web.UI.WebControls.FormView" /> formant ze źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> własność, aby określić indeks elementu danych powiązany z <xref:System.Web.UI.WebControls.FormView> formant ze źródła danych. Ta właściwość zawiera taką samą wartość jak <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
> [!NOTE]
>  Ta właściwość nie ma zastosowania podczas <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania. Gdy kontrolka jest w trybie wstawiania <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> właściwość zwraca wartość -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.DataKey" /> obiekt reprezentujący klucz podstawowy wyświetlany rekord.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataKey" /> obiekt reprezentujący klucz podstawowy wyświetlany rekord.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> ustawiono właściwość <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. Użyj <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwość, aby uzyskać dostęp do tej <xref:System.Web.UI.WebControls.DataKey> obiektu. Ta właściwość jest często używana do uzyskania kluczy i odpowiadające im wartości dla pól określonych w <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości, aby określić wartość pierwszego pola klucza na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości do określenia wartości pola klucza.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę, która zawiera nazwy pól klucza dla źródła danych.</summary>
        <value>Tablica, która zawiera nazwy pól klucza dla źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości, aby określić listę rozdzielonych przecinkami nazw pól, które reprezentują klucza podstawowego źródła danych. Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> ustawiono właściwość <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.DataKey> Obiekt jest następnie zapisywane w <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości.  
  
> [!NOTE]
>  Należy ustawić <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość wbudowana aktualizowanie, usuwanie i Wstawianie funkcji <xref:System.Web.UI.WebControls.FormView> działanie sterowania.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości w celu określenia pola klucza dla źródła danych powiązany z <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb wprowadzania danych, do którego <see cref="T:System.Web.UI.WebControls.FormView" /> sterowanie powraca po aktualizacji, wstawiania lub anulować operację.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości. Wartość domyślna to <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do edycji, insert nebo w trybie tylko do odczytu po aktualizacji, wstawiania lub operacja anulowania jest wykonywana. Domyślnie <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do trybu tylko do odczytu; Jednakże, możesz zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trakcie edycji lub trybie wstawiania przez ustawienie tej właściwości na odpowiednią wartość. W poniższej tabeli wymieniono wartości inny tryb.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, który umożliwia użytkownikowi zaktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie wstawiania, co pozwala użytkownikowi na dodawanie nowego rekordu w źródle danych.|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie tylko do odczytu, który jest tryb wyświetlania normalny.|  
  
 Ta właściwość jest często używane podczas <xref:System.Web.UI.WebControls.FormView> kontrolkę jednozadaniowe, takie jak tylko, aby wstawić lub edytować rekordy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości, aby zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji po operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa rekord bieżący w <see cref="T:System.Web.UI.WebControls.FormView" /> formant ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodę, aby programowo usunąć rekord bieżący w <xref:System.Web.UI.WebControls.FormView> formant ze źródła danych. Ta metoda jest często stosowany podczas musisz usunąć bieżący rekord z poza <xref:System.Web.UI.WebControls.FormView> kontrolować, np. informacji od innej kontrolki na stronie. Wywołanie tej metody również generuje <xref:System.Web.UI.WebControls.FormView.ItemDeleted> i <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metodę, aby programowo usunąć rekord bieżący w <xref:System.Web.UI.WebControls.FormView> formant ze źródła danych.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody, na stronie, która jest wywoływana, gdy formant wykonuje operację usuwania.</summary>
        <value>Nazwa metody, na stronie, która jest wywoływana, gdy formant wykonuje operację usuwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby serii samouczków na temat korzystania z wiązania modelu przy użyciu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla elementu w trybie edycji.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest w trybie edycji. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka renderuje inny szablon dla wiersza danych, w oparciu o bieżący tryb kontrolki (określony przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> wiersz właściwości, aby zdefiniować własny interfejs użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji. Edytuj szablon elementu zawiera zazwyczaj kontrolki wejściowe dla użytkownika zaktualizować wartości istniejącego rekordu, a także przycisków poleceń, aby zaktualizować rekord, a do anulowania operacji aktualizacji.  
  
 Aby określić szablon niestandardowy, najpierw `<EditItemTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<EditItemTemplate>` tagów. Przy użyciu wyrażenia określają powiązanie dwukierunkowe, pole można skojarzyć z kontrolki wejściowej. Dzięki temu <xref:System.Web.UI.WebControls.FormView> formantu, aby automatycznie wyświetlać oryginalną wartość pola w skojarzonych kontrolki wprowadzania w trybie edycji. Gdy rekord zostanie zaktualizowany, <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie wyodrębnia wartość zaktualizowane pole z skojarzone kontrolki wprowadzania. Aby uzyskać więcej informacji na temat wyrażeń określają powiązanie dwukierunkowe, zobacz [powiązanie z bazy danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski umożliwiające wykonywanie wbudowanych Anuluj i operacje aktualizacji, należy dodać formant przycisku polecenia z szablonem, za pomocą jego `CommandName` właściwość jest ustawiona na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Aktualizacja|"Aktualizuj"|  
  
 Można sterować wyglądem szablonu elementu za pomocą <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje jak zdefiniować szablon niestandardowy dla wiersza danych w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd danych wiersza, kiedy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest w trybie edycji.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> czy reprezentuje styl danych wiersz po <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest w trybie edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> właściwości, aby sterować wyglądem dane wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji. Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji, wiersz danych zawiera zdefiniowane przez użytkownika zawartość określona przez <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `EditRowStyle-ForeColor`).  
  
-   Zagnieżdżanie `<EditRowStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `EditRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> wiersz właściwości w celu określenia styl niestandardowy do danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd pustym wierszu danych wyświetlane, gdy źródło danych powiązany z <see cref="T:System.Web.UI.WebControls.FormView" /> formantu nie zawiera żadnych rekordów.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> pozwala ustawić wygląd pustym wierszu danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości, aby sterować wyglądem pustym wierszu danych w <xref:System.Web.UI.WebControls.FormView> kontroli. Pustym wierszu danych jest wyświetlany, gdy źródło danych, który jest powiązany z formantu nie zawiera żadnych rekordów. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `EmptyDataRowStyle-ForeColor`).  
  
-   Zagnieżdżanie `<EmptyDataRowStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `EmptyDataRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości w celu określenia styl niestandardowy dla pustym wierszu danych wyświetlane, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, który nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowanych przez użytkownika do renderowania pustym wierszu danych, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana ze źródłem danych, który nie zawiera żadnych rekordów.</summary>
        <value>Element <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla wiersza pustymi danymi. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pustym wierszu danych jest wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych, który jest powiązany do kontroli nie zawiera żadnych rekordów. Możesz definiować własnego niestandardowego interfejsu użytkownika (UI) dla pustym wierszu danych za pomocą <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości. Aby określić niestandardowy szablon dla pustym wierszu danych, należy najpierw umieścić `<EmptyDataTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<EmptyDataTemplate>` tagów. Aby kontrolować styl pustym wierszu danych, należy użyć <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Alternatywnie, można użyć wbudowanego interfejsu użytkownika dla pustym wierszu danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> i <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwość, pierwszeństwo.  
  
   
  
## Examples  
 Poniższy przykład pokazuje jak zdefiniować szablon niestandardowy dla pustym wierszu danych wyświetlane, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana ze źródłem danych, który nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do wyświetlenia w pustym wierszu danych renderowane, kiedy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana ze źródłem danych, który nie zawiera żadnych rekordów.</summary>
        <value>Tekst do wyświetlenia w pustym wierszu danych. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pustym wierszu danych jest wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy źródło danych, który jest powiązany do kontroli nie zawiera żadnych rekordów. Użyj <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwość, aby określić tekst do wyświetlenia w pustym wierszu danych. Aby kontrolować styl pustym wierszu danych, należy użyć <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla pustym wierszu danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> i <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwość, pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwość, aby określić tekst do wyświetlenia w pustym wierszu danych.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolki modułu walidacji będzie obsługiwać wyjątki, które występują podczas wstawiania lub operacje aktualizacji.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolki modułu walidacji będzie obsługiwać wyjątki, które występują podczas wstawiania lub aktualizacji operacji w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawia, że niektóre który <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest powiązana z danymi, gdy jest to konieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Metoda jest metodą pomocnika używana przez <xref:System.Web.UI.WebControls.FormView> klasy upewnij się, że <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana z danymi, gdy jest to konieczne. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Metoda jest zazwyczaj wywoływana podczas <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> metodę, aby powiązać formant ze źródłem danych, gdy kontrolki powiązania danych nie jest jeszcze związany, ale wymaga przeprowadzenia powiązanie danych. Ta wersja metody została zastąpiona, aby zapobiec występowaniu wiązania z danymi podczas <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Używany do przechowywania wartości pola bieżącego elementu danych.</param>
        <param name="includeKeys">
          <see langword="true" /> Aby dołączyć pola klucza; w przeciwnym razie <see langword="false" />.</param>
        <summary>Pobiera wartości każdego pola, zadeklarowany w wierszu danych i zapisuje je w określonym <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu do pobierania wartości każdego pola zadeklarowane wewnątrz wiersza danych. Ponieważ inny szablon, w oparciu o bieżący tryb jest wyświetlany w wierszu danych, ta metoda pobiera tylko wartości pól, które są zadeklarowane w szablonie, który odnosi się do bieżącego trybu. W poniższej tabeli przedstawiono dostępne tryby i odpowiednie szablony.  
  
|Tryb|Szablon|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Można określić, czy wyodrębnione wartości obejmują lub pól klucza przy użyciu `includeKeys` parametru.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własną procedurę można pobrać wartości pola.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz stopki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz stopki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 U dołu wyświetlany jest wiersz stopki <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwość programistycznie uzyskują dostęp <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz stopki.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersz stopki <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowe Zmienianie wierszem stopki, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwości muszą być wykonywane po <xref:System.Web.UI.WebControls.FormView> sterowania zostało wyrenderowane, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
 Za pomocą można sterować styl wiersza stopki <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwość do programowego modyfikowania właściwości wiersz stopki podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala ustawić wygląd wiersz stopki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 U dołu wyświetlany jest wiersz stopki <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości, aby sterować wyglądem wiersz stopki <xref:System.Web.UI.WebControls.FormView> kontroli. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `FooterStyle-ForeColor`).  
  
-   Zagnieżdżanie `<FooterStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `FooterStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości w celu określenia styl niestandardowy dla wiersza stopki.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowanych przez użytkownika dla wiersza stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Element <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla wiersza stopki. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 U dołu wyświetlany jest wiersz stopki <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Można zdefiniować własne niestandardowego interfejsu użytkownika (UI) dla wiersza stopki za pomocą <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości. Aby określić niestandardowy szablon dla wiersza stopki, należy najpierw umieścić `<FooterTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<FooterTemplate>` tagów. Za pomocą można sterować styl wiersza stopki <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie możesz po prostu wyświetlić tekst w wierszu stopki, ustawiając <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.FooterText%2A> i <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość, pierwszeństwo.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości, aby zdefiniować niestandardowy szablon do renderowania stopki wiersza.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do wyświetlenia w wierszu stopki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Tekst do wyświetlenia w wierszu stopki. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 U dołu wyświetlany jest wiersz stopki <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.FooterText%2A> lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwość, aby określić tekst do wyświetlenia w wierszu stopki. Za pomocą można sterować styl wiersza stopki <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza stopki, ustawiając <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.FooterText%2A> i <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość, pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwość, aby określić tekst do wyświetlenia w wierszu stopki.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.GridLines" /> wartości. Wartość domyślna to <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwości w celu określenia stylu linii siatki <xref:System.Web.UI.WebControls.FormView> kontroli. W poniższej tabeli wymieniono dostępne style.  
  
|Styl|Opis|  
|-----------|-----------------|  
|`GridLines.None`|Linie siatki nie są wyświetlane.|  
|`GridLines.Horizontal`|Wyświetla tylko poziomych linii siatki.|  
|`GridLines.Vertical`|Wyświetla tylko pionowych linii siatki.|  
|`GridLines.Both`|Wyświetla zarówno poziome i pionowe linie siatki.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwość, aby wyświetlić obie poziome i pionowe linie siatki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlana w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwość programistycznie uzyskują dostęp <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz nagłówka.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersz nagłówka w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowe Zmienianie wiersz nagłówka, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości muszą być wykonywane po <xref:System.Web.UI.WebControls.FormView> sterowania zostało wyrenderowane, a w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości do programowego modyfikowania właściwości wiersz nagłówka podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd wiersz nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlana w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości, aby sterować wyglądem wiersz nagłówka w <xref:System.Web.UI.WebControls.FormView> kontroli. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `HeaderStyle-ForeColor`).  
  
-   Zagnieżdżanie `<HeaderStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `HeaderStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości w celu określenia styl niestandardowy do wiersza nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowanych przez użytkownika dla wiersza nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Element <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla wiersza nagłówka. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlana w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Możesz definiować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza nagłówka, za pomocą <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości. Aby określić niestandardowy szablon dla wiersza nagłówka, należy najpierw umieścić `<HeaderTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<HeaderTemplate>` tagów. Aby kontrolować styl wiersz nagłówka, należy użyć <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie możesz po prostu wyświetlić tekst w wierszu nagłówka ustawiając <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> i <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość, pierwszeństwo.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości, aby zdefiniować niestandardowy szablon do renderowania dla wiersza nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do wyświetlenia w wierszu nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Tekst do wyświetlenia w wierszu nagłówka. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlana w górnej części <xref:System.Web.UI.WebControls.FormView> decyduje o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość jest ustawiona. Użyj <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwość, aby określić tekst do wyświetlenia w wierszu nagłówka. Aby kontrolować styl wiersz nagłówka, należy użyć <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie można zdefiniować własnego niestandardowego interfejsu użytkownika (UI) dla wiersza nagłówka, ustawiając <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli oba <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> i <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość, pierwszeństwo.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwość, aby określić tekst do wyświetlenia w wierszu nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie w poziomie <see cref="T:System.Web.UI.WebControls.FormView" /> formantu na stronie.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> wartości. Wartość domyślna to <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> właściwości w celu określenia wyrównania w poziomie <xref:System.Web.UI.WebControls.FormView> formantu na stronie. Poniższa lista zawiera style różnych wyrównanie w poziomie.  
  
|Wartość HorizontalAlign|Opis|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Wyrównanie w poziomie <xref:System.Web.UI.WebControls.FormView> formantu nie została ustawiona.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany do lewej strony.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> Kontroli skupia się na stronie.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany do prawej strony.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> Kontrolki jest wyrównany do lewego i prawego marginesu strony.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> właściwości, aby określić, że <xref:System.Web.UI.WebControls.FormView> powinien być wyśrodkowany kontrolki na stronie.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Zawierającą wiersz pager.</param>
        <param name="pagedDataSource">Element <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> zawierający dane dla bieżącej strony.</param>
        <summary>Tworzy wierszu pagera <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> Tworzenie wiersza pager. Tworzy <xref:System.Web.UI.WebControls.TableCell> obiektu, który zawiera formanty nawigacji za pomocą właściwości <xref:System.Web.UI.WebControls.PagedDataSource> obiekt znajdujący się w `pagedDataSource` parametru. Komórka jest dodawane do wiersza określonego przez `row` parametru.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własny wiersz pager.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Do zainicjowania.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> kontroli można zainicjować określonej <xref:System.Web.UI.WebControls.FormViewRow> obiektu. <xref:System.Web.UI.WebControls.FormViewRow> Obiekt jest zainicjowany na podstawie typu wiersz i wiersz stanu określonego przez jego <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> i <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> właściwości, odpowiednio. Odpowiednia zawartość jest dodawane do <xref:System.Web.UI.WebControls.FormViewRow> obiektu. W poniższej tabeli opisano, jak zainicjowano każdego typu wiersz.  
  
|Typ wiersza|Opis|  
|--------------|-----------------|  
|Wiersz danych|Zawartość <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, lub <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości są dodawane do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od wartości <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> właściwości.|  
|Pustym wierszu danych|Wartość <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości lub zawartości <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość jest ustawiona. Jeśli obie te właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwość, pierwszeństwo.|  
|Wiersz stopki|Wartość <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości lub zawartości <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość jest ustawiona. Jeśli obie te właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwość, pierwszeństwo.|  
|Wiersz nagłówka|Wartość <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości lub zawartości <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość została dodana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od tego, którego właściwość jest ustawiona. Jeśli obie te właściwości są ustawione, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwość, pierwszeństwo.|  
  
> [!NOTE]
>  Ta metoda nie inicjuje wiersz pager. Aby utworzyć wiersza pagera, użyj <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby utworzyć własne niestandardowe wiersza.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> Aby wykonać sprawdzanie poprawności strony, gdy wywoływana jest metoda; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wstawia bieżącego rekordu w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania, użyj <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metody programowe Wstawianie bieżącego rekordu w źródle danych. Ta metoda jest często stosowany podczas należy wstawić bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> kontrolować, np. informacji od innej kontrolki na stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formantu musi być w trybie wstawiania, gdy ta metoda jest wywołana; w przeciwnym razie <xref:System.Web.HttpException> zgłaszany.  
  
 Aby określić, czy strona sprawdzania poprawności jest wykonywane przed wykonaniem operacji wstawiania, użyj `causesValidation` parametru. Wywołanie tej metody również generuje <xref:System.Web.UI.WebControls.FormView.ItemInserted> i <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metody programowe wstawianie z bieżącym rekordem <xref:System.Web.UI.WebControls.FormView> kontroli źródła danych.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka nie jest w trybie wstawiania.  - lub - <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla elementu w trybie wstawiania.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest w trybie wstawiania. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka renderuje inny szablon dla wiersza danych, w oparciu o bieżący tryb kontrolki (określony przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> wiersz właściwości, aby zdefiniować własny interfejs użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania. Wstaw szablon elementu zawiera zazwyczaj kontrolek wejściowych użytkownika wprowadź wartości dla nowego rekordu, a także polecenia przycisków, aby wstawić rekordu i anulowania operacji wstawiania.  
  
 Aby określić szablon niestandardowy, najpierw `<InsertItemTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<InsertItemTemplate>` tagów. Przy użyciu wyrażenia określają powiązanie dwukierunkowe, pole można skojarzyć z kontrolki wejściowej. Po wstawieniu rekord <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie wyodrębnia wartość pola z skojarzone kontrolki wprowadzania. Aby uzyskać więcej informacji na temat wyrażeń określają powiązanie dwukierunkowe, zobacz [powiązanie z bazy danych](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski umożliwiające wykonywać wbudowane Anuluj i operacje wstawiania, należy dodać formant przycisku polecenia z szablonem, za pomocą jego `CommandName` właściwość jest ustawiona na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Insert|"Insert"|  
  
 Można sterować wyglądem szablonu elementu za pomocą <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje jak zdefiniować szablon niestandardowy dla wiersza danych w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody, na stronie, która jest wywoływana, gdy formant wykonuje operację wstawiania.</summary>
        <value>Nazwa metody, na stronie, która jest wywoływana, gdy formant wykonuje operację wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby serii samouczków na temat korzystania z wiązania modelu przy użyciu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy kontrolka jest w trybie wstawiania.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy kontrolka jest w trybie wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> właściwości, aby sterować wyglądem dane wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania. Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania, wiersz danych zawiera zdefiniowane przez użytkownika zawartość określona przez <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca.  
  
 Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `InsertRowStyle-ForeColor`).  
  
-   Zagnieżdżanie `<InsertRowStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `InsertRowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> wiersz właściwości w celu określenia styl niestandardowy do danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> reprezentujący typ danych do sprawdzenia.</param>
        <summary>Określa, czy określony typ danych może być powiązana z polem w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <returns>
          <see langword="true" /> Jeśli określony typ danych może być powiązana z polem w <see cref="T:System.Web.UI.WebControls.FormView" /> sterowania; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> formantu, aby określić, czy określony typ danych może być powiązana z polem w formancie. <xref:System.Web.UI.WebControls.FormView> Kontrolka obsługuje następujące typy danych:  
  
-   Wszystkich pierwotnych typów danych, takich jak <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>i tak dalej.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę, aby dodać lub ograniczyć typy danych, które mogą być używane w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> Zdarzenie jest zgłaszane w przypadku przycisku w <xref:System.Web.UI.WebControls.FormView> kliknięciu formantu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe przy każdym wystąpieniu tego zdarzenia.  
  
 Przyciski w ramach <xref:System.Web.UI.WebControls.FormView> kontrolki można także wywoływać niektóre wbudowane funkcje formantu. Aby wykonać jedną z tych operacji, należy ustawić `CommandName` właściwości przycisku, aby jedna z wartości w tabeli poniżej.  
  
|Wartość CommandName|Opis|  
|-----------------------|-----------------|  
|"Cancel"|Anuluje operację edycji i wstawiania i zwraca <xref:System.Web.UI.WebControls.FormView> kontroli przekładają się na określonej przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości. Wywołuje <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Delete"|Usunięcie bieżącego rekordu. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemDeleted> i <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia.|  
|"Edit"|Umieszcza <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji. Wywołuje <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Insert"|Wstawia bieżącego rekordu w źródle danych. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemInserted> i <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia.|  
|"New"|Umieszcza <xref:System.Web.UI.WebControls.FormView> kontroli w trybie wstawiania. Wywołuje <xref:System.Web.UI.WebControls.FormView.ModeChanged> i <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia.|  
|"Page"|Wykonuje operację stronicowania. Ustaw `CommandArgument` właściwość przycisk, aby "Pierwszy", "ostatni", "Dalej", "Wstecz" lub numer strony, aby określić typ operacji stronicowania do wykonania. Wywołuje <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenia.|  
|"Aktualizuj"|Aktualizacji bieżący rekord w źródle danych. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemUpdated> i <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia.|  
  
 Mimo że <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzenie jest wywoływane po kliknięciu przycisku, wymienione w powyższej tabeli, zaleca się, że używasz zdarzenia wymienione w tabeli dla operacji.  
  
 A <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która pozwala określić nazwę polecenia i argument polecenia kliknięto przycisk. Aby określić nazwę polecenia i argument polecenia, należy użyć <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> i <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwości, odpowiednio. Można także przejść do formantu, który spowodował zdarzenie przy użyciu <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzenia w celu obsługi kliknięcia przycisku w <xref:System.Web.UI.WebControls.FormView> kontroli. Gdy użytkownik kliknie przycisk Dodaj, aktualnie wyświetlany element zostanie dodany do <xref:System.Web.UI.WebControls.ListBox> kontroli.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wszystkie wiersze są tworzone w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCreated> Zdarzenie jest wywoływane po wszystkie wiersze są tworzone w <xref:System.Web.UI.WebControls.FormView> kontroli. Taka sytuacja może wystąpić, gdy renderowania formantu lub w przypadku, gdy użytkownik przechodzi do innego rekordu. To zdarzenie umożliwia zapewnia metody obsługi zdarzeń, który wykonuje procedury niestandardowe, takie jak dodawanie do lub modyfikowanie zawartości wiersza, przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ItemCreated> Zdarzenie występuje przed <xref:System.Web.UI.WebControls.FormView> kontrolka jest powiązana z danymi. Aby zmodyfikować wartość powiązanych pól, należy użyć <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> zdarzeń.  
  
 Możesz uzyskać dostęp nagłówek, stopka i pagera wierszy w <xref:System.Web.UI.WebControls.FormView> kontroli przy użyciu <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, lub <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości, odpowiednio. Aby uzyskać dostęp do wiersza danych, należy użyć <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzenie, aby zaktualizować tekst <xref:System.Web.UI.WebControls.Label> formantu zawartego w wierszu pager.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Usuń, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale po zakończeniu operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenie, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość ustawioną na "Delete") w kontrolce kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli usunięcie rekordu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyniki operacji usuwania, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów wraz z wygenerowanymi wyjątkami, które mogły wystąpić. Aby określić liczbę zmodyfikowanych przez operację usuwania rekordów, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wszelkie wyjątki. Można również określić, czy wyjątek został obsłużony w metodzie obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> właściwości. Jeśli chcesz uzyskać dostęp pary nazwa/wartość pola klucza i pól niekluczowych usuniętego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> właściwości, odpowiednio.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji usuwania.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Usuń, w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale przed wykonaniem operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenie, gdy przycisk Usuń (przycisk z jego `CommandName` właściwość ustawioną na "Delete") w kontrolce kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli usunięcie rekordu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak weryfikowanie rekordu przed jego usunięciem, w każdym przypadku, gdy to zdarzenie występuje.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która pozwala określić indeks rekordu usuwane i wskazują, że można anulować operację usuwania. Aby określić indeks rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> właściwości. Aby anulować operację usuwania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `true`. Można również przejść pola kluczy i pola klucza przy użyciu <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> właściwości, odpowiednio.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenie, aby anulować operację usuwania.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk wstawiania w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale po zakończeniu operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość ustawioną na "Insert") w kontrolce kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyników operacji wstawiania przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów wraz z wygenerowanymi wyjątkami, które mogły wystąpić. Aby określić liczbę zmodyfikowanych przez operację wstawiania rekordów, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wszelkie wyjątki. Można również określić, czy wyjątek został obsłużony w metodzie obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości. Jeśli potrzebujesz uzyskać dostęp do wartości wstawionego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po zakończeniu operacji wstawiania. Aby zachować <xref:System.Web.UI.WebControls.FormView> w trybie wstawiania, ustaw <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> właściwość `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk wstawiania w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale przed wykonaniem operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenie, gdy przycisk Wstaw (przycisk z jego `CommandName` właściwość ustawioną na "Insert") w kontrolce kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli wstawia rekordu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak HTML, kodowania wartości rekordu przed wstawieniem w źródle danych, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która umożliwia określenie wartości argumentu, opcjonalne polecenia wysyłane do <xref:System.Web.UI.WebControls.FormView> kontroli i, aby wskazać, że można anulować operacji wstawiania. Odpowiada wartości argumentów polecenia `CommandArgument` właściwość przycisk Wstaw. Gdy `CommandArgument` przycisk Wstaw właściwość jest ustawiona, użyj <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> właściwości do określenia wartości argumentów polecenia. Aby anulować operację wstawiania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `true`. Można również odczytywać lub modyfikować wartości pól w nowym rekordzie za pomocą <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenie, aby anulować operację wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy kontrolka jest w trybie tylko do odczytu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla danych, gdy wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka jest w trybie tylko do odczytu. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka renderuje inny szablon dla wiersza danych, w oparciu o bieżący tryb kontrolki (określony przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> wiersz właściwości, aby zdefiniować własny interfejs użytkownika (UI) dla danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu. Szablon elementu zawiera zazwyczaj służy do wyświetlania wartości pola z rekordu, a także polecenia przycisków na edytowanie, wstawianie i usuwanie rekordu.  
  
 Aby określić szablon niestandardowy, najpierw `<ItemTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<ItemTemplate>` tagów. Aby wyświetlić wartości pól powiązany do kontroli źródła danych, należy użyć wyrażenia wiązania danych. Aby uzyskać więcej informacji na temat wyrażenia wiązania danych, zobacz [składni wyrażenia wiązania danych](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Aby utworzyć przyciski umożliwiające wykonywanie wbudowanych delete, edycji i nowych rekordów operacji, należy dodać formant przycisku polecenia z szablonem, za pomocą jego `CommandName` właściwość jest ustawiona na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość CommandName|  
|-------------------------|-----------------------|  
|Usuwanie|"Delete"|  
|Edytowanie|"Edit"|  
|New|"New"|  
  
 Można sterować wyglądem szablonu elementu za pomocą <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje jak zdefiniować szablon niestandardowy dla wiersza danych w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Aktualizuj w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale po zakończeniu operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość ustawioną na "Aktualizuj") w kontrolce kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli aktualizuje rekord. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyników operacji aktualizacji, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów wraz z wygenerowanymi wyjątkami, które mogły wystąpić. Aby określić liczbę rekordów dotyczy operacji aktualizacji, należy użyć <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wszelkie wyjątki. Można również określić, czy wyjątek został obsłużony w metodzie obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości. Jeśli potrzebujesz uzyskać dostęp do wartości pola klucza zaktualizowanym rekordem, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwości. Wartości pól niekluczowych oryginalnego i zaktualizowane można uzyskać dostęp za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> i <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> właściwości, odpowiednio.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po operacji aktualizacji. Aby zachować <xref:System.Web.UI.WebControls.FormView> w trybie edycji, ustaw <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> właściwość `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy przycisk Aktualizuj w ramach <see cref="T:System.Web.UI.WebControls.FormView" /> kliknięciu formantu, ale przed wykonaniem operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość ustawioną na "Aktualizuj") w kontrolce kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli aktualizuje rekord. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak HTML, kodowania wartości rekordu przed zaktualizowaniem w źródle danych, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która umożliwia określenie wartości argumentu, opcjonalne polecenia wysyłane do <xref:System.Web.UI.WebControls.FormView> kontroli i, aby wskazać, że można anulować operacji aktualizacji. Odpowiada wartości argumentów polecenia `CommandArgument` właściwość przycisk Aktualizuj. Gdy `CommandArgument` właściwość przycisk Aktualizuj jest ustawiona, użyj <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> właściwości do określenia wartości argumentów polecenia. Aby anulować operację aktualizacji, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `true`. Można również odczytywać lub modyfikować nowe wartości wprowadzonej przez użytkownika za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> i <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwości. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Właściwość zawiera pola klucza, podczas gdy <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwość zawiera pola klucza. Jeśli potrzebujesz uzyskać dostęp do oryginalnej wartości pola klucza, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia w celu anulowania operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości kontrolki, które muszą zostać utrwalona, nawet wtedy, gdy <see cref="P:System.Web.UI.Control.EnableViewState" /> właściwość jest ustawiona na <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> Metoda jest używana do ładowania stanu <xref:System.Web.UI.WebControls.FormView> właściwości kontrolki, które muszą zostać utrwalona, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `false`.  
  
> [!NOTE]
>  Ta metoda jest używana przede wszystkim deweloperom sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</param>
        <summary>Ładuje stan widoku uprzednio zapisanego <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> Metoda jest używana do ładowania widoku uprzednio zapisanego stanu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
> [!NOTE]
>  Ta metoda jest używana przede wszystkim deweloperom sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować przełączników między edytowanie, wstawianie i trybie tylko do odczytu, ale po zmianie trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanged> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.FormView> kontroli próbuje przełączyć się między edytowanie, wstawianie i trybie tylko do odczytu, ale po faktycznie zmiany trybu. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak synchronizacja <xref:System.Web.UI.WebControls.FormView> kontrolki z inną kontrolką, przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzenie, aby wyświetlić bieżący tryb w wierszu nagłówka <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować przełączników między edytowanie, wstawianie i trybie tylko do odczytu, ale przed zmiany trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanging> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.FormView> próbuje przełączyć się między edytowanie, wstawianie i trybie tylko do odczytu, ale przed faktycznie zmienia tryb kontrolki. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe, takie jak konfigurowanie <xref:System.Web.UI.WebControls.FormView> kontroli dla określonego trybu lub anulowanie zmiany trybu przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewModeEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która pozwala określić tryb, do którego <xref:System.Web.UI.WebControls.FormView> przełączy kontroli, aby określić, czy <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia zostało podniesione po wysłaniu przez użytkownika, anulowanie operacji edycji lub Aby wskazać, że można anulować operacji wstawiania. Aby określić nowy tryb, użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> właściwości. Można również użyć <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> właściwość, aby przełączyć się do alternatywnego trybu, ustawiając go na jeden z <xref:System.Web.UI.WebControls.FormViewMode> wartości wyliczenia. Użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> właściwości w celu określenia, czy użytkownik anulował operację edycji. Aby anulować operację wstawiania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanging> wiersz zdarzenie, aby ukryć pagera, gdy <xref:System.Web.UI.WebControls.FormView> kontrolować przejścia do trybu edycji.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy styl CSS specyficznych dla tabeli reguł, które są związane z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki są ustawione na wartości domyślne.</summary>
        <returns>Reguły stylów CSS domyślne, które są skojarzone z <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reguły stylów CSS specyficznych dla tabeli są ustawione na wartości domyślnych za pomocą <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> i <xref:System.Web.UI.WebControls.Style.Font%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Obsługuje zdarzenie przekazywane hierarchii kontroli.</summary>
        <returns>
          <see langword="true" /> Aby wskazać, że zdarzenia mają być przekazywane dodatkowe hierarchii kontroli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Metoda jest używana przez formant opcjonalnie obsługi zdarzeń przekazywanych hierarchii kontroli przez <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metody. Określa, czy do obsługi zdarzeń, sprawdzając właściwości <xref:System.EventArgs> obiekt znajdujący się w `e` parametru. Gdy zdarzenie musi być obsługiwane, metoda przeprowadza odpowiednie działania. Inne zdarzenia, są ignorowane i przekazywane w hierarchii kontroli. Ta metoda wskazuje, czy do przekazywania zdarzenia dalsze hierarchii kontroli za pośrednictwem jego zwracanej wartości.  
  
 <xref:System.Web.UI.WebControls.FormView> Formant przesłania tę metodę, aby wykonać odpowiednie działania, po kliknięciu jednego z przycisków rozpoznawane przez kontrolkę implementację podstawową. W poniższej tabeli wymieniono polecenia przycisków, które <xref:System.Web.UI.WebControls.FormView> rozpoznaje kontroli.  
  
|Przycisk|Wartość CommandName|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Używane w aktualizacji lub operacji wstawiania, aby anulować operację i odrzucić wartości wprowadzonej przez użytkownika. <xref:System.Web.UI.WebControls.FormView> Kontrolować następnie zwraca tryb określony przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości.|  
|Usuwanie|"Delete"|Używany podczas operacji usuwania, można usunąć wyświetlany rekord ze źródła danych. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemDeleting> i <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia.|  
|Edytowanie|"Edit"|Umożliwia podczas aktualizowania operacji put <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji. Zawartości określona w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości są wyświetlane dla wiersza danych.|  
|Insert|"Insert"|Używane w operacji wstawiania, aby wstawić nowy rekord w źródle danych przy użyciu wartości dostarczone przez użytkownika. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemInserting> i <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia.|  
|New|"New"|Używana w operacji wstawiania do umieszczenia <xref:System.Web.UI.WebControls.FormView> kontroli w trybie wstawiania. Zawartości określona w <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości są wyświetlane dla wiersza danych.|  
|Strona|"Page"|Używana w operacjach stronicowania do reprezentowania przycisku w wierszu pagera, który wykonuje stronicowania. Aby określić stronicowanie, ustaw `CommandArgument` właściwości przycisku "Dalej", "Wstecz", "First", "Last" lub indeks strony, dla której chcesz przejść. Wywołuje <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> i <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia. **Uwaga:** tego typu przycisku zwykle jest używana tylko w szablonie pager.|  
|Aktualizacja|"Aktualizuj"|Używany podczas aktualizowania operacji próbuje zaktualizować wyświetlany rekord w źródle danych przy użyciu wartości podanych przez użytkownika. Wywołuje <xref:System.Web.UI.WebControls.FormView.ItemUpdating> i <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia.|  
  
 Ta wersja metody zwraca `true` gdy jeden z tych przycisków odbywa się. Aby uzyskać więcej informacji na temat Propagacja zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy, można zastąpić tę metodę w celu obsługi własnych zdarzeń. Upewnij się, że Użyj wartości zwracanej, aby wskazać, czy zdarzenia mają być przekazywane do dalszych hierarchii kontroli.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.Control.Init" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.Control.Init> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany do kontroli źródła danych, użytkownik nie anulował operację usuwania i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany do kontroli źródła danych, użytkownik nie anulował operację wstawiania i program obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany do kontroli źródła danych, nie użytkownik anulował operację aktualizacji i obsługi zdarzeń nie jest zarejestrowany dla zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany do kontroli źródła danych, nie zostało anulowane zmiana trybu i program obsługi zdarzeń nie jest zarejestrowany dla tego zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> kontroli w celu podniesienia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzeń. Zazwyczaj są używane przez deweloperów kontroli, rozszerzając <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany do kontroli źródła danych, stronicowanie nie zostało anulowane i program obsługi zdarzeń nie jest zarejestrowany dla tego zdarzenia.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera całkowitą liczbę stron wymaganych do wyświetlania każdego rekordu w źródle danych.</summary>
        <value>Liczba elementów w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości w celu określenia całkowita liczba rekordów w źródle danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.Web.UI.WebControls.FormView> kontrolka wyświetla tylko jeden rekord jednocześnie, ta wartość odpowiada całkowitą liczbę stron wymaganych do wyświetlania każdego rekordu w źródle danych. Ta wartość nie jest dokładne do czasu, po wystąpieniu powiązanie danych.  
  
 Aby określić indeks bieżącego rekordu w źródle danych, użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości w celu określenia całkowita liczba rekordów wyświetlanych w formancie.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wyświetlanej stronie.</summary>
        <value>Liczony od zera indeks elementu danych, który będzie wyświetlany w <see cref="T:System.Web.UI.WebControls.FormView" /> formantu z bazowego źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość, aby określić indeks aktualnie wyświetlany rekord. Ta właściwość służy również do programowego modyfikowania wyświetlany rekord.  
  
> [!NOTE]
>  Po włączeniu funkcji stronicowania, umożliwia także tej właściwości do określenia liczby stronie wyświetlane; należy jednak pamiętać, że ta właściwość jest liczony od zera.  
  
 Aby określić całkowitą liczbę elementów w źródle danych, użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość, aby określić indeks strony wyświetlany rekord.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmiany właściwości po zakończeniu operacji stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenie, gdy przycisk pagera (przycisk z jego `CommandName` właściwość ustawioną na "Page") w kontrolce kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowe przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  To zdarzenie nie jest inicjowane, gdy programowo ustawić <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Przyciski pagera zwykle znajdują się w wierszu pagera <xref:System.Web.UI.WebControls.FormView> kontroli. To zdarzenie jest często używane do synchronizowania <xref:System.Web.UI.WebControls.FormView> kontrolką <xref:System.Web.UI.WebControls.GridView> kontroli lub ustawienie zachowania <xref:System.Web.UI.WebControls.FormView> sterowania po operacji stronicowania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenie, aby zwrócić <xref:System.Web.UI.WebControls.FormView> do trybu tylko do odczytu, gdy użytkownik przechodzi do innego rekordu.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmiany właściwości przed wykonaniem operacji stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenie, gdy przycisk pagera (przycisk z jego `CommandName` właściwość ustawioną na "Page") w kontrolce kliknięciu, lecz przed <xref:System.Web.UI.WebControls.FormView> kontroli obsługuje stronicowanie. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak anulowanie operacji stronicowania przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  To zdarzenie nie jest inicjowane, gdy programowo ustawić <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Przyciski pagera zwykle znajdują się w wierszu pagera <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 A <xref:System.Web.UI.WebControls.FormViewPageEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, która pozwala określić indeks strony wybranego przez użytkownika i wskazuje, czy operacja stronicowania powinna zostać anulowana. Aby określić indeks strony wybranego przez użytkownika, należy użyć <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> właściwości. Aby anulować operację stronicowania, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.FormViewPageEventArgs> obiekt `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenie, aby anulować operację stronicowania.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> obiekt, który umożliwia ustawienie właściwości przyciski pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> pozwala ustawić właściwości przyciski pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości do kontrolowania ustawień wiersza pagera w <xref:System.Web.UI.WebControls.FormView> kontroli. Po włączeniu funkcji stronicowania, wyświetlany jest wiersz pagera (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera formanty, które umożliwiają użytkownikom przejść do różnych rekordów w formancie. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.PagerSettings> obiektu zwraca. Właściwości można ustawić deklaratywnie w formie `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.PagerSettings> obiektu (na przykład `PagerSettings-Mode`). Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `PagerSettings.Mode`). Typowe ustawienia zazwyczaj obejmują wiersza pagera tryb wyświetlania i niestandardowy tekst lub obrazy dla formantów nawigacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości w celu określenia właściwości wiersza pager.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd rzędu pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości, aby sterować wyglądem wiersz pagera <xref:System.Web.UI.WebControls.FormView> kontroli. Po włączeniu funkcji stronicowania, wyświetlany jest wiersz pagera (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera formanty, które umożliwiają użytkownikom przechodzenie do różnych stron w formancie. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `PagerStyle-ForeColor`).  
  
-   Zagnieżdżanie `<PagerRowStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `PagerStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości w celu określenia ustawienia stylu dla wierszy pager.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowej zawartości dla wiersza pagera w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Element <see cref="T:System.Web.UI.ITemplate" /> zawierający niestandardowej zawartości dla wiersza pager. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetlany jest wiersz pagera w <xref:System.Web.UI.WebControls.FormView> kontroli, gdy jest włączona funkcja stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na wartość true). Wiersz pagera zawiera formanty, które umożliwiają użytkownikom przechodzenie do różnych stron w formancie. Zamiast przy użyciu interfejsu użytkownika wiersz wbudowanej pagera (UI), można zdefiniować własne interfejsu użytkownika za pomocą <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> zostaje ustalona zastępuje ona wiersz pagera wbudowanego interfejsu użytkownika.  
  
 Aby określić niestandardowy szablon dla wiersza pagera, należy najpierw umieścić `<PagerTemplate>` tagi między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli. Możesz następnie wyświetlać listę zawartości szablonu między otwierającym i zamykającym `<PagerTemplate>` tagów. Aby sterować wyglądem wiersz pagera, należy użyć <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości.  
  
 Zazwyczaj formanty przycisków są dodawane do szablonu pagera, aby wykonywać operacje stronicowania. <xref:System.Web.UI.WebControls.FormView> Formant wykonuje stronicowanie, gdy formant przycisku o jego `CommandName` kliknięciu właściwość ustawioną na "Page". Ten przycisk `CommandArgument` właściwość określa rodzaj operacji stronicowania do wykonania. W poniższej tabeli wymieniono wartości argumentów polecenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
|Wartość Właściwość CommandArgument|Opis|  
|---------------------------|-----------------|  
|"Dalej"|Powoduje przejście do następnej strony.|  
|"Wstecz"|Powoduje przejście do poprzedniej strony.|  
|"First"|Powoduje przejście do pierwszej strony.|  
|"Last"|Powoduje przejście do ostatniej strony.|  
|Wartość całkowita|Powoduje przejście do strony o określonym numerze.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zdefiniować szablon niestandardowy pager.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IEnumerable" /> Reprezentujący źródło danych.</param>
        <summary>Tworzy powiązanie z określonym źródłem danych do <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> kontroli można powiązać z określonym źródłem danych do kontrolki.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> metoda jest zapieczętowana, powinny przesłaniać tę metodę, jeśli trzeba wykonać wszelkie dodatkowe zadania podczas wiązania danych.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia w górę hierarchii kontroli <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> kontroli hierarchii kontroli w <xref:System.Web.UI.WebControls.FormView> kontrolować przed wyświetleniem formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzeń, z którym ma zostać utworzony <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> dla zdarzenia lub zdarzenia, które są wywoływane.</param>
        <summary>Wywołuje odpowiedniego zdarzenia dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy wysyła on żądanie POST na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołań strony <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> metody, gdy wystąpi zdarzenie zwrotu, która wywołuje zdarzenia odpowiednie dla <xref:System.Web.UI.WebControls.FormView> kontroli. To wywołanie występuje w cyklu życia strony, po zakończeniu ładowania i zmiany powiadomienia, ale przed wystąpieniem prerendering. Ta metoda została zaimplementowana do utworzenia <xref:System.Web.UI.WebControls.CommandEventArgs> obiektu dla zdarzeń, które są wywoływane.  
  
> [!NOTE]
>  Ta metoda jest używana przede wszystkim deweloperom sterowania, aby rozszerzyć <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający strumienia wyjściowego do renderowania na komputerze klienckim.</param>
        <summary>Wyświetla <see cref="T:System.Web.UI.WebControls.FormView" /> sterowania na komputerze klienckim.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.Render%2A> Metoda jest używana do renderowania zawartość sterującą serwera do przeglądarki klienta przy użyciu określonego <xref:System.Web.UI.HtmlTextWriter> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolka otacza renderowany kod HTML w <see langword="table" /> element, aby zastosować style wbudowane.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolka otacza renderowany kod HTML w <see langword="table" /> elementu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed ponownego obliczenia właściwości stylu wbudowane, takie jak <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> zastosować HTML, który jest renderowany kontrolki, platformy ASP.NET zawiera kod HTML renderowany w `table` elementu. Jeśli nie chcesz zewnętrzny `table` element do renderowania, ustaw tę właściwość na `false`. W takim przypadku Jeśli spróbujesz ustawić właściwości stylu, które mają zastosowanie do całej kontrolki wbudowanej, wyjątek jest generowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Reprezentujący wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwość programistycznie uzyskują dostęp <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz danych. Wiersz danych zawiera różną zawartość na podstawie szablonu renderowanych dla bieżącego trybu (określony przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> właściwości). Dostępne są tylko zawartość szablonu w bieżącym trybie. W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Szablon renderowania|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.Row%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersza danych <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowe Zmienianie wiersza danych, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości muszą być wykonywane po <xref:System.Web.UI.WebControls.FormView> formant został powiązany z danymi; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwość, aby uzyskać dostęp do właściwości wiersz danych podczas <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który pozwala na ustawienie wygląd wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy kontrolka jest w trybie tylko do odczytu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> reprezentujący styl wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy kontrolka jest w trybie tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> właściwości, aby sterować wyglądem dane wiersza, kiedy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu (wyświetlanie). Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu, wiersz danych zawiera zdefiniowane przez użytkownika zawartość określona przez <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> właściwości. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> obiektu zwraca. Właściwości można ustawić w sposób deklaratywny przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu otwierającym <xref:System.Web.UI.WebControls.FormView> formant w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład `RowStyle-ForeColor`).  
  
-   Zagnieżdżanie `<RowStyle>` element między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 Właściwości można również ustawić programowo w postaci `Property.Subproperty` (na przykład `RowStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> wiersz właściwości w celu określenia styl niestandardowy do danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości kontrolki, które muszą zostać utrwalona, nawet wtedy, gdy <see cref="P:System.Web.UI.Control.EnableViewState" /> właściwość jest ustawiona na <see langword="false" />.</summary>
        <returns>Zwraca bieżący stan widoku kontrolki serwera. Czy istnieje bez stanu widoku skojarzonego z kontrolką, Metoda ta zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do zapisywania stanu <xref:System.Web.UI.WebControls.FormView> właściwości kontrolki, które muszą zostać utrwalona, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> właściwość jest ustawiona na `false`.  
  
> [!NOTE]
>  Ta metoda jest używana przede wszystkim deweloperom sterowania, aby rozszerzyć <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający zapisany stan <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.FormView> kontrolki ma być zapisany stan kontrolki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość klucza dane bieżącego rekordu w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Dane klucza z bieżącym rekordem w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> ustawiono właściwość <xref:System.Web.UI.WebControls.FormView> kontroli automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.DataKey> Obiekt reprezentuje klucz podstawowy lub pól dla bieżącego rekordu i są przechowywane w <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości. Zamiast używania <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości dostępu do danych wartości klucza, możesz użyć <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości jako skrót.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> wielu pól listy właściwości, właściwość ta zwraca wartość pierwszego pola na liście.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości do określenia wartości pola klucza.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks, który ma zostać ustawiona.</param>
        <summary>Ustawia indeks bieżącej strony w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Obiekt, który reprezentuje indeksu ekranu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.IDataItemContainer> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Zawsze zwraca wartość 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.IDataItemContainer> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli, gdy wysyła on żądanie POST na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołań strony <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> metody, gdy wystąpi zdarzenie ogłaszania wstecznego. To wywołanie występuje w cyklu życia strony, po zakończeniu ładowania i zmiany powiadomienia, ale przed wyświetleniem strony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę, która zawiera nazwy pól klucza podstawowego elementy, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Tablica zawierająca nazwy pól klucza podstawowego elementy, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę listy elementów danych, które <see cref="T:System.Web.UI.WebControls.FormView" /> wiąże kontroli, gdy źródło danych zawiera więcej niż jedną listę elementów danych.</summary>
        <value>Nazwa wykazu danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> wiąże formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera lista danych, który <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</summary>
        <value>Obiekt, który zawiera lista danych, który <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator kontroli źródła danych, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</summary>
        <value>Identyfikator formantu źródła danych, który zawiera listę danych elementy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dane elementy obiektu źródłowego, który zawiera listę danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</summary>
        <value>Elementy obiektu źródła danych, który zawiera listę danych <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolować pobiera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Obiekt, który reprezentuje wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.FormView> wystąpienia jest rzutowany na <xref:System.Web.UI.WebControls.IDataBoundControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Kontrolka przycisku, który opublikował strony z powrotem do serwera.</param>
        <summary>Określa opcje zdarzeń zwrotu <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <returns>Zdarzenie ogłaszania wstecznego opcje dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> Metoda jest metodą pomocnika, która jest wywoływana przez <xref:System.Web.UI.WebControls.FormView> tworzenie <xref:System.Web.UI.PostBackOptions> obiekt, który zawiera opcje zwrotu zdarzeń dla formantu. <xref:System.Web.UI.PostBackOptions> Obiekt jest zwykle używany jako parametr <xref:System.Web.UI.Page.GetPostBackEventReference%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt znajdujący się w <paramref name="buttonControl" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> Właściwość <paramref name="buttonControl" /> jest <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>Zawsze zwraca <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A> Właściwość umożliwia strumienia wyjściowego do zapisu odpowiedni kod znaczników HTML dla <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Możesz zastąpić tę właściwość, aby określić, które <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość używaną dla kontrolki pochodnych.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt, który reprezentuje wiersz pagera, wyświetlana w górnej części <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FormViewRow" /> reprezentujący wiersz najważniejsze pagera <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest włączone stronicowanie (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), nazywany wierszem pagera dodatkowy wiersz jest automatycznie wyświetlana w <xref:System.Web.UI.WebControls.FormView> kontroli. Wiersz pagera zawiera formanty, które umożliwiają użytkownikom przechodzić do innych rekordów i mogą być wyświetlane na górnej, dolnej lub górnej i dolnej części kontrolki. Użyj <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwość programistycznie uzyskują dostęp <xref:System.Web.UI.WebControls.FormViewRow> obiekt, który reprezentuje wiersz najważniejsze pagera <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Właściwość jest dostępna tylko po <xref:System.Web.UI.WebControls.FormView> kontroli tworzy wiersz najważniejsze pagera w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeń.  
  
 Ta właściwość jest używana najczęściej, gdy trzeba programowe Zmienianie wiersz najważniejsze pagera, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwości muszą być wykonywane po <xref:System.Web.UI.WebControls.FormView> kontrolka została powiązana z danymi; w przeciwnym razie <xref:System.Web.UI.WebControls.FormView> kontrolki spowoduje zastąpienie wszystkich zmian.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwość do dostępu do wierszy pagera, wyświetlana w górnej części <xref:System.Web.UI.WebControls.FormView> kontroli. Następnie zaktualizować wiersza pagera, dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza punkt początkowy, od którego należy rozpocząć śledzenie i Zapisywanie stanu widoku zmienia się na <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zostanie przesłonięta aby oznaczyć punkt początkowy, od którego należy rozpocząć śledzenie i zapisywanie zmian kontrolki jako część stan wyświetlania kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> Aby wykonać sprawdzanie poprawności strony, gdy wywoływana jest metoda; w przeciwnym razie <see langword="false" />.</param>
        <summary>Aktualizacji bieżący rekord w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji, użyj <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metodę, aby programowo aktualizacji bieżący rekord w źródle danych. Ta metoda jest często stosowany podczas należy zaktualizować bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> kontrolować, np. informacji od innej kontrolki na stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formantu musi być w trybie edycji, gdy ta metoda jest wywołana; w przeciwnym razie <xref:System.Web.HttpException> zgłaszany.  
  
 Aby określić, czy strona sprawdzania poprawności jest wykonywane przed wykonaniem operacji aktualizacji, użyj `causesValidation` parametru. Wywołanie tej metody również generuje <xref:System.Web.UI.WebControls.FormView.ItemUpdated> i <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metodę, aby programowo aktualizacji bieżący rekord w <xref:System.Web.UI.WebControls.FormView> kontroli źródła danych.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka nie jest w trybie edycji.  - lub - <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody, na stronie, która jest wywoływana, gdy formant wykonuje operację aktualizacji.</summary>
        <value>Nazwa metody, na stronie, która jest wywoływana, gdy formant wykonuje operację aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby serii samouczków na temat korzystania z wiązania modelu przy użyciu formularzy sieci Web, zobacz [wiązania modelu i formularzy sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>