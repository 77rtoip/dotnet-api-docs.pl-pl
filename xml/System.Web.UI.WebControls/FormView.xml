<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4df11b57bb327a4a2fef034c22f428709636fe19" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69400788" /></Metadata><TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla wartości pojedynczego rekordu ze źródła danych przy użyciu szablonów zdefiniowanych przez użytkownika. <see cref="T:System.Web.UI.WebControls.FormView" /> Kontrolka umożliwia edytowanie, usuwanie i wstawianie rekordów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Szablony](#templates)  
  
-   [Powiązanie z danymi](#binding_to_data)  
  
-   [Operacje na danych](#data_operations)  
  
-   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)  
  
-   [Zdarzenia](#events)  
  
-   [Ułatwienia dostępu](#accessibility)  
  
-   [Stosowanie stylów CSS](#applying_styles)  
  
-   [Składnia deklaracyjne](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka służy do wyświetlania pojedynczego rekordu ze źródła danych. Jest podobna do <xref:System.Web.UI.WebControls.DetailsView> kontrolki, z tą różnicą, że zamiast pól wierszy są wyświetlane szablony zdefiniowane przez użytkownika. Tworzenie własnych szablonów zapewnia większą elastyczność w zakresie kontrolowania sposobu wyświetlania danych. <xref:System.Web.UI.WebControls.FormView> Kontrolka obsługuje następujące funkcje:  
  
-   Powiązanie z kontrolkami źródła danych, takimi <xref:System.Web.UI.WebControls.ObjectDataSource>jak <xref:System.Web.UI.WebControls.SqlDataSource> i.  
  
-   Wbudowane funkcje wstawiania.  
  
-   Wbudowane funkcje aktualizowania i usuwania.  
  
-   Wbudowane funkcje stronicowania.  
  
-   Programistyczny dostęp do <xref:System.Web.UI.WebControls.FormView> modelu obiektów w celu dynamicznego ustawiania właściwości, obsługi zdarzeń i tak dalej.  
  
-   Dostosowywalny wygląd za poorednictwem szablonów, motywów i stylów zdefiniowanych przez użytkownika.  
  
<a name="templates"></a>   
## <a name="templates"></a>Szablony  
 <xref:System.Web.UI.WebControls.FormView> Aby formant wyświetlał zawartość, należy utworzyć szablony dla różnych części formantu. Większość szablonów jest opcjonalna; należy jednak utworzyć szablon dla trybu, w którym formant jest skonfigurowany. Na przykład <xref:System.Web.UI.WebControls.FormView> kontrolka, która obsługuje wstawianie rekordów, musi mieć zdefiniowany szablon Wstaw element. W poniższej tabeli wymieniono różne szablony, które można utworzyć.  
  
|Typ szablonu|Opis|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiuje zawartość dla wiersza danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji. Ten szablon zawiera zazwyczaj formanty wejściowe i przyciski poleceń, za pomocą których użytkownik może edytować istniejący rekord.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiuje zawartość pustego wiersza danych wyświetlanego, gdy <xref:System.Web.UI.WebControls.FormView> formant jest powiązany ze źródłem danych, które nie zawiera żadnych rekordów. Ten szablon zazwyczaj zawiera zawartość, aby ostrzec użytkownika o tym, że źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definiuje zawartość dla wiersza stopki. Ten szablon zwykle zawiera dowolną dodatkową zawartość, która ma być wyświetlana w wierszu stopki. **Uwaga:**  Alternatywnie można po prostu określić tekst do wyświetlenia w wierszu stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definiuje zawartość wiersza nagłówka. Ten szablon zwykle zawiera dowolną dodatkową zawartość, która ma być wyświetlana w wierszu nagłówka. **Uwaga:**  Alternatywnie można po prostu określić tekst do wyświetlenia w wierszu nagłówka przez ustawienie <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiuje zawartość dla wiersza danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu. Ten szablon zwykle zawiera zawartość, aby wyświetlić wartości istniejącego rekordu.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiuje zawartość dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie wstawiania. Ten szablon zawiera zazwyczaj formanty wejściowe i przyciski poleceń, za pomocą których użytkownik może dodać nowy rekord.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiuje zawartość wiersza stronicowania wyświetlanego po włączeniu funkcji stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`). Ten szablon zawiera zazwyczaj kontrolki, w których użytkownik może przechodzić do innego rekordu. **Uwaga:**  <xref:System.Web.UI.WebControls.FormView> Kontrolka ma wbudowany interfejs użytkownika wiersza modułu stronicowania. Należy utworzyć szablon modułu stronicowania tylko wtedy, gdy chcesz utworzyć własny niestandardowy wiersz modułu stronicowania.|  
  
 Aby wyświetlić wartość pola w szablonie elementu, użyj wyrażenia powiązania danych. Aby uzyskać więcej informacji na temat wyrażeń powiązań danych, zobacz [składnia wyrażeń powiązania danych](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Kontrolki wejściowe w szablonie Edytuj element i szablon Wstaw element można powiązać z polami źródła danych przy użyciu wyrażenia dwukierunkowego powiązania. Pozwala <xref:System.Web.UI.WebControls.FormView> to formantowi na automatyczne wyodrębnienie wartości kontrolki wprowadzania dla operacji aktualizacji lub wstawiania. Wyrażenia powiązań dwukierunkowych zezwalają na kontrolki wejściowe w szablonie Edytuj element na automatyczne wyświetlanie oryginalnych wartości pól. Aby uzyskać więcej informacji na temat dwukierunkowych wyrażeń powiązań, zobacz [powiązanie z bazami danych](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Wiązanie z danymi  
 <xref:System.Web.UI.WebControls.AccessDataSource> <xref:System.Collections.ArrayList?displayProperty=nameWithType> <xref:System.Data.DataView?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Collections.IEnumerable?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.ObjectDataSource>Formant można powiązać z kontrolką źródła danych (taką jak, lub) lub z dowolną kolekcją źródeł danych, która implementuje interfejs, taki jak,, <xref:System.Web.UI.WebControls.FormView> <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>lub inne typy kolekcji. Użyj jednej z następujących metod, aby powiązać <xref:System.Web.UI.WebControls.FormView> formant z odpowiednim typem źródła danych:  
  
-   Aby powiązać z kontrolką źródła danych, ustaw <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Właściwość <xref:System.Web.UI.WebControls.FormView> kontrolki na <xref:System.Web.UI.Control.ID%2A> wartość kontrolki źródła danych. <xref:System.Web.UI.WebControls.FormView> Kontrolka automatycznie wiąże się z określoną kontrolą źródła danych i może korzystać z możliwości kontroli źródła danych, aby wykonywać funkcje wstawiania, aktualizowania, usuwania i stronicowania. Jest to preferowana metoda wiązania z danymi.  
  
-   Aby powiązać ze źródłem danych, które <xref:System.Collections.IEnumerable?displayProperty=nameWithType> implementuje interfejs, program programowo <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> ustawia właściwość <xref:System.Web.UI.WebControls.FormView> kontrolki <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> ze źródłem danych, a następnie wywołuje metodę. W przypadku korzystania z <xref:System.Web.UI.WebControls.FormView> tej metody formant nie zapewnia wbudowanej funkcji wstawiania, aktualizowania, usuwania i stronicowania. Należy podać tę funkcję przy użyciu odpowiedniego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat powiązania danych, zobacz [ASP.net content Access map zawartości](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Zawsze, gdy jest to możliwe, zdecydowanie zaleca się, aby wartości kodowane w formacie HTML były wyświetlane w tej kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Kontrolki serwera weryfikacji są również udostępniane do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [wprowadzenie do kontrolek walidacji](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Operacje na danych  
 <xref:System.Web.UI.WebControls.FormView> Formant zawiera wiele wbudowanych funkcji umożliwiających użytkownikowi aktualizowanie, usuwanie, wstawianie i wykonywanie stron przez elementy w formancie. Gdy formant jest powiązany z kontrolką źródła danych <xref:System.Web.UI.WebControls.FormView> , formant może korzystać z możliwości kontroli źródła danych i zapewniać automatyczne aktualizowanie, usuwanie, wstawianie i stronicowanie funkcji. <xref:System.Web.UI.WebControls.FormView>  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Kontrolka może zapewnić obsługę operacji Update, DELETE, INSERT i stronicowania z innymi typami źródeł danych, jednak należy zapewnić odpowiednią obsługę zdarzeń z implementacją tych operacji.  
  
 <xref:System.Web.UI.WebControls.FormView> Ponieważ kontrolka używa szablonów, nie zapewnia ona sposobu automatycznego generowania przycisków poleceń w celu wykonywania operacji aktualizowania, usuwania lub wstawiania. Należy ręcznie dołączyć te przyciski poleceń do odpowiedniego szablonu. Kontrolka rozpoznaje pewne przyciski, których `CommandName` właściwości są ustawione na określone wartości. <xref:System.Web.UI.WebControls.FormView> Poniższa tabela zawiera listę przycisków <xref:System.Web.UI.WebControls.FormView> poleceń rozpoznawanych przez formant.  
  
|Przycisk|Wartość polecenia|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Służy do aktualizowania lub wstawiania operacji w celu anulowania operacji i odrzucania wartości wprowadzonych przez użytkownika. Następnie formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość. <xref:System.Web.UI.WebControls.FormView>|  
|Usuwanie|Usunięty|Używane podczas usuwania operacji do usuwania wyświetlanego rekordu ze źródła danych. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemDeleted>i. <xref:System.Web.UI.WebControls.FormView.ItemDeleting>|  
|Edytowanie|Edytowania|Używane podczas aktualizowania operacji w celu umieszczenia <xref:System.Web.UI.WebControls.FormView> kontrolki w trybie edycji. Zawartość określona we <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości jest wyświetlana dla wiersza danych.|  
|Insert|Wstawienia|Używane podczas wstawiania operacji do próby wstawienia nowego rekordu w źródle danych przy użyciu wartości dostarczonych przez użytkownika. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemInserted>i. <xref:System.Web.UI.WebControls.FormView.ItemInserting>|  
|New|Nowy|Używane podczas wstawiania operacji do umieszczania <xref:System.Web.UI.WebControls.FormView> kontrolki w trybie wstawiania. Zawartość określona we <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości jest wyświetlana dla wiersza danych.|  
|Stronic|Stronic|Używane w operacjach stronicowania do reprezentowania przycisku w wierszu modułu stronicowania, który wykonuje stronicowanie. Aby określić operację stronicowania, ustaw `CommandArgument` właściwość przycisku na wartość "dalej", "poprzedni", "pierwszy", "ostatni" lub indeks strony, do której chcesz przejść. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>i. <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **Uwaga:**  Ten typ przycisku jest zazwyczaj używany tylko w szablonie modułu stronicowania.|  
|Aktualizowanie|Aktualizacji|Używane podczas aktualizowania operacji w celu próby zaktualizowania wyświetlanego rekordu w źródle danych za pomocą wartości dostarczonych przez użytkownika. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemUpdated>i. <xref:System.Web.UI.WebControls.FormView.ItemUpdating>|  
  
 W przeciwieństwie do przycisku Usuń (co powoduje natychmiastowe usunięcie wyświetlanego rekordu), gdy kliknięto przycisk Edytuj lub nowy, <xref:System.Web.UI.WebControls.FormView> formant przechodzi odpowiednio do trybu edycji lub wstawiania. W trybie edycji zawartość znajdująca się w <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości jest wyświetlana dla bieżącego elementu danych. Zwykle szablon Edytuj element jest zdefiniowany w taki sposób, że przycisk Edytuj jest zastępowany przyciskiem Aktualizuj i Anuluj. Kontrolki wejściowe, które są odpowiednie dla typu danych pola (takie jak <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.CheckBox> lub kontrolki), są również zwykle wyświetlane z wartością pola, które użytkownik może zmodyfikować. Kliknięcie przycisku Aktualizuj aktualizuje rekord w źródle danych, a kliknięcie przycisku Anuluj powoduje opuszczenie wszelkich zmian.  
  
 Analogicznie, zawartość znajdująca się <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> w właściwości jest wyświetlana dla elementu danych, gdy formant jest w trybie wstawiania. Szablon Wstaw element jest zwykle definiowany w taki sposób, aby nowy przycisk został zastąpiony przyciskiem Wstaw i Anuluj, a dla użytkownika są wyświetlane puste kontrolki wprowadzania wartości dla nowego rekordu. Kliknięcie przycisku Wstaw wstawia rekord w źródle danych, a kliknięcie przycisku Anuluj spowoduje opuszczenie wszelkich zmian.  
  
 <xref:System.Web.UI.WebControls.FormView> Formant zawiera funkcję stronicowania, która umożliwia użytkownikowi nawigację do innych rekordów w źródle danych. Gdy ta funkcja jest włączona, wiersz modułu stronicowania <xref:System.Web.UI.WebControls.FormView> jest wyświetlany w kontrolce zawierającej kontrolki Nawigacja strony. Aby włączyć stronicowanie, ustaw <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość na `true`. Aby dostosować wiersz modułu stronicowania, można ustawić właściwości obiektów zawartych w <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> i właściwości. Zamiast korzystać z wbudowanego interfejsu użytkownika wiersza modułu stronicowania, można utworzyć własny interfejs użytkownika przy użyciu <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizowanie interfejsu użytkownika  
 Wygląd <xref:System.Web.UI.WebControls.FormView> formantu można dostosować przez ustawienie właściwości stylu dla różnych części formantu. W poniższej tabeli wymieniono różne właściwości stylu.  
  
|Style — właściwość|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Ustawienia stylu wiersza danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Ustawienia stylu pustego wiersza danych wyświetlanego w <xref:System.Web.UI.WebControls.FormView> kontrolce, gdy źródło danych nie zawiera żadnych rekordów.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Ustawienia stylu dla wiersza <xref:System.Web.UI.WebControls.FormView> stopki formantu.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Ustawienia stylu wiersza <xref:System.Web.UI.WebControls.FormView> nagłówka kontrolki.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Ustawienia stylu wiersza danych, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Ustawienia stylu dla wiersza modułu stronicowania wyświetlanego w <xref:System.Web.UI.WebControls.FormView> kontrolce po włączeniu funkcji stronicowania.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Ustawienia stylu wiersza danych, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie tylko do odczytu.|  
  
<a name="events"></a>   
## <a name="events"></a>Zdarzenia  
 <xref:System.Web.UI.WebControls.FormView> Formant zawiera kilka zdarzeń, dla których można programować. Pozwala to na uruchomienie niestandardowej procedury za każdym razem, gdy wystąpi zdarzenie. W poniższej tabeli wymieniono zdarzenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> formant.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Występuje po kliknięciu przycisku w <xref:System.Web.UI.WebControls.FormView> kontrolce. To zdarzenie jest często używane do wykonywania zadania po kliknięciu przycisku w kontrolce.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Występuje po utworzeniu <xref:System.Web.UI.WebControls.FormViewRow> wszystkich obiektów <xref:System.Web.UI.WebControls.FormView> w formancie. To zdarzenie jest często używane do modyfikowania wartości rekordu przed wyświetleniem.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Występuje, gdy zostanie kliknięty przycisk Usuń (przycisk `CommandName` z właściwością "Delete"), ale <xref:System.Web.UI.WebControls.FormView> po usunięciu przez formant rekordu ze źródła danych. To zdarzenie jest często używane do sprawdzania wyników operacji usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Występuje po kliknięciu przycisku usuwania, ale przed <xref:System.Web.UI.WebControls.FormView> usunięciem rekordu ze źródła danych przez formant. To zdarzenie jest często używane do anulowania operacji usuwania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Występuje, gdy kliknięto przycisk Wstaw (przycisk z `CommandName` właściwością "INSERT"), ale <xref:System.Web.UI.WebControls.FormView> po wstawieniu tego rekordu przez formant. To zdarzenie jest często używane do sprawdzania wyników operacji wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Występuje po kliknięciu przycisku wstawiania, ale przed <xref:System.Web.UI.WebControls.FormView> wstawieniem rekordu przez formant. To zdarzenie jest często używane do anulowania operacji wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Występuje, gdy zostanie kliknięty przycisk aktualizacji (przycisk `CommandName` z ustawioną właściwością "Update"), ale po zaktualizowaniu wiersza przez <xref:System.Web.UI.WebControls.FormView> formant. To zdarzenie jest często używane do sprawdzania wyników operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Występuje po kliknięciu przycisku Aktualizuj, ale przed <xref:System.Web.UI.WebControls.FormView> zaktualizowaniem rekordu przez formant. To zdarzenie jest często używane do anulowania operacji aktualizacji.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje po <xref:System.Web.UI.WebControls.FormView> zmianie trybów (do edycji, wstawiania lub trybu tylko do odczytu). To zdarzenie jest często używane do wykonywania zadania, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka zmienia tryb.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje, <xref:System.Web.UI.WebControls.FormView> zanim formant zmieni tryb (do edycji, wstawiania lub trybu tylko do odczytu). To zdarzenie jest często używane do anulowania zmiany trybu.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje po kliknięciu jednego z przycisków modułu stronicowania, ale gdy <xref:System.Web.UI.WebControls.FormView> kontrolka obsługuje operację stronicowania. To zdarzenie jest często używane, gdy trzeba wykonać zadanie, gdy użytkownik nawiguje do innego rekordu w kontrolce.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje po kliknięciu jednego z przycisków modułu stronicowania, ale zanim <xref:System.Web.UI.WebControls.FormView> kontrolka obsługuje operację stronicowania. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Ułatwienia dostępu  
 Aby uzyskać informacje o sposobie konfigurowania tego formantu tak, aby generował znaczniki, które są zgodne ze standardami dostępności, zobacz [ułatwienia dostępu w programie Visual Studio oraz formanty ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) i [ASP.NET i ułatwienia dostępu](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Stosowanie stylów CSS  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka pozwala określić reguły stylów CSS w znacznikach. Jeśli używasz szablonów do dostosowywania wyglądu <xref:System.Web.UI.WebControls.FormView> kontrolki, możesz określić style CSS w znacznikach w szablonach. W takim przypadku żadna dodatkowa tabela zewnętrzna nie jest wymagana. Można uniemożliwić renderowanie tabeli przez ustawienie <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> właściwości na. `false`  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób używania <xref:System.Web.UI.WebControls.FormView> kontrolki do wyświetlania wartości <xref:System.Web.UI.WebControls.SqlDataSource> z formantu.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 Poniższy przykład ilustruje sposób używania <xref:System.Web.UI.WebControls.FormView> kontrolki do edytowania istniejących rekordów.  
  
> [!IMPORTANT]
>  Kontrolka w tym przykładzie ma pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 Poniższy przykład ilustruje sposób używania <xref:System.Web.UI.WebControls.FormView> kontrolki do wstawiania nowych rekordów.  
  
> [!IMPORTANT]
>  Kontrolka w tym przykładzie ma pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.FormView> klasy. Aby dynamicznie dodać <xref:System.Web.UI.WebControls.FormView> formant do strony, Utwórz nowy <xref:System.Web.UI.WebControls.FormView> obiekt, ustaw jego właściwości, a <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> następnie dodaj go do kolekcji kontrolki kontenera, takiej jak <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób dynamicznego dodawania <xref:System.Web.UI.WebControls.FormView> kontrolki do strony.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy funkcja stronicowania jest włączona.</summary>
        <value><see langword="true" />Aby włączyć funkcję stronicowania; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolka ma wbudowane funkcje stronicowania, które umożliwiają użytkownikowi przechodzenie do innego rekordu w źródle danych. Funkcja stronicowania może być używana z dowolnym obiektem źródła danych, który <xref:System.Collections.ICollection?displayProperty=nameWithType> obsługuje interfejs lub źródło danych obsługujące funkcję stronicowania.  
  
 Aby włączyć funkcję stronicowania, należy ustawić <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość na `true`. Możesz określić łączną liczbę elementów w źródłowym źródle danych przy użyciu <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości. Aby określić indeks aktualnie wyświetlanego elementu, użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
 Po włączeniu stronicowania w <xref:System.Web.UI.WebControls.FormView> formancie zostanie automatycznie wyświetlony dodatkowy wiersz o nazwie wiersz modułu stronicowania. Wiersz modułu stronicowania zawiera kontrolki nawigacji na stronie i może być wyświetlany u góry, u dołu lub u góry i u dołu kontrolki. Wiersz modułu stronicowania ma cztery wbudowane tryby wyświetlania modułu stronicowania. W poniższej tabeli opisano cztery tryby.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Zestaw kontrolek stronicowania składających się z poprzednich i następnych przycisków.|  
|`PagerButton.NextPreviousFirstLast`|Zestaw kontrolek stronicowania składający się z przycisków poprzedni, następny, pierwszy i ostatni.|  
|`PagerButton.Numeric`|Zestaw kontrolek stronicowania składających się z numerowanych przycisków łączy do bezpośredniego dostępu do stron. Jest to tryb domyślny.|  
|`PagerButton.NumericFirstLast`|Zestaw kontrolek stronicowania składających się z przycisków numerowanych i pierwszego oraz ostatniego łącza.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Formant automatycznie ukrywa wiersz modułu stronicowania, gdy źródło danych zawiera mniej niż dwa rekordy.  
  
 Można kontrolować ustawienia wiersza modułu stronicowania (na przykład tryb wyświetlania modułu stronicowania, liczbę linków stron do wyświetlenia w danym momencie oraz etykietę tekstową kontrolki modułu stronicowania) za pomocą <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości. Aby kontrolować wygląd wiersza modułu stronicowania (w tym kolor tła i kolor czcionki), użyj <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości. <xref:System.Web.UI.WebControls.FormView> Kontrolka umożliwia również zdefiniowanie szablonu niestandardowego dla wiersza modułu stronicowania. Aby uzyskać więcej informacji na temat tworzenia niestandardowego szablonu wiersza modułu stronicowania, zobacz <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 <xref:System.Web.UI.WebControls.FormView> Formant zawiera kilka zdarzeń, których można użyć do wykonywania akcji niestandardowej w przypadku wystąpienia stronicowania. W poniższej tabeli wymieniono dostępne zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Występuje po kliknięciu jednego z przycisków modułu stronicowania, ale gdy <xref:System.Web.UI.WebControls.FormView> kontrolka obsługuje operację stronicowania. To zdarzenie jest często używane, gdy trzeba wykonać zadanie, gdy użytkownik nawiguje do innego rekordu w kontrolce.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Występuje po kliknięciu jednego z przycisków modułu stronicowania, ale zanim <xref:System.Web.UI.WebControls.FormView> kontrolka obsługuje operację stronicowania. To zdarzenie jest często używane do anulowania operacji stronicowania.|  
  
> [!NOTE]
>  Te zdarzenia nie są zgłaszane w <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> przypadku zmiany właściwości programowo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> jak użyć właściwości, aby włączyć funkcję stronicowania <xref:System.Web.UI.WebControls.FormView> w formancie.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który będzie wyświetlany w tle <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</summary>
        <value>Adres URL obrazu, który będzie wyświetlany w tle <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić adres URL obrazu, który ma być wyświetlany w tle <xref:System.Web.UI.WebControls.FormView> kontrolki. <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>  
  
> [!NOTE]
>  Jeśli określony obraz jest mniejszy niż <xref:System.Web.UI.WebControls.FormView> kontrolka, obraz jest układany w tle. Jeśli obraz jest większy niż kontrolka, obraz zostanie przycięty.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> właściwości do wyświetlania niestandardowego obrazu w tle <xref:System.Web.UI.WebControls.FormView> kontrolki.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt reprezentujący wiersz modułu stronicowania wyświetlany u dołu <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></summary>
        <value>Obiekt, który reprezentuje dolny wiersz <see cref="T:System.Web.UI.WebControls.FormView" /> modułu stronicowania formantu. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), dodatkowy wiersz o nazwie wiersz modułu stronicowania <xref:System.Web.UI.WebControls.FormView> jest automatycznie wyświetlany w kontrolce. Wiersz modułu stronicowania zawiera kontrolki umożliwiające użytkownikowi przechodzenie do innych rekordów i mogą być wyświetlane u góry, u dołu lub u góry i u dołu kontrolki. Użyj właściwości, aby programowo <xref:System.Web.UI.WebControls.FormViewRow> uzyskać dostęp do obiektu, który reprezentuje <xref:System.Web.UI.WebControls.FormView> dolny wiersz modułu stronicowania w formancie. <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>  
  
> [!NOTE]
>  Właściwość jest dostępna tylko <xref:System.Web.UI.WebControls.FormView> po utworzeniu przez formant <xref:System.Web.UI.WebControls.FormView.ItemCreated> dolnego wiersza modułu stronicowania w zdarzeniu. <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>  
  
 Ta właściwość jest często używana, gdy trzeba programistycznie manipulować dolnym wierszem modułu stronicowania, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości muszą zostać wykonane <xref:System.Web.UI.WebControls.FormViewRow> po <xref:System.Web.UI.WebControls.FormView> utworzeniu obiektu, który reprezentuje dolny wiersz modułu stronicowania. w przeciwnym razie formant zastępuje wszelkie zmiany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> właściwości w celu uzyskania dostępu do wiersza modułu stronicowania wyświetlanego u dołu <xref:System.Web.UI.WebControls.FormView> kontrolki. Wiersz modułu stronicowania zostanie następnie zaktualizowany o dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do renderowania w elemencie HTML Caption w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce. Ta właściwość jest udostępniana w celu zapewnienia, że formant jest bardziej dostępny dla użytkowników urządzeń z technologią pomocniczą.</summary>
        <value>Ciąg reprezentujący tekst, który ma być renderowany w elemencie HTML Caption w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.Caption%2A> , aby określić tekst do renderowania w elemencie HTML Caption <xref:System.Web.UI.WebControls.FormView> w kontrolce. Określony tekst zawiera urządzenia z technologią pomocniczą z opisem tabeli, która może być używana w celu ułatwienia dostępu do formantu.  
  
 Dodatkowa obsługa ułatwień dostępu <xref:System.Web.UI.WebControls.FormView> dla kontrolki jest udostępniana <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> przez właściwość. Użyj właściwości, aby określić wyrównanie elementu HTML Caption <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.Caption%2A> właściwości, aby określić tekst dla elementu HTML Caption renderowanego <xref:System.Web.UI.WebControls.FormView> w kontrolce.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia położenie w poziomie lub w pionie elementu napisów HTML w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce. Ta właściwość jest udostępniana w celu zapewnienia, że formant jest bardziej dostępny dla użytkowników urządzeń z technologią pomocniczą.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości. Wartość domyślna to <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić poziome lub pionowe położenie elementu napisów HTML <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Ta właściwość jest udostępniana w celu zapewnienia, że formant jest bardziej dostępny dla użytkowników urządzeń z technologią pomocniczą.  
  
 Ta właściwość jest ustawiana przy użyciu jednej <xref:System.Web.UI.WebControls.TableCaptionAlign> z wartości wyliczenia. Poniższa tabela zawiera listę możliwych wartości.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Element Caption jest wyrównany do dolnej części tabeli.|  
|`TableCaptionAlign.Left`|Element Caption jest wyrównany do lewej strony tabeli.|  
|`TableCaptionAlign.NotSet`|Wyrównanie elementu podpisu nie jest ustawione.|  
|`TableCaptionAlign.Right`|Element Caption jest wyrównany do prawej strony tabeli.|  
|`TableCaptionAlign.Top`|Element Caption jest wyrównany do górnej części tabeli.|  
  
> [!NOTE]
>  Gdy ta właściwość jest ustawiona na `TableCaptionAlign.NotSet`, używana jest domyślna wartość przeglądarki.  
  
 Dodatkowa obsługa ułatwień dostępu <xref:System.Web.UI.WebControls.FormView> dla kontrolki jest udostępniana <xref:System.Web.UI.WebControls.FormView.Caption%2A> przez właściwość. Użyj właściwości <xref:System.Web.UI.WebControls.FormView.Caption%2A> , aby określić tekst do renderowania w elemencie HTML Caption <xref:System.Web.UI.WebControls.FormView> w kontrolce.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> właściwości, aby określić, że element napisów HTML <xref:System.Web.UI.WebControls.FormView> w kontrolce powinien być renderowany po lewej stronie kontrolki.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jedną z <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między zawartością komórki a obramowaniem komórki.</summary>
        <value>Ilość miejsca (w pikselach) między zawartością komórki a obramowaniem komórki. Wartość domyślna to-1, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Użyj właściwości, aby kontrolować odstępy między zawartością komórki a obramowaniem komórki. Określona kwota uzupełnienia jest dodawana do wszystkich czterech boków komórki.  
  
 Wszystkie komórki w tej samej kolumnie <xref:System.Web.UI.WebControls.FormView> formantu mają tę samą szerokość. Kwota dopełnienia jest stosowana do najszerszej komórki, a wszystkie pozostałe komórki w kolumnie są dostosowywane do tej szerokości komórki. Podobnie wszystkie komórki w tym samym wierszu mają tę samą wysokość. Kwota uzupełnienia jest stosowana do najwyższej komórki w wierszu, a wszystkie pozostałe komórki w wierszu są dostosowywane do tej wysokości komórki. Nie można określić rozmiarów poszczególnych komórek.  
  
 Aby dostosować odstępy między komórkami, użyj <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości.  
  
> [!NOTE]
>  Gdy ta właściwość nie jest ustawiona, zostanie użyta domyślna wartość przeglądarki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości, aby określić ilość odstępów między zawartością komórki a obramowaniem komórki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość miejsca między komórkami.</summary>
        <value>Ilość miejsca (w pikselach) między komórkami. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować odstępy między sąsiednimi komórkami <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Ten odstęp jest stosowany zarówno w pionie, jak i w poziomie. Odstępy między komórkami są jednorodne dla całej kontrolki. Nie można określić odstępu poszczególnych komórek między wierszami lub kolumnami.  
  
> [!NOTE]
>  Jeśli ustawisz tę właściwość na wartość większą niż 0, a następnie ustawisz <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwość na wartość, która wyświetla obramowanie komórki, między obramowaniem sąsiednich komórek zostanie wyświetlona przerwa. W tej sytuacji <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Właściwość steruje rozmiarem przerwy.  
  
 Aby dostosować odstępy między zawartością komórki a obramowaniem komórki, użyj <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> właściwości, aby określić ilość odstępów między sąsiednimi komórkami.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Jedna z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> Przełącza formant do określonego trybu wprowadzania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> , aby programowo <xref:System.Web.UI.WebControls.FormView> przełączać kontrolkę między trybami Edytuj, Wstaw i tylko do odczytu. Ta metoda aktualizuje <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> również właściwość o określony tryb. W poniższej tabeli wymieniono różne wartości trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, co umożliwia użytkownikowi aktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który umożliwia użytkownikowi Dodawanie nowego rekordu do źródła danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest normalnym trybem wyświetlania.|  
  
> [!NOTE]
>  Zdarzenia <xref:System.Web.UI.WebControls.FormView.ModeChanged> i<xref:System.Web.UI.WebControls.FormView.ModeChanging> nie są wywoływane, gdy ta metoda jest wywoływana.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> jak za pomocą metody <xref:System.Web.UI.WebControls.FormView> zwrócić formant do trybu tylko do odczytu za każdym razem, gdy użytkownik nawiguje do innego rekordu.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource"><see cref="T:System.Collections.IEnumerable" /> Reprezentuje źródło danych użyte do utworzenia hierarchii formantów.</param>
        <param name="dataBinding"><see langword="true" />Aby wskazać, że hierarchia formantów jest tworzona bezpośrednio ze źródła danych; <see langword="false" /> aby wskazać, że hierarchia formantów zostanie utworzona ze stanu widoku.</param>
        <summary>Tworzy hierarchię formantów służącą do renderowania <see cref="T:System.Web.UI.WebControls.FormView" /> formantu z określonym źródłem danych.</summary>
        <returns>Liczba elementów utworzonych na podstawie źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną przez formant <xref:System.Web.UI.WebControls.FormView> , aby utworzyć hierarchię formantów dla <xref:System.Web.UI.WebControls.FormView> kontrolki. <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Gdy parametr jest `true`, wiązanie danych jest wykonywane przed utworzeniem hierarchii formantów. `dataBinding`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Z którym jest powiązany<see langword="null" />formant <see cref="T:System.Web.UI.WebControls.FormView" />. <see cref="T:System.Web.UI.IDataSource" /> <see cref="T:System.Web.UI.DataSourceView" /></exception>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby utworzyć własną hierarchię kontroli.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy domyślny obiekt stylu tabeli dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> , który zawiera domyślny styl tabeli <see cref="T:System.Web.UI.WebControls.FormView" /> dla kontrolki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną przez formant <xref:System.Web.UI.WebControls.FormView> , aby utworzyć swój domyślny obiekt stylu tabeli. <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Oprócz ustawiania stylu <xref:System.Web.UI.WebControls.TableStyle> domyślnego obiektu, ta metoda <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> ustawia również właściwość na 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby utworzyć własny styl domyślny.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.DataSourceSelectArguments" /> Tworzy obiekt, który zawiera argumenty, które są przekazane do źródła danych w celu przetworzenia.</summary>
        <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> , który zawiera argumenty, które są przekazane do źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant, aby utworzyć <xref:System.Web.UI.DataSourceSelectArguments> obiekt, który zawiera argumenty przekazane do źródła danych. <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> W tej implementacji <xref:System.Web.UI.DataSourceSelectArguments> obiekt zawiera argumenty operacji stronicowania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby określić własne wartości, które są przesyłane do źródła danych.</para></block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Indeks (liczony od zera) elementu danych do wyświetlenia.</param>
        <param name="rowType">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> wartości wyliczenia.</param>
        <param name="rowState">Bitowa kombinacja <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości wyliczenia.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> Tworzy obiekt przy użyciu określonego indeksu elementu, typu wiersza i stanu wiersza.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormViewRow" /> Z określonym indeksem elementu, typem wiersza i stanem wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną przez formant <xref:System.Web.UI.WebControls.FormView> , aby utworzyć <xref:System.Web.UI.WebControls.FormViewRow> obiekt używany do reprezentowania wiersza w kontrolce. <xref:System.Web.UI.WebControls.FormView.CreateRow%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby <see cref="T:System.Web.UI.WebControls.FormViewRow" /> zwrócić obiekt z ustawieniami niestandardowymi.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy tabelę zawierającą dla <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <returns>Reprezentuje tabelę zawierającą <see cref="T:System.Web.UI.WebControls.FormView" />formant. <see cref="T:System.Web.UI.WebControls.Table" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant, aby utworzyć tabelę, która działa jako kontener dla kontrolki. <xref:System.Web.UI.WebControls.FormView.CreateTable%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> wprowadzania danych formantu.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić, <xref:System.Web.UI.WebControls.FormView> czy kontrolka jest w trybie edycji, wstawiania czy tylko do odczytu. <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> W poniższej tabeli wymieniono różne wartości trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, co umożliwia użytkownikowi aktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który umożliwia użytkownikowi Dodawanie nowego rekordu do źródła danych.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest normalnym trybem wyświetlania.|  
  
 Ta wartość jest zwykle ustawiana automatycznie przez <xref:System.Web.UI.WebControls.FormView> formant po kliknięciu przycisku polecenia Nowy, Aktualizuj, Wstaw, Usuń lub Anuluj. <xref:System.Web.UI.WebControls.FormView> Gdy kontrolka zmienia tryby w odpowiedzi na akcję, zostają zgłoszone zdarzenia w poniższej tabeli. Pozwala to utworzyć niestandardową procedurę obsługi zdarzeń, która wykonuje odpowiednią procedurę w przypadku wystąpienia zdarzenia.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Występuje, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka zmienia tryb, ale po zmianie trybu. To zdarzenie jest często używane do wykonywania zadania za każdym razem <xref:System.Web.UI.WebControls.FormView> , gdy formant zmienia tryb.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Występuje, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka zmienia tryb, ale przed zmianą trybu. To zdarzenie jest często używane do anulowania zmiany trybu.|  
  
 **Uwaga** Te zdarzenia nie są zgłaszane w przypadku zmiany trybu programowo przy użyciu <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć właściwości <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> , aby określić, <xref:System.Web.UI.WebControls.FormView> czy formant jest w trybie edycji, wstawiania czy tylko do odczytu. Jeśli użytkownik próbuje przejść do innego rekordu, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka jest w trybie edycji więcej, operacja stronicowania zostanie anulowana.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wiąże źródło danych z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.FormView.DataBind> , aby powiązać dane ze źródła <xref:System.Web.UI.WebControls.FormView> danych z kontrolką. Ta metoda rozwiązuje wszystkie wyrażenia powiązań danych w aktywnym szablonie formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element danych powiązany z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolką.</summary>
        <value>Reprezentuje element danych powiązany <see cref="T:System.Web.UI.WebControls.FormView" /> z kontrolką. <see cref="T:System.Object" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby uzyskać dostęp do elementu danych powiązanego <xref:System.Web.UI.WebControls.FormView> z kontrolką. <xref:System.Web.UI.WebControls.FormView.DataItem%2A> Element danych jest często używany do bezpośredniego dostępu do wartości pól bieżącego rekordu. Typ <xref:System.Object> zwracanego przez tę właściwość różni się w zależności od źródła danych. Na przykład gdy <xref:System.Web.UI.WebControls.SqlDataSource> formant jest powiązany <xref:System.Web.UI.WebControls.FormView> z kontrolką, <xref:System.Data.DataRowView> zwracany jest obiekt.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko po wystąpieniu powiązania danych. Przed wystąpieniem powiązania danych ta właściwość zwraca `null`wartość. Ta właściwość nie jest również stosowana, gdy <xref:System.Web.UI.WebControls.FormView> formant jest w trybie wstawiania i zwraca `null`.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataItem%2A> właściwości, aby określić wartość pola w elemencie danych.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów danych w źródle danych.</summary>
        <value>Liczba elementów danych w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> , aby określić liczbę elementów danych zawartych w źródle danych. Ta właściwość zawiera taką samą wartość, jak <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks elementu danych powiązanego <see cref="T:System.Web.UI.WebControls.FormView" /> z kontrolką ze źródła danych.</summary>
        <value>Indeks elementu danych powiązany <see cref="T:System.Web.UI.WebControls.FormView" /> z kontrolką ze źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> , aby określić indeks elementu danych powiązanego <xref:System.Web.UI.WebControls.FormView> z kontrolką ze źródła danych. Ta właściwość zawiera taką samą wartość, jak <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość.  
  
> [!NOTE]
>  Ta właściwość nie ma zastosowania, <xref:System.Web.UI.WebControls.FormView> gdy formant jest w trybie wstawiania. Gdy formant jest w trybie wstawiania, <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> Właściwość zwraca wartość-1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataKey" /> Pobiera obiekt reprezentujący klucz podstawowy wyświetlanego rekordu.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataKey" /> Obiekt reprezentujący klucz podstawowy wyświetlanego rekordu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona <xref:System.Web.UI.WebControls.FormView> , formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola wymienione we <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Użyj właściwości <xref:System.Web.UI.WebControls.FormView.DataKey%2A> , aby uzyskać ten <xref:System.Web.UI.WebControls.DataKey> obiekt. Ta właściwość jest często używana w celu uzyskania kluczy i odpowiadających im wartości pól określonych we <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót można również użyć <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości, aby określić wartość pierwszego pola klucza wymienionego <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> we właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości, aby określić wartość pola klucza.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę zawierającą nazwy pól kluczy dla źródła danych.</summary>
        <value>Tablica zawierająca nazwy pól kluczy dla źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Użyj właściwości, aby określić rozdzieloną przecinkami listę nazw pól reprezentujących klucz podstawowy źródła danych. Gdy właściwość jest ustawiona <xref:System.Web.UI.WebControls.FormView> , formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola wymienione we <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Obiekt jest następnie przechowywany <xref:System.Web.UI.WebControls.FormView.DataKey%2A> we właściwości. <xref:System.Web.UI.WebControls.DataKey>  
  
> [!NOTE]
>  Należy ustawić <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość dla wbudowanej aktualizacji, usuwania i wstawiania funkcji <xref:System.Web.UI.WebControls.FormView> formantu do pracy.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości, aby określić pole klucza dla źródła danych powiązanego <xref:System.Web.UI.WebControls.FormView> z kontrolką.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb wprowadzania danych, do którego <see cref="T:System.Web.UI.WebControls.FormView" /> formant wraca po operacji Update, INSERT lub Cancel.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości. Wartość domyślna to <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić, <xref:System.Web.UI.WebControls.FormView> czy kontrolka powraca do trybu edycji, wstawiania lub tylko do odczytu po wykonaniu operacji Update, INSERT lub Cancel. <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu tylko do odczytu; jednak można <xref:System.Web.UI.WebControls.FormView> zachować formant w trybie edycji lub wstawiania przez ustawienie tej właściwości na odpowiednią wartość. W poniższej tabeli wymieniono różne wartości trybu.  
  
|Tryb|Opis|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest w trybie edycji, co umożliwia użytkownikowi aktualizowanie wartości rekordu.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie wstawiania, który umożliwia użytkownikowi Dodawanie nowego rekordu do źródła danych.|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Formant jest w trybie tylko do odczytu, który jest normalnym trybem wyświetlania.|  
  
 Ta właściwość jest często używana, gdy <xref:System.Web.UI.WebControls.FormView> kontrolka ma jeden cel, na przykład tylko do wstawiania lub edycji rekordów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości, aby <xref:System.Web.UI.WebControls.FormView> zachować kontrolkę w trybie edycji po operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jedną z <see cref="T:System.Web.UI.WebControls.FormViewMode" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa bieżący rekord w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> , aby programowo usunąć bieżący rekord <xref:System.Web.UI.WebControls.FormView> w kontrolce ze źródła danych. Ta metoda jest często używana, gdy konieczne jest usunięcie bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> formantem, na przykład z innej kontrolki na stronie. Wywołanie tej metody wywołuje <xref:System.Web.UI.WebControls.FormView.ItemDeleted> również zdarzenia i. <xref:System.Web.UI.WebControls.FormView.ItemDeleting>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> metody w celu programistycznego usunięcia bieżącego rekordu <xref:System.Web.UI.WebControls.FormView> w kontrolce ze źródła danych.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację usuwania.</summary>
        <value>Nazwa metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację usuwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z serią samouczków na temat używania powiązania modelu z formularzami sieci Web, zobacz [powiązanie modelu i formularze sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość niestandardową dla elementu w trybie edycji.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza danych, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka jest w trybie edycji. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka renderuje inny szablon dla wiersza danych w oparciu o bieżący tryb kontrolki (określony <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> przez właściwość). <xref:System.Web.UI.WebControls.FormView> W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Renderowany szablon|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> , aby zdefiniować własny interfejs użytkownika dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie edycji. Szablon Edytuj element zwykle zawiera kontrolki wprowadzania dla użytkownika w celu zaktualizowania wartości istniejącego rekordu, a także przyciski poleceń służące do aktualizowania rekordu i anulowania operacji aktualizacji.  
  
 Aby określić szablon niestandardowy, należy najpierw umieścić `<EditItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<EditItemTemplate>` . Za pomocą dwukierunkowego wyrażenia powiązania można skojarzyć pole z kontrolką wejściową. Pozwala <xref:System.Web.UI.WebControls.FormView> to formantowi na automatyczne wyświetlanie pierwotnej wartości pola w skojarzonej kontrolce wejściowej w trybie edycji. Gdy rekord zostanie zaktualizowany, <xref:System.Web.UI.WebControls.FormView> formant automatycznie wyodrębnia uaktualnioną wartość pola ze skojarzonej kontrolki wejściowej. Aby uzyskać więcej informacji na temat dwukierunkowych wyrażeń powiązań, zobacz [powiązanie z bazami danych](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski poleceń, które wykonują wbudowane operacje anulowania i aktualizacji, Dodaj kontrolkę przycisk polecenia do szablonu z `CommandName` właściwością ustawioną na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość polecenia|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Aktualizowanie|Aktualizacji|  
  
 Można kontrolować wygląd szablonu elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób definiowania szablonu niestandardowego dla wiersza danych w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza danych, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka jest w trybie edycji.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza danych, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka jest w trybie edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> , aby kontrolować wygląd wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie edycji. Gdy kontrolka jest w trybie edycji, w wierszu danych zostanie wyświetlona zawartość zdefiniowana <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> przez użytkownika określona przez właściwość. <xref:System.Web.UI.WebControls.FormView> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `EditRowStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<EditRowStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `EditRowStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia właściwości, <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> aby określić styl niestandardowy dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie edycji.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu pustego wiersza danych wyświetlanego, gdy źródło danych powiązane <see cref="T:System.Web.UI.WebControls.FormView" /> z kontrolką nie zawiera żadnych rekordów.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> elementu, który umożliwia ustawienie wyglądu pustego wiersza danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> , aby kontrolować wygląd pustego wiersza danych <xref:System.Web.UI.WebControls.FormView> w kontrolce. Pusty wiersz danych jest wyświetlany, gdy źródło danych powiązane z kontrolką nie zawiera żadnych rekordów. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `EmptyDataRowStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<EmptyDataRowStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `EmptyDataRowStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości, aby określić styl niestandardowy dla pustego wiersza danych wyświetlanego, <xref:System.Web.UI.WebControls.FormView> gdy formant jest powiązany ze źródłem danych, które nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowaną przez użytkownika dla pustego wiersza danych renderowanego, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy formant jest powiązany ze źródłem danych, które nie zawiera żadnych rekordów.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla pustego wiersza danych. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pusty wiersz danych jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontrolce, gdy źródło danych powiązane z kontrolką nie zawiera żadnych rekordów. Można zdefiniować własny niestandardowy interfejs użytkownika dla pustego wiersza danych przy użyciu <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości. Aby określić szablon niestandardowy dla pustego wiersza danych, należy najpierw umieścić `<EmptyDataTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<EmptyDataTemplate>` . Aby kontrolować styl pustego wiersza danych, należy użyć <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Alternatywnie możesz użyć wbudowanego interfejsu użytkownika dla pustego wiersza danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób definiowania szablonu niestandardowego dla pustego wiersza danych wyświetlanego, <xref:System.Web.UI.WebControls.FormView> gdy formant jest powiązany ze źródłem danych, które nie zawiera żadnych rekordów.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany w pustym wierszu danych renderowanym <see cref="T:System.Web.UI.WebControls.FormView" /> , gdy formant jest powiązany ze źródłem danych, które nie zawiera żadnych rekordów.</summary>
        <value>Tekst, który ma być wyświetlany w pustym wierszu danych. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pusty wiersz danych jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontrolce, gdy źródło danych powiązane z kontrolką nie zawiera żadnych rekordów. Użyj właściwości <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> , aby określić tekst, który ma być wyświetlany w pustym wierszu danych. Aby kontrolować styl pustego wiersza danych, należy użyć <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> właściwości. Alternatywnie można zdefiniować własny niestandardowy interfejs użytkownika dla pustego wiersza danych przez ustawienie <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia właściwości, <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> aby określić tekst, który ma być wyświetlany w pustym wierszu danych.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant modułu sprawdzania poprawności będzie obsługiwał Wyjątki występujące podczas operacji wstawiania lub aktualizowania.</summary>
        <value><see langword="true" />Jeśli formant modułu sprawdzania poprawności będzie obsługiwał Wyjątki występujące podczas operacji wstawiania lub aktualizacji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawia, że <see cref="T:System.Web.UI.WebControls.FormView" /> formant jest powiązany z danymi, gdy jest to konieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą używaną <xref:System.Web.UI.WebControls.FormView> przez klasę, <xref:System.Web.UI.WebControls.FormView> aby upewnić się, że formant jest powiązany z danymi, gdy jest to konieczne. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Metoda jest zwykle wywoływana podczas metody, <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> aby powiązać formant ze źródłem danych, gdy formant powiązany z danymi nie jest jeszcze powiązany, ale wymaga powiązania danych. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Ta wersja metody została zastąpiona, aby zapobiec wystąpieniu powiązania danych, <xref:System.Web.UI.WebControls.FormView> gdy formant jest w trybie wstawiania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Służy do przechowywania wartości pól bieżącego elementu danych.</param>
        <param name="includeKeys"><see langword="true" />Aby dołączyć pola klucza; w przeciwnym razie. <see langword="false" /></param>
        <summary>Pobiera wartości każdego pola zadeklarowanego w wierszu danych i zapisuje je w określonym <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> obiekcie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant w celu pobrania wartości każdego pola zadeklarowanego w wierszu danych. <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Ponieważ wiersz danych zawiera inny szablon oparty na bieżącym trybie, Metoda ta pobiera tylko wartości pól zadeklarowanych w szablonie, które odpowiadają bieżącemu trybowi. W poniższej tabeli przedstawiono dostępne tryby oraz odpowiednie szablony.  
  
|Tryb|Szablon|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Można określić, czy wyodrębnione wartości uwzględniają pole klucza lub pola przy użyciu `includeKeys` parametru.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby utworzyć własną procedurę w celu pobrania wartości pól.</para></block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wiersz stopki <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></summary>
        <value>Reprezentujący wiersz stopki <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopki jest wyświetlany w dolnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.FooterText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> jest ustawiona. Użyj właściwości, aby programowo <xref:System.Web.UI.WebControls.FormViewRow> uzyskać dostęp do obiektu, który reprezentuje wiersz stopki. <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>  
  
> [!NOTE]
>  Właściwość jest dostępna tylko <xref:System.Web.UI.WebControls.FormView> po utworzeniu przez formant wiersza stopki w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeniu. <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>  
  
 Ta właściwość jest często używana, gdy trzeba programistycznie manipulować wierszem stopki, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwości muszą zostać wykonane <xref:System.Web.UI.WebControls.FormView> po <xref:System.Web.UI.WebControls.FormView> wyrenderowaniu kontrolki; w przeciwnym razie formant zastępuje wszelkie zmiany.  
  
 Aby kontrolować styl wiersza stopki, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> właściwości, aby programowo zmodyfikować właściwości wiersza stopki <xref:System.Web.UI.WebControls.FormView.ItemCreated> podczas zdarzenia.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza stopki <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza stopki <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopki jest wyświetlany w dolnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.FooterText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> jest ustawiona. Użyj właściwości, aby kontrolować wygląd wiersza stopki <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `FooterStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<FooterStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `FooterStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości do określenia stylu niestandardowego dla wiersza stopki.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowaną przez użytkownika dla wiersza stopki w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza stopki. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopki jest wyświetlany w dolnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.FooterText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> jest ustawiona. Można zdefiniować własny niestandardowy interfejs użytkownika dla wiersza stopki przy użyciu <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości. Aby określić szablon niestandardowy dla wiersza stopki, należy najpierw umieścić `<FooterTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<FooterTemplate>` . Aby kontrolować styl wiersza stopki, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie, można po prostu wyświetlić tekst w wierszu stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości, aby zdefiniować szablon niestandardowy do renderowania dla wiersza stopki.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany w wierszu <see cref="T:System.Web.UI.WebControls.FormView" /> stopki formantu.</summary>
        <value>Tekst, który ma być wyświetlany w wierszu stopki. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz stopki jest wyświetlany w dolnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.FooterText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> jest ustawiona. Użyj właściwości <xref:System.Web.UI.WebControls.FormView.FooterText%2A> , aby określić tekst, który ma być wyświetlany w wierszu stopki. Aby kontrolować styl wiersza stopki, użyj <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> właściwości. Alternatywnie można zdefiniować własny niestandardowy interfejs użytkownika dla wiersza stopki przez ustawienie <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.FooterText%2A> <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości, aby określić tekst, który ma być wyświetlany w wierszu stopki.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.GridLines" /> wartości. Wartość domyślna to <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.GridLines%2A> , aby określić styl linii siatki <xref:System.Web.UI.WebControls.FormView> dla kontrolki. W poniższej tabeli wymieniono dostępne style.  
  
|Styl|Opis|  
|-----------|-----------------|  
|`GridLines.None`|Nie są wyświetlane linie siatki.|  
|`GridLines.Horizontal`|Wyświetla tylko poziomy linie siatki.|  
|`GridLines.Vertical`|Wyświetla tylko pionowe linie siatki.|  
|`GridLines.Both`|Wyświetla zarówno poziome, jak i pionowe linie siatki.|  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.GridLines%2A> właściwości w celu wyświetlenia zarówno pionowych, jak i poziomych linii siatki.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wiersz nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></summary>
        <value>Reprezentujący wiersz nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> jest ustawiona. Użyj właściwości, aby programowo <xref:System.Web.UI.WebControls.FormViewRow> uzyskać dostęp do obiektu, który reprezentuje wiersz nagłówka. <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>  
  
> [!NOTE]
>  Właściwość jest dostępna tylko <xref:System.Web.UI.WebControls.FormView> po utworzeniu przez formant wiersza nagłówka w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeniu. <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>  
  
 Ta właściwość jest często używana, gdy trzeba programistycznie manipulować wierszem nagłówka, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości muszą zostać wykonane <xref:System.Web.UI.WebControls.FormView> po <xref:System.Web.UI.WebControls.FormView> wyrenderowaniu kontrolki; w przeciwnym razie formant zastępuje wszelkie zmiany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> właściwości, aby programowo zmodyfikować właściwości wiersza nagłówka <xref:System.Web.UI.WebControls.FormView.ItemCreated> podczas zdarzenia.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza nagłówka <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> jest ustawiona. Użyj właściwości, aby kontrolować wygląd wiersza nagłówka <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `HeaderStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<HeaderStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `HeaderStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości do określenia stylu niestandardowego wiersza nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość zdefiniowaną przez użytkownika dla wiersza nagłówka w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza nagłówka. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> jest ustawiona. Można zdefiniować własny niestandardowy interfejs użytkownika dla wiersza nagłówka przy użyciu <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości. Aby określić szablon niestandardowy wiersza nagłówka, należy najpierw umieścić `<HeaderTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<HeaderTemplate>` . Aby kontrolować styl wiersza nagłówka, użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie, można po prostu wyświetlić tekst w wierszu nagłówka, ustawiając <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwość zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości, aby zdefiniować szablon niestandardowy do renderowania dla wiersza nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany w wierszu <see cref="T:System.Web.UI.WebControls.FormView" /> nagłówka kontrolki.</summary>
        <value>Tekst, który ma być wyświetlany w wierszu nagłówka. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz nagłówka jest wyświetlany w górnej części <xref:System.Web.UI.WebControls.FormView> kontrolki, <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> gdy właściwość lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> jest ustawiona. Użyj właściwości <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> , aby określić tekst, który ma być wyświetlany w wierszu nagłówka. Aby kontrolować styl wiersza nagłówka, użyj <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> właściwości. Alternatywnie można zdefiniować własny niestandardowy interfejs użytkownika dla wiersza nagłówka przez ustawienie <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> właściwości zamiast tej właściwości.  
  
> [!NOTE]
>  Jeśli obie <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>właściwościi są ustawione, Właściwośćmapierwszeństwo.<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości, aby określić tekst, który ma być wyświetlany w wierszu nagłówka.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie <see cref="T:System.Web.UI.WebControls.FormView" /> w poziomie formantu na stronie.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> wartości. Wartość domyślna to <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić wyrównanie <xref:System.Web.UI.WebControls.FormView> w poziomie formantu na stronie. <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> W poniższej tabeli wymieniono różne style wyrównania poziomego.  
  
|HorizontalAlign wartość|Opis|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Wyrównanie w poziomie <xref:System.Web.UI.WebControls.FormView> formantu nie zostało ustawione.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> Formant jest wyrównany do lewej strony.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> Formant jest wyśrodkowany na stronie.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> Kontrolka jest wyrównana do prawej strony.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> Formant jest wyrównany do lewego i prawego marginesu strony.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> <xref:System.Web.UI.WebControls.FormView> , jak użyć właściwości, aby określić, że formant powinien być wyorodkowany na stronie.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row"><see cref="T:System.Web.UI.WebControls.FormViewRow" /> Zawiera wiersz modułu stronicowania.</param>
        <param name="pagedDataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> , który zawiera dane dla bieżącej strony.</param>
        <summary>Tworzy wiersz modułu stronicowania dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant, aby utworzyć wiersz modułu stronicowania. <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Tworzy <xref:System.Web.UI.WebControls.TableCell> obiekt, który zawiera kontrolki nawigacji, przy użyciu właściwości <xref:System.Web.UI.WebControls.PagedDataSource> obiektu zawartego w `pagedDataSource` parametrze. Komórka jest następnie dodawana do wiersza określonego przez `row` parametr.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby utworzyć własny wiersz modułu stronicowania.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row"><see cref="T:System.Web.UI.WebControls.FormViewRow" /> Do zainicjowania.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.FormViewRow" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant w celu zainicjowania określonego <xref:System.Web.UI.WebControls.FormViewRow> obiektu. <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Obiekt jest inicjowany na podstawie typu wiersza i stanu wiersza określonego odpowiednio przez jego <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> właściwości <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>i. <xref:System.Web.UI.WebControls.FormViewRow> Odpowiednia zawartość jest następnie dodawana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu. W poniższej tabeli opisano sposób inicjowania poszczególnych typów wierszy.  
  
|Typ wiersza|Opis|  
|--------------|-----------------|  
|Wiersz danych|Zawartość <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>właściwości, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, lub <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> jest dodawana do <xref:System.Web.UI.WebControls.FormViewRow> obiektu, w zależności od wartości <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> właściwości.|  
|Pusty wiersz danych|Wartość <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> właściwości lub <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> zawartości<xref:System.Web.UI.WebControls.FormViewRow> właściwości jest dodawana do obiektu, w zależności od tego, która właściwość została ustawiona. W <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> przypadku ustawienia obu właściwości właściwość ma pierwszeństwo.|  
|Wiersz stopki|Wartość <xref:System.Web.UI.WebControls.FormView.FooterText%2A> właściwości lub <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> zawartości<xref:System.Web.UI.WebControls.FormViewRow> właściwości jest dodawana do obiektu, w zależności od tego, która właściwość została ustawiona. W <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> przypadku ustawienia obu właściwości właściwość ma pierwszeństwo.|  
|Wiersz nagłówka|Wartość <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> właściwości lub <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> zawartości<xref:System.Web.UI.WebControls.FormViewRow> właściwości jest dodawana do obiektu, w zależności od tego, która właściwość została ustawiona. W <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> przypadku ustawienia obu właściwości właściwość ma pierwszeństwo.|  
  
> [!NOTE]
>  Ta metoda nie inicjuje wiersza modułu stronicowania. Aby utworzyć wiersz modułu stronicowania, użyj <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby utworzyć własny wiersz niestandardowy.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" />Aby przeprowadzić walidację strony po wywołaniu metody; w przeciwnym razie. <see langword="false" /></param>
        <summary>Wstawia bieżący rekord w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formant jest w trybie wstawiania, <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> Użyj metody, aby programowo wstawić bieżący rekord w źródle danych. <xref:System.Web.UI.WebControls.FormView> Ta metoda jest często używana, gdy konieczne jest wstawienie bieżącego rekordu z poza <xref:System.Web.UI.WebControls.FormView> formantem, na przykład z innej kontrolki na stronie.  
  
> [!NOTE]
>  Kontrolka musi znajdować się w trybie wstawiania, gdy ta metoda jest wywoływana; <xref:System.Web.HttpException> w przeciwnym razie jest zgłaszany. <xref:System.Web.UI.WebControls.FormView>  
  
 Aby określić, czy sprawdzanie poprawności strony jest wykonywane przed operacją wstawiania, `causesValidation` Użyj parametru. Wywołanie tej metody wywołuje <xref:System.Web.UI.WebControls.FormView.ItemInserted> również zdarzenia i. <xref:System.Web.UI.WebControls.FormView.ItemInserting>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> metody w celu programistycznego wstawienia bieżącego rekordu <xref:System.Web.UI.WebControls.FormView> w kontrolce w źródle danych.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka nie jest w trybie wstawiania.  
  
—lub— 
<see cref="T:System.Web.UI.DataSourceView" /> Obiekt skojarzony <see cref="T:System.Web.UI.WebControls.FormView" /> z formantem ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość niestandardową dla elementu w trybie wstawiania.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza danych, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka jest w trybie wstawiania. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka renderuje inny szablon dla wiersza danych w oparciu o bieżący tryb kontrolki (określony <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> przez właściwość). <xref:System.Web.UI.WebControls.FormView> W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Renderowany szablon|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> , aby zdefiniować własny interfejs użytkownika dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy formant jest w trybie wstawiania. Szablon Wstaw element zwykle zawiera kontrolki wprowadzania dla użytkownika, które umożliwiają wprowadzanie wartości dla nowego rekordu, a także przyciski poleceń umożliwiające wstawienie rekordu i anulowanie operacji wstawiania.  
  
 Aby określić szablon niestandardowy, należy najpierw umieścić `<InsertItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<InsertItemTemplate>` . Za pomocą dwukierunkowego wyrażenia powiązania można skojarzyć pole z kontrolką wejściową. Po wstawieniu rekordu, <xref:System.Web.UI.WebControls.FormView> formant automatycznie wyodrębnia wartość pola ze skojarzonej kontrolki wejściowej. Aby uzyskać więcej informacji na temat dwukierunkowych wyrażeń powiązań, zobacz [powiązanie z bazami danych](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Aby utworzyć przyciski poleceń, które wykonują wbudowane operacje Cancel i Insert, Dodaj kontrolkę przycisk polecenia do szablonu z `CommandName` właściwością ustawioną na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość polecenia|  
|-------------------------|-----------------------|  
|Anuluj|"Cancel"|  
|Insert|Wstawienia|  
  
 Można kontrolować wygląd szablonu elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób definiowania szablonu niestandardowego dla wiersza danych w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację wstawiania.</summary>
        <value>Nazwa metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z serią samouczków na temat używania powiązania modelu z formularzami sieci Web, zobacz [powiązanie modelu i formularze sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, gdy kontrolka jest w trybie wstawiania.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, gdy formant jest w trybie wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> , aby kontrolować wygląd wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie wstawiania. Gdy formant jest w trybie wstawiania, w wierszu danych zostanie wyświetlona zawartość zdefiniowana <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> przez użytkownika określona przez właściwość. <xref:System.Web.UI.WebControls.FormView> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu.  
  
 Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `InsertRowStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<InsertRowStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `InsertRowStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia właściwości, <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> aby określić styl niestandardowy dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Reprezentujący typ danych do sprawdzenia.</param>
        <summary>Określa, czy określony typ danych może być powiązany z polem w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <returns><see langword="true" />Jeśli określony typ danych może być powiązany z polem w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną przez formant <xref:System.Web.UI.WebControls.FormView> , aby określić, czy określony typ danych może być powiązany z polem w kontrolce. <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> <xref:System.Web.UI.WebControls.FormView> Kontrolka obsługuje następujące typy danych:  
  
-   Wszystkie typy danych pierwotnych, takie <xref:System.Boolean>jak <xref:System.Byte> <xref:System.Int32>,, i tak dalej.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby dodać lub ograniczyć typy danych, które mogą być używane <see cref="T:System.Web.UI.WebControls.FormView" /> w formancie.</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy kliknięto przycisk <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.ItemCommand> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
 Przyciski w <xref:System.Web.UI.WebControls.FormView> kontrolce mogą również wywołać niektóre wbudowane funkcje formantu. Aby wykonać jedną z tych operacji, należy ustawić `CommandName` właściwość przycisku na jedną z wartości w poniższej tabeli.  
  
|Wartość polecenia|Opis|  
|-----------------------|-----------------|  
|"Cancel"|Anuluje operację edycji lub wstawiania i zwraca <xref:System.Web.UI.WebControls.FormView> formant do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ModeChanging>i. <xref:System.Web.UI.WebControls.FormView.ModeChanged>|  
|Usunięty|Usuwa bieżący rekord. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemDeleting>i. <xref:System.Web.UI.WebControls.FormView.ItemDeleted>|  
|Edytowania|<xref:System.Web.UI.WebControls.FormView> Umieszcza formant w trybie edycji. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ModeChanging>i. <xref:System.Web.UI.WebControls.FormView.ModeChanged>|  
|Wstawienia|Wstawia bieżący rekord w źródle danych. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemInserting>i. <xref:System.Web.UI.WebControls.FormView.ItemInserted>|  
|Nowy|<xref:System.Web.UI.WebControls.FormView> Umieszcza formant w trybie wstawiania. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ModeChanging>i. <xref:System.Web.UI.WebControls.FormView.ModeChanged>|  
|Stronic|Wykonuje operację stronicowania. `CommandArgument` Ustaw właściwość przycisku na wartość "First", "Last", "Next", "poprz" lub numer strony, aby określić typ operacji stronicowania do wykonania. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>i. <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|  
|Aktualizacji|Aktualizuje bieżący rekord w źródle danych. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemUpdating>i. <xref:System.Web.UI.WebControls.FormView.ItemUpdated>|  
  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> Chociaż zdarzenie jest zgłaszane, gdy zostanie kliknięty przycisk wymieniony w poprzedniej tabeli, zaleca się użycie zdarzeń wymienionych w tabeli dla tej operacji.  
  
 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co umożliwia określenie nazwy polecenia i argumentu polecenia klikniętego przycisku. Aby określić nazwę polecenia i argument polecenia, należy użyć <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> odpowiednio właściwości i. <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Możesz również uzyskać dostęp do kontrolki, która wywołała zdarzenie <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> przy użyciu właściwości.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Web.UI.WebControls.FormView.ItemCommand> jak użyć zdarzenia, aby obsłużyć przycisk kliknięcia <xref:System.Web.UI.WebControls.FormView> w kontrolce. Gdy użytkownik kliknie przycisk Dodaj, aktualnie wyświetlany element zostanie dodany do <xref:System.Web.UI.WebControls.ListBox> kontrolki.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utworzeniu wszystkich wierszy w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane po utworzeniu wszystkich wierszy <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.ItemCreated> Taka sytuacja może wystąpić, gdy kontrolka jest najpierw renderowana lub gdy użytkownik nawiguje do innego rekordu. To zdarzenie służy do dostarczania metody obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak dodawanie lub modyfikowanie zawartości wiersza, za każdym razem, gdy wystąpi zdarzenie.  
  
> [!NOTE]
>  Zdarzenie występuje przed powiązaniem <xref:System.Web.UI.WebControls.FormView>formantuzdanymi. <xref:System.Web.UI.WebControls.FormView.ItemCreated> Aby zmodyfikować wartość pola powiązanego, użyj <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> zdarzenia.  
  
 Można uzyskać dostęp do nagłówka, stopki i wierszy modułu stronicowania <xref:System.Web.UI.WebControls.FormView> w kontrolce przy <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>użyciu <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>odpowiednio <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>właściwości, <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> , lub. Aby uzyskać dostęp do wiersza danych, użyj <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzenia w celu zaktualizowania tekstu <xref:System.Web.UI.WebControls.Label> kontrolki zawartej w wierszu modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kliknięto przycisk Usuń <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, ale po operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Usuń (przycisk z właściwością ustawioną na "Delete") w kontrolce, ale po usunięciu <xref:System.Web.UI.WebControls.FormView> tego rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemDeleted> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak sprawdzanie wyników operacji usuwania, gdy wystąpi zdarzenie.  
  
 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala określić liczbę rekordów, których to dotyczy, oraz ewentualne wyjątki, które mogły wystąpić. Aby określić liczbę rekordów, których dotyczy operacja usuwania, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> właściwości. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> , aby określić, czy wystąpiły wyjątki. Możesz również wskazać, czy wyjątek został obsłużony w metodzie obsługi zdarzeń przez ustawienie <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> właściwości. Jeśli chcesz uzyskać dostęp do par nazwa/wartość pól klucza i pól, które nie są kluczami usuniętego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> odpowiednio właściwości i. <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia w celu ustalenia, czy wystąpił wyjątek podczas operacji usuwania.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kliknięto przycisk Usuń <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, ale przed operacją usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Usuń (przycisk z właściwością ustawioną na "Delete") w kontrolce, ale przed <xref:System.Web.UI.WebControls.FormView> usunięciem tego rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemDeleting> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak Weryfikowanie rekordu przed jego usunięciem, za każdym razem, gdy wystąpi zdarzenie.  
  
 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala ustalić indeks usuwanego rekordu i wskazać, że operacja usuwania powinna zostać anulowana. Aby określić indeks rekordu, użyj <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> właściwości. Aby anulować operację usuwania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość na. `true` Możesz również uzyskać dostęp do pól klucza i pól niebędących kluczowymi przy <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> użyciu <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> odpowiednio właściwości i.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia w celu anulowania operacji usuwania.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu przycisku wstawiania w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce, ale po zakończeniu operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Wstaw (przycisk z właściwością ustawioną na "INSERT") wewnątrz kontrolki, ale po <xref:System.Web.UI.WebControls.FormView> wstawieniu tego rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemInserted> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, na przykład sprawdzając wyniki operacji wstawiania, gdy wystąpi zdarzenie.  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala określić liczbę rekordów, których to dotyczy, oraz ewentualne wyjątki, które mogły wystąpić. Aby określić liczbę rekordów, których dotyczy operacja wstawiania, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> właściwości. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> , aby określić, czy wystąpiły wyjątki. Możesz również wskazać, czy wyjątek został obsłużony w metodzie obsługi zdarzeń przez ustawienie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> właściwości. Jeśli musisz uzyskać dostęp do wartości wstawionego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość po operacji wstawiania. Aby zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie wstawiania, należy <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> ustawić właściwość na `true`.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia w celu ustalenia, czy wystąpił wyjątek podczas operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu przycisku wstawiania w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce, ale przed operacją wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Wstaw (przycisk z właściwością ustawioną na "INSERT") wewnątrz kontrolki, ale przed <xref:System.Web.UI.WebControls.FormView> wstawieniem rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemInserting> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak kodowanie HTML wartości rekordu przed wstawieniem go do źródła danych, gdy wystąpi zdarzenie.  
  
 Obiekt jest przekazywany do metody obsługi zdarzeń, co pozwala określić wartość opcjonalnego argumentu polecenia wysłanego <xref:System.Web.UI.WebControls.FormView> do kontrolki i wskazać, że operacja wstawiania powinna zostać anulowana. <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> Wartość argumentu polecenia odpowiada `CommandArgument` właściwości przycisku wstawiania. <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> Po ustawieniu `CommandArgument` właściwości przycisku Wstaw Użyj właściwości, aby określić wartość argumentu polecenia. Aby anulować operację wstawiania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość na. `true` Możesz również odczytać lub zmodyfikować wartości pól dla nowego rekordu przy użyciu <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> właściwości.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia w celu anulowania operacji wstawiania.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość niestandardową dla wiersza danych w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce, gdy kontrolka jest w trybie tylko do odczytu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza danych, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka jest w trybie tylko do odczytu. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka renderuje inny szablon dla wiersza danych w oparciu o bieżący tryb kontrolki (określony <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> przez właściwość). <xref:System.Web.UI.WebControls.FormView> W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Renderowany szablon|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> , aby zdefiniować własny interfejs użytkownika dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie tylko do odczytu. Szablon elementu zwykle zawiera kontrolki do wyświetlania wartości pól rekordu, a także przyciski poleceń umożliwiające edytowanie, wstawianie i usuwanie rekordu.  
  
 Aby określić szablon niestandardowy, należy najpierw umieścić `<ItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<ItemTemplate>` . Aby wyświetlić wartości pól źródła danych powiązanego z kontrolką, użyj wyrażenia powiązania danych. Aby uzyskać więcej informacji na temat wyrażeń powiązań danych, zobacz [składnia wyrażeń powiązania danych](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Aby utworzyć przyciski poleceń, które wykonują wbudowane operacje usuwania, edycji i nowego rekordu, Dodaj kontrolkę przycisk polecenia do szablonu z `CommandName` właściwością ustawioną na jedną z wartości wymienionych w poniższej tabeli.  
  
|Typ przycisku polecenia|Wartość polecenia|  
|-------------------------|-----------------------|  
|Usuwanie|Usunięty|  
|Edytowanie|Edytowania|  
|New|Nowy|  
  
 Można kontrolować wygląd szablonu elementu przy użyciu <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób definiowania szablonu niestandardowego dla wiersza danych w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie kliknięty przycisk <see cref="T:System.Web.UI.WebControls.FormView" /> aktualizacji w kontrolce, ale po operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Aktualizuj (przycisk z właściwością ustawioną na "Update") w kontrolce, ale po <xref:System.Web.UI.WebControls.FormView> zaktualizowaniu rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemUpdated> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak sprawdzanie wyników operacji aktualizacji, gdy wystąpi to zdarzenie.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala określić liczbę rekordów, których to dotyczy, oraz ewentualne wyjątki, które mogły wystąpić. Aby określić liczbę rekordów, których dotyczy operacja aktualizacji, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> , aby określić, czy wystąpiły wyjątki. Możesz również wskazać, czy wyjątek został obsłużony w metodzie obsługi zdarzeń przez ustawienie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości. Jeśli musisz uzyskać dostęp do wartości pól klucza dla zaktualizowanego rekordu, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwości. Oryginalne i zaktualizowane wartości pól <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> , które nie są kluczami, można uzyskać za pomocą odpowiednio właściwości i. <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość po operacji aktualizacji. Aby zachować <xref:System.Web.UI.WebControls.FormView> formant w trybie edycji, należy <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> ustawić właściwość na `true`.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia w celu ustalenia, czy wystąpił wyjątek podczas operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie kliknięty przycisk <see cref="T:System.Web.UI.WebControls.FormView" /> aktualizacji w kontrolce, ale przed operacją aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka `CommandName` wywołuje zdarzenie, gdy kliknięto przycisk Aktualizuj (przycisk z właściwością ustawioną na "Update") w kontrolce, ale przed <xref:System.Web.UI.WebControls.FormView> zaktualizowaniem rekordu przez formant. <xref:System.Web.UI.WebControls.FormView.ItemUpdating> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak kodowanie HTML wartości rekordu przed aktualizacją w źródle danych, gdy wystąpi to zdarzenie.  
  
 Obiekt jest przekazywany do metody obsługi zdarzeń, co pozwala określić wartość opcjonalnego argumentu polecenia wysłanego <xref:System.Web.UI.WebControls.FormView> do kontrolki i wskazać, że operacja aktualizacji powinna zostać anulowana. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> Wartość argumentu polecenia odpowiada `CommandArgument` właściwości przycisku Aktualizuj. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> Po ustawieniu `CommandArgument` właściwości przycisku Aktualizuj Użyj właściwości, aby określić wartość argumentu polecenia. Aby anulować operację aktualizacji, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość na. `true` Można również odczytywać lub modyfikować nowe wartości wprowadzone przez użytkownika przy użyciu <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwości i. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> Właściwość zawiera pola klucza, <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> natomiast Właściwość zawiera pola niebędące kluczami. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Jeśli musisz uzyskać dostęp do oryginalnych wartości pól niebędących kluczami, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwości.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia w celu anulowania operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> Reprezentuje stan<see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości kontrolki, które muszą być utrwalane, nawet <see cref="P:System.Web.UI.Control.EnableViewState" /> Jeśli właściwość jest ustawiona na <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana do ładowania stanu <xref:System.Web.UI.WebControls.FormView> właściwości kontrolki, które muszą być <xref:System.Web.UI.Control.EnableViewState%2A> utrwalane, nawet jeśli właściwość jest ustawiona na `false`. <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A>  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez kontrolowanie deweloperów podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> Reprezentuje stan<see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> poprzednio zapisanego widoku formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda służy do ładowania poprzednio zapisanego stanu <xref:System.Web.UI.WebControls.FormView> widoku formantu. <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A>  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez kontrolowanie deweloperów podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka przechodzi między trybami Edytuj, Wstaw i tylko do odczytu, ale po zmianie trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka próbuje przełączać się między trybami Edytuj, Wstaw i tylko do odczytu, ale po rzeczywistości zmiany trybu. <xref:System.Web.UI.WebControls.FormView.ModeChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak synchronizowanie <xref:System.Web.UI.WebControls.FormView> kontrolki z innym formantem, gdy wystąpi zdarzenie.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzenia w celu wyświetlenia bieżącego trybu w wierszu <xref:System.Web.UI.WebControls.FormView> nagłówka kontrolki.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolka przechodzi między trybami Edytuj, Wstaw i tylko do odczytu, ale przed zmianą trybu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka próbuje przełączać się między trybami Edytuj, Wstaw i tylko do odczytu, ale przed faktycznymi zmianami trybu. <xref:System.Web.UI.WebControls.FormView.ModeChanging> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak konfigurowanie <xref:System.Web.UI.WebControls.FormView> kontrolki określonego trybu lub anulowanie zmiany trybu, gdy wystąpi zdarzenie.  
  
 Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala na określenie trybu, w <xref:System.Web.UI.WebControls.FormView> którym formant jest przełączany <xref:System.Web.UI.WebControls.FormView.ModeChanging> , w celu określenia, czy zdarzenie zostało zgłoszone w wyniku anulowania operacji edycji lub <xref:System.Web.UI.WebControls.FormViewModeEventArgs> , aby wskazać, że operacja wstawiania powinna zostać anulowana. Aby określić nowy tryb, użyj <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> właściwości. Można również użyć właściwości, <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> aby przełączyć się do trybu alternatywnego, ustawiając go na jedną <xref:System.Web.UI.WebControls.FormViewMode> z wartości wyliczenia. Użyj właściwości <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> , aby określić, czy użytkownik anulował operację edycji. Aby anulować operację wstawiania, należy ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość na. `true`  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia w celu ukrycia wiersza modułu stronicowania, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka przechodzi do trybu edycji.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy reguły stylów CSS specyficzne dla tabeli, które są skojarzone z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolką, są ustawione na wartości domyślne.</summary>
        <returns>Domyślne reguły stylów CSS, które są skojarzone z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolką.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reguły stylów CSS specyficzne dla tabeli <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>są ustawiane na wartości domyślne przy użyciu właściwości, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A> <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> i <xref:System.Web.UI.WebControls.Style.Font%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Obsługuje zdarzenie przesłane przez hierarchię formantów.</summary>
        <returns><see langword="true" />Aby wskazać, że zdarzenie powinno być przenoszone w górę hierarchii formantów; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana przez formant do opcjonalnego obsługi zdarzeń przekazaną przez hierarchię kontroli <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> przez metodę. <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Określa, czy obsłużyć zdarzenie, sprawdzając właściwości <xref:System.EventArgs> obiektu zawartego `e` w parametrze. Gdy zdarzenie musi być obsłużone, Metoda wykonuje odpowiednie działanie. Inne zdarzenia są ignorowane i przechodzą do hierarchii formantów. Ta metoda wskazuje, czy należy przekazać zdarzenie do dalszej hierarchii formantów za pomocą wartości zwracanej.  
  
 <xref:System.Web.UI.WebControls.FormView> Formant zastępuje podstawową implementację tej metody, aby wykonać odpowiednią akcję, gdy zostanie kliknięty jeden z przycisków rozpoznany przez formant. Poniższa tabela zawiera listę przycisków <xref:System.Web.UI.WebControls.FormView> poleceń rozpoznawanych przez formant.  
  
|Przycisk|Wartość polecenia|Opis|  
|------------|-----------------------|-----------------|  
|Anuluj|"Cancel"|Służy do aktualizowania lub wstawiania operacji w celu anulowania operacji i odrzucania wartości wprowadzonych przez użytkownika. Następnie formant wraca do trybu określonego <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> przez właściwość. <xref:System.Web.UI.WebControls.FormView>|  
|Usuwanie|Usunięty|Używane podczas usuwania operacji do usuwania wyświetlanego rekordu ze źródła danych. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemDeleted>i. <xref:System.Web.UI.WebControls.FormView.ItemDeleting>|  
|Edytowanie|Edytowania|Używane podczas aktualizowania operacji w celu umieszczenia <xref:System.Web.UI.WebControls.FormView> kontrolki w trybie edycji. Zawartość określona we <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> właściwości jest wyświetlana dla wiersza danych.|  
|Insert|Wstawienia|Używane podczas wstawiania operacji do próby wstawienia nowego rekordu w źródle danych za pomocą wartości dostarczonych przez użytkownika. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemInserted>i. <xref:System.Web.UI.WebControls.FormView.ItemInserting>|  
|New|Nowy|Używane podczas wstawiania operacji do umieszczania <xref:System.Web.UI.WebControls.FormView> kontrolki w trybie wstawiania. Zawartość określona we <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> właściwości jest wyświetlana dla wiersza danych.|  
|Stronic|Stronic|Używane w operacjach stronicowania do reprezentowania przycisku w wierszu modułu stronicowania, który wykonuje stronicowanie. Aby określić operację stronicowania, ustaw `CommandArgument` właściwość przycisku na wartość "dalej", "poprzedni", "pierwszy", "ostatni" lub indeks strony, do której chcesz przejść. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>i. <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **Uwaga:**  Ten typ przycisku jest zazwyczaj używany tylko w szablonie modułu stronicowania.|  
|Aktualizowanie|Aktualizacji|Używane podczas aktualizowania operacji w celu próby zaktualizowania wyświetlanego rekordu w źródle danych za pomocą wartości dostarczonych przez użytkownika. Wywołuje zdarzenia <xref:System.Web.UI.WebControls.FormView.ItemUpdated>i. <xref:System.Web.UI.WebControls.FormView.ItemUpdating>|  
  
 Ta wersja metody zwraca `true` , gdy jeden z tych przycisków jest obsługiwany. Aby uzyskać więcej informacji na temat propagacji zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.FormView" /> klasy można zastąpić tę metodę, aby obsłużyć własne zdarzenia. Upewnij się, że Użyj wartości zwracanej, aby wskazać, czy zdarzenie powinno być przenoszone w górę hierarchii formantów.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.Control.Init> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemCommand> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemDeleted> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemDeleting> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operacji usuwania, a procedura obsługi zdarzeń nie jest zarejestrowana dla zdarzenia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemInserted> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemInserting> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operacji wstawiania, a procedura obsługi zdarzeń nie jest zarejestrowana dla zdarzenia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ItemUpdating> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, użytkownik nie anulował operacji aktualizacji, a procedura obsługi zdarzeń nie jest zarejestrowana dla zdarzenia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ModeChanged> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.ModeChanging> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, zmiana trybu nie została anulowana, a procedura obsługi zdarzeń nie jest zarejestrowana dla zdarzenia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu podniesienia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenia. <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.FormView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, gdy <see cref="T:System.Web.UI.WebControls.FormView" /> formant nie jest powiązany z kontrolą źródła danych, operacja stronicowania nie została anulowana, a procedura obsługi zdarzeń nie jest zarejestrowana dla zdarzenia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera łączną liczbę stron wymaganych do wyświetlenia każdego rekordu w źródle danych.</summary>
        <value>Liczba elementów w bazowym źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy funkcja stronicowania jest włączona (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości, aby określić łączną liczbę rekordów w źródłowym źródle danych.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Ponieważ kontrolka wyświetla tylko jeden rekord w danym momencie, ta wartość odpowiada łącznej liczbie stron wymaganych do wyświetlenia każdego rekordu w źródle danych. Ta wartość jest niedokładna do momentu wystąpienia powiązania danych.  
  
 Aby określić indeks bieżącego rekordu z bazowego źródła danych, należy użyć <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć właściwości <xref:System.Web.UI.WebControls.FormView.PageCount%2A> , aby określić łączną liczbę rekordów wyświetlanych w kontrolce.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wyświetlanej strony.</summary>
        <value>Indeks (liczony od zera) elementu danych wyświetlanego w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce z bazowego źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy funkcja stronicowania jest włączona (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), użyj <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości, aby określić indeks aktualnie wyświetlanego rekordu. Można także użyć tej właściwości do programistycznego zmiany wyświetlanego rekordu.  
  
> [!NOTE]
>  Gdy funkcja stronicowania jest włączona, można także użyć tej właściwości do określenia numeru strony wyświetlanego rekordu; należy jednak pamiętać, że ta właściwość jest zależna od zera.  
  
 Aby określić łączną liczbę elementów w źródle danych, użyj <xref:System.Web.UI.WebControls.FormView.PageCount%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwości, aby określić indeks strony wyświetlanego rekordu.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż-1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmieniona po operacji stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant wywołuje zdarzenie, gdy kliknięto przycisk modułu stronicowania `CommandName` (przycisk z właściwością ustawioną na "Strona") w kontrolce, ale gdy <xref:System.Web.UI.WebControls.FormView> kontrolka obsługuje operację stronicowania. <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  To zdarzenie nie jest wywoływane, gdy użytkownik programowo ustawi <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość.  
  
 Przyciski modułu stronicowania są zwykle zlokalizowane w wierszu <xref:System.Web.UI.WebControls.FormView> modułu stronicowania kontrolki. To zdarzenie jest często używane do synchronizowania <xref:System.Web.UI.WebControls.FormView> kontrolki <xref:System.Web.UI.WebControls.GridView> z kontrolką lub <xref:System.Web.UI.WebControls.FormView> ustawiania zachowania kontrolki po operacji stronicowania.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> zdarzenia w celu zwrócenia trybu tylko do odczytu, <xref:System.Web.UI.WebControls.FormView> gdy użytkownik nawiguje do innego rekordu.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> zmieniona przed operacją stronicowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant wywołuje zdarzenie, gdy kliknięto przycisk modułu stronicowania `CommandName` (przycisk z właściwością ustawioną na "Strona") wewnątrz kontrolki, ale zanim <xref:System.Web.UI.WebControls.FormView> kontrolka przechwytuje operację stronicowania. <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> <xref:System.Web.UI.WebControls.FormView> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak anulowanie operacji stronicowania, za każdym razem, gdy wystąpi zdarzenie.  
  
> [!NOTE]
>  To zdarzenie nie jest wywoływane, gdy użytkownik programowo ustawi <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> właściwość.  
  
 Przyciski modułu stronicowania są zwykle zlokalizowane w wierszu <xref:System.Web.UI.WebControls.FormView> modułu stronicowania kontrolki.  
  
 <xref:System.Web.UI.WebControls.FormViewPageEventArgs> Obiekt jest przesyłany do metody obsługi zdarzeń, co pozwala określić indeks strony wybranej przez użytkownika i wskazać, że operacja stronicowania powinna zostać anulowana. Aby określić indeks strony wybranej przez użytkownika, należy użyć <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> właściwości. Aby anulować operację stronicowania, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Właściwość <xref:System.Web.UI.WebControls.FormViewPageEventArgs> obiektu na `true`.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> zdarzenia w celu anulowania operacji stronicowania.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> obiektu, który umożliwia ustawienie właściwości przycisków modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.PagerSettings" /> obiektu, który pozwala ustawić właściwości przycisków modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować ustawienia wiersza modułu stronicowania <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Wiersz stronicowania jest wyświetlany, gdy funkcja stronicowania jest włączona (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera kontrolki, które umożliwiają użytkownikowi przechodzenie do różnych rekordów w kontrolce. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.PagerSettings> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.PagerSettings> jest właściwością obiektu (na przykład `PagerSettings-Mode`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `PagerSettings.Mode`przykład). Typowe ustawienia zazwyczaj obejmują tryb wyświetlania wiersza modułu stronicowania i tekst niestandardowy lub obrazy dla kontrolek nawigacji.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> właściwości, aby określić właściwości wiersza modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować wygląd wiersza modułu stronicowania <xref:System.Web.UI.WebControls.FormView> w kontrolce. <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Wiersz stronicowania jest wyświetlany, gdy funkcja stronicowania jest włączona (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`) i zawiera kontrolki, które umożliwiają użytkownikowi przechodzenie do różnych stron w formancie. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `PagerStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<PagerRowStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `PagerStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości, aby określić ustawienia stylu dla wiersza modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość niestandardową dla wiersza modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera zawartość niestandardową dla wiersza modułu stronicowania. Wartość domyślna to null, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz modułu stronicowania jest wyświetlany w <xref:System.Web.UI.WebControls.FormView> kontrolce, gdy włączona jest funkcja stronicowania ( <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> gdy właściwość ma wartość true). Wiersz modułu stronicowania zawiera kontrolki, które umożliwiają użytkownikowi przechodzenie do różnych stron w formancie. Zamiast korzystać z wbudowanego interfejsu użytkownika w wierszu modułu stronicowania, można zdefiniować własny UI przy użyciu <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Gdy właściwość jest ustawiona, zastępuje wbudowany interfejs użytkownika wiersza modułu stronicowania.  
  
 Aby określić szablon niestandardowy dla wiersza modułu stronicowania, należy najpierw `<PagerTemplate>` umieścić znaczniki między tagiem <xref:System.Web.UI.WebControls.FormView> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<PagerTemplate>` . Aby kontrolować wygląd wiersza modułu stronicowania, należy użyć <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> właściwości.  
  
 Zazwyczaj formanty przycisków są dodawane do szablonu modułu stronicowania w celu wykonania operacji stronicowania. Kontrolka wykonuje operację stronicowania, gdy zostanie kliknięta Kontrolka przycisku `CommandName` z ustawioną właściwością "Strona". <xref:System.Web.UI.WebControls.FormView> `CommandArgument` Właściwość przycisku określa typ operacji stronicowania, która ma zostać wykonana. W poniższej tabeli wymieniono wartości argumentów polecenia obsługiwane przez <xref:System.Web.UI.WebControls.FormView> formant.  
  
|CommandArgument wartość|Opis|  
|---------------------------|-----------------|  
|Ponown|Przechodzi do następnej strony.|  
|Przeglądan|Przechodzi do poprzedniej strony.|  
|Pierwszego|Przechodzi do pierwszej strony.|  
|Ostatniego|Powoduje przejście do ostatniej strony.|  
|Wartość całkowita|Przechodzi do określonego numeru strony.|  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób definiowania niestandardowego szablonu modułu stronicowania.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IEnumerable" /> Reprezentuje źródło danych.</param>
        <summary>Tworzy powiązanie określonego źródła danych z <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant w celu powiązania określonego źródła danych z kontrolką. <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> Ponieważ metoda jest zapieczętowana, należy zastąpić tę metodę, jeśli konieczne jest wykonanie dodatkowych zadań podczas wiązania danych.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konfiguruje hierarchię <see cref="T:System.Web.UI.WebControls.FormView" /> formantów formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą wywoływaną przez formant <xref:System.Web.UI.WebControls.FormView> , aby skonfigurować hierarchię formantów w <xref:System.Web.UI.WebControls.FormView> kontrolce przed renderowaniem kontrolki. <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia, z którego ma zostać utworzony <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> dla zdarzenia lub zdarzenia, które są wywoływane.</param>
        <summary>Wywołuje odpowiednie zdarzenia dla <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolki, gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona wywołuje metodę, <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> gdy wystąpi zdarzenie ogłaszania zwrotnego, które wywołuje odpowiednie zdarzenia <xref:System.Web.UI.WebControls.FormView> dla kontrolki. To wywołanie występuje w cyklu życia strony po zakończeniu ładowania i powiadomienia o zmianie, ale przed wykonaniem prerenderowania. Ta metoda została zaimplementowana w celu <xref:System.Web.UI.WebControls.CommandEventArgs> utworzenia obiektu dla zdarzeń, które są wywoływane.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez kontrolę deweloperów w celu rozszerania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawiera strumień wyjściowy do renderowania na kliencie.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> Wyświetla kontrolkę na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda służy do renderowania zawartości formantu serwera do przeglądarki klienta przy użyciu określonego <xref:System.Web.UI.HtmlTextWriter> obiektu. <xref:System.Web.UI.WebControls.FormView.Render%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant otacza renderowany kod HTML w elemencie, <see langword="table" /> aby można było zastosować style wbudowane.</summary>
        <value><see langword="true" />Jeśli formant obejmuje renderowany kod HTML w <see langword="table" /> elemencie; w przeciwnym razie,. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby właściwości <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> stylu wbudowanego były stosowane do całego kodu HTML, który jest renderowany dla formantu, ASP.NET umieszcza renderowany kod HTML `table` w elemencie. Jeśli nie chcesz, aby element zewnętrzny `table` był renderowany, ustaw dla `false`tej właściwości wartość. W takim przypadku, jeśli spróbujesz ustawić właściwości stylu wbudowanego, które mają zastosowanie do całej kontrolki, zgłaszany jest wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt reprezentujący wiersz danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></summary>
        <value>Reprezentujący wiersz danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby programowo <xref:System.Web.UI.WebControls.FormViewRow> uzyskać dostęp do obiektu, który reprezentuje wiersz danych. <xref:System.Web.UI.WebControls.FormView.Row%2A> Wiersz danych zawiera inną zawartość w oparciu o szablon renderowany dla bieżącego trybu (określony przez <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Właściwość). Dostęp do zawartości szablonu można uzyskać tylko dla bieżącego trybu. W poniższej tabeli przedstawiono szablon, który jest używany dla każdego trybu.  
  
|Tryb|Renderowany szablon|  
|----------|-----------------------|  
|Edytowanie|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Tylko do odczytu|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  Właściwość jest dostępna tylko <xref:System.Web.UI.WebControls.FormView> po utworzeniu przez formant wiersza danych w <xref:System.Web.UI.WebControls.FormView.ItemCreated> zdarzeniu. <xref:System.Web.UI.WebControls.FormView.Row%2A>  
  
 Ta właściwość jest często używana, gdy trzeba programistycznie manipulować wierszem danych, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości muszą zostać wykonane, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka została <xref:System.Web.UI.WebControls.FormView> powiązana z danymi; w przeciwnym razie formant zastępuje wszelkie zmiany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.Row%2A> właściwości, aby uzyskać dostęp do właściwości wiersza danych <xref:System.Web.UI.WebControls.FormView.ItemCreated> podczas zdarzenia.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu, który umożliwia ustawienie wyglądu wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, gdy kontrolka jest w trybie tylko do odczytu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , które reprezentuje styl wiersza danych <see cref="T:System.Web.UI.WebControls.FormView" /> w kontrolce, gdy kontrolka jest w trybie tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> , aby kontrolować wygląd wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie tylko do odczytu (Display). Gdy kontrolka jest w trybie tylko do odczytu, w wierszu danych zostanie wyświetlona zawartość zdefiniowana <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> przez użytkownika określona przez właściwość. <xref:System.Web.UI.WebControls.FormView> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TableItemStyle> zwracanego obiektu. Właściwości można ustawić deklaratywnie przy użyciu jednej z następujących metod:  
  
-   Umieść atrybut w tagu <xref:System.Web.UI.WebControls.FormView> otwierającym kontrolki w formularzu `Property-Subproperty`, gdzie `Subproperty` jest `RowStyle-ForeColor`właściwością <xref:System.Web.UI.WebControls.TableItemStyle> obiektu (na przykład).  
  
-   <xref:System.Web.UI.WebControls.FormView> Zagnieżdżanie `<RowStyle>` elementu między tagiem otwierającym i zamykającym kontrolki.  
  
 Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `RowStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu i właściwości czcionki.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia właściwości, <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> aby określić styl niestandardowy dla wiersza danych, <xref:System.Web.UI.WebControls.FormView> gdy kontrolka jest w trybie tylko do odczytu.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.FormView" /> właściwości kontrolki, które muszą być utrwalane, nawet <see cref="P:System.Web.UI.Control.EnableViewState" /> Jeśli właściwość jest ustawiona na <see langword="false" />.</summary>
        <returns>Zwraca stan bieżącego widoku formantu serwera. Jeśli nie ma stanu widoku skojarzonego z kontrolką, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do zapisywania stanu <xref:System.Web.UI.WebControls.FormView> właściwości kontrolki, które muszą być utrwalane, nawet <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> Jeśli właściwość jest ustawiona na `false`.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez kontrolę deweloperów w celu rozszerania <xref:System.Web.UI.WebControls.FormView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan <see cref="T:System.Web.UI.WebControls.FormView" /> widoku formantu.</summary>
        <returns>, Który zawiera zapisany stan <see cref="T:System.Web.UI.WebControls.FormView" /> formantu. <see cref="T:System.Object" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika wywoływaną <xref:System.Web.UI.WebControls.FormView> przez formant w celu zapisania stanu formantu. <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość klucza danych bieżącego rekordu w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <value>Wartość klucza danych bieżącego rekordu w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona <xref:System.Web.UI.WebControls.FormView> , formant automatycznie tworzy <xref:System.Web.UI.WebControls.DataKey> obiekt, który zawiera pary klucz/wartość pola lub pola wymienione we <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwości dla bieżącego rekordu. <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Obiekt reprezentuje pole klucza podstawowego lub pola dla bieżącego rekordu i jest przechowywany <xref:System.Web.UI.WebControls.FormView.DataKey%2A> we właściwości. <xref:System.Web.UI.WebControls.DataKey> Zamiast używać <xref:System.Web.UI.WebControls.FormView.DataKey%2A> właściwości w celu uzyskania dostępu do wartości klucza danych, można <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> użyć właściwości jako skrótu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Gdy właściwość zawiera wiele pól, ta właściwość zwraca wartość pierwszego wymienionego pola.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> właściwości, aby określić wartość pola klucza.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Indeks do ustawienia.</param>
        <summary>Ustawia indeks aktualnie wyświetlanej strony w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />Zobacz.</summary>
        <value>Obiekt, który reprezentuje indeks wyświetlania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IDataItemContainer> do interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />Zobacz.</summary>
        <value>Zawsze zwraca wartość 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IDataItemContainer> do interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona wywołuje metodę, <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> gdy wystąpi zdarzenie ogłaszania zwrotnego. To wywołanie występuje w cyklu życia strony po zakończeniu ładowania i powiadomienia o zmianie, ale przed renderowaniem strony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę zawierającą nazwy pól klucza podstawowego elementów, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> formancie.</summary>
        <value>Tablica zawierająca nazwy pól klucza podstawowego elementów, które są wyświetlane w <see cref="T:System.Web.UI.WebControls.FormView" /> formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę listy elementów danych, które są powiązane z <see cref="T:System.Web.UI.WebControls.FormView" /> formantem, gdy źródło danych zawiera więcej niż jedną listę elementów danych.</summary>
        <value>Nazwa listy elementów danych, z którymi jest <see cref="T:System.Web.UI.WebControls.FormView" /> powiązane sterowanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera listę danych <see cref="T:System.Web.UI.WebControls.FormView" /> pobieranych przez formant.</summary>
        <value>Obiekt, który zawiera listę danych <see cref="T:System.Web.UI.WebControls.FormView" /> pobieranych przez formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator formantu źródła danych, który zawiera listę elementów <see cref="T:System.Web.UI.WebControls.FormView" /> danych pobieranych przez formant.</summary>
        <value>Identyfikator kontrolki źródła danych, który zawiera listę elementów <see cref="T:System.Web.UI.WebControls.FormView" /> danych pobieranych przez formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt źródła danych zawierający listę elementów <see cref="T:System.Web.UI.WebControls.FormView" /> danych pobieranych przez formant.</summary>
        <value>Obiekt źródła danych, który zawiera listę elementów <see cref="T:System.Web.UI.WebControls.FormView" /> danych pobieranych przez formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</summary>
        <value>Obiekt, który reprezentuje wartość klucza danych wiersza w <see cref="T:System.Web.UI.WebControls.FormView" /> kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</summary>
        <value>Bieżący tryb <see cref="T:System.Web.UI.WebControls.FormView" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.FormView> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IDataBoundControl> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Kontrolka przycisku, która opublikowała stronę z powrotem na serwerze.</param>
        <summary>Określa opcje zdarzenia ogłaszania zwrotnego <see cref="T:System.Web.UI.WebControls.FormView" /> dla kontrolki.</summary>
        <returns>Opcje zdarzenia ogłaszania zwrotnego <see cref="T:System.Web.UI.WebControls.FormView" /> dla formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która jest wywoływana <xref:System.Web.UI.WebControls.FormView> przez formant w celu utworzenia <xref:System.Web.UI.PostBackOptions> obiektu, który zawiera opcje zdarzenia ogłaszania zwrotnego dla kontrolki. <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> Obiekt jest zazwyczaj używany jako parametr <xref:System.Web.UI.Page.GetPostBackEventReference%2A> metody. <xref:System.Web.UI.PostBackOptions>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt zawarty w <paramref name="buttonControl" /> parametrze jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość ma wartość<see langword="true" />. <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> <paramref name="buttonControl" /></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> Pobiera wartość <see cref="T:System.Web.UI.WebControls.FormView" /> dla kontrolki.</summary>
        <value>Zawsze zwraca <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia strumieniu danych wyjściowych zapisanie odpowiedniego znacznika HTML <xref:System.Web.UI.WebControls.FormView> dla formantu. <xref:System.Web.UI.WebControls.FormView.TagKey%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić tę właściwość, aby określić, <see cref="T:System.Web.UI.HtmlTextWriterTag" /> która wartość ma być używana w formancie pochodnym.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt reprezentujący wiersz modułu stronicowania wyświetlany w górnej <see cref="T:System.Web.UI.WebControls.FormView" /> części kontrolki. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></summary>
        <value>Reprezentuje górny wiersz modułu stronicowania <see cref="T:System.Web.UI.WebControls.FormView" /> w formancie. <see cref="T:System.Web.UI.WebControls.FormViewRow" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po włączeniu stronicowania (gdy <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> właściwość jest ustawiona na `true`), dodatkowy wiersz o nazwie wiersz modułu stronicowania <xref:System.Web.UI.WebControls.FormView> jest automatycznie wyświetlany w kontrolce. Wiersz modułu stronicowania zawiera kontrolki umożliwiające użytkownikowi przechodzenie do innych rekordów i mogą być wyświetlane u góry, u dołu lub u góry i u dołu kontrolki. Użyj właściwości, aby programowo <xref:System.Web.UI.WebControls.FormViewRow> uzyskać dostęp do obiektu, który reprezentuje <xref:System.Web.UI.WebControls.FormView> górny wiersz modułu stronicowania w formancie. <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>  
  
> [!NOTE]
>  Właściwość jest dostępna tylko <xref:System.Web.UI.WebControls.FormView> po utworzeniu przez formant <xref:System.Web.UI.WebControls.FormView.ItemCreated> górnego wiersza modułu stronicowania w zdarzeniu. <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>  
  
 Ta właściwość jest często używana, gdy trzeba programistycznie manipulować górnym wierszem modułu stronicowania, na przykład podczas dodawania zawartości niestandardowej. Wszelkie modyfikacje <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwości muszą zostać wykonane <xref:System.Web.UI.WebControls.FormView> po powiązaniu formantu z <xref:System.Web.UI.WebControls.FormView> danymi; w przeciwnym razie formant zastępuje wszelkie zmiany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> właściwości w celu uzyskania dostępu do wiersza stronicowania wyświetlanego w górnej <xref:System.Web.UI.WebControls.FormView> części kontrolki. Wiersz modułu stronicowania zostanie następnie zaktualizowany o dodatkową zawartość.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza punkt początkowy, od którego ma zostać rozpoczęte śledzenie i zapisywanie zmian stanu widoku w <see cref="T:System.Web.UI.WebControls.FormView" /> formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zastępowana, aby oznaczyć punkt początkowy, od którego ma zostać rozpoczęte śledzenie i zapisywanie zmian w formancie jako część stanu widoku formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" />Aby przeprowadzić walidację strony po wywołaniu metody; w <see langword="false" />przeciwnym razie.</param>
        <summary>Aktualizuje bieżący rekord w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy kontrolka jest w trybie edycji, <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> Użyj metody do programistycznego aktualizowania bieżącego rekordu w źródle danych. <xref:System.Web.UI.WebControls.FormView> Ta metoda jest często używana, gdy trzeba zaktualizować bieżący rekord spoza <xref:System.Web.UI.WebControls.FormView> kontrolki, na przykład z innej kontrolki na stronie.  
  
> [!NOTE]
>  Kontrolka musi być w trybie edycji, gdy ta metoda jest wywoływana; w przeciwnym <xref:System.Web.HttpException> razie jest zgłaszany. <xref:System.Web.UI.WebControls.FormView>  
  
 Aby określić, czy sprawdzanie poprawności strony jest wykonywane przed operacją aktualizacji, `causesValidation` Użyj parametru. Wywołanie tej metody wywołuje <xref:System.Web.UI.WebControls.FormView.ItemUpdated> również zdarzenia i. <xref:System.Web.UI.WebControls.FormView.ItemUpdating>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> metody do programistycznego aktualizowania bieżącego rekordu <xref:System.Web.UI.WebControls.FormView> w kontrolce w źródle danych.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ta metoda jest wywoływana, <see cref="T:System.Web.UI.WebControls.FormView" /> gdy kontrolka nie jest w trybie edycji.  
  
—lub— 
<see cref="T:System.Web.UI.DataSourceView" /> Obiekt skojarzony <see cref="T:System.Web.UI.WebControls.FormView" /> z formantem ma wartość null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację aktualizacji.</summary>
        <value>Nazwa metody na stronie, która jest wywoływana, gdy kontrolka wykonuje operację aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z serią samouczków na temat używania powiązania modelu z formularzami sieci Web, zobacz [powiązanie modelu i formularze sieci Web](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
