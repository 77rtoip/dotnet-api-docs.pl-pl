<Type Name="Literal" FullName="System.Web.UI.WebControls.Literal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7103ea665380f176d6e51bd5f4c131b4afc7022" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691184" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Literal : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Literal extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Literal" />
  <TypeSignature Language="VB.NET" Value="Public Class Literal&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Literal : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LiteralDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LiteralControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rezerwuje lokalizacji na stronie sieci Web, aby wyświetlić tekst statyczny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj <xref:System.Web.UI.WebControls.Literal?displayProperty=nameWithType> formantu do zarezerwowania lokalizacji na stronie sieci Web do wyświetlania tekstu. <xref:System.Web.UI.WebControls.Literal> Formant jest podobny do <xref:System.Web.UI.WebControls.Label> formantu, z wyjątkiem <xref:System.Web.UI.WebControls.Literal> kontroli pozwalają na stosowanie stylu do wyświetlanego tekstu. Tekst wyświetlany w formancie przez ustawienie programowo można kontrolować <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika.  
  
 Aby uzyskać więcej informacji o zabezpieczeniach, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [ Walidacja danych wejściowych użytkownika na stronach sieci Web programu ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:Literal  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Mode="Transform|PassThrough|Encode"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Text="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.Literal> formantu, aby wyświetlić tekst statyczny.  
  
> [!NOTE]
>  Poniższy przykład korzysta z modelu kodu pojedynczego pliku i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. W tym przykładzie kodu musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Literal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-aspx-vb[Literal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Label" />
    <altmember cref="P:System.Web.UI.WebControls.Literal.Text" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Literal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Literal" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Reprezentujący element przeanalizowany.</param>
        <summary>Powiadamia <see cref="T:System.Web.UI.WebControls.Literal" /> elementu XML lub HTML zostanie przeanalizowany i dodaje ten element, aby <see cref="T:System.Web.UI.ControlCollection" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Literal.AddParsedSubObject%2A> metoda niestandardowego serwera kontroli tak, aby zawsze ustawia <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości do obiektu przeanalizowany `Text` właściwości, jeśli obiekt przeanalizowany <xref:System.Web.UI.WebControls.Literal>oraz pusta `string` inaczej.  
  
 [!code-aspx-csharp[CustomLiteralAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomLiteralAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobject.cs#2)]
 [!code-vb[CustomLiteralAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="obj" /> nie jest typu <see cref="T:System.Web.UI.LiteralControl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.EmptyControlCollection" /> obiektu dla bieżącego wystąpienia elementu <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> obiektu zawiera kontrolki serwera podrzędnego bieżącego formantu serwera.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Literal.CreateControlCollection%2A> metoda niestandardowego serwera kontroli tak, aby zawsze zwraca wystąpienie klasy <xref:System.Web.UI.EmptyControlCollection> klasy dla <xref:System.Web.UI.WebControls.Literal> obiektu.  
  
 [!code-aspx-csharp[CustomLiteralCreateControlCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollectioncs.aspx#1)]
 [!code-aspx-vb[CustomLiteralCreateControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollectionvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralCreateControlCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollection.cs#2)]
 [!code-vb[CustomLiteralCreateControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustaw fokus wprowadzania do formantu; <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> kontrolki podstawowej metoda nie jest obsługiwana na <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Literal> Kontrolować zastąpienia <xref:System.Web.UI.Control.Focus%2A> metody klasy podstawowej. <xref:System.Web.UI.WebControls.Literal.Focus%2A> Metody <xref:System.Web.UI.WebControls.Literal> formant zawsze zgłasza wyjątek, aby wskazać, że <xref:System.Web.UI.WebControls.Literal.Focus%2A> metoda nie jest obsługiwana na <xref:System.Web.UI.WebControls.Literal> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> Została wywołana w <see cref="T:System.Web.UI.WebControls.Literal" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LiteralMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LiteralMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As LiteralMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LiteralMode Mode { System::Web::UI::WebControls::LiteralMode get(); void set(System::Web::UI::WebControls::LiteralMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LiteralMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wyliczenia, która określa sposób, w jaki zawartość <see cref="T:System.Web.UI.WebControls.Literal" /> renderowania formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.LiteralMode" /> wartości wyliczenia. Wartość domyślna to <see langword="Transform" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Literal.Mode%2A> właściwości w celu określenia sposobu zawartość <xref:System.Web.UI.WebControls.Literal> formant ma być renderowany. Ta właściwość jest ustawiona przy użyciu jednej z <xref:System.Web.UI.WebControls.LiteralMode> wartości wyliczenia. W poniższej tabeli przedstawiono możliwe wartości.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|`PassThrough`|Zawartość formantu nie są modyfikowane.|  
|`Encode`|Zawartość formantu jest konwertowana na ciąg kodowany w formacie HTML.|  
|`Transform`|Nieobsługiwany język znaczników elementy są usuwane z zawartości formantu. Jeśli <xref:System.Web.UI.WebControls.Literal> renderowania formantu w przeglądarce, która obsługuje HTML lub XHTML, zawartość formantu nie są modyfikowane.|  
  
 Jeśli określisz `PassThrough`, cała zawartość <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości są przekazywane do urządzenia lub przeglądarki bez żadnych modyfikacji. Na przykład jeśli <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwość <xref:System.Web.UI.WebControls.Literal> formant zawiera `<hr>` tagu jest przesyłana do wszystkich urządzeń i przeglądarki czy lub nie jest obsługiwane.  
  
 Jeśli określisz `Encode`, zawartość <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości są konwertowane na ciąg kodowany w formacie HTML przed renderowaniem. Na przykład jeśli <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwość <xref:System.Web.UI.WebControls.Literal> formant zawiera `<hr>` tag, zostanie przekonwertowane na `&lt;Hr&gt;` i wysyłane do urządzenia lub przeglądarki.  
  
 Jeśli określisz `Transform`, zachowanie renderowania <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości zależy od typu z renderowanego kodu znaczników. Podczas <xref:System.Web.UI.WebControls.Literal> renderowania formantu dla określonego urządzenia lub przeglądarki obsługującej HTML lub XHTML, określając <xref:System.Web.UI.WebControls.LiteralMode.Transform> tworzy tak samo, jak określenie <xref:System.Web.UI.WebControls.LiteralMode.PassThrough>. Wszystkie znaczniki i elementów dla <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości są renderowane dla przeglądarki.  
  
 Gdy <xref:System.Web.UI.WebControls.Literal> renderowania formantu markup language innych niż HTML lub XHTML, takie jak WML lub cHTML, możesz użyć <xref:System.Web.UI.WebControls.LiteralMode.Transform> wartość, aby usunąć elementy nieobsługiwane znaczników. W tym przypadku wszystkie elementy języka znaczników <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości, które nie są obsługiwane w języku znaczników docelowych nie są renderowane dla formantu. Na przykład jeśli <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwość <xref:System.Web.UI.WebControls.Literal> formant zawiera `<hr>` tag, tag zostanie usunięty przed wysłaniem do urządzenia WML zawartości. Nieobsługiwany tag zawiera zawartość, tylko tag zostanie usunięty, a zawartość jest wysyłane do urządzenia lub przeglądarki. Na przykład jeśli <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości z zawartością `<XYZ>Test</XYZ>`, `<XYZ>` i `</XYZ>` tagi są usuwane, a tekst "Test" są wysyłane do urządzenia lub przeglądarki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.Literal> formantu <xref:System.Web.UI.WebControls.Literal.Mode%2A> właściwości. <xref:System.Web.UI.WebControls.Literal.Mode%2A> Jest początkowo ustawiona właściwość `Encode` w składni deklaratywnej dla formantu. Po pobraniu strony, użytkownik może kliknąć przycisk, aby ustawić <xref:System.Web.UI.WebControls.Literal.Mode%2A> właściwości `PassThrough`. Powoduje to, że zawartość <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości do renderowania inaczej.  
  
> [!NOTE]
>  Poniższy przykład korzysta z modelu kodu pojedynczego pliku i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. W tym przykładzie kodu musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[Literal.Mode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal.Mode/VB/literal.modevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony typ nie jest jednym z <see cref="T:System.Web.UI.WebControls.LiteralMode" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.LiteralMode" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera zawartość sterującą serwera.</param>
        <summary>Wysyła zawartość sterującą serwera do udostępnionego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość mają być odwzorowane na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Literal.Render%2A> metoda niestandardowego serwera kontroli tak, aby określony tekst jest zawsze wyświetlany przed <xref:System.Web.UI.WebControls.Literal>.  
  
 [!code-aspx-csharp[CustomLiteralRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_rendercs.aspx#1)]
 [!code-aspx-vb[CustomLiteralRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_rendervb.aspx#1)]  
[!code-csharp[CustomLiteralRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_render.cs#2)]
[!code-vb[CustomLiteralRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Podpis wyświetlany w <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</summary>
        <value>Podpis wyświetlany w <see cref="T:System.Web.UI.WebControls.Literal" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości do określania Podpis wyświetlany w <xref:System.Web.UI.WebControls.Literal> formantu. Dzięki temu można programowo zmienić podpis w czasie wykonywania.  
  
 Podpis jest zdekodować HTML w zależności od tego, jak przypisać wartości do tej właściwości. Jeśli przypisanie wartości za pomocą atrybutu <xref:System.Web.UI.WebControls.Literal> kontroli, wartość jest HTML zdekodować przed wyświetleniem. Na przykład `<asp:Literal id="DisplayLiteral" Text="A&nbsp;B"/>` jest renderowane jako "A B" w przeglądarce. Jednak jeśli ta właściwość jest ustawiona, programowo lub umieszczając tekst pomiędzy otwierającym, a zamykającym tagiem formantu, podpis nie ma HTML zdekodowane. Na przykład `<asp:Literal id="DisplayLiteral"> A&nbsp;B </asp:Literal>` jest renderowane jako "A&nbsp;B".  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [sprawdzania poprawności serwera kontroli składni](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.Literal.Text%2A> właściwości programowo zmienić podpis wyświetlany w <xref:System.Web.UI.WebControls.Literal> formantu.  
  
> [!NOTE]
>  Poniższy przykład korzysta z modelu kodu pojedynczego pliku i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. W tym przykładzie kodu musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Literal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-aspx-vb[Literal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>