<Type Name="ControlParameter" FullName="System.Web.UI.WebControls.ControlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd4bbd4d65120c7ad8774d205ff8d270368cf1f4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691382" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ControlParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlParameter : System::Web::UI::WebControls::Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ControlID")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wiąże wartość właściwości <see cref="T:System.Web.UI.Control" /> do obiektu parameter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.WebControls.ControlParameter> klasy można powiązać wartości <xref:System.Web.UI.Control> właściwości, takie jak <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> lub <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A>, aby parametr, który jest używany w sparametryzowanego zapytania SQL, metoda obiektu biznesowych lub wyrażenie filtrowania.  
  
 <xref:System.Web.UI.WebControls.ControlParameter> Klasa udostępnia dwie właściwości dziedziczone z <xref:System.Web.UI.WebControls.Parameter> klasy: <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>. <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> Określa właściwość, która <xref:System.Web.UI.Control> wystąpienia, aby powiązać i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwość identyfikuje właściwość publiczna klasy <xref:System.Web.UI.Control> z którego <xref:System.Web.UI.WebControls.ControlParameter> klasy pobiera wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ControlParameter> obiekt, aby powiązać dane wyświetlane w <xref:System.Web.UI.WebControls.ListBox> kontroli do wybranej wartości <xref:System.Web.UI.WebControls.DropDownList> kontroli w scenariuszu deklaratywne. <xref:System.Web.UI.WebControls.ControlParameter> Obiekt jest dodawany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja <xref:System.Web.UI.WebControls.SqlDataSource> kontroli w formularzu i odpowiada "@Title" tekst zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ControlParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie nienazwane <see cref="T:System.Web.UI.WebControls.ControlParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest tworzony z <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> konstruktor został zainicjowany z wartościami domyślnymi dla wszystkich jego właściwości. <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości są inicjowane na <xref:System.String.Empty?displayProperty=nameWithType>. Ponadto <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość jest inicjowana na <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwość jest inicjowana na <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana na `null`.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.ControlParameter> obiekt z <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> konstruktora. <xref:System.Web.UI.WebControls.ControlParameter> Obiekt wiązania <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość <xref:System.Web.UI.WebControls.DropDownList> formantu sparametryzowanego zapytania SQL, która pobiera dane wyświetlane w <xref:System.Web.UI.WebControls.DataGrid> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControlParameter (System.Web.UI.WebControls.ControlParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ControlParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.Web.UI.WebControls.ControlParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As ControlParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControlParameter(System::Web::UI::WebControls::ControlParameter ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.ControlParameter" />
      </Parameters>
      <Docs>
        <param name="original">A <see cref="T:System.Web.UI.WebControls.ControlParameter" /> wystąpienia, z którego zainicjowano bieżącego wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ControlParameter" /> klasy z wartości z określonego wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> Konstruktor jest używany do klonowania Konstruktor kopiujący chronionych <xref:System.Web.UI.WebControls.ControlParameter> wystąpienia. Wartości <xref:System.Web.UI.WebControls.ControlParameter> obiektu, w tym <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>, <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, i <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwości, są przenoszone do nowego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ControlParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, string controlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string controlID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, controlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::String ^ controlID);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="controlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="controlID">Nazwa formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowy nazwane wystąpienie programu <see cref="T:System.Web.UI.WebControls.ControlParameter" /> przy użyciu nazwy określonego formantu do identyfikowania kontroli powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest tworzony z <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> Konstruktor jest inicjowany z określona nazwa parametru i <xref:System.Web.UI.Control> nazwę, która identyfikuje <xref:System.Web.UI.Control> która wiąże parametr. Inne właściwości, w tym <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, i <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, są inicjowane z wartościami domyślnymi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, controlID As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="controlID">Nazwa formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <param name="propertyName">Nazwa właściwości formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowy nazwane wystąpienie programu <see cref="T:System.Web.UI.WebControls.ControlParameter" /> przy użyciu określona nazwa właściwości i nazwa formantu, aby zidentyfikować kontroli powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest tworzony z <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> Konstruktor jest inicjowany z określona nazwa parametru, <xref:System.Web.UI.Control> nazwa, i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwość, która identyfikuje <xref:System.Web.UI.Control> która wiąże parametr. Inne właściwości, w tym <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, i <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>, są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.ControlParameter> obiektów przy użyciu <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> konstruktora. Powiązanie parametrów z wartościami <xref:System.Web.UI.WebControls.TextBox> i <xref:System.Web.UI.WebControls.DropDownList> służy do wprowadzania danych w bazie danych ze strony formularzy sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.AccessDataSource_3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.AccessDataSource_3/CS/webform5cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.AccessDataSource_3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.AccessDataSource_3/VB/webform5vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, System.Data.DbType dbType, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.Data.DbType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ danych parametru.</param>
        <param name="controlID">Nazwa formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <param name="propertyName">Nazwa właściwości formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ControlParameter" /> przy użyciu określona nazwa parametru, typu bazy danych, Identyfikatora formantu i nazwy właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, TypeCode type, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.TypeCode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, controlID As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, TypeCode type, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Typ, który reprezentuje parametr. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</param>
        <param name="controlID">Nazwa formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <param name="propertyName">Nazwa właściwości formantu, który jest powiązany parametr. Wartość domyślna to <see cref="F:System.String.Empty" />.</param>
        <summary>Inicjuje nowe wystąpienie nazwane i silnie typizowanej klasy <see cref="T:System.Web.UI.WebControls.ControlParameter" /> przy użyciu określona nazwa właściwości i nazwa formantu, aby zidentyfikować kontroli powiązać.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest tworzony z <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> Konstruktor jest inicjowany z określona nazwa parametru, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.Control> nazwa, i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości. Tylko <xref:System.Web.UI.WebControls.Parameter.Direction%2A> i <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> właściwości są inicjowane z wartościami domyślnymi.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób użycia <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> konstruktora, aby utworzyć dwa <xref:System.Web.UI.WebControls.ControlParameter> obiekty i skojarzyć je z <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 [!code-csharp[System.Web.UI.WebControls.ControlParameter_3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_3/CS/webform5cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ControlParameter_3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_3/VB/webform5vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.Web.UI.WebControls.ControlParameter" /> wystąpienia.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.ControlParameter" /> jest identyczna z bieżącej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.Clone%2A> Wywołania metody <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> Konstruktor kopiujący zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.ControlParameter> klasy z wartościami bieżącego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.Web.UI.WebControls.ControlParameter)" />
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlIDConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nazwę formantu, który <see cref="T:System.Web.UI.WebControls.ControlParameter" /> wiąże obiektu.</summary>
        <value>A <see langword="string" /> reprezentujący nazwę kontrolki serwera sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> Właściwość jest wymagana właściwość, która identyfikuje <xref:System.Web.UI.Control> wystąpienie <xref:System.Web.UI.WebControls.ControlParameter> obiektu wiąże w czasie wykonywania.  
  
 Zazwyczaj <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości są ustawiane dla <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> metody prawidłowe powiązanie z formantem. Jeśli nie ustawisz <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwość <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> metoda zgłasza <xref:System.ArgumentException> wyjątek podczas wywoływania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ControlParameter> obiekt, aby powiązać dane wyświetlane w <xref:System.Web.UI.WebControls.ListBox> kontroli do wybranej wartości <xref:System.Web.UI.WebControls.DropDownList> kontroli w scenariuszu deklaratywne. <xref:System.Web.UI.WebControls.ControlParameter> Obiekt jest dodawany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja <xref:System.Web.UI.WebControls.SqlDataSource> kontroli w formularzu i odpowiada "@Title" tekst zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości w celu zidentyfikowania kontrolki który <xref:System.Web.UI.WebControls.ControlParameter> obiekt jest powiązany. Przykład wypełnia <xref:System.Web.UI.WebControls.ListBox> formantu o wartości. <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> Właściwość <xref:System.Web.UI.WebControls.ListBox> kontroli służy do filtrowania danych pobranych przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i wyświetlane przez <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/CS/webform1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/VB/webform1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżący <see cref="T:System.Web.HttpContext" /> żądania.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Powiązanej z parametru.</param>
        <summary>Aktualizacje i zwraca wartość <see cref="T:System.Web.UI.WebControls.ControlParameter" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący aktualizację wartości parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter> Próbuje powiązać obiektu <xref:System.Web.UI.Control> obiektu, a właściwość zawsze <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> metoda jest wywoływana. <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> Metoda zwraca wartość właściwości formantu, który jest identyfikowany przez kombinację <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.ControlParameter> Klasy nigdy nie używa <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość, która jest odziedziczone <xref:System.Web.UI.WebControls.Parameter>, podczas wiązania z wartości właściwości formantu.  
  
> [!NOTE]
>  W tej implementacji metody `context` parametru jest ignorowana. Jeśli `control` parametr jest `null`, `null` jest zwracany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> Nie ustawiono właściwości.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" /> Nie ustawiono właściwości i <see cref="T:System.Web.UI.Control" /> identyfikowane przez <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> właściwość nie zostanie nadany <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> atrybutu.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Web.UI.Control.FindControl(System.String)" /> Zwraca określony formant.  
  
 \- lub -  
  
 Formant identyfikowane przez <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> właściwości nie obsługuje właściwości o nazwie <see cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlPropertyNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę właściwości formantu identyfikowane przez <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> właściwości który <see cref="T:System.Web.UI.WebControls.ControlParameter" /> wiąże obiektu.</summary>
        <value>A <see langword="string" /> reprezentujący nazwę właściwości formantu który <see cref="T:System.Web.UI.WebControls.ControlParameter" /> wiąże.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> Właściwość identyfikuje właściwość publiczna klasy <xref:System.Web.UI.Control> identyfikowane przez obiekt <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwości który <xref:System.Web.UI.WebControls.ControlParameter> obiektu wiąże w czasie wykonywania. <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> może mieć wartości prostego ciągu, takich jak "SelectedValue" lub za pomocą wyrażenia <xref:System.Web.UI.DataBinder.Eval%2A> składni, aby zidentyfikować właściwości formantu złożonego.  
  
 Gdy <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwość jest opcjonalna, zwykle zarówno <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości są ustawiane dla <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> metody prawidłowe powiązanie z formantem. Jeśli ustawisz <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwości, ale nie <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwość <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> próbuje użyć metody <xref:System.Web.UI.ControlValuePropertyAttribute> określenie wartości domyślnej dla atrybutu <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości. (Jest obowiązkiem kontroli autorom na określanie tego atrybutu). Jeśli to się nie powiedzie, <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> zgłasza <xref:System.ArgumentException> wyjątku.  
  
 W poniższej tabeli opisano, które kontrolki ASP.NET dekoracji właściwości z <xref:System.Web.UI.ControlValuePropertyAttribute> atrybutu.  
  
|Formant|Właściwość|  
|-------------|--------------|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.Checked%2A>|  
|<xref:System.Web.UI.WebControls.DataList>|<xref:System.Web.UI.WebControls.DataList.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.DetailsView>|<xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.FormView>|<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.Label>|<xref:System.Web.UI.WebControls.Label.Text%2A>|  
|<xref:System.Web.UI.WebControls.ListControl>|<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.Menu>|<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.Text%2A>|  
|<xref:System.Web.UI.WebControls.TreeView>|<xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ControlParameter> obiekt, aby powiązać dane wyświetlane w <xref:System.Web.UI.WebControls.ListBox> kontroli do wybranej wartości <xref:System.Web.UI.WebControls.DropDownList> kontroli w scenariuszu deklaratywne. <xref:System.Web.UI.WebControls.DropDownList> Formant pochodzi z <xref:System.Web.UI.WebControls.ListControl> formantu. <xref:System.Web.UI.WebControls.ControlParameter> Obiekt jest dodawany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja <xref:System.Web.UI.WebControls.SqlDataSource> kontroli w formularzu i odpowiada "@Title" tekst zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> właściwości w celu zidentyfikowania kontrolki który <xref:System.Web.UI.WebControls.ControlParameter> obiekt jest powiązany. Przykład wypełnia <xref:System.Web.UI.WebControls.ListBox> formantu o wartości. <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> Właściwość <xref:System.Web.UI.WebControls.ListBox> kontroli służy do filtrowania danych pobranych przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i wyświetlane przez <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/CS/webform1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/VB/webform1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      </Docs>
    </Member>
  </Members>
</Type>