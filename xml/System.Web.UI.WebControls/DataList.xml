<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b116d8116ba258dcd86984d872680f1c4b3a5f6" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Formant listy, który wyświetla elementy przy użyciu szablonów powiązany z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Szablony](#templates)  
  
-   [Dostosowywanie wyglądu formantu DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Kierunek wyświetlania i układu](#display_direction_and_layout)  
  
-   [Zabezpieczenia](#security)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj <xref:System.Web.UI.WebControls.DataList> formantu, aby wyświetlić dane zdefiniowane w szablonie powiązany z listy. <xref:System.Web.UI.WebControls.DataList> Sterowanie obsługuje zaznaczania i edytowania.  
  
<a name="templates"></a>   
## <a name="templates"></a>Szablony  
 Zawartość <xref:System.Web.UI.WebControls.DataList> formant może manipulować przy użyciu szablonów. W poniższej tabeli wymieniono obsługiwane szablonów.  
  
|Nazwa szablonu|Opis|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Jeśli określone, zapewnia zawartości i układu dla elementów zmiennych w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, `ItemTemplate` jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Jeśli określone, zapewnia zawartości i układu elementu aktualnie edytowany w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, `ItemTemplate` jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Jeśli określone, udostępnia zawartości i układu dla sekcji stopki <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, stopki nie będą wyświetlane.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Jeśli określone, udostępnia zawartości i układu dla sekcji nagłówka <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, sekcja nagłówka nie będą wyświetlane.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Wymagany szablon, który udostępnia zawartość i układ elementów <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Jeśli określone, zapewnia zawartości i układu dla aktualnie wybranego elementu w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Jeśli określone, udostępnia zawartość i układ separatora między elementami w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, separator nie zostanie wyświetlony.|  
  
 W bardzo minimalne <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> musi być zdefiniowana do wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Dodatkowe szablony mogą służyć do zapewnienia niestandardowy wygląd do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Dostosowywanie wyglądu formantu DataList  
 Wygląd <xref:System.Web.UI.WebControls.DataList> formantu można dostosować przez ustawienie właściwości stylu dla różnych części kontrolki. W poniższej tabeli wymieniono właściwości inny styl.  
  
|Właściwości stylu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Określa styl dla elementów zmiennych w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Określa styl elementu edytowany w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Określa styl stopki w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Określa styl nagłówka w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Określa styl dla elementów w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Określa styl dla wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Określa styl separatora między elementami w <xref:System.Web.UI.WebControls.DataList> formantu.|  
  
 Możesz również wyświetlić lub ukryć różnych części kontrolki. W poniższej tabeli wymieniono właściwości, które kontrolują, które fragmenty są pokazywane lub ukryte.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Pokazuje lub ukrywa stopce <xref:System.Web.UI.WebControls.DataList> formantu.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Pokazuje lub ukrywa sekcji nagłówka <xref:System.Web.UI.WebControls.DataList> formantu.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Kierunek wyświetlania i układu  
 Kierunek wyświetlania <xref:System.Web.UI.WebControls.DataList> formant może być pionowych lub poziomych. Ustaw <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwość, aby określić kierunek wyświetlania.  
  
 Układ <xref:System.Web.UI.WebControls.DataList> kontroli jest kontrolowany przy użyciu <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwości. Ustawienie tej właściwości na `RepeatLayout.Table` wyświetli <xref:System.Web.UI.WebControls.DataList> w formacie tabeli podczas `RepeatLayout.Flow` Wyświetla <xref:System.Web.UI.WebControls.DataList> bez struktury tabeli.  
  
<a name="security"></a>   
## <a name="security"></a>Zabezpieczenia  
 `DataList` Formant może zawierać formanty, które umożliwiają użytkownikom wprowadzanie informacji.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika.  
  
 Aby uzyskać więcej informacji o zabezpieczeniach, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [ Walidacja danych wejściowych użytkownika na stronach sieci Web programu ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList> formantu, aby wyświetlić listę elementów ze źródła danych.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.DataList" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.DataList> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.DataList> klasy.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementów zmiennych w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który reprezentuje właściwości stylu do naprzemiennych elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwość, aby dostarczyć styl niestandardowy do naprzemiennych elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Element właściwości stylu w <xref:System.Web.UI.WebControls.DataList> formantu są dziedziczone z właściwości stylu jeden element do drugiego za pomocą hierarchii. Właściwości stylu elementu ustawić niższy w hierarchii są dziedziczone przez właściwości stylu elementu wyżej w hierarchii. Na przykład, jeśli określono red czcionki <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie pozostałe styl właściwości elementu w <xref:System.Web.UI.WebControls.DataList> kontrolka będzie miała również red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczy element. Można zastąpić ustawienia dziedziczonego stylu właściwości stylu elementu, który jest wyżej w hierarchii przez ustawienie właściwości stylu. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości. W poniższej tabeli wymieniono kolejność hierarchii z najwyższym malejąco.  
  
|Pierwszeństwo|Właściwości stylu|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić niestandardowy styl przemiennych elementów, umieść `<AlternatingItemStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<AlternatingItemStyle>` tagu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwość, aby określić inny kolor tła dla elementów zmiennych w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla elementów zmiennych w <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> obiekt, który zawiera szablon do naprzemiennych elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> właściwość, aby określić zawartość elementów zmiennych w <xref:System.Web.UI.WebControls.DataList> formantu. Steruje wyglądem naprzemiennych elementów <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości.  
  
 Aby określić szablon dla elementów przemiennych, umieść `<AlternatingItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<AlternatingItemTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> właściwość, aby określić zawartość elementów zmiennych w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see langword="Cancel" /> przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> Zdarzenie jest zgłaszane, gdy `Cancel` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługę <xref:System.Web.UI.WebControls.DataList.CancelCommand> zestawów zdarzeń <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości `-1` (Aby usunąć zaznaczenie elementu), a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
> [!CAUTION]
>  Tekst nie ma kodowania, zanim zostanie wyświetlony w HTML <xref:System.Web.UI.WebControls.DataList> formantu. Umożliwia osadzanie skryptów w tagów HTML w tekście. Wartości dla formantu pochodzą z danych wejściowych użytkownika, należy sprawdzić wartości, aby zmniejszyć luk w zabezpieczeniach.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzeń. Anuluje zmiany wprowadzone do elementu w <xref:System.Web.UI.WebControls.DataList> decyduje o `Cancel` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see langword="Cancel" /> nazwę polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.CancelCommandName> pola do reprezentowania `Cancel` nazwę polecenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          <see langword="true" /> Aby użyć formantu źródła danych; <see langword="false" /> oznacza, że kontrolka jest są ponownie tworzone na podstawie stanu widoku i nie powinny być powiązane z danymi.</param>
        <summary>Tworzy hierarchię formant, który jest używany do renderowania kontrolki listy danych, z lub bez określonego źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Metoda jest używana głównie przez deweloperów sterowania podczas wyprowadzania implementacja niestandardowa z <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Używa metody <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> i <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metody tworzenia <xref:System.Web.UI.WebControls.DataListItem> formantów, które reprezentują nagłówek, stopka, separatora i elementy powiązane z danymi zawartymi w wykazie danych. Dostępne elementy powiązane z danymi dla listy danych za pośrednictwem <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Są dostępne wszystkie typy elementów, w tym nagłówek, stopka i elementów separatora za pośrednictwem <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji.  
  
 Zastąpienie <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> metodę w celu dostosowania sposobu <xref:System.Web.UI.WebControls.DataListItem> formanty są tworzone lub dodane do <xref:System.Web.UI.WebControls.DataList> formantu. Zastąpienie <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metodę w celu dostosowania szablonów dla <xref:System.Web.UI.WebControls.DataListItem> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy obiekt styl domyślny, która jest używana wewnętrznie przez <see cref="T:System.Web.UI.WebControls.DataList" /> właściwości powiązanych z formantu do zaimplementowania wszystkie style.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.TableStyle" /> zawierający domyślne właściwości stylu dla formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> Metoda jest używana głównie przez deweloperów kontroli w wyprowadzanie implementacja niestandardowa z <xref:System.Web.UI.WebControls.DataList> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> metoda niestandardowego serwera kontroli tak, aby zawsze wyświetla poziomych linii siatki z nie odstępy w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Określona lokalizacja w <see cref="T:System.Web.UI.WebControls.DataList" /> można umieścić utworzonego elementu.</param>
        <param name="itemType">A <see cref="T:System.Web.UI.WebControls.ListItemType" /> reprezentujący element, aby utworzyć określonego typu.</param>
        <summary>Tworzy <see cref="T:System.Web.UI.WebControls.DataListItem" /> obiektu.</summary>
        <returns>Nowy <see cref="T:System.Web.UI.WebControls.DataListItem" /> utworzony przy użyciu typu określonego elementu listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Metoda jest używana głównie przez deweloperów formant tworzenia niestandardowych implementacji <xref:System.Web.UI.WebControls.DataList> formantu. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Jest funkcjonalnym odpowiednikiem wywołania metody <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> Konstruktor <xref:System.Web.UI.WebControls.DataListItem>. <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> i <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> właściwości są inicjowane dla nowego <xref:System.Web.UI.WebControls.DataListItem> przy użyciu określonej wartości, ale element nie jest wstawiany <xref:System.Web.UI.WebControls.DataList>.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Używa metody <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> i <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metody tworzenia <xref:System.Web.UI.WebControls.DataListItem> formantów, które reprezentują nagłówek, stopka, separatora i elementy powiązane z danymi zawartymi w wykazie danych. Dostępne elementy powiązane z danymi dla listy danych za pośrednictwem <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Są dostępne wszystkie typy elementów, w tym nagłówek, stopka i elementów separatora za pośrednictwem <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę, aby utworzyć własną pochodne <see cref="T:System.Web.UI.WebControls.DataListItem" /> typu, lub można ustawić właściwości dodatkowy element członkowski podczas <see cref="T:System.Web.UI.WebControls.DataListItem" /> jest tworzony.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see langword="Delete" /> przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Zdarzenie jest zgłaszane, gdy `Delete` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługę <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzeń Usuwa wybrany element ze źródła danych, a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzeń. Usuwa wybrany element w <xref:System.Web.UI.WebControls.DataList> decyduje o `Delete` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see langword="Delete" /> nazwę polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> pola do reprezentowania `Delete` nazwę polecenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see langword="Edit" /> przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> Zdarzenie jest zgłaszane, gdy `Edit` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zestawów zdarzeń <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości wybranego wiersza, a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!CAUTION]
>  Tekst nie ma kodowania, zanim zostanie wyświetlony w HTML <xref:System.Web.UI.WebControls.DataList> formantu. Umożliwia osadzanie skryptów w tagów HTML w tekście. Wartości dla formantu pochodzą z danych wejściowych użytkownika, należy sprawdzić wartości, aby zmniejszyć luk w zabezpieczeniach.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzeń. Umożliwia edytowanie wybranego elementu w <xref:System.Web.UI.WebControls.DataList> decyduje o `Edit` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see langword="Edit" /> nazwę polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.EditCommandName> pola do reprezentowania `Edit` nazwę polecenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer indeksu wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formant do edytowania.</summary>
        <value>Numer indeksu wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formant do edytowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości w celu określenia programowo element do edytowania. Ta właściwość umożliwia również określić indeks elementu wybranego do edycji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Właściwość się od zera.  
  
 Aby usunąć zaznaczenie elementu, należy ustawić <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości `-1`.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Właściwość jest przechowywana w stan formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości w celu określenia elementu wybranego przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementu wybranego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu dla elementu zaznaczonego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> właściwości do zapewnienia styl niestandardowy element wybrany do edycji w <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Element właściwości stylu w <xref:System.Web.UI.WebControls.DataList> formantu są dziedziczone z właściwości stylu jeden element do drugiego za pomocą hierarchii. Właściwości stylu elementu ustawić niższy w hierarchii są dziedziczone przez właściwości stylu elementu wyżej w hierarchii. Na przykład, jeśli określono red czcionki <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie pozostałe styl właściwości elementu w <xref:System.Web.UI.WebControls.DataList> kontrolka będzie miała również red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczy element. Można zastąpić ustawienia dziedziczonego stylu właściwości stylu elementu, który jest wyżej w hierarchii przez ustawienie właściwości stylu. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości. W poniższej tabeli wymieniono kolejność hierarchii z najwyższym malejąco.  
  
|Pierwszeństwo|Właściwości stylu|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić niestandardowy styl elementu wybranego do edycji, umieść `<EditItemStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<EditItemStyle>` tagu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> właściwość, aby określić inny wygląd elementu wybranego przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon elementu wybranego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> obiekt, który zawiera szablon elementu wybranego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> właściwość, aby określić zawartość elementu wybranego do edycji w <xref:System.Web.UI.WebControls.DataList> formantu. Wygląd elementu do edycji jest kontrolowany przez wybrany <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> właściwości.  
  
 Aby określić szablon dla elementu wybranego do edycji, umieść `<EditItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<EditItemTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> właściwość, aby określić zawartość elementu wybranego przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersze <see cref="T:System.Web.UI.WebControls.Table" /> kontroli zdefiniowane w szablonie z <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolować, są wyodrębniane i wyświetlane.</summary>
        <value>
          <see langword="true" /> Jeśli te wiersze <see cref="T:System.Web.UI.WebControls.Table" /> kontroli zdefiniowane w szablonie z <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolować, są wyodrębnione i wyświetlane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość <xref:System.Web.UI.WebControls.DataList> formantu są określane przy użyciu szablonów. Zwykle wśród formantów, które mają być wyświetlane w szablonach. Możesz również umieścić <xref:System.Web.UI.WebControls.Table> kontroli w szablonie i wyświetlać wiersze w tabeli.  
  
 Użyj <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> właściwości w celu określenia czy wiersze <xref:System.Web.UI.WebControls.Table> kontroli zdefiniowane w szablonie z <xref:System.Web.UI.WebControls.DataList> formantu są wyodrębniane i wyświetlane. Wszystkie wiersze wyodrębniony z szablonów z <xref:System.Web.UI.WebControls.DataList> sterowania są wyświetlane w jednej tabeli. Dzięki temu można utworzyć pojedynczej tabeli z innych tabel mniejsze i zachować funkcje <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Jeśli ta właściwość jest skonfigurowana `true`, musisz podać poprawnie sformułowanym <xref:System.Web.UI.WebControls.Table> kontroli dla każdego szablonu mają zostać uwzględnione w <xref:System.Web.UI.WebControls.DataList> formantu. Zostaną wyświetlone tylko wiersze tabel. Całą zawartość w szablonie będą ignorowane. Należy użyć <xref:System.Web.UI.WebControls.Table> sterowania, aby ta funkcja działała poprawnie. <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> Formant nie jest zgodny z tą właściwością.  
  
 Po utworzeniu komórki dla <xref:System.Web.UI.WebControls.Table> formantu w szablonie, można użyć <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> właściwość <xref:System.Web.UI.WebControls.TableCell> obiekt, aby określić liczbę kolumn, które obejmuje komórki. Można również użyć <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> właściwość, aby określić liczbę wierszy, które obejmuje komórki.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, I <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwości nie ma wpływu na wygląd <xref:System.Web.UI.WebControls.DataList> kontroli, gdy ta właściwość ma wartość `true`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia użycie <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> właściwości można wyodrębnić i wyświetlać wiersze <xref:System.Web.UI.WebControls.Table> formanty zdefiniowane w szablonach z <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla sekcji stopki <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu stopce <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do zapewnienia niestandardowego stylu stopce <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Właściwość <xref:System.Web.UI.WebControls.DataList> kontroli dziedziczy ustawienia stylu <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości. Na przykład jeśli określisz red czcionkę dla <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwość <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości również mają red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczego. Można zastąpić ustawienia dziedziczonego stylu, ustawiając <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości.  
  
 Określenie niestandardowych stylu dla sekcji stopki, umieść `<FooterStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<FooterStyle>` tagu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Musi mieć ustawioną właściwość `true` dla tej właściwości, które mają być wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwość, aby określić niestandardowy kolor tła dla sekcji stopki <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla sekcji stopki <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> obiekt, który zawiera szablon dla sekcji stopki <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> właściwość, aby określić zawartość sekcji stopki. Steruje wyglądem stopce <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Musi mieć ustawioną właściwość `true` dla tej właściwości, które mają być wyświetlane.  
  
 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Właściwość <xref:System.Web.UI.WebControls.DataList> kontroli dziedziczy ustawienia stylu <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości. Na przykład jeśli określisz red czcionkę dla <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwość <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości również mają red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczego. Można zastąpić ustawienia dziedziczonego stylu, ustawiając <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości.  
  
 Aby określić szablon dla sekcji stopki, umieść `<FooterTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<FooterTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> właściwość, aby określić zawartość sekcji stopki <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki dla <see cref="T:System.Web.UI.WebControls.DataList" /> decyduje o <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> właściwość jest ustawiona na <see langword="RepeatLayout.Table" />.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.GridLines" /> wartości wyliczenia. Wartość domyślna to <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.GridLines%2A> właściwości w celu określenia styl linii siatki dla <xref:System.Web.UI.WebControls.DataList> formantu. W poniższej tabeli przedstawiono możliwe style.  
  
|Styl|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Nie linii siatki.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Wyświetla poziomych linii siatki.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Wyświetla linii siatki w pionie.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Wyświetla linie siatki w poziomie i w pionie.|  
  
> [!NOTE]
>  Ta właściwość ma zastosowanie tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwość jest ustawiona na `RepeatLayout.Table`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.GridLines%2A> właściwość, aby wyświetlić wiersze siatki poziome i pionowe <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla sekcji nagłówka <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu dla sekcji nagłówka <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do zapewnienia styl niestandardowy nagłówek <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby określić styl niestandardowy nagłówek sekcji, umieść `<HeaderStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<HeaderStyle>` tagu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Musi mieć ustawioną właściwość `true` dla tej właściwości, które mają być wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwość, aby określić niestandardowy kolor tła dla sekcji nagłówka <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla sekcji nagłówka <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawiera szablon dla sekcji nagłówka <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> właściwości do kontrolowania zawartości sekcji nagłówka. Steruje wyglądem sekcji nagłówka <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Musi mieć ustawioną właściwość `true` dla tej właściwości, które mają być wyświetlane.  
  
 Aby określić szablon dla sekcji nagłówka, umieść `<HeaderTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<HeaderTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> właściwość, aby określić zawartość sekcji nagłówka <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Web.UI.WebControls.DataListItem" /> Zainicjować.</param>
        <summary>Inicjuje <see cref="T:System.Web.UI.WebControls.DataListItem" /> obiekt na podstawie określonego szablony i style dla typu elementu listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Metoda jest używana głównie przez deweloperów formantu do rozszerzenia <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Używa metody <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> i <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metody tworzenia <xref:System.Web.UI.WebControls.DataListItem> formantów, które reprezentują nagłówek, stopka, separatora i elementy powiązane z danymi zawartymi w wykazie danych. Dostępne elementy powiązane z danymi dla listy danych za pośrednictwem <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Są dostępne wszystkie typy elementów, w tym nagłówek, stopka i elementów separatora za pośrednictwem <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji.  
  
 Zastąpienie <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> metodę w celu dostosowania sposobu <xref:System.Web.UI.WebControls.DataListItem> formanty są tworzone lub dodane do <xref:System.Web.UI.WebControls.DataList> formantu. Zastąpienie <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metodę w celu dostosowania szablonów dla <xref:System.Web.UI.WebControls.DataListItem> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie kliknięty dowolny przycisk, w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> Zdarzenie jest zgłaszane, gdy zostanie kliknięty dowolny przycisk, w <xref:System.Web.UI.WebControls.DataList> kontroli i jest najczęściej używany, gdy formant przycisku z niestandardowego `CommandName` wartość.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzeń, aby wybrać element <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje na serwerze, gdy element <see cref="T:System.Web.UI.WebControls.DataList" /> formant nie zostanie utworzony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Zdarzenie jest zgłaszane, gdy element <xref:System.Web.UI.WebControls.DataList> formant jest tworzony, podczas przechodzenia i w czasie do formantu jest powiązany z danymi.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Zdarzeń jest najczęściej używany do kontroli zawartości i wyglądu wierszy w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzeń, aby wyświetlić kolejność wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> sterowania są tworzone.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element jest powiązany z danych <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Zdarzenie jest wywoływane po elementu jest powiązany z danych <xref:System.Web.UI.WebControls.DataList> formantu. To zdarzenie umożliwia to ostatnia możliwość dostępu do elementu danych, zanim zostanie wyświetlony na komputerze klienckim. Po to zdarzenie jest wywoływane, gdy element danych nie jest już dostępne.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzeń, aby wyświetlić kolejność wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> formantu są powiązane z formantem.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.DataListItem" /> obiektów reprezentujących poszczególnych elementów w formancie.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> zawierający kolekcję <see cref="T:System.Web.UI.WebControls.DataListItem" /> obiekty reprezentujące poszczególne elementy <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji na potrzeby programistycznego sterowania elementów w <xref:System.Web.UI.WebControls.DataList> formantu. <xref:System.Web.UI.WebControls.DataList.Items%2A> Kolekcji nie ma żadnych metod, aby dodać lub usunąć elementy w kolekcji. Jednak mogą kontrolować zawartość elementu przez zapewnienie obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzeń.  
  
> [!NOTE]
>  Tylko elementy powiązane ze źródłem danych są zawarte w <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Nagłówek, stopka i separatora nie znajdują się w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji do wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do zapewnienia styl niestandardowy elementy <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Element właściwości stylu w <xref:System.Web.UI.WebControls.DataList> formantu są dziedziczone z właściwości stylu jeden element do drugiego za pomocą hierarchii. Właściwości stylu elementu ustawić niższy w hierarchii są dziedziczone przez właściwości stylu elementu wyżej w hierarchii. Na przykład, jeśli określono red czcionki <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie pozostałe styl właściwości elementu w <xref:System.Web.UI.WebControls.DataList> kontrolka będzie miała również red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczy element. Można zastąpić ustawienia dziedziczonego stylu właściwości stylu elementu, który jest wyżej w hierarchii przez ustawienie właściwości stylu. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości. W poniższej tabeli wymieniono kolejność hierarchii z najwyższym malejąco.  
  
|Pierwszeństwo|Właściwości stylu|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Określenie niestandardowych stylu dla elementów <xref:System.Web.UI.WebControls.DataList> kontrolować, umieść `<ItemStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<ItemStyle>` tagu.  
  
 Można również użyć <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, aby zapewnić różne wygląd do naprzemiennych elementów w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwość, aby określić inny kolor tła dla elementów w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawiera szablon dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> właściwość, aby określić zawartość elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Wygląd elementów w <xref:System.Web.UI.WebControls.DataList> kontroli jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości.  
  
 Aby określić szablon dla elementów <xref:System.Web.UI.WebControls.DataList> kontrolować, umieść `<ItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<ItemTemplate>` tagów.  
  
 Opcjonalnie można użyć <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> właściwości, aby zapewnić różne wygląd do naprzemiennych elementów w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> właściwość, aby określić zawartość elementów w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt reprezentujący stan <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Ładuje wcześniej zapisany widok stanu <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie.  Jednak kontroli deweloperzy mogą przesłaniać tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> Metoda przywraca stan widoku informacje dotyczące <xref:System.Web.UI.WebControls.DataList> formantu z poprzedniego żądania strony, która została zapisana przez <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Określa, czy zdarzenia dla kontrolki serwera jest przekazywany strony interfejsu użytkownika serwera kontroli hierarchii.</summary>
        <returns>
          <see langword="true" /> Jeśli zdarzenie zostało anulowane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> Zdarzenie jest zgłaszane, gdy `Cancel` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługę <xref:System.Web.UI.WebControls.DataList.CancelCommand> zestawów zdarzeń <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości `-1` (Aby usunąć zaznaczenie elementu), a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzeń. Anuluje zmiany wprowadzone do elementu w <xref:System.Web.UI.WebControls.DataList> decyduje o `Cancel` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Zdarzenie jest zgłaszane, gdy `Delete` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługę <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzeń Usuwa wybrany element ze źródła danych, a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzeń. Usuwa wybrany element w <xref:System.Web.UI.WebControls.DataList> decyduje o `Delete` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> Zdarzenie jest zgłaszane, gdy `Edit` przycisku dla elementu <xref:System.Web.UI.WebControls.DataList> kontroli.  
  
 Typowy obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zestawów zdarzeń <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości wybranego wiersza, a następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzeń. Umożliwia edytowanie wybranego elementu w <xref:System.Web.UI.WebControls.DataList> decyduje o `Edit` kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzenia dla <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.OnInit%2A> Powiadamia metody <xref:System.Web.UI.WebControls.DataList> formantu, aby wykonać wszystkie kroki inicjowania, które są wymagane do tworzenia i konfigurowania wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> Zdarzenie jest zgłaszane, gdy zostanie kliknięty dowolny przycisk, w <xref:System.Web.UI.WebControls.DataList> kontroli i jest najczęściej używany, gdy formant przycisku z niestandardowego `CommandName` wartości, takich jak `Add`w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzeń, aby wybrać element <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Zdarzenie jest zgłaszane, gdy element <xref:System.Web.UI.WebControls.DataList> formant jest tworzony, podczas przechodzenia i w czasie do formantu jest powiązany z danymi.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Zdarzeń jest najczęściej używany do kontroli zawartości i wyglądu wierszy w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzeń, aby wyświetlić kolejność wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> sterowania są tworzone.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Zdarzenie jest wywoływane po elementu jest powiązany z danych <xref:System.Web.UI.WebControls.DataList> formantu. To zdarzenie umożliwia to ostatnia możliwość dostępu do elementu danych, zanim zostanie wyświetlony na komputerze klienckim. Po to zdarzenie jest wywoływane, gdy element danych nie jest już dostępne.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzeń, aby wyświetlić kolejność wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> formantu są powiązane z formantem.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" /> zdarzeń. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> metodę w celu zapewnienia obsługi niestandardowych <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzeń.  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Zdarzenie jest zgłaszane, gdy `Update` przycisk dla element zostanie kliknięty.  
  
 Typowy obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzeń aktualizacji danych, zestawy <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości `-1` (Aby usunąć zaznaczenie elementu) i następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzeń. Umożliwia zaktualizowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> formantu przy użyciu nowych wartości wprowadzonej przez użytkownika podczas `Update` przycisk zostanie kliknięty.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przygotowuje hierarchii formantu do renderowania w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> Metoda jest używana głównie przez deweloperów sterowania podczas wyprowadzania kontrolkę niestandardową z <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> Przygotowuje hierarchii formantu i określa style dla zawarte <xref:System.Web.UI.WebControls.DataListItem> steruje przed renderowaniem formantów podrzędnych.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zastąpienie <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> metodę w celu dostosowania style formanty zawarte w <see cref="T:System.Web.UI.WebControls.DataList" /> przed ich renderowaniem.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Wyświetla listę elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Metoda jest używana głównie przez deweloperów sterowania podczas wyprowadzania kontrolkę niestandardową z <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Metoda renderuje zawartość wewnętrzny <xref:System.Web.UI.WebControls.DataList> formantu, łącznie z zamkniętego <xref:System.Web.UI.WebControls.DataListItem> kontrolki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> metoda niestandardowego serwera kontroli tak, aby tekst poprzedza <xref:System.Web.UI.WebControls.DataList> obiektu.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kolumn do wyświetlenia w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>Liczba kolumn do wyświetlenia w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="0" />, co oznacza, że elementy w <see cref="T:System.Web.UI.WebControls.DataList" /> sterowania są wyświetlane w pojedynczy wiersz lub kolumnę, według wartości <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby kolumn, które wyświetlania elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Na przykład, jeśli ta właściwość jest ustawiona na `5`, <xref:System.Web.UI.WebControls.DataList> kontroli wyświetla jego elementy w pięciu kolumnach.  
  
> [!NOTE]
>  Jeśli ta właściwość jest ustawiona na `0`, <xref:System.Web.UI.WebControls.DataList> kontrola wyświetla jego elementy w jeden wiersz lub kolumnę, według wartości <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwość jest ustawiona na `RepeatDirection.Horizontal`, elementy są wyświetlane w jednym wierszu. Jeśli <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwość jest ustawiona na `RepeatDirection.Vertical`, elementy są wyświetlane w jednej kolumnie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwości, aby określić liczbę kolumn do wyświetlenia w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona liczba kolumn jest wartością ujemną.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czy <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolka ma wyświetlać pionie lub poziomie.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> wartości. Wartość domyślna to <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwość, aby określić kierunek wyświetlania <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Liczba kolumn wyświetlanych zawsze jest określana przez <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwości.  
  
 Jeśli ta właściwość jest ustawiona na `RepeatDirection.Vertical`, elementy na liście są wyświetlane w kolumnach załadowanych od góry do dołu, a następnie od lewej do prawej, dopóki wszystkie elementy są renderowane. Na przykład jeśli <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwość jest ustawiona na `3`, elementy <xref:System.Web.UI.WebControls.DataList> sterowania są wyświetlane w trzech kolumn w tabeli poniżej.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Jeśli ta właściwość jest ustawiona na `RepeatDirection.Horizontal`, elementy na liście są wyświetlane w wierszach załadowane od lewej do prawej, następnie od góry do dołu, dopóki wszystkie elementy są renderowane. Na przykład jeśli <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwość jest ustawiona na `3`, elementy <xref:System.Web.UI.WebControls.DataList> sterowania są wyświetlane w wierszach trzech elementów, jak w poniższej tabeli.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwości w celu określenia kierunek, w którym <xref:System.Web.UI.WebControls.DataList> formant jest wyświetlany.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy formant jest wyświetlany w tabeli lub przepływ układ.</summary>
        <value>Wartość, która określa, czy formant jest wyświetlany w tabeli lub układu przepływu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwości w celu określenia czy elementów <xref:System.Web.UI.WebControls.DataList> sterowania są wyświetlane w formie tabeli. Jedynym <xref:System.Web.UI.WebControls.RepeatLayout> wartości, które są obsługiwane przez <xref:System.Web.UI.WebControls.DataList> sterowania stanowią <xref:System.Web.UI.WebControls.RepeatLayout.Table> i <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Jeśli ta właściwość jest ustawiona na `RepeatLayout.Table`, elementy na liście są wyświetlane w formie tabeli. Jeśli ta właściwość jest ustawiona na `RepeatLayout.Flow`, elementy na liście są wyświetlane bez struktury tabeli.  
  
 Gdy <xref:System.Web.UI.WebControls.DataList> formant jest wyświetlany w tabeli, możesz użyć <xref:System.Web.UI.WebControls.DataList.GridLines%2A> właściwości w celu określenia styl linii siatki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwości w celu określenia stylu układu <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jednym z obsługiwanych <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany w formancie stanu widoku od czasu strony zostało przesłane do serwera.</summary>
        <returns>Obiekt, który zawiera zmiany <see cref="T:System.Web.UI.WebControls.DataList" /> stanu widoku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formancie serwera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy. <xref:System.Web.UI.Control.ViewState%2A> Wartość właściwości jest następnie trwale obiektowi ciągu po fazie Zapisywanie stanu cyklu życia kontrolki serwera. Aby uzyskać więcej informacji, zobacz [Przegląd cyklu życia strony ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Po zapisaniu stan widoku, ten obiekt string jest zwracana do klienta jako zmienna, która jest przechowywana w ukrytym elemencie wejściowym HTML. Podczas tworzenia niestandardowe kontrolki serwera może poprawić wydajność przez zastąpienie <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> — metoda i modyfikowanie <xref:System.Web.UI.Control.ViewState%2A> właściwości formantu serwera. Aby uzyskać więcej informacji, zobacz [tworzenia kontrolek serwera ASP.NET niestandardowe](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) i [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see langword="Select" /> nazwę polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SelectCommandName> pola do reprezentowania `Select` nazwę polecenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>Indeks wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> właściwości w celu określenia programowo wybrany element w <xref:System.Web.UI.WebControls.DataList> formantu. Ta właściwość umożliwia również określić indeks wybranego elementu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Właściwość się od zera.  
  
 Aby usunąć zaznaczenie elementu, należy ustawić <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> właściwości `-1`.  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Właściwość jest przechowywana w stan formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> właściwości w celu określenia wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza niż <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zaznaczony element w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataListItem" /> reprezentujący elementu wybranego w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> właściwości do pobrania <xref:System.Web.UI.WebControls.DataListItem> obiekt, który reprezentuje wybrany element w <xref:System.Web.UI.WebControls.DataList> formantu. Ten obiekt można następnie uzyskać dostęp do właściwości wybranego elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> właściwości do wyświetlenia zawartości wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu dla wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do zapewnienia styl niestandardowy dla wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Element właściwości stylu w <xref:System.Web.UI.WebControls.DataList> formantu są dziedziczone z właściwości stylu jeden element do drugiego za pomocą hierarchii. Właściwości stylu elementu ustawić niższy w hierarchii są dziedziczone przez właściwości stylu elementu wyżej w hierarchii. Na przykład, jeśli określono red czcionki <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie pozostałe styl właściwości elementu w <xref:System.Web.UI.WebControls.DataList> kontrolka będzie miała również red czcionki. Umożliwia zapewnienie wspólnej wygląd formantu, ustawiając właściwość stylu pojedynczy element. Można zastąpić ustawienia dziedziczonego stylu właściwości stylu elementu, który jest wyżej w hierarchii przez ustawienie właściwości stylu. Na przykład można określić niebieski czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości zastępowanie red czcionki określonej w <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości. W poniższej tabeli wymieniono kolejność hierarchii z najwyższym malejąco.  
  
|Pierwszeństwo|Właściwości stylu|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić niestandardowy styl dla wybranego elementu, umieść `<SelectedItemStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> kontroli. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<SelectedItemStyle>` tagu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> właściwość, aby określić niestandardowy kolor tła dla wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawierający szablonu dla wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> właściwość, aby określić zawartość wybranego elementu. Steruje wyglądem wybranego elementu <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> właściwości.  
  
 Aby określić szablon dla wybranego elementu, umieść `<SelectedItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<SelectedItemTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> właściwość, aby określić zawartość wybranego elementu w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość pola klucza dla elementu listy wybranych danych.</summary>
        <value>Wartość pola klucza dla elementu listy wybranych danych. Wartość domyślna to <see langword="null" />, która wskazuje, czy nie danych listy obecnie wybrano elementu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> Właściwość nie została ustawiona.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu separatora między poszczególnymi elementami <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt, który zawiera właściwości stylu separatora między poszczególnymi elementami <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to pusta <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> właściwość, aby dostarczyć styl niestandardowy separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> formantu. Separator można umieścić element z niestandardowej zawartości między każdym z elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Typowe atrybuty stylu, które można dostosować obejmują kolor pierwszego planu, kolor tła, czcionki i wyrównanie zawartości w komórce. Zapewnianie inny styl zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby określić niestandardowy styl separatora, umieść `<SeparatorStyle>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Można następnie wyświetlić listę atrybuty stylu w granicach otwarcia `<SeparatorStyle>` tagu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> właściwość, aby określić niestandardowy kolor tła separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon separatora między elementy <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> zawiera szablon separatora między elementami w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> właściwość, aby określić zawartość separatora między elementy <xref:System.Web.UI.WebControls.DataList> formantu. Separator można umieścić element z niestandardowej zawartości między każdym z elementów w <xref:System.Web.UI.WebControls.DataList> formantu. Wygląd separatora między elementy <xref:System.Web.UI.WebControls.DataList> kontroli jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> właściwości.  
  
 Aby określić szablon dla tego separatora, umieść `<SeparatorTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.DataList> formantu. Następnie Wyświetl listę zawartości szablonu między otwarcia i zamknięcia `<SeparatorTemplate>` tagów.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> właściwość, aby określić zawartość separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sekcja stopka jest wyświetlana w <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli jest wyświetlany w sekcji stopki; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />, ale ta właściwość jest tylko zbadane, kiedy <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> właściwość nie jest <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> właściwości w celu określenia, czy sekcja stopka jest wyświetlana w <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Można sterować wyglądem stopce przez ustawienie <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości. Zawartość sekcji stopki są kontrolowane przez <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> właściwości do wyświetlenia w stopce <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyświetlana jest sekcja nagłówka <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli nagłówek jest wyświetlany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />, ale ta właściwość jest tylko zbadane, kiedy <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> właściwość nie jest <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> właściwości w celu określenia, czy wyświetlana jest sekcja nagłówka <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Wygląd sekcji nagłówka można kontrolować przez ustawienie <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości. Zawartość sekcji nagłówka są kontrolowane przez <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> właściwości do wyświetlenia w sekcji nagłówka <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Jeden z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości wyliczenia.</param>
        <param name="repeatIndex">Indeks elementu w formancie listy.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> reprezentujący rodzaj typu określony element pod określonym indeksem w formancie listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> padania wystąpienia <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">Typ elementu.</param>
        <param name="repeatIndex">Indeks elementu.</param>
        <param name="repeatInfo">Informacje używane do renderowania elementu.</param>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt ma być używany do renderowania elementu.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.DataList> wystąpienia jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera znacznik HTML, który jest używany do renderowania <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>Zwraca <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> tagu if <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> ustawiono <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />; w przeciwnym razie zwraca <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> tagu. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.TagKey%2A> właściwości w celu określenia <xref:System.Web.UI.HtmlTextWriterTag> wartości, z którym skojarzony jest <xref:System.Web.UI.WebControls.DataList> formantu. <xref:System.Web.UI.WebControls.DataList.TagKey%2A> Właściwość jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany stanu widoku <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolować, mogą być przechowywane w formancie <see cref="P:System.Web.UI.Control.ViewState" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> Metoda zostanie przesłonięta w celu oznaczenia punkt początkowy, od którego należy zacząć śledzenia i zapisywanie zmian do formantu jako część stan widoku formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see langword="Update" /> przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Zdarzenie jest zgłaszane, gdy `Update` przycisk dla element zostanie kliknięty.  
  
 Typowy obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzeń aktualizacji danych, zestawy <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości `-1` (Aby usunąć zaznaczenie elementu) i następnie rebinds dane do <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Formanty walidacji służy do sprawdzenia danych wejściowych użytkownika przed wyświetleniem wejściowego tekstu w formancie. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzeń. Umożliwia zaktualizowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> formantu przy użyciu nowych wartości wprowadzonej przez użytkownika podczas `Update` przycisk zostanie kliknięty.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see langword="Update" /> nazwę polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> pola do reprezentowania `Update` nazwę polecenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>