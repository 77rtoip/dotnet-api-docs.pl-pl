<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ebda8834ad5359b765b4f24d77af5cbcb1db065" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401360" /></Metadata><TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kontrolka listy powiązanej z danymi, która wyświetla elementy przy użyciu szablonów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Szablony](#templates)  
  
-   [Dostosowywanie wyglądu formantu DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Wyświetl kierunek i układ](#display_direction_and_layout)  
  
-   [Zabezpieczenia](#security)  
  
-   [Składnia deklaracyjne](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj kontrolki, <xref:System.Web.UI.WebControls.DataList> aby wyświetlić listę powiązaną z danymi zdefiniowanymi na szablonie. <xref:System.Web.UI.WebControls.DataList> Kontrolka obsługuje wybieranie i edycję.  
  
<a name="templates"></a>   
## <a name="templates"></a>Szablony  
 Zawartość <xref:System.Web.UI.WebControls.DataList> formantu można manipulować przy użyciu szablonów. Poniższa tabela zawiera listę obsługiwanych szablonów.  
  
|Nazwa szablonu|Opis|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Jeśli jest <xref:System.Web.UI.WebControls.DataList>zdefiniowany, zapewnia zawartość i układ elementów naprzemiennych w. Jeśli nie jest zdefiniowany `ItemTemplate` , jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Jeśli jest zdefiniowany, zapewnia zawartość i układ dla elementu, który jest aktualnie edytowany w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany `ItemTemplate` , jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Jeśli jest zdefiniowany, zapewnia zawartość i układ sekcji stopki w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, Sekcja stopki nie zostanie wyświetlona.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Jeśli jest zdefiniowany, udostępnia zawartość i układ sekcji <xref:System.Web.UI.WebControls.DataList>nagłówka. Jeśli nie jest zdefiniowany, Sekcja nagłówka nie zostanie wyświetlona.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Wymagany szablon, który udostępnia zawartość i układ elementów w <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Jeśli jest zdefiniowany, zapewnia zawartość i układ aktualnie wybranego elementu w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> , jest używany.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Jeśli jest zdefiniowany, zapewnia zawartość i układ separatora między elementami w <xref:System.Web.UI.WebControls.DataList>. Jeśli nie jest zdefiniowany, separator nie zostanie wyświetlony.|  
  
 Co najmniej minimalny, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> należy zdefiniować, aby wyświetlić elementy <xref:System.Web.UI.WebControls.DataList> w kontrolce. Dodatkowe szablony mogą służyć do zapewnienia niestandardowego wyglądu <xref:System.Web.UI.WebControls.DataList> kontrolki.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Dostosowywanie wyglądu formantu DataList  
 Wygląd <xref:System.Web.UI.WebControls.DataList> formantu może być dostosowany przez ustawienie właściwości stylu dla różnych części formantu. W poniższej tabeli wymieniono różne właściwości stylu.  
  
|Style — właściwość|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Określa styl elementów naprzemiennych w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Określa styl elementu edytowanego w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Określa styl stopki w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Określa styl nagłówka w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Określa styl elementów w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Określa styl zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Określa styl separatora między elementami w <xref:System.Web.UI.WebControls.DataList> kontrolce.|  
  
 Można także pokazać lub ukryć różne części formantu. Poniższa tabela zawiera listę właściwości, które kontrolują, które części są wyświetlane lub ukryte.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Pokazuje lub ukrywa sekcję <xref:System.Web.UI.WebControls.DataList> stopki formantu.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Pokazuje lub ukrywa sekcję <xref:System.Web.UI.WebControls.DataList> nagłówka kontrolki.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Wyświetl kierunek i układ  
 Kierunek <xref:System.Web.UI.WebControls.DataList> wyświetlania kontrolki może być pionowy lub poziomy. <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Ustaw właściwość, aby określić kierunek wyświetlania.  
  
 Układ <xref:System.Web.UI.WebControls.DataList> formantu jest kontrolowany <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> przy użyciu właściwości. Ustawienie tej właściwości na `RepeatLayout.Table` będzie <xref:System.Web.UI.WebControls.DataList> wyświetlać w formacie tabeli, podczas gdy `RepeatLayout.Flow` jest <xref:System.Web.UI.WebControls.DataList> wyświetlana bez struktury tabeli.  
  
<a name="security"></a>   
## <a name="security"></a>Zabezpieczenia  
 `DataList` Kontrolka może zawierać kontrolki, które umożliwiają użytkownikom wprowadzanie informacji.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika.  
  
 Aby uzyskać więcej informacji na temat zabezpieczeń, zobacz Zabezpieczanie [ [standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania <xref:System.Web.UI.WebControls.DataList> kontrolki do wyświetlania listy elementów ze źródła danych.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Sprawdzanie poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.DataList" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.DataList> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.DataList> klasy.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementów naprzemiennych w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Obiekt, który reprezentuje właściwości stylu dla elementów naprzemiennych <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> , aby podać niestandardowy styl dla elementów naprzemiennych <xref:System.Web.UI.WebControls.DataList> w kontrolce. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Właściwości stylu elementu w <xref:System.Web.UI.WebControls.DataList> formancie są dziedziczone z jednej właściwości stylu elementu do innej za pośrednictwem hierarchii. Właściwości stylu elementu ustawione na niższych wartości w hierarchii są dziedziczone przez właściwości stylu elementu wyższe w hierarchii. Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie właściwości stylu elementu <xref:System.Web.UI.WebControls.DataList> w kontrolce również będą mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego elementu stylu. Można zastąpić ustawienia stylu dziedziczonego dla właściwości stylu elementu, która jest wyższa w hierarchii, ustawiając jej właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> we właściwości. W poniższej tabeli wymieniono kolejność hierarchii od najwyższego do najniższego.  
  
|Pierwszeństwo|Style — właściwość|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić styl niestandardowy dla elementów naprzemiennych, umieść `<AlternatingItemStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<AlternatingItemStyle>` .  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> aby określić inny kolor tła dla elementów naprzemiennych <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla elementów naprzemiennych w <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Obiekt, który zawiera szablon dla elementów naprzemiennych <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> , aby kontrolować zawartość przemiennych elementów <xref:System.Web.UI.WebControls.DataList> w kontrolce. Wygląd elementów przemiennych jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwość.  
  
 Aby określić szablon dla elementów zmiennych, umieść `<AlternatingItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<AlternatingItemTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> aby kontrolować zawartość elementów przemiennych <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see langword="Cancel" /> kliknięciu przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, `Cancel` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.CancelCommand>  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataList.CancelCommand> dla zdarzenia <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataList> następnie ponownie wiąże dane z kontrolką.  
  
> [!CAUTION]
>  Tekst nie jest zakodowany w formacie HTML, zanim zostanie <xref:System.Web.UI.WebControls.DataList> wyświetlony w kontrolce. Dzięki temu można osadzić skrypt w tagach HTML w tekście. Jeśli wartości kontrolki pochodzą z danych wejściowych użytkownika, należy sprawdzić poprawność wartości, aby zmniejszyć liczbę luk w zabezpieczeniach.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzenia. Anuluje wszelkie zmiany wprowadzone do elementu w <xref:System.Web.UI.WebControls.DataList> kontrolce `Cancel` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę <see langword="Cancel" /> polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby reprezentować nazwę `Cancel` polecenia. <xref:System.Web.UI.WebControls.DataList.CancelCommandName>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource"><see langword="true" />Aby użyć źródła danych formantu; <see langword="false" /> , aby wskazać, że formant jest ponownie tworzony z stanu widoku i nie powinien być powiązany z danymi.</param>
        <summary>Tworzy hierarchię formantów, która jest używana do renderowania formantu listy danych, z określonym źródłem danych lub bez niego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez kontrolowanie deweloperów podczas wyprowadzania niestandardowej implementacji <xref:System.Web.UI.WebControls.DataList> z formantu. <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>  
  
 Metoda używa metod<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> i do tworzenia<xref:System.Web.UI.WebControls.DataListItem> kontrolek, które reprezentują nagłówek, stopkę, separator i elementy powiązane z danymi zawarte na liście danych. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Możesz uzyskać dostęp do elementów powiązanych z danymi dla listy danych za pomocą <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Za pomocą <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji można uzyskać dostęp do wszystkich typów elementów, w tym nagłówka, stopki i elementów separatora.  
  
 Zastąp <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> metodę, aby dostosować <xref:System.Web.UI.WebControls.DataListItem> sposób <xref:System.Web.UI.WebControls.DataList> tworzenia lub dodawania formantów do kontrolki. Zastąp <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metodę, aby dostosować szablony <xref:System.Web.UI.WebControls.DataListItem> dla kontrolki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy obiekt stylu domyślnego, który jest używany wewnętrznie przez <see cref="T:System.Web.UI.WebControls.DataList" /> formant do implementowania wszystkich właściwości związanych z stylem.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.TableStyle" /> , który zawiera właściwości domyślne stylu formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez kontrolowanie deweloperów podczas wyprowadzania niestandardowej implementacji <xref:System.Web.UI.WebControls.DataList> z formantu. <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> jak zastąpić metodę w niestandardowej kontrolce serwera, tak aby zawsze wyświetlała poziome linie siatki bez odstępów między komórkami <xref:System.Web.UI.WebControls.DataList> w kontrolce.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Określona lokalizacja w obrębie, <see cref="T:System.Web.UI.WebControls.DataList" /> aby umieścić utworzony element.</param>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> Reprezentujący określony typ elementu, który ma zostać utworzony.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataListItem" /> Tworzy obiekt.</summary>
        <returns>Utworzono nową <see cref="T:System.Web.UI.WebControls.DataListItem" /> z określonym typem elementu listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez deweloperów kontrolujących w tworzeniu niestandardowej implementacji <xref:System.Web.UI.WebControls.DataList> formantu. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Metoda jest funkcjonalnie równoważna <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> wywołaniu konstruktora dla elementu <xref:System.Web.UI.WebControls.DataListItem>. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> <xref:System.Web.UI.WebControls.DataListItem> <xref:System.Web.UI.WebControls.DataList>Właściwości i są<xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> inicjowane dla nowego przy użyciu określonych wartości, ale element nie został wstawiony do. <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>  
  
 Metoda używa metod<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> i do tworzenia<xref:System.Web.UI.WebControls.DataListItem> kontrolek, które reprezentują nagłówek, stopkę, separator i elementy powiązane z danymi zawarte na liście danych. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Możesz uzyskać dostęp do elementów powiązanych z danymi dla listy danych za pomocą <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Za pomocą <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji można uzyskać dostęp do wszystkich typów elementów, w tym nagłówka, stopki i elementów separatora.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp tę metodę, aby utworzyć własny <see cref="T:System.Web.UI.WebControls.DataListItem" /> typ pochodny lub ustawić dodatkowe właściwości elementu członkowskiego <see cref="T:System.Web.UI.WebControls.DataListItem" /> podczas tworzenia.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see langword="Delete" /> kliknięciu przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, `Delete` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.DeleteCommand>  
  
 Typowy program obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzenia usuwa wybrany element ze źródła danych, a następnie ponownie wiąże dane <xref:System.Web.UI.WebControls.DataList> z kontrolką.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzenia. Usuwa wybrany element w <xref:System.Web.UI.WebControls.DataList> kontrolce, `Delete` gdy przycisk zostanie kliknięty.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę <see langword="Delete" /> polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby reprezentować nazwę `Delete` polecenia. <xref:System.Web.UI.WebControls.DataList.DeleteCommandName>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see langword="Edit" /> kliknięciu przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, `Edit` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.EditCommand>  
  
 Typowy program obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzenia <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na wybrany wiersz, a następnie ponownie wiąże dane z <xref:System.Web.UI.WebControls.DataList> kontrolką.  
  
> [!CAUTION]
>  Tekst nie jest zakodowany w formacie HTML, zanim zostanie <xref:System.Web.UI.WebControls.DataList> wyświetlony w kontrolce. Dzięki temu można osadzić skrypt w tagach HTML w tekście. Jeśli wartości kontrolki pochodzą z danych wejściowych użytkownika, należy sprawdzić poprawność wartości, aby zmniejszyć liczbę luk w zabezpieczeniach.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzenia. Umożliwia edytowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> kontrolce `Edit` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę <see langword="Edit" /> polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby reprezentować nazwę `Edit` polecenia. <xref:System.Web.UI.WebControls.DataList.EditCommandName>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer indeksu wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce do edycji.</summary>
        <value>Numer indeksu wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce do edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Użyj właściwości, aby programowo określić element do edycji. Można także użyć tej właściwości, aby określić indeks elementu wybranego do edycji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Właściwość ma wartość zero.  
  
 Aby usunąć zaznaczenie elementu, ustaw <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwość na. `-1`  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Właściwość jest przechowywana w stanie kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> właściwości, aby określić element wybrany przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementu wybranego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Obiekt, który zawiera właściwości stylu dla elementu wybranego do edycji <see cref="T:System.Web.UI.WebControls.DataList" /> w formancie. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> , aby podać niestandardowy styl dla elementu wybranego do edycji <xref:System.Web.UI.WebControls.DataList> w formancie. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Właściwości stylu elementu w <xref:System.Web.UI.WebControls.DataList> formancie są dziedziczone z jednej właściwości stylu elementu do innej za pośrednictwem hierarchii. Właściwości stylu elementu ustawione na niższych wartości w hierarchii są dziedziczone przez właściwości stylu elementu wyższe w hierarchii. Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie właściwości stylu elementu <xref:System.Web.UI.WebControls.DataList> w kontrolce również będą mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego elementu stylu. Można zastąpić ustawienia stylu dziedziczonego dla właściwości stylu elementu, która jest wyższa w hierarchii, ustawiając jej właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> we właściwości. W poniższej tabeli wymieniono kolejność hierarchii od najwyższego do najniższego.  
  
|Pierwszeństwo|Style — właściwość|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić styl niestandardowy dla elementu wybranego do edycji, umieść `<EditItemStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<EditItemStyle>` .  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> jak użyć właściwości, aby określić inny wygląd dla elementu wybranego przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla elementu wybranego do edycji w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <value>Obiekt, który zawiera szablon elementu wybranego do edycji <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować zawartość elementu wybranego do edycji <xref:System.Web.UI.WebControls.DataList> w formancie. <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> Wygląd elementu wybranego do edycji jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> właściwość.  
  
 Aby określić szablon dla elementu wybranego do edycji, umieść `<EditItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<EditItemTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> właściwości, aby kontrolować zawartość elementu wybranego przez użytkownika do edycji.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiersze <see cref="T:System.Web.UI.WebControls.Table" /> kontrolki zdefiniowane w każdym szablonie <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolki są wyodrębniane i wyświetlane.</summary>
        <value><see langword="true" />Jeśli wiersze <see cref="T:System.Web.UI.WebControls.Table" /> kontrolki zdefiniowane w każdym szablonie <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolki są wyodrębniane i wyświetlane; w przeciwnym razie, <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość <xref:System.Web.UI.WebControls.DataList> kontrolki jest określana za pomocą szablonów. Zwykle można wyświetlić listę kontrolek, które mają być wyświetlane w szablonach. Możesz również umieścić <xref:System.Web.UI.WebControls.Table> formant w szablonie i wyświetlić wiersze tabeli.  
  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> , aby określić, czy wiersze <xref:System.Web.UI.WebControls.Table> kontrolki zdefiniowanej <xref:System.Web.UI.WebControls.DataList> w każdym szablonie formantu są wyodrębniane i wyświetlane. Wszystkie wiersze wyodrębnione z szablonów <xref:System.Web.UI.WebControls.DataList> kontrolki są wyświetlane w pojedynczej tabeli. Pozwala to na utworzenie pojedynczej tabeli z innych mniejszych tabel i nadal zachowanie funkcji <xref:System.Web.UI.WebControls.DataList> formantu.  
  
> [!NOTE]
>  Gdy ta właściwość jest ustawiona na `true`, należy podać poprawnie sformułowaną <xref:System.Web.UI.WebControls.Table> kontrolkę dla każdego szablonu, który <xref:System.Web.UI.WebControls.DataList> ma zostać uwzględniony w formancie. Zostaną wyświetlone tylko wiersze tabel. Cała inna zawartość w szablonie zostanie zignorowana. Aby ta funkcja działała prawidłowo, należy użyć <xref:System.Web.UI.WebControls.Table> kontrolki. <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> Kontrolka nie jest zgodna z tą właściwością.  
  
 Gdy tworzysz komórkę dla <xref:System.Web.UI.WebControls.Table> kontrolki w szablonie, możesz <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> użyć właściwości <xref:System.Web.UI.WebControls.TableCell> obiektu, aby kontrolować liczbę kolumn rozciągających się na komórki. Możesz również użyć <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> właściwości, aby kontrolować liczbę wierszy, które obejmuje komórka.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> `true` <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Właściwości,i<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> nie wpływają na wygląd kontrolki,gdytawłaściwośćjestustawionana.<xref:System.Web.UI.WebControls.DataList>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> właściwości do wyodrębniania i wyświetlania <xref:System.Web.UI.WebControls.Table> wierszy formantów zdefiniowanych <xref:System.Web.UI.WebControls.DataList> w szablonach formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> stopki formantu.</summary>
        <value>Obiekt, który zawiera właściwości stylu sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> stopki formantu. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby zapewnić niestandardowy styl sekcji <xref:System.Web.UI.WebControls.DataList> stopki formantu. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Właściwość kontrolki dziedziczy ustawienia <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> stylu właściwości. <xref:System.Web.UI.WebControls.DataList> <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> , właściwość będzie również mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego stylu. Można zastąpić ustawienia stylu dziedziczone przez ustawienie <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> we właściwości.  
  
 Aby określić styl niestandardowy sekcji stopki, umieść `<FooterStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<FooterStyle>` .  
  
> [!NOTE]
>  Właściwość musi mieć ustawioną wartość `true` , aby ta właściwość była widoczna. <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> aby określić niestandardowy kolor tła dla sekcji <xref:System.Web.UI.WebControls.DataList> stopki formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> stopki formantu.</summary>
        <value>Obiekt, który zawiera szablon sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> stopki formantu. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> , aby kontrolować zawartość sekcji stopka. Wygląd sekcji stopki jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwość.  
  
> [!NOTE]
>  Właściwość musi mieć ustawioną wartość `true` , aby ta właściwość była widoczna. <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>  
  
 Właściwość kontrolki dziedziczy ustawienia <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> stylu właściwości. <xref:System.Web.UI.WebControls.DataList> <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> właściwości <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> , właściwość będzie również mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego stylu. Można zastąpić ustawienia stylu dziedziczone przez ustawienie <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> we właściwości.  
  
 Aby określić szablon dla sekcji stopka, umieść `<FooterTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<FooterTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> aby kontrolować zawartość sekcji <xref:System.Web.UI.WebControls.DataList> stopki formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii siatki dla <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolki, <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> gdy właściwość jest ustawiona na <see langword="RepeatLayout.Table" />.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.GridLines" /> wartości wyliczenia. Wartość domyślna to <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić styl linii siatki <xref:System.Web.UI.WebControls.DataList> dla kontrolki. <xref:System.Web.UI.WebControls.DataList.GridLines%2A> Poniższa tabela zawiera listę możliwych stylów.  
  
|Styl|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Brak linii siatki.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Wyświetla poziome linie siatki.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Wyświetla linię siatki pionowej.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Wyświetla poziomy i pionową linię siatki.|  
  
> [!NOTE]
>  Ta właściwość ma zastosowanie tylko wtedy <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> , gdy właściwość jest `RepeatLayout.Table`ustawiona na.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.DataList.GridLines%2A> właściwości do wyświetlania pionowych i poziomych linii <xref:System.Web.UI.WebControls.DataList> siatki formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> nagłówka kontrolki.</summary>
        <value>Obiekt, który zawiera właściwości stylu sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> nagłówka kontrolki. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby zapewnić styl niestandardowy dla nagłówka <xref:System.Web.UI.WebControls.DataList> kontrolki. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby określić styl niestandardowy sekcji nagłówka, umieść `<HeaderStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<HeaderStyle>` .  
  
> [!NOTE]
>  Właściwość musi mieć ustawioną wartość `true` , aby ta właściwość była widoczna. <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> aby określić niestandardowy kolor tła dla sekcji <xref:System.Web.UI.WebControls.DataList> nagłówka kontrolki.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> nagłówka kontrolki.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera szablon sekcji <see cref="T:System.Web.UI.WebControls.DataList" /> nagłówka kontrolki. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> , aby kontrolować zawartość sekcji nagłówka. Wygląd sekcji nagłówka jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwość.  
  
> [!NOTE]
>  Właściwość musi mieć ustawioną wartość `true` , aby ta właściwość była widoczna. <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>  
  
 Aby określić szablon sekcji nagłówka, umieść `<HeaderTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<HeaderTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> aby kontrolować zawartość sekcji <xref:System.Web.UI.WebControls.DataList> nagłówka kontrolki.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Web.UI.WebControls.DataListItem" /> Do zainicjowania.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataListItem" /> Inicjuje obiekt na podstawie określonych szablonów i stylów dla typu elementu listy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez kontrolowanie deweloperów do <xref:System.Web.UI.WebControls.DataList> rozszerania formantu. <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>  
  
 Metoda używa metod<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> i do tworzenia<xref:System.Web.UI.WebControls.DataListItem> kontrolek, które reprezentują nagłówek, stopkę, separator i elementy powiązane z danymi zawarte na liście danych. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Możesz uzyskać dostęp do elementów powiązanych z danymi dla listy danych za pomocą <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Za pomocą <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> kolekcji można uzyskać dostęp do wszystkich typów elementów, w tym nagłówka, stopki i elementów separatora.  
  
 Zastąp <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> metodę, aby dostosować <xref:System.Web.UI.WebControls.DataListItem> sposób <xref:System.Web.UI.WebControls.DataList> tworzenia lub dodawania formantów do kontrolki. Zastąp <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> metodę, aby dostosować szablony <xref:System.Web.UI.WebControls.DataListItem> dla kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu dowolnego przycisku w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy dowolny przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> w kontrolce i jest często używany, gdy masz kontrolkę przycisku z wartością niestandardową. `CommandName` <xref:System.Web.UI.WebControls.DataList.ItemCommand>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzenia w celu wybrania elementu <xref:System.Web.UI.WebControls.DataList> z formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje na serwerze po utworzeniu elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy element <xref:System.Web.UI.WebControls.DataList> w formancie zostanie utworzony, zarówno podczas błądzenia, jak i w danych czasowych, jest powiązany z kontrolką. <xref:System.Web.UI.WebControls.DataList.ItemCreated>  
  
 Zdarzenie jest często używane do kontrolowania zawartości i wyglądu wiersza <xref:System.Web.UI.WebControls.DataList> w kontrolce. <xref:System.Web.UI.WebControls.DataList.ItemCreated>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzenia w celu wyświetlenia kolejności, w której są tworzone <xref:System.Web.UI.WebControls.DataList> elementy w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element jest powiązany <see cref="T:System.Web.UI.WebControls.DataList" /> z kontrolką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, gdy element jest powiązany <xref:System.Web.UI.WebControls.DataList> z kontrolką. <xref:System.Web.UI.WebControls.DataList.ItemDataBound> To zdarzenie zapewnia ostatnią szansę dostępu do elementu danych przed wyświetleniem go na kliencie. Po podniesieniu tego zdarzenia element danych nie jest już dostępny.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzenia w celu wyświetlenia kolejności, w której elementy <xref:System.Web.UI.WebControls.DataList> w formancie są powiązane z kontrolką.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.DataListItem" /> obiektów reprezentujących poszczególne elementy w formancie.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> , który zawiera <see cref="T:System.Web.UI.WebControls.DataListItem" /> kolekcję obiektów reprezentujących poszczególne elementy w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj kolekcji, aby programowo sterować elementami <xref:System.Web.UI.WebControls.DataList> w formancie. <xref:System.Web.UI.WebControls.DataList.Items%2A> <xref:System.Web.UI.WebControls.DataList.Items%2A> Kolekcja nie zawiera żadnych metod dodawania lub usuwania elementów do kolekcji. Można jednak kontrolować zawartość elementu, dostarczając procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzenia.  
  
> [!NOTE]
>  Tylko elementy powiązane ze źródłem danych są zawarte w <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji. Nagłówek, stopka i separator nie są uwzględnione w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.DataList.Items%2A> kolekcji do wyświetlania elementów <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Obiekt, który zawiera właściwości stylu dla elementów <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby podać niestandardowy styl dla elementów <xref:System.Web.UI.WebControls.DataList> formantu. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Właściwości stylu elementu w <xref:System.Web.UI.WebControls.DataList> formancie są dziedziczone z jednej właściwości stylu elementu do innej za pośrednictwem hierarchii. Właściwości stylu elementu ustawione na niższych wartości w hierarchii są dziedziczone przez właściwości stylu elementu wyższe w hierarchii. Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie właściwości stylu elementu <xref:System.Web.UI.WebControls.DataList> w kontrolce również będą mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego elementu stylu. Można zastąpić ustawienia stylu dziedziczonego dla właściwości stylu elementu, która jest wyższa w hierarchii, ustawiając jej właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> we właściwości. W poniższej tabeli wymieniono kolejność hierarchii od najwyższego do najniższego.  
  
|Pierwszeństwo|Style — właściwość|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić styl niestandardowy dla elementów <xref:System.Web.UI.WebControls.DataList> kontrolki, `<ItemStyle>` Umieść znaczniki między tagiem otwierającym <xref:System.Web.UI.WebControls.DataList> i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<ItemStyle>` .  
  
 Można również użyć <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, aby zapewnić inny wygląd elementów naprzemiennych <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> aby określić inny kolor tła dla elementów <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla elementów w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera szablon dla elementów <see cref="T:System.Web.UI.WebControls.DataList" /> w formancie. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> , aby kontrolować zawartość elementów <xref:System.Web.UI.WebControls.DataList> w formancie. Wygląd elementów w <xref:System.Web.UI.WebControls.DataList> kontrolce jest kontrolowany <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> przez właściwość.  
  
 Aby określić szablon dla elementów <xref:System.Web.UI.WebControls.DataList> kontrolki, `<ItemTemplate>` Umieść znaczniki między tagiem otwierającym <xref:System.Web.UI.WebControls.DataList> i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<ItemTemplate>` .  
  
 Opcjonalnie można użyć <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> właściwości, aby zapewnić inny wygląd elementów naprzemiennych <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> aby kontrolować zawartość elementów <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt, który reprezentuje stan <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.DataList" /> poprzednio zapisanego widoku formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie.  Jednak kontrolowanie deweloperów może zastąpić tę metodę, aby określić, jak niestandardowy formant serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Metoda przywraca informacje o stanie widoku <xref:System.Web.UI.WebControls.DataList> dla formantu z poprzedniego żądania strony <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> , które zostało zapisane przez metodę. <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Stan formantu a Wyświetl przykład stanu</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Określa, czy zdarzenie dla formantu serwera jest przenoszone do hierarchii kontroli serwera interfejsu użytkownika strony.</summary>
        <returns><see langword="true" />Jeśli zdarzenie zostało anulowane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzenia.  
  
 Zdarzenie jest wywoływane, `Cancel` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.CancelCommand>  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataList.CancelCommand> dla zdarzenia <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataList> następnie ponownie wiąże dane z kontrolką.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.CancelCommand> zdarzenia. Anuluje wszelkie zmiany wprowadzone do elementu w <xref:System.Web.UI.WebControls.DataList> kontrolce `Cancel` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">Zabezpieczanie standardowych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Instrukcje: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie kodowania HTML do ciągów</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">Wprowadzenie do sprawdzania poprawności danych wejściowych użytkownika na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzenia.  
  
 Zdarzenie jest wywoływane, `Delete` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.DeleteCommand>  
  
 Typowy program obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzenia usuwa wybrany element ze źródła danych, a następnie ponownie wiąże dane <xref:System.Web.UI.WebControls.DataList> z kontrolką.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.DeleteCommand> zdarzenia. Usuwa wybrany element w <xref:System.Web.UI.WebControls.DataList> kontrolce, `Delete` gdy przycisk zostanie kliknięty.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.EditCommand" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzenia.  
  
 Zdarzenie jest wywoływane, `Edit` gdy przycisk zostanie kliknięty <xref:System.Web.UI.WebControls.DataList> dla elementu w kontrolce. <xref:System.Web.UI.WebControls.DataList.EditCommand>  
  
 Typowy program obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzenia <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na wybrany wiersz, a następnie ponownie wiąże dane z <xref:System.Web.UI.WebControls.DataList> kontrolką.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.EditCommand> zdarzenia. Umożliwia edytowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> kontrolce `Edit` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> Podnosi zdarzenie <see cref="T:System.Web.UI.WebControls.DataList" /> dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.OnInit%2A> Metoda powiadamia<xref:System.Web.UI.WebControls.DataList> formant w celu wykonania wszelkich kroków inicjalizacji wymaganych do utworzenia i skonfigurowania wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzenia.  
  
 `CommandName` <xref:System.Web.UI.WebControls.DataList> <xref:System.Web.UI.WebControls.DataList> `Add`Zdarzenie jest zgłaszane, gdy dowolny przycisk zostanie kliknięty w kontrolce i jest często używany, gdy masz kontrolkę przycisku z wartością niestandardową, taką jak, w kontrolce. <xref:System.Web.UI.WebControls.DataList.ItemCommand>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzenia w celu wybrania elementu <xref:System.Web.UI.WebControls.DataList> z formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzenia.  
  
 Zdarzenie jest zgłaszane, gdy element <xref:System.Web.UI.WebControls.DataList> w formancie zostanie utworzony, zarówno podczas błądzenia, jak i w danych czasowych, jest powiązany z kontrolką. <xref:System.Web.UI.WebControls.DataList.ItemCreated>  
  
 Zdarzenie jest często używane do kontrolowania zawartości i wyglądu wiersza <xref:System.Web.UI.WebControls.DataList> w kontrolce. <xref:System.Web.UI.WebControls.DataList.ItemCreated>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemCreated> zdarzenia w celu wyświetlenia kolejności, w której są tworzone <xref:System.Web.UI.WebControls.DataList> elementy w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzenia.  
  
 Zdarzenie jest wywoływane, gdy element jest powiązany <xref:System.Web.UI.WebControls.DataList> z kontrolką. <xref:System.Web.UI.WebControls.DataList.ItemDataBound> To zdarzenie zapewnia ostatnią szansę dostępu do elementu danych przed wyświetleniem go na kliencie. Po podniesieniu tego zdarzenia element danych nie jest już dostępny.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.ItemDataBound> zdarzenia w celu wyświetlenia kolejności, w której elementy <xref:System.Web.UI.WebControls.DataList> w formancie są powiązane z kontrolką.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> , aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzenia.  
  
 Zdarzenie jest wywoływane, `Update` gdy zostanie kliknięty przycisk dla elementu. <xref:System.Web.UI.WebControls.DataList.UpdateCommand>  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataList.UpdateCommand> dla zdarzenia aktualizuje dane, <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataList> następnie ponownie wiąże dane z kontrolką.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [jak: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzenia. Umożliwia zaktualizowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> formancie przy użyciu nowych wartości wprowadzonych przez użytkownika `Update` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przygotowuje hierarchię formantów do renderowania w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez kontrolowanie deweloperów podczas wyprowadzania kontrolki niestandardowej <xref:System.Web.UI.WebControls.DataList> z formantu. <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A>  
  
 Przygotowuje hierarchię formantów i ustawia style dla zawartych <xref:System.Web.UI.WebControls.DataListItem> kontrolek przed renderowaniem formantów podrzędnych. <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp <see cref="T:System.Web.UI.WebControls.DataList" /> metodę, aby dostosować style dla kontrolek zawartych w elemencie przed ich renderowaniem. <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /></para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Reprezentuje strumień wyjściowy, aby renderować zawartość HTML na kliencie. <see cref="T:System.Web.UI.HtmlTextWriter" /></param>
        <summary>Renderuje elementy listy w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez deweloperów formantów podczas wyprowadzania kontrolki niestandardowej <xref:System.Web.UI.WebControls.DataList> z formantu. <xref:System.Web.UI.WebControls.DataList.RenderContents%2A>  
  
 Metoda renderuje wewnętrzną zawartość <xref:System.Web.UI.WebControls.DataList> kontrolki, łącznie z zawartymi <xref:System.Web.UI.WebControls.DataListItem> kontrolkami. <xref:System.Web.UI.WebControls.DataList.RenderContents%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> jak zastąpić metodę w niestandardowym formancie serwera, aby część tekstu poprzedzał <xref:System.Web.UI.WebControls.DataList> obiekt.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kolumn do wyświetlenia w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <value>Liczba kolumn do wyświetlenia w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie. Wartość domyślna to <see langword="0" />, co oznacza, że elementy <see cref="T:System.Web.UI.WebControls.DataList" /> w formancie są wyświetlane w pojedynczym wierszu lub kolumnie, na podstawie wartości <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby określić liczbę kolumn, które wyświetlają elementy w <xref:System.Web.UI.WebControls.DataList> formancie. Na przykład, jeśli ustawisz tę właściwość na `5` <xref:System.Web.UI.WebControls.DataList> , formant Wyświetla jego elementy w pięciu kolumnach.  
  
> [!NOTE]
>  Jeśli ta właściwość jest ustawiona na `0` <xref:System.Web.UI.WebControls.DataList> , formant Wyświetla jego elementy w pojedynczym wierszu lub kolumnie, na podstawie wartości <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> właściwości. Jeśli właściwość jest ustawiona na `RepeatDirection.Horizontal`, elementy są wyświetlane w pojedynczym wierszu. <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Jeśli właściwość jest ustawiona na `RepeatDirection.Vertical`, elementy są wyświetlane w jednej kolumnie. <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> aby określić liczbę kolumn do wyświetlenia <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona liczba kolumn jest wartością ujemną.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy kontrolka jest <see cref="T:System.Web.UI.WebControls.DataList" /> wyświetlana pionowo czy poziomo.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> wartości. Wartość domyślna to <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> , aby określić kierunek <xref:System.Web.UI.WebControls.DataList> wyświetlania formantu.  
  
> [!NOTE]
>  Liczba wyświetlanych kolumn jest zawsze określana przez <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwość.  
  
 Jeśli ta właściwość jest ustawiona na `RepeatDirection.Vertical`, elementy na liście są wyświetlane w kolumnach załadowanych z góry do dołu, a następnie od lewej do prawej, do momentu renderowania wszystkich elementów. Na przykład, jeśli <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwość jest ustawiona na `3` <xref:System.Web.UI.WebControls.DataList> , elementy w kontrolce są wyświetlane w trzech kolumnach, jak w poniższej tabeli.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Jeśli ta właściwość jest ustawiona na `RepeatDirection.Horizontal`, elementy na liście są wyświetlane w wierszach załadowanych od lewej do prawej, a następnie od góry do dołu, aż wszystkie elementy zostaną renderowane. Na przykład, jeśli <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> właściwość jest ustawiona na `3` <xref:System.Web.UI.WebControls.DataList> , elementy kontrolki są wyświetlane w wierszach trzech elementów, jak w poniższej tabeli.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> aby określić kierunek <xref:System.Web.UI.WebControls.DataList> wyświetlania kontrolki.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jedną z <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy kontrolka jest wyświetlana w układzie tabeli czy przepływu.</summary>
        <value>Wartość określająca, czy kontrolka jest wyświetlana w tabeli czy w układzie przepływu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> , aby określić, czy elementy <xref:System.Web.UI.WebControls.DataList> w formancie są wyświetlane w tabeli. Jedyne <xref:System.Web.UI.WebControls.RepeatLayout> wartości, które są obsługiwane <xref:System.Web.UI.WebControls.DataList> przez formant, <xref:System.Web.UI.WebControls.RepeatLayout.Table> to <xref:System.Web.UI.WebControls.RepeatLayout.Flow>i.  
  
 Jeśli ta właściwość jest ustawiona na `RepeatLayout.Table`, elementy na liście są wyświetlane w tabeli. Jeśli ta właściwość jest ustawiona na `RepeatLayout.Flow`, elementy na liście są wyświetlane bez struktury tabeli.  
  
 Gdy kontrolka jest wyświetlana w tabeli, można <xref:System.Web.UI.WebControls.DataList.GridLines%2A> użyć właściwości, aby określić styl linii siatki. <xref:System.Web.UI.WebControls.DataList>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> właściwości, aby określić styl <xref:System.Web.UI.WebControls.DataList> układu formantu.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość nie jest jedną z obsługiwanych <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany stanu widoku kontroli od momentu, gdy strona została opublikowana z powrotem na serwerze.</summary>
        <returns>Obiekt, który zawiera zmiany <see cref="T:System.Web.UI.WebControls.DataList" /> stanu widoku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Metoda jest używana głównie przez deweloperów kontroli.  
  
 Stan widoku to akumulacja wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane we <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki serwera, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy. Wartość <xref:System.Web.UI.Control.ViewState%2A> właściwości jest następnie utrwalana w obiekcie String po etapie zapisywania stanu w cyklu życia kontrolki serwera. Aby uzyskać więcej informacji, zobacz [ASP.NET cykl życia strony](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Gdy stan widoku jest zapisywany, ten obiekt ciągu jest zwracany do klienta jako zmienna, która jest przechowywana w ukrytym elemencie wejściowym HTML. Podczas tworzenia niestandardowych kontrolek serwera można poprawić wydajność, zastępując <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> metodę i <xref:System.Web.UI.Control.ViewState%2A> modyfikując właściwość dla kontrolki serwer. Aby uzyskać więcej informacji, zobacz [Tworzenie niestandardowych kontrolek serwera ASP.NET](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) i [zarządzanie stanem ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Stan formantu a Wyświetl przykład stanu</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę <see langword="Select" /> polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby reprezentować nazwę `Select` polecenia. <xref:System.Web.UI.WebControls.DataList.SelectCommandName>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Indeks zaznaczonego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby programowo określić wybrany element <xref:System.Web.UI.WebControls.DataList> w kontrolce. <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Można także użyć tej właściwości, aby określić indeks wybranego elementu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Właściwość ma wartość zero.  
  
 Aby usunąć zaznaczenie elementu, ustaw <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> właściwość na. `-1`  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Właściwość jest przechowywana w stanie kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> właściwości, aby określić wybrany element <xref:System.Web.UI.WebControls.DataList> w kontrolce.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza niż <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wybrany element w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Reprezentujący element wybrany <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.DataListItem" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby <xref:System.Web.UI.WebControls.DataListItem> pobrać obiekt, który reprezentuje wybrany element w <xref:System.Web.UI.WebControls.DataList> kontrolce. <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> Tego obiektu można następnie użyć, aby uzyskać dostęp do właściwości wybranego elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> aby wyświetlić zawartość zaznaczonego elementu <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu dla zaznaczonego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>Obiekt, który zawiera właściwości stylu dla zaznaczonego elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia podanie niestandardowego stylu zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> formancie. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Właściwości stylu elementu w <xref:System.Web.UI.WebControls.DataList> formancie są dziedziczone z jednej właściwości stylu elementu do innej za pośrednictwem hierarchii. Właściwości stylu elementu ustawione na niższych wartości w hierarchii są dziedziczone przez właściwości stylu elementu wyższe w hierarchii. Na przykład, jeśli określisz czerwoną czcionkę dla <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> właściwości, wszystkie właściwości stylu elementu <xref:System.Web.UI.WebControls.DataList> w kontrolce również będą mieć czerwoną czcionkę. Pozwala to na zapewnienie typowego wyglądu kontrolki przez ustawienie właściwości pojedynczego elementu stylu. Można zastąpić ustawienia stylu dziedziczonego dla właściwości stylu elementu, która jest wyższa w hierarchii, ustawiając jej właściwości. Na przykład możesz określić niebieską czcionkę dla <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> właściwości, zastępując czerwoną czcionkę określoną <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> we właściwości. W poniższej tabeli wymieniono kolejność hierarchii od najwyższego do najniższego.  
  
|Pierwszeństwo|Style — właściwość|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Aby określić styl niestandardowy dla wybranego elementu, umieść `<SelectedItemStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<SelectedItemStyle>` .  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> aby określić niestandardowy kolor tła dla zaznaczonego elementu <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla wybranego elementu w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera szablon wybranego elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> , aby kontrolować zawartość wybranego elementu. Wygląd wybranego elementu jest kontrolowany przez <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> właściwość.  
  
 Aby określić szablon dla wybranego elementu, umieść `<SelectedItemTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<SelectedItemTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> aby kontrolować zawartość zaznaczonego elementu <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość pola klucza dla wybranego elementu listy danych.</summary>
        <value>Wartość pola klucza dla wybranego elementu listy danych. Wartość domyślna to <see langword="null" />, co oznacza, że żaden element listy danych nie jest aktualnie wybrany.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> Właściwość nie została ustawiona.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości stylu separatora między poszczególnymi elementami w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <value>Obiekt, który zawiera właściwości stylu separatora między poszczególnymi elementami <see cref="T:System.Web.UI.WebControls.DataList" /> w formancie. <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Wartość domyślna to pusty <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> , aby podać niestandardowy styl separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> w formancie. Separator umożliwia umieszczenie elementu z niestandardową zawartością między każdym elementem w <xref:System.Web.UI.WebControls.DataList> kontrolce. Atrybuty wspólnych stylów, które można dostosować, obejmują kolor pierwszego planu, kolor tła, czcionkę i wyrównanie zawartości w komórce. Podawanie innego stylu zwiększa wygląd <xref:System.Web.UI.WebControls.DataList> formantu.  
  
 Aby określić styl niestandardowy separatora, umieść `<SeparatorStyle>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę atrybutów stylu w tagu otwierającym `<SeparatorStyle>` .  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> aby określić niestandardowy kolor tła separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla separatora między elementami <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> , który zawiera szablon separatora między elementami <see cref="T:System.Web.UI.WebControls.DataList" /> w formancie. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> , aby kontrolować zawartość separatora między elementami <xref:System.Web.UI.WebControls.DataList> formantu. Separator umożliwia umieszczenie elementu z niestandardową zawartością między każdym elementem w <xref:System.Web.UI.WebControls.DataList> kontrolce. Wygląd separatora między elementami <xref:System.Web.UI.WebControls.DataList> kontrolki jest kontrolowany <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> przez właściwość.  
  
 Aby określić szablon separatora, umieść `<SeparatorTemplate>` znaczniki między tagiem <xref:System.Web.UI.WebControls.DataList> otwierającym i zamykającym kontrolki. Następnie można wyświetlić listę zawartości szablonu między tagiem otwierającym i zamykającym `<SeparatorTemplate>` .  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> aby kontrolować zawartość separatora między poszczególnymi elementami <xref:System.Web.UI.WebControls.DataList> w formancie.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy w <see cref="T:System.Web.UI.WebControls.DataList" /> kontrolce jest wyświetlana sekcja stopka.</summary>
        <value><see langword="true" />Jeśli zostanie wyświetlona sekcja Stopka; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />, jednak ta właściwość jest sprawdzana tylko wtedy, <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> gdy właściwość nie <see langword="null" />jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić, czy sekcja Stopka ma być wyświetlana <xref:System.Web.UI.WebControls.DataList> w formancie. <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>  
  
 Wygląd sekcji Stopka można kontrolować przez ustawienie <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> właściwości. Zawartość sekcji stopki jest kontrolowana przez <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> właściwości, aby wyświetlić sekcję stopki <xref:System.Web.UI.WebControls.DataList> w kontrolce.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sekcja nagłówka jest wyświetlana w <see cref="T:System.Web.UI.WebControls.DataList" /> formancie.</summary>
        <value><see langword="true" />Jeśli nagłówek jest wyświetlany; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />, jednak ta właściwość jest sprawdzana tylko wtedy, <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> gdy właściwość nie <see langword="null" />jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić, czy sekcja nagłówka ma być wyświetlana <xref:System.Web.UI.WebControls.DataList> w formancie. <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>  
  
 Wygląd sekcji nagłówka można kontrolować przez ustawienie <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> właściwości. Zawartość sekcji nagłówka jest kontrolowana przez <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> właściwości, aby wyświetlić sekcję nagłówka <xref:System.Web.UI.WebControls.DataList> w kontrolce.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Jedna z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości wyliczenia.</param>
        <param name="repeatIndex">Indeks elementu w kontrolce listy.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />Zobacz.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> Reprezentujący styl określonego typu elementu w określonym indeksie kontrolki listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IRepeatInfoUser> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />Zobacz.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IRepeatInfoUser> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />Zobacz.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane na <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfejs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />Zobacz.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IRepeatInfoUser> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">Typ elementu.</param>
        <param name="repeatIndex">Indeks elementu.</param>
        <param name="repeatInfo">Informacje, które są używane do renderowania elementu.</param>
        <param name="writer">Obiekt <see cref="T:System.Web.UI.HtmlTextWriter" /> , który ma być używany do renderowania elementu.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IRepeatInfoUser> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IRepeatInfoUser::RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />Zobacz.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.WebControls.DataList> gdy wystąpienie jest rzutowane <xref:System.Web.UI.WebControls.IRepeatInfoUser> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tag HTML, który jest używany do renderowania <see cref="T:System.Web.UI.WebControls.DataList" /> formantu.</summary>
        <value>Zwraca tag, <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> jeśli jest ustawiona na <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />; w przeciwnym razie zwraca <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> tag. <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> Wartość domyślna to <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby <xref:System.Web.UI.HtmlTextWriterTag> określić wartość <xref:System.Web.UI.WebControls.DataList> , która jest skojarzona z kontrolką. <xref:System.Web.UI.WebControls.DataList.TagKey%2A> <xref:System.Web.UI.WebControls.DataList.TagKey%2A> Właściwość jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany <see cref="T:System.Web.UI.WebControls.DataList" /> stanu widoku w formancie, aby mogły być przechowywane we <see cref="P:System.Web.UI.Control.ViewState" /> właściwości kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> Metoda jest zastępowana, aby oznaczyć punkt początkowy, od którego ma zostać rozpoczęte śledzenie i zapisywanie zmian w formancie jako część stanu widoku formantu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Stan formantu a Wyświetl przykład stanu</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see langword="Update" /> kliknięciu przycisku dla elementu <see cref="T:System.Web.UI.WebControls.DataList" /> w kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, `Update` gdy zostanie kliknięty przycisk dla elementu. <xref:System.Web.UI.WebControls.DataList.UpdateCommand>  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataList.UpdateCommand> dla zdarzenia aktualizuje dane, <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataList> następnie ponownie wiąże dane z kontrolką.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu wejściowego w kontrolce. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń [, zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.WebControls.DataList.UpdateCommand> zdarzenia. Umożliwia zaktualizowanie zaznaczonego elementu w <xref:System.Web.UI.WebControls.DataList> formancie przy użyciu nowych wartości wprowadzonych przez użytkownika `Update` po kliknięciu przycisku.  
  
> [!NOTE]
>  Poniższy przykład kodu używa modelu kodu jednoplikowego i może nie działa poprawnie, jeśli jest kopiowany bezpośrednio do pliku związanego z kodem. Ten przykład kodu musi być skopiowany do pustego pliku tekstowego, który ma rozszerzenie. aspx. Aby uzyskać więcej informacji na temat modelu kodu formularzy sieci Web, zobacz [ASP.NET Web Forms Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">Instrukcje: Korzystanie ze zdarzeń w aplikacjach formularzy internetowych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">Model kodu strony sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę <see langword="Update" /> polecenia. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby reprezentować nazwę `Update` polecenia. <xref:System.Web.UI.WebControls.DataList.UpdateCommandName>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>
