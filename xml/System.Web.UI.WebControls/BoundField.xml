<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e94421910ccc641b86fc005a6eec0e5ef705dfe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401815" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje pole, które jest wyświetlane jako tekst w kontrolce powiązanej z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana przez formanty powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>), aby wyświetlić wartość pola jako tekst. <xref:System.Web.UI.WebControls.BoundField> <xref:System.Web.UI.WebControls.BoundField> Obiekt jest wyświetlany inaczej w zależności od kontrolki powiązanej z danymi, w której jest używany. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolka <xref:System.Web.UI.WebControls.BoundField> wyświetla obiekt jako kolumnę, podczas gdy <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla go jako wiersz.  
  
 Aby określić pole, które ma być wyświetlane <xref:System.Web.UI.WebControls.BoundField> w obiekcie, należy <xref:System.Web.UI.WebControls.BoundField.DataField%2A> ustawić właściwość na nazwę pola. Wartość pola może być zakodowana w formacie HTML przed wyświetleniem przez ustawienie <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwości na. `true` Możesz zastosować niestandardowy ciąg formatowania do wartości pola przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości. Gdy właściwość jest `true`, zakodowana wartość ciągu pola jest używana w niestandardowym ciągu formatu. <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Domyślnie ciąg formatowania jest stosowany do wartości pól tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciąg formatowania do wartości wyświetlanych, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwość na. `true` Jeśli wartość pola jest równa null, można wyświetlić podpis niestandardowy, ustawiając <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwość. Obiekt może również automatycznie przekonwertować puste wartości pól ciągu ("") na wartości null przez <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> ustawienie właściwości na `true`. <xref:System.Web.UI.WebControls.BoundField>  
  
 Można ukryć <xref:System.Web.UI.WebControls.BoundField> obiekt w kontrolce powiązanej z danymi, <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> ustawiając właściwość na `false`. Aby zapobiec modyfikowaniu wartości pola w trybie edycji, należy ustawić <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> właściwość na. `true` W formantach powiązanych z danymi, które obsługują wstawianie rekordów (takich <xref:System.Web.UI.WebControls.DetailsView> jak kontrolka), można <xref:System.Web.UI.WebControls.BoundField> ukryć obiekt przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> właściwości na `false`. Jest to często wykonywane, gdy chcesz ukryć pole klucza wygenerowanego automatycznie w trybie wstawiania.  
  
 Możesz dostosować sekcje <xref:System.Web.UI.WebControls.BoundField> nagłówka i stopki obiektu. Aby wyświetlić podpis w sekcjach nagłówka lub stopki, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> odpowiednio właściwości lub. <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Zamiast wyświetlania tekstu w sekcji nagłówka, można wyświetlić obraz przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Sekcja nagłówka może być ukryta w <xref:System.Web.UI.WebControls.BoundField> obiekcie przez <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> ustawienie właściwości na `false`.  
  
> [!NOTE]
>  Niektóre kontrolki powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> kontrolka) mogą pokazać lub ukryć tylko całą sekcję nagłówka kontrolki. Te kontrolki powiązane z danymi nie obsługują <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości dla pojedynczego pola powiązanego. Aby pokazać lub ukryć całą sekcję nagłówka kontrolki powiązanej z danymi (jeśli jest dostępna), użyj `ShowHeader` właściwości kontrolki.  
  
 Można również dostosować wygląd <xref:System.Web.UI.WebControls.BoundField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono różne właściwości stylu.  
  
|Style — właściwość|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Ustawienia stylu dla formantów <xref:System.Web.UI.WebControls.BoundField> podrzędnego serwera sieci Web obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Ustawienia stylu sekcji <xref:System.Web.UI.WebControls.BoundField> stopki obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Ustawienia stylu sekcji <xref:System.Web.UI.WebControls.BoundField> nagłówka obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Ustawienia stylu dla elementów danych w <xref:System.Web.UI.WebControls.BoundField> obiekcie.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.BoundField> obiektu do wyświetlania wartości pola <xref:System.Web.UI.WebControls.GridView> w kontrolce.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.BoundField> klasy. Ten konstruktor jest często używany podczas dodawania pól do dynamicznie utworzonego formantu powiązanego z danymi.  
  
 Aby dynamicznie dodać <xref:System.Web.UI.WebControls.BoundField> obiekt do kontrolki powiązanej z danymi, Utwórz nowy <xref:System.Web.UI.WebControls.BoundField> obiekt, ustaw jego właściwości, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolki, <xref:System.Web.UI.WebControls.BoundField> Dodaj obiekt do <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dynamicznie dodawać pola do formantu powiązanego z danymi, zdecydowanie zaleca się, aby pola były statycznie deklarowane, a następnie pokazane lub ukryte, zgodnie z potrzebami. Statycznie deklarując wszystkie pola zmniejsza rozmiar stanu widoku dla formantu powiązanego z danymi nadrzędnymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia konstruktora do dynamicznego dodawania <xref:System.Web.UI.WebControls.BoundField> obiektu <xref:System.Web.UI.WebControls.GridView> do kontrolki.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ciąg formatowania określony przez <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> właściwość jest stosowany do wartości pól, gdy formant powiązany z danymi <see cref="T:System.Web.UI.WebControls.BoundField" /> zawierający obiekt jest w trybie edycji.</summary>
        <value><see langword="true" />Aby zastosować ciąg formatowania do wartości pól w trybie edycji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>i <xref:System.Web.UI.WebControls.GridView>) mają różne tryby wyświetlania, które umożliwiają użytkownikowi odczytywanie, edytowanie lub wstawianie rekordów. Domyślnie ciąg formatowania określony przez <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwość jest stosowany do wartości pól tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciąg formatowania do wartości wyświetlanych, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwość na. `true`  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField> Obiekt nie usuwa automatycznie formatowania, gdy pole jest aktualizowane w źródle danych. Jeśli nie chcesz, aby formatowanie było częścią przechowywanej wartości, musisz je usunąć programowo.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwości, aby zastosować ciąg formatowania do wartości pól, <xref:System.Web.UI.WebControls.GridView> gdy kontrolka jest w trybie edycji. Formatowanie jest następnie programowo usuwane przed zaktualizowaniem wartości w źródle danych.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy puste wartości ciągu ("") są automatycznie konwertowane na wartości null, gdy pole danych jest aktualizowane w źródle danych.</summary>
        <value><see langword="true" />Aby automatycznie skonwertować puste wartości ciągu na wartości null; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami użytkownik może wprowadzić pusty ciąg dla wartości pola podczas aktualizowania lub wstawiania rekordów. Użyj właściwości <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> , aby określić, czy puste wartości ciągu mają być automatycznie konwertowane na wartość null, gdy pole danych zostanie zaktualizowane w źródle danych.  
  
> [!NOTE]
>  Domyślnie <xref:System.Web.UI.WebControls.BoundField> obiekt wyświetla wartości null jako puste ciągi. Aby wyświetlić inną wartość, należy ustawić <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwości, aby określić, że wartość pola pustego ciągu ("") powinna być automatycznie konwertowana na wartość null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Aby skopiować właściwości bieżącego <see cref="T:System.Web.UI.WebControls.BoundField" /> do. <see cref="T:System.Web.UI.WebControls.DataControlField" /></param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą używaną <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> przez metodę do kopiowania właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField> obiektu do <xref:System.Web.UI.WebControls.DataControlField> obiektu utworzonego przez metodę. <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy pusty <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekt.</summary>
        <returns>Puste <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą używaną <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> przez metodę do utworzenia pustego <xref:System.Web.UI.WebControls.BoundField> obiektu, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField> obiektu do. <xref:System.Web.UI.WebControls.BoundField.CreateField%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola danych, które ma być powiązane z <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektem.</summary>
        <value>Nazwa pola danych, z którym <see cref="T:System.Web.UI.WebControls.BoundField" />ma zostać utworzone powiązanie. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundField.DataField%2A> , aby określić nazwę pola danych, które ma być powiązane <xref:System.Web.UI.WebControls.BoundField> z obiektem. Wartości określonego pola są wyświetlane w <xref:System.Web.UI.WebControls.BoundField> obiekcie jako tekst. Opcjonalnie można sformatować wyświetlany tekst przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości.  
  
> [!NOTE]
>  Jeśli wartość pola jest równa null, domyślnie dla wartości jest wyświetlany pusty ciąg (""). Aby określić alternatywny podpis, ustaw <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.BoundField.DataField%2A> aby określić pole, które ma być wyświetlane <xref:System.Web.UI.WebControls.BoundField> w kolumnie <xref:System.Web.UI.WebControls.GridView> pola formantu.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg określający format wyświetlania wartości pola.</summary>
        <value>Ciąg formatowania, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (""), który wskazuje, że żadne specjalne formatowanie nie jest stosowane do wartości pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardowy format wyświetlania dla wartości, które są wyświetlane <xref:System.Web.UI.WebControls.BoundField> w obiekcie. <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Jeśli właściwość nie jest ustawiona, wartość pola jest wyświetlana bez żadnego formatowania specjalnego.  
  
> [!NOTE]
>  W wersjach programu ASP.NET starszej niż 3,5 należy ustawić <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwość na `false` , aby można było formatować pola, które nie są typami danych String. W przeciwnym razie wartość pola jest konwertowana na ciąg przez domyślną metodę konwersji przed zastosowaniem ciągu formatu, który jest przechowywany we <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości.  
  
 Domyślnie ciąg formatowania jest stosowany do wartości pola tylko wtedy, gdy formant powiązany z danymi zawierający <xref:System.Web.UI.WebControls.BoundField> obiekt jest w trybie tylko do odczytu. Aby zastosować ciąg formatowania do wartości pól w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwość na. `true`  
  
 Ciąg formatowania może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy dla wartości pola. Na przykład w ciągu `Item Value: {0}`formatowania wartość pola jest zastępowana {0} symbolem zastępczym, gdy <xref:System.Web.UI.WebControls.BoundField> ciąg jest wyświetlany w obiekcie. Pozostała część ciągu formatowania jest wyświetlana jako tekst w postaci literału.  
  
 Jeśli ciąg formatowania nie zawiera symbolu zastępczego, tylko ciąg formatowania jest zawarty w końcowym tekście wyświetlanym (wartość pola ze źródła danych nie jest uwzględniana). Jeśli symbol zastępczy jest 0 (zero) ujęty w nawiasy klamrowe, jak pokazano w poprzednim przykładzie, wartość pola jest konwertowana na ciąg za pomocą metody domyślnej. Możesz dołączyć do zera ciągu, który określa sposób formatowania wartości pola. Na przykład symbol zastępczy `{0:C}` pola numerycznego określa, że wartość pola należy przekonwertować na format waluty.  
  
 Formatowanie jest stosowane przy użyciu <xref:System.String.Format%2A> metody. Liczba po lewej nawiasie klamrowym jest częścią składni używanej przez tę metodę i wskazuje, która z serii wartości powinna być używana przez symbol zastępczy. Ponieważ w każdej komórce istnieje tylko jedna wartość pola, liczba, która następuje po lewej klamrowym nawiasie klamrowym, może być ustawiona na 0.  
  
 W poniższej tabeli wymieniono standardowe znaki formatu dla pól liczbowych. W tych znakach formatu nie jest rozróżniana wielkość liter `X`, z wyjątkiem, który wyświetla znaki szesnastkowe w przypadku, który jest określony. Można dołączyć liczbę do większości znaków formatowania, aby określić liczbę znaczących cyfr lub miejsc dziesiętnych, które mają być wyświetlane.  
  
> [!NOTE]
>  W większości przypadków formatowanie zależy od ustawienia kulturowego serwera. Przykłady dotyczą ustawienia `en-US`kultury.  
  
|Formatowanie znaku|Opis|Przykład|  
|----------------------|-----------------|-------------|  
|`C` lub `c`|Wyświetla wartości liczbowe w formacie waluty. Można określić liczbę miejsc dziesiętnych.|Format: `{0:C}`<br /><br /> 123,456 — > $123,46<br /><br /> Format: `{0:C3}`<br /><br /> 123,456 — > $123,456|  
|`D` lub `d`|Wyświetla wartości całkowite w formacie dziesiętnym. Można określić liczbę cyfr. (Chociaż typ jest określany jako "Decimal"), liczby są formatowane jako liczby całkowite.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` lub `e`|Wyświetla wartości liczbowe w formacie naukowym (wykładniczym). Można określić liczbę miejsc dziesiętnych.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` lub `f`|Wyświetla wartości liczbowe w stałym formacie. Można określić liczbę miejsc dziesiętnych.|Format: `{0:F}`<br /><br /> 1234,567 — > 1234,57<br /><br /> Format: `{0:F3}`<br /><br /> 1234,567 — > 1234,567|  
|`G` lub `g`|Wyświetla wartości liczbowe w formacie ogólnym (największa kompaktowanie notacji stałej lub wykładniczej). Można określić liczbę cyfr znaczących.|Format: `{0:G}`<br /><br /> -123,456->-123,456<br /><br /> Format: `{0:G2}`<br /><br /> -123,456->-120|  
|`N` lub `n`|Wyświetla wartości liczbowe w formacie liczb (łącznie z separatorami grup i opcjonalnym znakiem minus). Można określić liczbę miejsc dziesiętnych.|Format: `{0:N}`<br /><br /> 1234,567 — > 1 234,57<br /><br /> Format: `{0:N4}`<br /><br /> 1234,567 — > 1 234,5670|  
|`P` lub `p`|Wyświetla wartości liczbowe w formacie procentowym. Można określić liczbę miejsc dziesiętnych.|Format: `{0:P}`<br /><br /> 1 > 100,00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 — > 50,0%|  
|`R` lub `r`|Wyświetla <xref:System.Single>, <xref:System.Double>, lub`BigInteger` wartości w formacie rundy.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` lub `x`|Wyświetla wartości całkowite w formacie szesnastkowym. Można określić liczbę cyfr.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255 — > 00ff|  
  
 Aby uzyskać więcej informacji i przykłady, które pokazują formatowanie dla innych wartości kultury, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md). Można również tworzyć niestandardowe ciągi formatujące liczby. Aby uzyskać więcej informacji, zobacz [Niestandardowe ciągi formatujące](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 W poniższej tabeli przedstawiono formatowanie znaków dla <xref:System.DateTime> pól. Większość z tych specyfikacji formatowania skutkuje różnymi danymi wyjściowymi w zależności od ustawień kultury. Przykłady dotyczą <xref:System.DateTime> wartości 6/15/2009 1:45:30 PM z `en-US`ustawieniem kultury.  
  
|Formatowanie znaku|Opis|Przykład|  
|----------------------|-----------------|-------------|  
|`d`|Wzorzec daty krótkiej.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009|  
|`D`|Wzorzec daty długiej.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM — > poniedziałek, 15 czerwca 2009|  
|`f`|Wzorzec pełnej daty/godziny (godzina krótka).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM — > poniedziałek, 15 czerwca 2009 1:45 PM|  
|`F`|Wzorzec pełnej daty/godziny (godzina długa).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM — > poniedziałek, 15 czerwca 2009 1:45:30 PM|  
|`g`|Wzorzec ogólnej daty/godziny (godzina krótka).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM|  
|`G`|Wzorzec ogólnej daty/godziny (godzina długa).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM|  
|`M` lub `m`|Wzorzec miesiąc/dzień.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM — > od 15 czerwca|  
|`O` lub `o`|Wzorzec dwustronnej konwersji data/godzina.|Format: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM-> 2009-06-15T13:45:30.0900000|  
|`R` lub `r`|Wzorzec RFC1123 (Aby uzyskać informacje, <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>Zobacz).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM-> PN, 15 Jun 2009 20:45:30 GMT|  
|`s`|Wzorzec sortowalnej daty/godziny.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM-> 2009 — 06-15T13:45:30|  
|`t`|Wzorzec godziny krótkiej.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45 PM|  
|`T`|Wzorzec godziny długiej.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45:30 PM|  
|`u`|Wzorzec uniwersalnej sortowalnej daty/godziny.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Wzorzec uniwersalnej pełnej daty/godziny.|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM — > poniedziałek, 15 czerwca 2009 8:45:30 PM|  
|`Y` lub `y`|Wzorzec roku i miesiąca.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM — > czerwiec, 2009|  
  
 Aby uzyskać więcej informacji i przykłady, które pokazują formatowanie dla innych wartości kultury, zobacz [ciągi standardowych formatów daty i godziny](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Można również tworzyć niestandardowe ciągi formatujące datę i godzinę. Aby uzyskać więcej informacji, zobacz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Projekt witryny sieci Web programu Visual Studio z kodem źródłowym jest dostępny do załączenia do tego tematu: [Pobierz](https://go.microsoft.com/fwlink/?LinkId=191889).  
  
 Poniższy przykład pokazuje, jak używać właściwości, <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> aby określić niestandardowy format wyświetlania wartości pola.  
  
  
  
 Poniższy przykład przedstawia jeden wiersz danych wyjściowych, które są wytwarzane przez ten przykład.  
  
|Identyfikator produktu|Name (Nazwa)|ProductNumber|ListPrice|Waga|Data modyfikacji|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><see cref="T:System.Collections.IDictionary" /> Służy do przechowywania wartości w określonej komórce.</param>
        <param name="cell">Zawiera <see cref="T:System.Web.UI.WebControls.TableCell" /> wartości, które mają zostać pobrane.</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="includeReadOnly"><see langword="true" />Aby uwzględnić wartości pól tylko do odczytu; w przeciwnym razie. <see langword="false" /></param>
        <summary>Wypełnia określony <see cref="T:System.Collections.IDictionary" /> obiekt wartościami z określonego <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest udostępniana jako wygodny sposób pobierania wartości pól z określonego <xref:System.Web.UI.WebControls.TableCell> obiektu w <xref:System.Web.UI.WebControls.BoundField> obiekcie. <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 Ta metoda nie ma zwracanej wartości. Zamiast tego wartości pól są zwracane przez odwołanie za pomocą <xref:System.Collections.IDictionary?displayProperty=nameWithType> obiektu przekazana `dictionary` dla parametru. Po wywołaniu metody wykonaj iterację <xref:System.Collections.IDictionary?displayProperty=nameWithType> obiektu, aby uzyskać dostęp do wartości pól.  
  
> [!NOTE]
>  Jeśli obiekt zawiera wartości pól tylko do odczytu, należy `true` przekazać `includeReadOnly` parametr, aby uwzględnić te wartości. <xref:System.Web.UI.WebControls.TableCell>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Wartość pola do sformatowania.</param>
        <param name="encode"><see langword="true" />aby zakodować wartość; w przeciwnym razie. <see langword="false" /></param>
        <summary>Formatuje określoną wartość pola dla komórki w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekcie.</summary>
        <returns>Wartość pola konwertowana na format określony przez <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika służącą do przekształcania wartości pola do formatu określonego <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> przez właściwość. <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> Jeśli wartość pola jest równa null, zwracana jest wartość <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę metodę, aby wykonać niestandardową procedurę formatowania.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość użytą dla wartości pola podczas renderowania <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu w projektancie.</summary>
        <returns>Wartość, która ma być wyświetlana w projektancie jako wartość pola.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika służącą do określenia wartości, która ma być wyświetlana dla pola podczas <xref:System.Web.UI.WebControls.BoundField> renderowania obiektu w projektancie. <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> Jeśli w czasie projektowania nie można pobrać rzeczywistych danych ze źródła danych, w zamian zostanie wyświetlona wartość zwracana przez tę metodę.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę metodę, aby zwrócić inną wartość do wyświetlenia dla pola w projektancie.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Kontener dla wartości pola.</param>
        <summary>Pobiera wartość pola powiązanego <see cref="T:System.Web.UI.WebControls.BoundField" /> z obiektem.</summary>
        <returns>Wartość pola powiązanego <see cref="T:System.Web.UI.WebControls.BoundField" />z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> Metoda jest metodą pomocnika służącą do określenia wartości pola. Jeśli obiekt jest wyświetlany w projektancie, a wartość pola nie może być określona w czasie projektowania, zwracana jest wartość zwracana <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> z metody zamiast rzeczywistej wartości pola. <xref:System.Web.UI.WebControls.BoundField>  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontener określony przez <paramref name="controlContainer" /> parametr to <see langword="null" />.  
  
—lub— 
Kontener określony przez <paramref name="controlContainer" /> parametr nie zawiera elementu danych.  
  
—lub— 
Nie znaleziono pola danych.</exception>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę metodę, aby zapewnić niestandardową procedurę w celu określenia wartości pola.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany w nagłówku kontrolki danych.</summary>
        <value>Tekst wyświetlany w nagłówku kontrolki danych. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> , aby zidentyfikować pole w kontrolce danych z przyjazną nazwą. Najbardziej typową aplikacją <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> właściwości jest dostarczanie nazw kolumn do pól powiązanych z danymi <xref:System.Web.UI.WebControls.GridView> w kontrolce lub <xref:System.Web.UI.WebControls.DetailsView> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartości pól są kodowane w formacie HTML, zanim będą wyświetlane w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekcie.</summary>
        <value><see langword="true" />Jeśli wartości pól są kodowane w formacie HTML, <see cref="T:System.Web.UI.WebControls.BoundField" /> <see langword="false" />zanim zostaną wyświetlone w obiekcie; w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> , aby określić, czy wartości pól są kodowane w formacie HTML do odpowiednich reprezentacji ciągów przed wyświetleniem ich <xref:System.Web.UI.WebControls.BoundField> w obiekcie. Na przykład, jeśli ta właściwość ma `true`wartość, ciąg "\<> skryptu" będzie renderowany jako "&lt;skrypt&gt;". Jeśli ta właściwość ma `false`wartość, ciąg będzie renderowany bez zmian.  
  
> [!NOTE]
>  Wartości pól w kodowaniu HTML pomagają zapobiec atakom skryptów między lokacjami i złośliwej zawartości. Ta właściwość powinna być włączona zawsze, gdy jest to możliwe.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> jak użyć właściwości, aby zapobiec wyświetlaniu wartości pól <xref:System.Web.UI.WebControls.BoundField> w kodzie HTML przed wyświetleniem w obiekcie.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst, który jest tworzony przez zastosowanie <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> właściwości do wartości, <see cref="T:System.Web.UI.WebControls.BoundField" /> powinien być zakodowany w formacie HTML, gdy zostanie wyświetlony.</summary>
        <value><see langword="true" />Jeśli tekst powinien być zakodowany w formacie HTML; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości kodowania HTML mogą pomóc zapobiec atakom skryptów między lokacjami i złośliwej zawartości. Kodowanie HTML jest również przydatne, gdy chcesz wyświetlić kod HTML w przeglądarce, na przykład wyświetlając ciąg "\<br/>" zamiast wstawiania podziału wiersza (`<br/>` elementu) na stronie.  
  
> [!NOTE]
>  Ta właściwość jest nowa w ASP.NET 3,5. Ustawienie tej właściwości umożliwia `false` przywrócenie domyślnego zachowania <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości w wersjach ASP.NET wcześniejszych niż 3,5. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><see langword="true" />Jeśli sortowanie jest obsługiwane; w przeciwnym razie. <see langword="false" /></param>
        <param name="control">Kontrolka danych będąca właścicielem <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> Inicjuje obiekt.</summary>
        <returns><see langword="false" />we wszystkich przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez kontrolkę danych, z <xref:System.Web.UI.WebControls.BoundField> którą skojarzony jest obiekt, aby wykonać podstawowe inicjowanie obiektu dla wystąpień pola, zanim pole zostanie kiedykolwiek dodane do kolekcji wierszy. <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> Kontrolki danych, <xref:System.Web.UI.WebControls.DetailsView> takie <xref:System.Web.UI.WebControls.GridView> jak i <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> `CreateChildControls` wywoływanie metody w metodach przed innymi metodami, takimi jak `CreateRow` są wywoływane w celu utworzenia konkretnych wierszy zawierających dane.  
  
 Wywołaj tę metodę, gdy piszesz niestandardową kontrolkę powiązaną z danymi <xref:System.Web.UI.WebControls.TableCell> , która używa obiektów do wykonywania podstawowej <xref:System.Web.UI.WebControls.BoundField> inicjalizacji obiektu. Zaimplementuj tę metodę, <xref:System.Web.UI.WebControls.BoundField>Jeśli typ pochodny wymaga zainicjowania obiektu przed <xref:System.Web.UI.WebControls.TableCell> wypełnieniem obiektów <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> danymi lub kontrolkami w metodzie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> Do zainicjowania.</param>
        <param name="cellType">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> wartości.</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="rowIndex">Indeks wiersza (liczony od zera).</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekt do określonego stanu wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest implementowana przez <xref:System.Web.UI.WebControls.BoundField>typy pochodne, aby dodać <xref:System.Web.UI.WebControls.TableCell> tekst i kontrolki do obiektu kontrolki danych korzystającej z tabel do wyświetlania interfejsu użytkownika. <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Te kontrolki danych tworzą pełny wiersz struktury tabeli po wywołaniu `CreateChildControls` metody kontrolki. Metoda jest wywoływana `InitializeRow` przez metodę kontrolek danych, takich jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView>. <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>  
  
 Wywołaj tę metodę, gdy piszesz niestandardową kontrolkę powiązaną z danymi <xref:System.Web.UI.WebControls.TableCell> , która używa obiektów do inicjowania komórek struktury tabeli z danymi lub kontrolkami. Zaimplementuj tę metodę podczas pisania <xref:System.Web.UI.WebControls.BoundField>klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> Do zainicjowania.</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekt do określonego stanu wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą służącą do inicjowania komórki <xref:System.Web.UI.WebControls.BoundField> w obiekcie. <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę metodę, aby wykonać niestandardową procedurę inicjowania.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Reprezentuje stan formantu, który ma zostać przywrócony.</param>
        <summary>Przywraca poprzednio zapisane informacje o stanie widoku dla tego pola.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia napis wyświetlany dla pola, gdy wartość pola jest równa null.</summary>
        <value>Podpis wyświetlany dla pola, gdy wartość pola jest równa null. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami wartość pola jest przechowywana jako wartość null w źródle danych. Możesz określić niestandardowy podpis do wyświetlania dla pól mających wartość null przez ustawienie <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości. Jeśli ta właściwość nie jest ustawiona, wartości pól null są wyświetlane jako puste ciągi (""). Gdy rekord jest aktualizowany lub wstawiany do kontrolki powiązanej z danymi, jeśli użytkownik wprowadzi wartość określoną przez tę właściwość (inną niż pusty ciąg) dla pola w kontrolce powiązanej z danymi, ta wartość jest automatycznie konwertowana na wartość null w źródle danych.  
  
> [!NOTE]
>  Aby przekonwertować pustą wartość pola ciągu na wartość null, należy ustawić <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwość na. `true`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> aby określić niestandardowy podpis do wyświetlania dla wartości pól null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia.</param>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wiąże wartość pola z <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocniczą służącą do powiązania wartości pola w źródle danych z odpowiadającą jej komórką <xref:System.Web.UI.WebControls.BoundField> w obiekcie. <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant, z którym jest powiązana wartość pola, nie <see cref="T:System.Web.UI.WebControls.TextBox" /> jest <see cref="T:System.Web.UI.WebControls.TableCell" />ani.</exception>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę metodę, aby wykonać procedurę niestandardowego powiązania.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość pola może być modyfikowana w trybie edycji.</summary>
        <value><see langword="true" />Aby zapobiec modyfikowaniu wartości pola w trybie edycji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> , aby zapobiec modyfikowaniu wartości wyświetlanych <xref:System.Web.UI.WebControls.BoundField> w obiekcie. Gdy formant powiązany z danymi jest w trybie edycji, pola, które są tylko do odczytu, są wyświetlane jako zwykły tekst bez żadnych kontrolek edycji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Właściwość ma zastosowanie tylko do trybu edycji. Aby zapobiec wyświetlaniu pól w trybie wstawiania, użyj <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> właściwości, aby zapobiec modyfikowaniu wartości pola klucza wyświetlanego <xref:System.Web.UI.WebControls.BoundField> w obiekcie w trybie edycji.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kodowanie HTML jest obsługiwane przez <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekt.</summary>
        <value>Zawsze zwraca <see langword="true" /> , aby wskazać, że kodowanie HTML jest obsługiwane <see cref="T:System.Web.UI.WebControls.BoundField" />przez.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest właściwością pomocnika, która jest <xref:System.Web.UI.WebControls.BoundField> używana przez klasę i klasy pochodne, aby określić, czy kodowanie HTML jest obsługiwane przez klasę. <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas wyprowadzania z <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić tę właściwość, aby wskazać, czy kodowanie HTML jest obsługiwane przez klasę.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wyrażenie "This".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To pole jest używane do wskazywania, <xref:System.Web.UI.WebControls.BoundField> że obiekt powinien być powiązany ze źródłem danych, a nie polem źródła danych. W takim przypadku w polu zostanie wyświetlona `ToString` wartość obiektu.  
  
 To pole jest używane głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta.</summary>
        <value>Wartość określająca, czy formant sprawdza poprawność danych wejściowych klienta. Wartość domyślna to <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy kontrolki zawarte w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekcie obsługują wywołania zwrotne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika służącą do określenia, czy kontrolki zawarte <xref:System.Web.UI.WebControls.BoundField> w obiekcie obsługują wywołania zwrotne. <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> Ta metoda została zaimplementowana jako metoda pusta (metoda, która nie zawiera żadnego kodu) wskazująca, że wywołania zwrotne są obsługiwane.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klasy pochodne od <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy mogą przesłaniać tę metodę w celu wskazania, czy kontrolki zawarte w polu obsługują wywołania zwrotne. Aby wskazać, że wywołania zwrotne są obsługiwane, należy zaimplementować tę metodę jako pustą metodę, która nie zgłasza wyjątku; w przeciwnym razie Zgłoś wyjątek z przydatnym komunikatem opisującym, dlaczego wywołania zwrotne nie są obsługiwane.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
