<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6600e0e338ddf9daf33481b18422138d1c2ad0bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691619" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje pole, które jest wyświetlana jako tekst w formancie powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField> Klasy jest używany przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania wartości pola jako tekst. <xref:System.Web.UI.WebControls.BoundField> Obiektu są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolować Wyświetla <xref:System.Web.UI.WebControls.BoundField> obiektu jako kolumny, podczas <xref:System.Web.UI.WebControls.DetailsView> kontroli wyświetla go jako wiersz.  
  
 Aby określić pole do wyświetlenia w <xref:System.Web.UI.WebControls.BoundField> obiekt, ustaw <xref:System.Web.UI.WebControls.BoundField.DataField%2A> dla właściwości nazwy pola. W polu wartość może być zakodowany w formacie HTML przed wyświetleniem przez ustawienie <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwości `true`. Można zastosować niestandardowy ciąg formatowania do wartości pola przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości. Gdy <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwość jest `true`, zostanie użyta wartość ciągu zakodowanego pola w ciągu formatu niestandardowego. Domyślnie jest stosowany do wartości pola ciąg formatowania, tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwości `true`. Wartość pola ma wartość null, można wyświetlić niestandardowe podpis przez ustawienie <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości. <xref:System.Web.UI.WebControls.BoundField> Obiektu może również automatycznie przekonwertować pustego ciągu ("") do pola przez ustawienie wartości do wartości null <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwości `true`.  
  
 Można ukryć <xref:System.Web.UI.WebControls.BoundField> obiektu w formancie powiązane z danymi, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> właściwości `false`. Aby zapobiec sytuacji, w której wartość pola są modyfikowane w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> właściwości `true`. W powiązanym z danymi kontroluje obsługujące Wstawianie rekordów (takich jak <xref:System.Web.UI.WebControls.DetailsView> kontroli), można ukryć <xref:System.Web.UI.WebControls.BoundField> obiektu przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> właściwości `false`. Często jest to zrobić, jeśli chcesz ukryć automatycznie generowane pola klucza w trybie wstawiania.  
  
 Można dostosować sekcji nagłówku i stopce <xref:System.Web.UI.WebControls.BoundField> obiektu. Aby wyświetlić podpisu w nagłówku lub stopce strony sekcjach, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> właściwości, odpowiednio. Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Sekcja nagłówka mogą być ukryte w <xref:System.Web.UI.WebControls.BoundField> obiektu przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości `false`.  
  
> [!NOTE]
>  Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu. Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości dla poszczególnych pól powiązania. Pokaż lub Ukryj sekcji całego nagłówka formantu powiązanego z danymi (jeśli jest dostępny), użyj formantu `ShowHeader` właściwości.  
  
 Ponadto można dostosować wygląd <xref:System.Web.UI.WebControls.BoundField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.  
  
|Właściwości stylu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Ustawienia stylu dla kontrolki serwera sieci Web podrzędnego z <xref:System.Web.UI.WebControls.BoundField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Ustawienia stylu stopce <xref:System.Web.UI.WebControls.BoundField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Ustawienia stylu dla sekcji nagłówka <xref:System.Web.UI.WebControls.BoundField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Ustawienia stylu dla elementów danych w <xref:System.Web.UI.WebControls.BoundField> obiektu.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField> obiektu do wyświetlenia wartości pola w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.BoundField> klasy. Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.  
  
 Dynamiczne dodawanie <xref:System.Web.UI.WebControls.BoundField> obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.BoundField> obiekt, ustawienia swoich właściwości, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolować, Dodaj <xref:System.Web.UI.WebControls.BoundField> do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dynamicznie dodawać pola do formantu powiązanego z danymi, zdecydowanie zaleca się czy pola można statycznie zadeklarowany i pokazywane lub ukryte, odpowiednio. Statycznie deklarowanie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak użyć konstruktora dynamiczne dodawanie <xref:System.Web.UI.WebControls.BoundField> do obiektu <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ciąg formatowania określone przez <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> właściwość jest stosowana do wartości pola, gdy kontrolki powiązania danych, który zawiera <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekt jest w trybie edycji.</summary>
        <value>
          <see langword="true" /> Aby zastosować ciąg formatowania do wartości pól w trybie edycji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, i <xref:System.Web.UI.WebControls.GridView>) mają trybów wyświetlania, które umożliwiają użytkownikom do odczytu, edytować lub wstawiania rekordów. Domyślnie ten ciąg formatowania określony przez <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwość jest stosowana do wartości pól tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwości `true`.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.BoundField> obiektu nie są automatycznie usuwane formatowania po zaktualizowaniu pole w źródle danych. Jeśli nie chcesz formatowania wartości przechowywanej w ramach, konieczne będzie usunięcie formatowania programowo.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwości do formatowania ciągu wartości pola podczas <xref:System.Web.UI.WebControls.GridView> formant jest w trybie edycji. Formatowanie jest następnie programowo usunięte przed zaktualizowaniem wartości w źródle danych.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy puste ciągi ("") są automatycznie konwertowane do wartości null po zaktualizowaniu pole danych w źródle danych.</summary>
        <value>
          <see langword="true" /> Aby dokonać automatycznej konwersji wartości pustego ciągu do wartości null. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami użytkownik może wprowadzić pustego ciągu dla wartości pola podczas aktualizowania i wstawiania rekordów. Użyj <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwości w celu określenia, czy wartość pustego ciągu jest automatycznie konwertowany na wartość null, po zaktualizowaniu pole danych w źródle danych.  
  
> [!NOTE]
>  Domyślnie <xref:System.Web.UI.WebControls.BoundField> obiektu będzie wyświetlany jako puste ciągi wartości null. Aby wyświetlić inną wartość, należy ustawić <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwości, aby określić, że ciąg pusty ("") wartość pola powinny być automatycznie konwertowane na wartość null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> Można skopiować właściwości bieżącego <see cref="T:System.Web.UI.WebControls.BoundField" /> do.</param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> Metoda jest używana przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodę, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField> do obiektu <xref:System.Web.UI.WebControls.DataControlField> obiektu utworzonego przez metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy pustą <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <returns>Pusta <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> Metoda jest używana przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodę, aby utworzyć pustą <xref:System.Web.UI.WebControls.BoundField> obiekt, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField> do obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola danych, aby powiązać <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <value>Nazwa pola danych, aby powiązać <see cref="T:System.Web.UI.WebControls.BoundField" />. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BoundField.DataField%2A> właściwość, aby określić nazwę pola danych, aby powiązać <xref:System.Web.UI.WebControls.BoundField> obiektu. Wartości określonego pola są wyświetlane w <xref:System.Web.UI.WebControls.BoundField> obiekt jako tekst. Opcjonalnie można sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości.  
  
> [!NOTE]
>  Jeśli pole ma wartość null, pustym ciągiem ("") jest domyślnie wyświetlany dla wartości. Aby określić alternatywne podpis, ustaw <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.DataField%2A> właściwości w celu określenia pole, które mają być wyświetlane w <xref:System.Web.UI.WebControls.BoundField> kolumnie pole <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola.</summary>
        <value>Ciąg formatowania, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (""), co oznacza, że specjalne formatowanie nie jest stosowane do wartości pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania wartości, które są wyświetlane w <xref:System.Web.UI.WebControls.BoundField> obiektu. Jeśli <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwość nie jest ustawiona, wartość w polu jest wyświetlana bez żadnego formatowania.  
  
> [!NOTE]
>  W wersjach programu starszych niż 3.5 należy ustawić <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwości `false` Aby sformatować pola, które są nie ciągu typów danych. W przeciwnym razie wartość pola jest konwertowana na ciąg przez domyślną metodą konwersji przed ciąg formatu, który jest przechowywany w <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwość jest stosowana.  
  
 Domyślnie formatowania ciągu jest zastosowane do wartości pola tylko wtedy, gdy formant powiązany z danymi, który zawiera <xref:System.Web.UI.WebControls.BoundField> obiekt jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości pól w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> właściwości `true`.  
  
 Ciąg formatowania może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy wartości pola. Na przykład w ciągu formatowania `Item Value: {0}`, wartość pola zastępuje symbol zastępczy {0} wyświetlania ciąg <xref:System.Web.UI.WebControls.BoundField> obiektu. Pozostała część ciągu formatowania jest wyświetlany jako zwykły tekst.  
  
 Jeśli ciąg formatowania nie zawiera symbol zastępczy, tylko sam ciąg formatowania znajduje się w końcowym wyświetlany tekst (wartość w polu ze źródła danych jest niedostępna). Jeśli symbol zastępczy jest 0 (zero), ujętą w nawiasy klamrowe, jak pokazano w poprzednim przykładzie, wartość pola jest konwertowana na ciąg przez domyślną metodą. Możesz dołączyć do zera ciąg, który określa sposób formatowania wartości pola. Na przykład symbol zastępczy `{0:C}` dla pola numerycznego Określa, czy wartości pola powinny być konwertowane na formacie waluty.  
  
 Zostanie sformatowany przy użyciu <xref:System.String.Format%2A> metody. Liczba, która wykonuje lewy nawias klamrowy jest częścią składnia wykorzystywana przez tę metodę i wskazuje, które z nich szereg wartości należy użyć symbolu zastępczego. Ponieważ istnieje tylko jedna wartość pola w każdej komórce, numer znajdujący się po lewej stronie nawias klamrowy można ustawić tylko na 0.  
  
 W poniższej tabeli wymieniono standardowych znaków format pól liczbowych. Te znaki format nie jest rozróżniana, z wyjątkiem `X`, który zawiera znaki szesnastkowe w przypadku, gdy jest określona. Można dołączyć liczbą większości znaków formatu, aby określić liczbę cyfr znaczących lub miejsc dziesiętnych mają być wyświetlane.  
  
> [!NOTE]
>  W większości przypadków formatowania zależy od ustawienia kulturowe serwera. Przykłady dla ustawienie kultury `en-US`.  
  
|Format znak|Opis|Przykład|  
|----------------------|-----------------|-------------|  
|`C` lub `c`|Wyświetla wartości liczbowe w formacie waluty. Można określić liczbę miejsc dziesiętnych.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` lub `d`|Wyświetla całkowitą wartości w formacie dziesiętnym. Można określić liczbę miejsc po przecinku. (Mimo że typ jest nazywany "decimal", numery są sformatowane jako liczby całkowite).|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` lub `e`|Wyświetla wartości liczbowe w naukowych formacie (wykładnicza). Można określić liczbę miejsc dziesiętnych.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` lub `f`|Wyświetla wartości liczbowe w formacie. Można określić liczbę miejsc dziesiętnych.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` lub `g`|Wyświetla wartości liczbowe w formacie Ogólne (najbardziej kompaktowe notacji stałoprzecinkowej lub naukowych). Można określić liczbę cyfr znaczących.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` lub `n`|Wyświetla wartości liczbowe w formacie liczby (w tym separatorów grup i opcjonalnie znaku minus). Można określić liczbę miejsc dziesiętnych.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` lub `p`|Wyświetla wartości liczbowe w formacie procent. Można określić liczbę miejsc dziesiętnych.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` lub `r`|Wyświetla <xref:System.Single>, <xref:System.Double>, lub `BigInteger` wartości w formacie błądzenia.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` lub `x`|Wyświetla całkowitą wartości w formacie szesnastkowym. Można określić liczbę miejsc po przecinku.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255 -> 00ff|  
  
 Aby uzyskać więcej informacji oraz przykłady pokazujące, formatowanie wartości innych kultury, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Można również utworzyć niestandardowe ciągi formatujące liczby. Aby uzyskać więcej informacji, zobacz [niestandardowe ciągi formatów liczbowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 W poniższej tabeli wymieniono znaków format <xref:System.DateTime> pola. Większość tych formatowania specyfikacje spowodować różne wyniki, w zależności od ustawienia kultury. Przykłady dla <xref:System.DateTime> wartość 2009-6-15 1:45:30 będzie ustawienie kultury `en-US`.  
  
|Format znak|Opis|Przykład|  
|----------------------|-----------------|-------------|  
|`d`|Wzorzec daty krótkiej.|Format: `{0:d}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE -&GT; 2009-6-15|  
|`D`|Wzorzec daty długiej.|Format: `{0:D}`<br /><br /> 2009-6-15 1:45:30 będzie -> poniedziałek, 15 czerwca 2009|  
|`f`|Wzorzec pełnej daty/godziny (godzina krótka).|Format: `{0:f}`<br /><br /> 2009-6-15 1:45:30 będzie -> poniedziałek, 15 czerwca 2009 1:45 PM|  
|`F`|Wzorzec pełnej daty/godziny (godzina długa).|Format: `{0:F}`<br /><br /> 2009-6-15 1:45:30 będzie -> poniedziałek, 15 czerwca 2009 1:45:30 będzie|  
|`g`|Wzorzec ogólnej daty/godziny (godzina krótka).|Format: `{0:g}`<br /><br /> 2009-6-15 2009-6-15-&GT; 1:45:30 BĘDZIE 1:45 PM|  
|`G`|Wzorzec ogólnej daty/godziny (godzina długa).|Format: `{0:G}`<br /><br /> 2009-6-15 2009-6-15-&GT; 1:45:30 BĘDZIE 1:45:30 BĘDZIE|  
|`M` lub `m`|Wzorzec miesiąc/dzień.|Format: `{0:M}`<br /><br /> 2009-6-15 1:45:30 będzie -> 15 czerwca|  
|`O` lub `o`|Wzorzec dwustronnej konwersji data/godzina.|Format: `{0:o}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE -&GT; 2009-06-15T13:45:30.0900000|  
|`R` lub `r`|Wzorzec RFC1123 (Aby uzyskać informacje, zobacz <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Format: `{0:R}`<br /><br /> 2009-6-15 1:45:30 będzie -> pon, 15 cze 2009 20:45:30 GMT|  
|`s`|Wzorzec sortowalnej daty/godziny.|Format: `{0:s}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE -&GT; 2009-06-15T13:45:30|  
|`t`|Wzorzec godziny krótkiej.|Format: `{0:t}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE -&GT; 1:45 PM|  
|`T`|Wzorzec godziny długiej.|Format: `{0:T}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE -&GT; 1:45:30 BĘDZIE|  
|`u`|Wzorzec uniwersalnej sortowalnej daty/godziny.|Format: `{0:u}`<br /><br /> 2009-6-15 2009-06-15-&GT; 1:45:30 BĘDZIE 20:45:30Z|  
|`U`|Wzorzec uniwersalnej pełnej daty/godziny.|Format: `{0:U}`<br /><br /> 2009-6-15 1:45:30 będzie -> poniedziałek, 15 czerwca 2009 8:45:30 będzie|  
|`Y` lub `y`|Wzorzec roku i miesiąca.|Format: `{0:Y}`<br /><br /> 2009-6-15 czerwca 2009 -> 1:45:30 będzie|  
  
 Aby uzyskać więcej informacji oraz przykłady pokazujące, formatowanie wartości innych kultury, zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Można również utworzyć niestandardowe ciągi daty i godziny format. Aby uzyskać więcej informacji, zobacz [niestandardowe ciągi daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Projekt programu Visual Studio Web lokacji z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](http://go.microsoft.com/fwlink/?LinkId=191889).  
  
 Poniższy przykład przedstawia użycie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania wartości pola.  
  
  
  
 W poniższym przykładzie przedstawiono jeden wiersz danych wyjściowych, który jest generowany przez w tym przykładzie.  
  
|Identyfikator produktu|Nazwa|ProductNumber|ListPrice|Waga|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">A <see cref="T:System.Collections.IDictionary" /> używany do przechowywania wartości określonej komórki.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Zawierający wartości do pobrania.</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="includeReadOnly">
          <see langword="true" /> Aby uwzględnić wartości pola tylko do odczytu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wstawia określony <see cref="T:System.Collections.IDictionary" /> obiektu z wartości z określonego <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> Metody stanowi wygodny sposób pobierania wartości pól z określonego <xref:System.Web.UI.WebControls.TableCell> obiektu w <xref:System.Web.UI.WebControls.BoundField> obiektu.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formantu.  
  
 Ta metoda nie ma wartości zwracanej. Zamiast tego wartości pól są zwracane przez odwołanie za pośrednictwem <xref:System.Collections.IDictionary?displayProperty=nameWithType> przekazano obiekt `dictionary` parametru. Po wywołaniu metody iterację <xref:System.Collections.IDictionary?displayProperty=nameWithType> obiekt, aby uzyskać dostęp do wartości pola.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TableCell> obiektu zawiera wartości pola tylko do odczytu, należy przekazać w `true` dla `includeReadOnly` parametr, aby uwzględnić te wartości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Wartość pola do formatowania.</param>
        <param name="encode">
          <see langword="true" /> do kodowania wartości; w przeciwnym razie <see langword="false" />.</param>
        <summary>Formatuje wartość określonego pola dla komórki w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <returns>Wartość pola konwertowana na format określonego przez <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> Metoda jest używany do transformacji wartości pola formacie określonym przez metodę Pomocnika <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości. Jeśli pole ma wartość null, wartość <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> zwracana jest właściwość.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, można zastąpić tę metodę, aby wykonać niestandardowe procedury formatowania.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość używaną do wartości pola podczas renderowania <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu w projektancie.</summary>
        <returns>Zostaną wyświetlone w projektancie, jak wartość w polu wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> Metoda jest metodą pomocnika używany do określenia, jaka wartość ma być wyświetlany dla pola podczas renderowania <xref:System.Web.UI.WebControls.BoundField> obiektu w projektancie. Jeśli nie można pobrać rzeczywistym danych ze źródła danych w czasie projektowania, zamiast niego wyświetlony wartość zwrócona przez tę metodę.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, można zastąpić tę metodę w celu zwrotu innej wartości dla pola w projektancie.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Kontener dla wartości pola.</param>
        <summary>Pobiera wartość pola powiązane z <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <returns>Wartość pola powiązane z <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> Metoda jest metodą pomocnika używany w celu określenia wartości pola. Jeśli <xref:System.Web.UI.WebControls.BoundField> obiektu jest wyświetlany za pomocą projektanta i nie można ustalić wartości pola w czasie projektowania, wartość zwracana z <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> metody jest zwracana zamiast wartości rzeczywistych pola.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Określony przez kontener <paramref name="controlContainer" /> parametr jest <see langword="null" />.  
  
 \- lub -  
  
 Określony przez kontener <paramref name="controlContainer" /> parametru nie ma elementu danych.  
  
 \- lub -  
  
 Nie znaleziono pola danych.</exception>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, można przesłonić tę metodę w celu zapewnienia niestandardowe procedury, aby określić wartość pola.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który jest wyświetlany w nagłówku formantu danych.</summary>
        <value>Tekst wyświetlany w nagłówku formantu danych. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> właściwość do identyfikacji pola w formancie danych o przyjaznej nazwie. Najbardziej typowe zastosowania <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> właściwości jest zapewnienie nazwy kolumn łatwy do rozpoznania na pola powiązane z danymi w <xref:System.Web.UI.WebControls.GridView> lub <xref:System.Web.UI.WebControls.DetailsView> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartości pól są kodowany w formacie HTML przed są wyświetlane w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli wartości pól są kodowany w formacie HTML przed są wyświetlane w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwości w celu określenia, czy wartości pól są kodowany w formacie HTML do ich odpowiednich ciąg oświadczenia zanim zostaną one wyświetlone w <xref:System.Web.UI.WebControls.BoundField> obiektu. Na przykład, jeśli ta właściwość jest `true`, wartość ciągu "\<skryptu >" może być renderowana jako "&lt;skryptu&gt;". Jeśli ta właściwość jest `false`, ciąg będzie renderowany bez zmian.  
  
> [!NOTE]
>  Kodowanie HTML pola wartości pomaga zapobiegać wyświetlaniu ataków skryptów między witrynami i złośliwej zawartości. Ta właściwość powinna być włączona, jeśli to możliwe.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> właściwość, aby uniemożliwić wartości pól kodowany w formacie HTML przed wyświetleniem w <xref:System.Web.UI.WebControls.BoundField> obiektu.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst utworzony przez zastosowanie <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> właściwości <see cref="T:System.Web.UI.WebControls.BoundField" /> wartość powinna być kodowania pojawi się HTML.</summary>
        <value>
          <see langword="true" /> Jeśli tekst powinien być kodowany w formacie HTML; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie HTML wartości może zapobiec ataków skryptów między witrynami i złośliwej zawartości będą wyświetlane. Kodowanie HTML jest również przydatny podczas wyświetlania kodu HTML w przeglądarce, takie jak wyświetlanie ciąg "\<br / >" zamiast Wstawianie podział wiersza (`<br/>` element) na stronie.  
  
> [!NOTE]
>  Ta właściwość jest nowa w programie ASP.NET 3.5. Ustawienie tej właściwości na `false` przywraca domyślne zachowanie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości w aplikacji ASP.NET w wersji wcześniejszej niż 3.5. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">
          <see langword="true" /> Jeśli sortowanie jest obsługiwany; w przeciwnym razie <see langword="false" />.</param>
        <param name="control">Formant danych, który jest właścicielem <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Inicjuje <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <returns>
          <see langword="false" /> we wszystkich przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> Metoda jest wywoływana przez formant danych, z którym <xref:System.Web.UI.WebControls.BoundField> obiekt jest skojarzony z zainicjować obiektu podstawowego dla wystąpień pola, zanim pole jest kiedykolwiek dodana do kolekcji wierszy. Określa dane, takie jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView> wywołać <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> metody w ich `CreateChildControls` metod przed innych metod, takich jak `CreateRow` są wywoływane w celu utworzenia określonych wierszy z danymi.  
  
 Wywołanie tej metody podczas pisania niestandardowego powiązane z danymi kontrolować, które używa <xref:System.Web.UI.WebControls.TableCell> obiektów w celu przeprowadzenia podstawowego inicjowania dla <xref:System.Web.UI.WebControls.BoundField> obiektu. Zaimplementuj tę metodę, jeśli Twoje <xref:System.Web.UI.WebControls.BoundField>— Typ pochodny wymaga inicjowanie obiektu przed wypełnia <xref:System.Web.UI.WebControls.TableCell> obiekty z danymi lub formantów w <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> — metoda.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Zainicjować.</param>
        <param name="cellType">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> wartości.</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="rowIndex">Liczony od zera indeks wiersza.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektu do stanu określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Metoda jest implementowana przez <xref:System.Web.UI.WebControls.BoundField>— Dodawanie tekstu i formanty do typów pochodnych <xref:System.Web.UI.WebControls.TableCell> obiekt formantu danych, który używa tabel do wyświetlenia interfejsu użytkownika (UI). Pełny spis struktury wiersz po wierszu tworzenia tych kontrolek danych podczas formantu `CreateChildControls` metoda jest wywoływana. <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Metoda jest wywoływana przez `InitializeRow` określa metody danych, takich jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView>.  
  
 Wywołanie tej metody podczas pisania niestandardowego powiązane z danymi kontrolować, które używa <xref:System.Web.UI.WebControls.TableCell> obiektów zainicjować komórki struktury tabeli z danymi lub formantów. Zaimplementuj tę metodę, jeśli piszesz <xref:System.Web.UI.WebControls.BoundField>-klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Zainicjować.</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektu do stanu określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> Metoda jest metodą pomocnika używany do inicjowania komórki w <xref:System.Web.UI.WebControls.BoundField> obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, można zastąpić tę metodę w celu wykonywania rutynowych inicjowania niestandardowego.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Reprezentuje stan formantu ma zostać przywrócony.</param>
        <summary>Przywraca wcześniej przechowywanych informacji stan widoku dla tego pola.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Podpis wyświetlany dla pola, jeśli pole ma wartość null.</summary>
        <value>Podpis wyświetlany dla pola, jeśli pole ma wartość null. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami wartość pola jest przechowywana jako wartość null w źródle danych. Można określić niestandardowe podpis ma być wyświetlany dla pola, które mają wartość null przez ustawienie <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości. Jeśli ta właściwość nie jest ustawiona, wartości null pola są wyświetlane jako puste ciągi (""). Jeśli rekord jest są zaktualizowane lub wstawiony w formancie powiązane z danymi, jeśli użytkownik wprowadzi wartość określonej przez tę właściwość (innego niż ciąg pusty) dla pola w formancie powiązane z danymi, czy wartość jest automatycznie konwertowany do wartości null w źródle danych.  
  
> [!NOTE]
>  Aby przekonwertować wartość pola pustego ciągu na wartość null, należy ustawić <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> właściwości `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> właściwości w celu określenia niestandardowego Podpis wyświetlany w przypadku wartości null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia.</param>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wiąże wartość pola do <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> Metoda jest metodą pomocnika używany można powiązać wartości pola w źródle danych do odpowiednich komórki w <xref:System.Web.UI.WebControls.BoundField> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant, z którą jest powiązana wartość pola nie jest <see cref="T:System.Web.UI.WebControls.TextBox" /> lub <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, można zastąpić tę metodę w celu wykonywania rutynowych niestandardowego powiązania.</para>
        </block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość pola może być modyfikowana w trybie edycji.</summary>
        <value>
          <see langword="true" /> Aby zapobiec wartość pola są modyfikowane w trybie edycji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> właściwość, aby zapobiec wartości wyświetlane w <xref:System.Web.UI.WebControls.BoundField> obiektu przed modyfikacją. Gdy formantu powiązanego z danymi jest w trybie edycji, pola, które są tylko do odczytu są wyświetlane jako zwykły tekst, bez jakichkolwiek formantów edycyjnych.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Właściwość ma zastosowanie tylko do trybu edycji. Aby zapobiec pola pojawiają się w trybie wstawiania, użyj <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> właściwość, aby zapobiec wartości pola klucza wyświetlane w <xref:System.Web.UI.WebControls.BoundField> obiektu są modyfikowane w trybie edycji.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kodowanie HTML jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.BoundField" /> obiektu.</summary>
        <value>Zawsze zwraca <see langword="true" /> wskazująca, czy kodowanie HTML jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.BoundField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> Właściwość jest używana przez właściwość Pomocnika <xref:System.Web.UI.WebControls.BoundField> klasie i klasach pochodnych w celu ustalenia, czy kodowanie HTML jest obsługiwana przez klasę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas tworzenia klasy pochodnej z <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy, mogą zastąpić tę właściwość, aby wskazać, czy kodowanie HTML jest obsługiwana przez klasę.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wyrażenie "this".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To pole służy do wskazania, że <xref:System.Web.UI.WebControls.BoundField> obiektu powinien powiązania ze źródłem danych, a nie pola źródła danych. W takim przypadku obiekt w `ToString` wartość będzie wyświetlana w polu.  
  
 To pole jest używany głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta lub nie.</summary>
        <value>Wartość, która określa, czy formant sprawdza poprawność danych wejściowych klienta lub nie. Wartość domyślna to <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formanty zawarte w <see cref="T:System.Web.UI.WebControls.BoundField" /> obiekt wywołania zwrotne pomocy technicznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> Metoda jest metodą pomocnika używany w celu określenia, czy formanty zawarte w <xref:System.Web.UI.WebControls.BoundField> obiekt wywołania zwrotne pomocy technicznej. Ta metoda została zaimplementowana jako empty — metoda (metody, która nie zawiera żadnego kodu) aby wskazać, że wywołania zwrotne są obsługiwane.  
  
> [!NOTE]
>  Ta metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klasy, które pochodzą z <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy mogą przesłaniać tę metodę, aby wskazać, czy formanty zawarte wywołania zwrotne Obsługa pola. Aby wskazać, że wywołania zwrotne są obsługiwane, należy zaimplementować tę metodę jako empty — metoda, która zgłosiła wyjątek; w przeciwnym razie Zgłoś wyjątek z komunikatem przydatne opisujący przyczynę wywołania zwrotne nie są obsługiwane.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>