<Type Name="BoundColumn" FullName="System.Web.UI.WebControls.BoundColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3582da1dabd04cdd3d0572c7db232d2c34926713" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69393830" /></Metadata><TypeSignature Language="C#" Value="public class BoundColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type BoundColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Typ kolumny dla <see cref="T:System.Web.UI.WebControls.DataGrid" /> formantu, który jest powiązany z polem w źródle danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj typu <xref:System.Web.UI.WebControls.DataGrid> kolumny w kontrolce, aby wyświetlić zawartość pola w źródle danych. <xref:System.Web.UI.WebControls.BoundColumn> Wartości są wymienione w jednej kolumnie. Pole jest połączone z <xref:System.Web.UI.WebControls.BoundColumn>, więc wszystkie aktualizacje w źródle danych będą odzwierciedlać w odpowiednich komórkach <xref:System.Web.UI.WebControls.DataGrid> formantu.  
  
> [!NOTE]
>  Ten typ kolumny jest wartością domyślną dla <xref:System.Web.UI.WebControls.DataGrid> kontrolki.  
  
 Aby kontrolować wygląd tej kolumny, użyj właściwości <xref:System.Web.UI.WebControls.DataGrid> stylu kontrolki.  
  
> [!CAUTION]
>  Tekst nie jest zakodowany w formacie HTML, <xref:System.Web.UI.WebControls.BoundColumn>zanim zostanie wyświetlony w. Dzięki temu można osadzić skrypt w tagach HTML w tekście. Jeśli wartości w tej kolumnie pochodzą z danych wejściowych użytkownika, należy sprawdzić poprawność wartości, aby zmniejszyć liczbę luk w zabezpieczeniach.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób używania <xref:System.Web.UI.WebControls.BoundColumn> typu kolumny <xref:System.Web.UI.WebControls.DataGrid> w kontrolce do wyświetlania pól w źródle danych.  
  
 [!code-aspx-csharp[Classic BoundColumn Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BoundColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.BoundColumn" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.BoundColumn> klasy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.BoundColumn> klasy i dodać je <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> do kolekcji.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundColumn.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, które ma zostać powiązane <see cref="T:System.Web.UI.WebControls.BoundColumn" />z.</summary>
        <value>Nazwa pola, z którym <see cref="T:System.Web.UI.WebControls.BoundColumn" />ma zostać utworzone powiązanie. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić pole, z którym <xref:System.Web.UI.WebControls.BoundColumn>ma zostać utworzone powiązanie. <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A> właściwości, aby określić nazwę pola w źródle danych, z którym <xref:System.Web.UI.WebControls.BoundColumn>ma zostać utworzone powiązanie.  
  
 [!code-aspx-csharp[Classic BoundColumn Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BoundColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa format wyświetlania dla elementów w kolumnie.</summary>
        <value>Ciąg formatowania, który określa format wyświetlania elementów w kolumnie. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> , aby podać niestandardowy format dla elementów w kolumnie.  
  
 Ciąg formatu danych składa się z dwóch części, oddzielonych dwukropkiem, w postaci `A` { `Bxx` :}. Na przykład ciąg {0:F2} formatowania wyświetla liczbę stałych punktów z dwoma miejscami dziesiętnymi.  
  
> [!NOTE]
>  Cały ciąg musi być ujęty w nawiasy klamrowe, aby wskazać, że jest ciągiem formatu, a nie ciągiem literału. Dowolny tekst spoza nawiasów klamrowych jest wyświetlany jako tekst w postaci literału.  
  
 Wartość przed dwukropkiem (`A` w ogólnym przykładzie) Określa indeks parametru w liście parametrów na podstawie zera.  
  
> [!NOTE]
>  Tę wartość można ustawić na 0, ponieważ w każdej komórce istnieje tylko jedna wartość.  
  
 Znak po dwukropku (`B` w ogólnym przykładzie) określa format, w którym ma zostać wyświetlona wartość. W poniższej tabeli wymieniono typowe formaty.  
  
|Formatowanie znaku|Opis|  
|----------------------|-----------------|  
|`C`|Wyświetla wartości liczbowe w formacie waluty.|  
|`D`|Wyświetla wartości liczbowe w formacie dziesiętnym.|  
|`E`|Wyświetla wartości liczbowe w formacie naukowym (wykładniczym).|  
|`F`|Wyświetla wartości liczbowe w stałym formacie.|  
|`G`|Wyświetla wartości liczbowe w formacie ogólnym.|  
|`N`|Wyświetla wartości liczbowe w formacie liczb.|  
|`X`|Wyświetla wartości liczbowe w formacie szesnastkowym.|  
  
> [!NOTE]
>  W znaku w formacie nie jest rozróżniana wielkość liter, `X`z wyjątkiem, który wyświetla znaki szesnastkowe w określonym przypadku.  
  
 Wartość po znaku formatowania (`xx` w ogólnym przykładzie) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia.  
  
 Aby uzyskać więcej informacji na temat formatowania ciągów, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia właściwości, <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> aby określić różne formaty kolumn <xref:System.Web.UI.WebControls.DataGrid> w kontrolce. Kolumna jest sformatowana jako liczba całkowita `Price` , kolumna jest formatowana jako waluta, `Weight` kolumna jest `Expires` formatowana jako liczba dziesiętna, a kolumna jest formatowana jako krótki ciąg daty i godziny. `Qty`  
  
 [!code-aspx-csharp[BoundColumnDataFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnDataFormatString/cs/BoundColumnSampleCS.aspx#1)]
 [!code-aspx-vb[BoundColumnDataFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnDataFormatString/vb/BoundColumnSampleVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj -&gt; string&#xA;override this.FormatDataValue : obj -&gt; string" Usage="boundColumn.FormatDataValue dataValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataValue">Wartość do sformatowania.</param>
        <summary>Konwertuje określoną wartość na format wskazywany przez <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" /> właściwość.</summary>
        <returns>Określona wartość jest konwertowana na format wskazywany przez <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" /> właściwość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.BoundColumn.FormatDataValue%2A> , aby skonwertować określoną wartość do formatu wskazanego <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> przez właściwość.  
  
> [!NOTE]
>  Ta metoda zwraca odpowiednik ciągu wartości, jeśli <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> właściwość nie jest ustawiona.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="boundColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="T:System.Web.UI.WebControls.BoundColumn" /> do stanu początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby <xref:System.Web.UI.WebControls.BoundColumn> zresetować do stanu początkowego. <xref:System.Web.UI.WebControls.BoundColumn.Initialize%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="boundColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> Obiekt, który reprezentuje komórkę do zresetowania.</param>
        <param name="columnIndex">Numer kolumny, w której znajduje się komórka.</param>
        <param name="itemType">Jedna z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości.</param>
        <summary>Resetuje określoną komórkę w <see cref="T:System.Web.UI.WebControls.BoundColumn" /> stanie początkowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda resetuje określoną komórkę <xref:System.Web.UI.WebControls.BoundColumn> w stanie początkowym. <xref:System.Web.UI.WebControls.BoundColumn.InitializeCell%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy elementy w <see cref="T:System.Web.UI.WebControls.BoundColumn" /> można edytować.</summary>
        <value><see langword="true" />Jeśli <see cref="T:System.Web.UI.WebControls.BoundColumn" /> nie można edytować elementów w elemencie, w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> , aby określić, czy elementy <xref:System.Web.UI.WebControls.BoundColumn> w można edytować. Ta właściwość może również służyć do programistycznego określania, czy kolumna jest tylko do odczytu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> właściwości, aby określić, że jest tylko do <xref:System.Web.UI.WebControls.BoundColumn> odczytu. Plik. aspx definiuje trzy kontrolki BoundColumn i ustawia kolumnę Item na tylko do odczytu.  
  
 [!code-aspx-csharp[BoundColumnReadOnly#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnReadOnly/CS/boundcolumnreadonlycs.aspx#1)]
 [!code-aspx-vb[BoundColumnReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnReadOnly/VB/boundcolumnreadonlyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="thisExpr">
      <MemberSignature Language="C#" Value="public static readonly string thisExpr;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string thisExpr" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundColumn.thisExpr" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly thisExpr As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ thisExpr;" />
      <MemberSignature Language="F#" Value=" staticval mutable thisExpr : string" Usage="System.Web.UI.WebControls.BoundColumn.thisExpr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje ciąg "!". To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundColumn.thisExpr> Użyj pola, aby reprezentować ciąg "!".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
