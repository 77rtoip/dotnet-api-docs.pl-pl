<Type Name="PagedDataSource" FullName="System.Web.UI.WebControls.PagedDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c85223a2e9f4b98fb0f619770771ac0d39b78bd7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414589" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PagedDataSource" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagedDataSource&#xA;Implements ICollection, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagedDataSource sealed : System::Collections::ICollection, System::ComponentModel::ITypedList" />
  <TypeSignature Language="F#" Value="type PagedDataSource = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Hermetyzuje właściwości powiązane z stronicowaniem formantu powiązanego z danymi ( <see cref="T:System.Web.UI.WebControls.DataGrid" />takie jak <see cref="T:System.Web.UI.WebControls.GridView" /> <see cref="T:System.Web.UI.WebControls.DetailsView" />,, i <see cref="T:System.Web.UI.WebControls.FormView" />), które umożliwiają jego wykonywanie stronicowania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.DetailsView>Klasa hermetyzuje właściwości, które zezwalają na stronicowanie formantów źródła danych, takie jak,,, i. <xref:System.Web.UI.WebControls.PagedDataSource> Ta klasa jest używana przez deweloperów kontrolujących, gdy zapewnia obsługę stronicowania w niestandardowym formancie związanym z danymi.  
  
 Ta klasa używa najlepszej dostępnej metody, aby wyliczyć dane należące do bieżącej strony. Jeśli bazowe źródło danych obsługuje indeksowany dostęp (na przykład <xref:System.Array?displayProperty=nameWithType> i <xref:System.Collections.IList?displayProperty=nameWithType>), ta klasa używa tej klasy. W przeciwnym razie używa modułu wyliczającego utworzonego <xref:System.Collections.IEnumerable.GetEnumerator%2A> przez metodę.  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.PagedDataSource>, <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> Zobacz Konstruktor.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagedDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.PagedDataSource> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.PagedDataSource>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|  
|<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|10|  
|<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy w formancie powiązanym z danymi włączono funkcję stronicowania niestandardowego.</summary>
        <value><see langword="true" />Jeśli jest włączone stronicowanie niestandardowe; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> , aby określić, czy jest włączone stronicowanie niestandardowe. Niestandardowe stronicowanie jest opcjonalnym typem stronicowania dostarczanym przez <xref:System.Web.UI.WebControls.DataGrid> formant. ASP.NET w wersji 2,0 formant powiązany z danymi (na <xref:System.Web.UI.WebControls.GridView>przykład <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.FormView>) używa stronicowania po stronie serwera i nie obsługuje stronicowania niestandardowego. Niestandardowe stronicowanie i stronicowanie po stronie serwera wykluczają się wzajemnie. Jeśli ustawisz <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> `true`opcję, upewnij się, <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> że jest ustawiona `false`na.  
  
 Aby uzyskać więcej informacji na temat niestandardowego stronicowania, zobacz <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy stronicowanie jest włączone w formancie powiązanym z danymi.</summary>
        <value><see langword="true" />Jeśli stronicowanie jest włączone; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> , aby określić, czy kontrolka powiązania danych ma włączone stronicowanie. ASP.NET w wersji 2,0 formanty powiązane z danymi (takie <xref:System.Web.UI.WebControls.GridView>jak <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.FormView>) używają również stronicowania po stronie serwera w celu zapewnienia automatycznej funkcjonalności stronicowania. Aby uzyskać więcej informacji na temat stronicowania po stronie <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>serwera, zobacz. Korzystając z <xref:System.Web.UI.WebControls.DataGrid> formantu, można również udostępnić własną logikę stronicowania niestandardowego. Aby uzyskać więcej informacji na temat niestandardowego stronicowania <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType>, zobacz <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> i.  
  
 Aby uzyskać więcej informacji o obsłudze stronicowania dla formantów powiązanych z danymi `AllowPaging` , zobacz Właściwość kontrolki powiązanej z danymi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowServerPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowServerPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowServerPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączone stronicowanie po stronie serwera.</summary>
        <value><see langword="true" />Po włączeniu stronicowania po stronie serwera; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET w wersji 2,0 kontrolki powiązane z danymi ( <xref:System.Web.UI.WebControls.GridView>takie <xref:System.Web.UI.WebControls.DetailsView>jak, <xref:System.Web.UI.WebControls.FormView>i) zapewniają automatyczne funkcje stronicowania przy użyciu stronicowania po stronie serwera. W przypadku używania kontrolki powiązanej z danymi z ASP.NET 2,0 należy ustawić `true`tę właściwość na.  
  
> [!NOTE]
>  Stronicowanie po stronie serwera i stronicowanie niestandardowe wykluczają się wzajemnie. Jeśli ustawisz <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> `true`opcję, upewnij się, <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> że jest ustawiona `false`na.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="pagedDataSource.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Wartość zerowa <see cref="T:System.Array" /> , która odbiera skopiowane elementy ze źródła danych.</param>
        <param name="index">Pierwsza pozycja w określonym <see cref="T:System.Array" /> do odebrania skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy ze źródła danych do określonego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu <see cref="T:System.Array" />w.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby skopiować zawartość źródła danych do określonego <xref:System.Array?displayProperty=nameWithType>, rozpoczynając od określonego indeksu. <xref:System.Array?displayProperty=nameWithType> Jest często używany do iteracji przez elementy w źródle danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów, które mają być używane ze źródła danych.</summary>
        <value>Liczba elementów, które mają być używane ze źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> , aby określić liczbę elementów, które mają być używane ze źródła danych. Zwracana wartość zależy od tego, czy stronicowanie jest włączone, oraz od tego, czy jest używane stronicowanie niestandardowe.  
  
-   Jeśli stronicowanie jest wyłączone (przez ustawienie <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> właściwości na `false`) <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> , zwracana jest wartość właściwości.  
  
-   Jeśli stronicowanie jest włączone (przez ustawienie <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> właściwości na `true`) i <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> włączono stronicowanie niestandardowe (przez ustawienie właściwości <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> ustawionej na `true`), zwracana jest wartość właściwości.  
  
-   Jeśli stronicowanie jest włączone (przez ustawienie <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> właściwości na `true`), a <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> Właściwość <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> jest ustawiona na `false`, zwracana jest wartość właściwości.  
  
-   Jeśli stronicowanie jest włączone (przez ustawienie <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> właściwości na `true`), stronicowanie niestandardowe jest <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> wyłączone (przez ustawienie właściwości `false`), a <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> właściwość jest ustawiona na `true`, wartość <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>przed zwróceniem właściwość jest odejmowana od wartości <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> właściwości.  
  
> [!NOTE]
>  Jeśli właściwość zawiera `null`, zwracana jest wartość 0. <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks bieżącej strony.</summary>
        <value>Indeks bieżącej strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> , aby określić lub określić indeks bieżącej strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ DataSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Collections.IEnumerable with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia źródło danych.</summary>
        <value><see cref="T:System.Collections.IEnumerable" /> Zaimplementowany obiekt, który reprezentuje źródło danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> , aby określić lub określić źródło danych, które jest stronicowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataSourceCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w źródle danych.</summary>
        <value>Liczba elementów w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> , aby określić liczbę elementów w źródle danych. W przypadku użycia niestandardowego stronicowania lub stronicowania po stronie serwera wartość <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> właściwości jest zwracana; w przeciwnym razie całkowita liczba elementów w źródle danych jest zwracana.  
  
> [!NOTE]
>  Jeśli właściwość zawiera `null`, zwracana jest wartość 0. <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Źródło danych nie <see cref="T:System.Collections.ICollection" /> jest zaimplementowanym obiektem.</exception>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="FirstIndexInPage">
      <MemberSignature Language="C#" Value="public int FirstIndexInPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstIndexInPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstIndexInPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstIndexInPage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstIndexInPage : int" Usage="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks pierwszego rekordu wyświetlanego na stronie.</summary>
        <value>Indeks pierwszego rekordu wyświetlanego na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> Użyj właściwości, aby określić indeks pierwszego elementu na bieżącej stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> `true` `null`Jeśli właściwość jest ustawiona na `false`, lub właściwości lubsąustawionenalubwłaściwośćzawiera,zwracanajestwartość0.<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="pagedDataSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.IEnumerator" /> Zwraca zaimplementowany obiekt, który zawiera wszystkie elementy w źródle danych.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Zaimplementowany obiekt, który zawiera wszystkie elementy w źródle danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody <xref:System.Collections.IEnumerator?displayProperty=nameWithType> , aby utworzyć, którą można wykonać, aby pobrać każdy element ze źródła danych. Aby uzyskać dostęp do elementu w bieżącym położeniu modułu wyliczającego, <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> Użyj właściwości. Użyj metody <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> , aby przejść do następnego elementu w kolekcji. Aby przenieść moduł wyliczający do jego początkowej pozycji, użyj <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metody.  
  
> [!NOTE]
>  Kiedy początkowo pobierasz moduł wyliczający lub Użyj <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metody, aby przenieść moduł wyliczający do pierwszego elementu w kolekcji, należy <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> wywołać metodę. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwość jest niezdefiniowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pagedDataSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów, która zawiera zwracaną nazwę listy. Może to być <see langword="null" />.</param>
        <summary><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zwraca wartość reprezentującą właściwości dla każdego elementu użytego do powiązania danych.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Reprezentuje właściwości dla każdego elementu użytego do powiązania danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby utworzyć obiekt <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> , który reprezentuje właściwości dla każdego elementu użytego do powiązania danych. <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> Jeśli właściwość jest `null` lub nie <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> jest zaimplementowanym obiektem `null` , jest zwracany. <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> temat metody, <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType>Zobacz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="pagedDataSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów, która zawiera zwracaną nazwę listy. Może to być <see langword="null" />.</param>
        <summary>Zwraca nazwę listy. Ta metoda nie ma zastosowania do tej klasy.</summary>
        <returns><see cref="F:System.String.Empty" />we wszystkich przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dziedziczona z <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> i nie ma zastosowania do tej klasy. Została zaimplementowana, aby <xref:System.String.Empty?displayProperty=nameWithType> zwracała wszystkie przypadki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest włączone stronicowanie niestandardowe.</summary>
        <value><see langword="true" />Jeśli jest włączone stronicowanie niestandardowe; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> , aby określić, czy jest włączone stronicowanie niestandardowe.  
  
> [!NOTE]
>  Aby można było <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> zwrócić `true` <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> tę`true`właściwość, muszą być obie właściwości i.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstPage">
      <MemberSignature Language="C#" Value="public bool IsFirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżąca strona to pierwsza strona.</summary>
        <value><see langword="true" />Jeśli bieżąca strona jest pierwszą stroną; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> Użyj właściwości, aby określić, czy bieżąca strona jest pierwszą stroną.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      </Docs>
    </Member>
    <Member MemberName="IsLastPage">
      <MemberSignature Language="C#" Value="public bool IsLastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżąca strona jest ostatnią stroną.</summary>
        <value><see langword="true" />Jeśli bieżąca strona jest ostatnią stroną; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> Użyj właściwości, aby określić, czy bieżąca strona jest ostatnią stroną.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      </Docs>
    </Member>
    <Member MemberName="IsPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy stronicowanie jest włączone.</summary>
        <value><see langword="true" />Jeśli stronicowanie jest włączone; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> , aby określić, czy stronicowanie jest włączone.  
  
> [!NOTE]
>  Właściwość musi być `true` i <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> właściwość nie może być ustawiona na 0, aby ta właściwość zwracała `true`wartość. <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy źródło danych jest tylko do odczytu.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zaimplementowana w `false`taki sposób, aby zawsze zwracała, co oznacza, że źródło danych może być modyfikowane we wszystkich przypadkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy włączona jest obsługa stronicowania po stronie serwera.</summary>
        <value><see langword="true" />Jeśli stronicowanie jest włączone i stronicowanie po stronie serwera jest wskazywane przy użyciu <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> właściwości; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stronicowanie po stronie serwera jest włączone, <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> gdy <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> właściwości i są ustawione na `true`, a ilość danych pobieranych przez źródło danych nie może być wyświetlana na jednej stronie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do źródła danych jest synchronizowany (bezpieczny wątkowo).</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest pochodną <xref:System.Collections.ICollection?displayProperty=nameWithType> klasy i jest zastępowana, aby zawsze zwracała `false` , aby wskazać, że ta klasa nie jest bezpieczna wątkowo.  
  
 Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> temat właściwości, <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> Zobacz Właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera łączną liczbę stron niezbędną do wyświetlenia wszystkich elementów w źródle danych.</summary>
        <value>Liczba stron, które są niezbędne do wyświetlenia wszystkich elementów w źródle danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> , aby określić liczbę stron niezbędnych do wyświetlenia wszystkich elementów w źródle danych.  
  
> [!NOTE]
>  Jeśli właściwość jest `null`, zwracana jest wartość 0. <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> Jeśli właściwość jest ustawiona na `false` lub <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> właściwość jest ustawiona na 0 lub mniej, zwracana jest wartość 1. <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę elementów do wyświetlenia na jednej stronie.</summary>
        <value>Liczba elementów do wyświetlenia na jednej stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> , aby określić lub określić liczbę elementów do wyświetlenia na jednej stronie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, którego można użyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt, który może służyć do synchronizowania dostępu do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony w tej implementacji jest <xref:System.Web.UI.WebControls.PagedDataSource> samym obiektem.  
  
 Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> temat właściwości, <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> Zobacz Właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="VirtualCount">
      <MemberSignature Language="C#" Value="public int VirtualCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualCount : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wirtualną liczbę elementów w źródle danych, gdy jest używane niestandardowe stronicowanie.</summary>
        <value>Liczba elementów wirtualnych w źródle danych, gdy używane jest stronicowanie niestandardowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> , gdy niestandardowe stronicowanie lub stronicowanie po stronie serwera służy do określenia wirtualnej liczby elementów w źródle danych. Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> temat właściwości, <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType>Zobacz.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      </Docs>
    </Member>
  </Members>
</Type>
