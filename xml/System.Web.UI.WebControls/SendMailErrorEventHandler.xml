<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b3e329efd01ede5b0c453486b17b70304f19317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30690473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e">A <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> obiekt, który zawiera dane zdarzenia.</param>
    <summary>Reprezentuje metodę, która obsługuje <see langword="SendMailError" /> zdarzeń formanty, takie jak <see cref="T:System.Web.UI.WebControls.ChangePassword" /> kontroli, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> kontroli i <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> delegata, należy określić metodę, która obsłuży zdarzenie. Aby skojarzyć zdarzenie z obsługi zdarzeń, należy dodać wystąpienia delegata zdarzenia. Obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, chyba że Usuń delegata z zdarzenia. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Obsługa `SendMailError` zdarzeń umożliwia aplikacji sieci Web nadal będą uruchamiane, nawet jeśli wystąpi wyjątek podczas próby wysłania wiadomości e-mail. Na przykład jest to przydatne, jeśli podczas pracy w Kreatorze wieloetapowych wystąpi wyjątek. Zaleca się, błąd, wyświetlany jest komunikat informacyjny dla użytkownika i Zezwalaj użytkownikowi na Ukończ pracę kreatora, a nie zakończy działania aplikacji.  
  
 Jeśli nie utworzysz programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzeń, lub w przypadku utworzenia programu obsługi zdarzeń, ale pozostaw <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> ustawioną właściwość `false`, aplikacji sieci Web zostanie przestanie działać, jeśli wystąpi błąd podczas wysyłania wiadomości e-mail i będzie ASP.NET Wyświetl komunikat o błędzie.  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Metody umożliwia również klas pochodnych obsługi zdarzenia zamiast <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Jest to preferowana metoda obsługi zdarzeń w klasie pochodzącej z <xref:System.Web.UI.WebControls.ChangePassword> lub <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i obejmuje program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia o nazwie `SendMailError`. Przykładowy kod przyjęto założenie, że witryny sieci Web ASP.NET został skonfigurowany do członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownik został utworzony którego nazwa i hasło są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie prostego uwierzytelniania formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod spróbuje użyć SMTP do wysyłania wiadomości e-mail do użytkownika, aby potwierdzić zmianę. Jest to wykonywane w `SendingMail` obsługi zdarzeń. Aby uzyskać informacje o sposobie konfigurowania serwera SMTP, zobacz [NIB: porady: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Na potrzeby tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykładzie jest tworzony do testowania z powodu błędu do wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowany lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Do użytkownika zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zapoznaj się z przykładem kod poniżej, aby utworzyć źródło określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródło zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiektu ma ustawioną wartość `true` wskazująca, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Skorzystaj z następującego przykładu kodu, jeśli konieczne jest dodanie programowo źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w pierwszym przykładzie kodu działała prawidłowo. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
  </Docs>
</Type>