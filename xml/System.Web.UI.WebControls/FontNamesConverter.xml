<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75056282fb57a24caf5b54882a18df6d9457b6d0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36582298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wykonuje konwersję między ciąg zawierający listę nazw czcionek i Tablica ciągów reprezentujących poszczególnych nazw.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metody tej klasy można przekonwertować jeden ciąg zawierający listę nazw czcionki na tablicę ciągów, które zawierają nazwy poszczególnych. Każda nazwa czcionki w ciągu muszą być oddzielone przecinkami. Na przykład ciąg "arial, razy nowe verdana łacińskich,", konwertowany na tablicy, która zawiera ciągi "arial", "razy nowe łaciński" i "verdana". Należy zauważyć, że przecinki zostaną usunięte wraz z żadnego odstępu na początku lub na końcu nazwy czcionki. Biały znak w środku nazwy czcionki nie zostanie usunięta.  
  
 <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Metoda wykonuje operację odwrotnej. Konwertuje tablicę ciągów zawierających nazwy poszczególnych czcionki na jeden ciąg zawierający listę nazw. Na przykład konwertuje tablicę, która zawiera ciągi "arial", "razy nowe łaciński" i "verdana" na ciąg "arial, razy nowe łacińskich, verdana". Zwróć uwagę, że przecinkami automatycznie są wstawiane między nazwami czcionki bez żadnego odstępu.  
  
 Wywołanie <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> metody, aby sprawdzić, czy konwersja może się przed wywołaniem <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.FontNamesConverter> klasę, aby przekonwertować ciąg zawierający listę nazw czcionek tablica ciągów zawierająca nazwy poszczególnych. Następnie konwertowana z powrotem do jednego ciągu i wyświetlić tablicy ciągów.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FontNamesConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konwerter typów nigdy nie powinien bezpośredni dostęp. Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor> obiektu. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> obiekt, który zawiera informacje o kontekście konwertera typów. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="sourceType">A <see cref="T:System.Type" /> reprezentujący konwersji z typu danych.</param>
        <summary>Określa, czy ten konwerter można przekonwertować obiektu określonego typu danych na tablicę ciągów, które zawierają nazwy poszczególnych czcionek.</summary>
        <returns>
          <see langword="true" /> Jeśli można przekonwertować typu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> metodę, aby określić, czy tablica ciągów zawierająca nazwy poszczególnych czcionek można przekonwertować na określony typ danych.  
  
> [!NOTE]
>  Ten konwerter można przekonwertować tylko z `string` — typ danych. `sourceType` Parametr musi być typu <xref:System.String>. W przeciwnym razie ta metoda zwraca `false` aby wskazać, że nie można przekonwertować na określony typ danych.  
  
 Opcjonalnie można przekazać `null` dla `context` parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> metody. Przykład określa, czy tablica ciągów zawierająca nazwy poszczególnych czcionki przed przeprowadzeniem konwersji można przekonwertować na określony typ danych.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> obiekt, który zawiera informacje o kontekście konwertera typów. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje informacje o kulturze, takich jak języka, kalendarza systemu i tak dalej. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="value">A <see cref="T:System.Object" /> wystąpienie, które reprezentuje źródło ciąg do przekonwertowania z.</param>
        <summary>Konwertuje ciąg, który reprezentuje listę nazw czcionek na tablicę ciągów, które zawierają nazwy poszczególnych czcionek.</summary>
        <returns>A <see cref="T:System.Object" /> wystąpienia, który reprezentuje tablica ciągów zawierająca nazwy poszczególnych czcionek.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> metodę, aby przekonwertować ciąg zawierający listę nazw czcionki na tablicę ciągów, które zawierają nazwy poszczególnych. Każda nazwa czcionki w ciągu muszą być oddzielone przecinkami. Na przykład ciąg "arial, razy nowe verdana łacińskich,", konwertowany na tablicy, która zawiera ciągi "arial", "razy nowe łaciński" i "verdana". Zwróć uwagę, że przecinki zostaną usunięte wraz z żadnego odstępu na początku lub na końcu nazwy czcionki. Biały znak w środku nazwy czcionki nie zostanie usunięta.  
  
> [!NOTE]
>  `context` i `culture` parametry nie są używane w tej wersji metody; są one zarezerwowane dla przyszłych wersji metody. Opcjonalnie można przekazać `null` dla tych parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> do przekonwertowania na tablicę ciągów, które zawierają nazwy poszczególnych ciąg zawierający listę nazw czcionek.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> nie jest typu <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> obiekt, który zawiera informacje o kontekście konwertera typów. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje informacje o kulturze, takich jak języka, kalendarza systemu i tak dalej. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="value">Obiekt, który reprezentuje źródłowa tablica ciągów w celu przekonwertowania z.</param>
        <param name="destinationType">A <see cref="T:System.Object" /> wystąpienia obiektu, który reprezentuje można przekonwertować na typ danych. Ten parametr musi być typu <see cref="T:System.String" />.</param>
        <summary>Tworzy ciąg, który reprezentuje listę nazw czcionek z tablica ciągów zawierająca nazwy poszczególnych czcionek.</summary>
        <returns>A <see cref="T:System.Object" /> wystąpienia, który reprezentuje ciąg zawierający listę nazw czcionek.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> do przekonwertowania na tablicę ciągów zawierających nazwy poszczególnych czcionki na jeden ciąg zawierający listę nazw. Na przykład konwertuje tablicę, która zawiera ciągi "arial", "razy nowe łaciński" i "verdana" na ciąg "arial, razy nowe łacińskich, verdana". Zwróć uwagę, że przecinkami automatycznie są wstawiane między nazwami czcionki bez żadnego odstępu.  
  
> [!NOTE]
>  Ten konwerter można przekonwertować tylko z `string` — typ danych. `destinationType` Parametr musi być typu <xref:System.String>.  
  
> [!NOTE]
>  `context` i `culture` parametry nie są używane w tej wersji metody; są one zarezerwowane dla przyszłych wersji metody. Opcjonalnie można przekazać `null` dla tych parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> metodę, aby przekonwertować tablica ciągów zawierająca nazwy poszczególnych do jednego ciągu, który zawiera listę nazw czcionek.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> nie jest typu <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>