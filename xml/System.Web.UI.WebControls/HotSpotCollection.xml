<Type Name="HotSpotCollection" FullName="System.Web.UI.WebControls.HotSpotCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8c2eb9f889800d7d6a1724745e124390b9f21ea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HotSpotCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HotSpotCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.HotSpotCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HotSpotCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HotSpotCollection sealed : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type HotSpotCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.HotSpotCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiektów wewnątrz <see cref="T:System.Web.UI.WebControls.ImageMap" /> formantu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HotSpotCollection> Klasa reprezentuje kolekcję, która umożliwia <xref:System.Web.UI.WebControls.ImageMap> formantu, aby utrzymywać listę <xref:System.Web.UI.WebControls.HotSpot> obiekty zawiera.  
  
 Użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> metody w celu dodania określonej <xref:System.Web.UI.WebControls.HotSpot> obiektu do kolekcji na końcu tablicy indeksem. Użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> metody w celu dodania <xref:System.Web.UI.WebControls.HotSpot> obiektu do kolekcji w określonej lokalizacji indeksu. Użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A> indeksatora bezpośredni dostęp do <xref:System.Web.UI.WebControls.HotSpot> obiektu w kolekcji w określonym indeksie, za pomocą prostego tablicy notacji.  
  
 Użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.HotSpot> obiektu na końcu kolekcji. Użyj <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.HotSpot> obiektu z określonej lokalizacji indeksu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia programowo <xref:System.Web.UI.WebControls.ImageMap> sterować i dodaj dwa <xref:System.Web.UI.WebControls.CircleHotSpot> obiektów do niej. <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> Właściwość jest używana do dostępu <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji dla <xref:System.Web.UI.WebControls.ImageMap> sterować i Dodaj <xref:System.Web.UI.WebControls.CircleHotSpot> obiektów do niej. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[ImageMap.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageMap.Cstr/CS/imagemap.cstrcs.aspx#1)]
 [!code-aspx-vb[ImageMap.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageMap.Cstr/VB/imagemap.cstrvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
    <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HotSpotCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HotSpotCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku przesłonięcia w klasie pochodnej, ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.HotSpotCollection> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.CircleHotSpot.%23ctor%2A> konstruktora, aby programowo utworzyć dwa <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty i dodaj je do <xref:System.Web.UI.WebControls.ImageMap> formantu. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[ImageMap.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageMap.Cstr/CS/imagemap.cstrcs.aspx#1)]
 [!code-aspx-vb[ImageMap.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageMap.Cstr/VB/imagemap.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CircleHotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.RectangleHotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.PolygonHotSpot" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.HotSpot spot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.HotSpot spot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (spot As HotSpot) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::HotSpot ^ spot);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.HotSpot -&gt; int" Usage="hotSpotCollection.Add spot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spot" Type="System.Web.UI.WebControls.HotSpot" />
      </Parameters>
      <Docs>
        <param name="spot">
          <see cref="T:System.Web.UI.WebControls.HotSpot" /> Obiekt można dołączyć do kolekcji.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiekt na koniec <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> kolekcji.</summary>
        <returns>Indeks, w którym obiekt został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> Metody dodaje określony <xref:System.Web.UI.WebControls.HotSpot> obiekt do końca kolekcji. Aby dodać <xref:System.Web.UI.WebControls.HotSpot> obiektu do kolekcji w lokalizacji określonego indeksu, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia programowo <xref:System.Web.UI.WebControls.ImageMap> sterować i dodaj dwa <xref:System.Web.UI.WebControls.CircleHotSpot> obiektów do niej. <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> Właściwość jest używana do dostępu <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji dla <xref:System.Web.UI.WebControls.ImageMap> sterować i Dodaj <xref:System.Web.UI.WebControls.CircleHotSpot> obiektów do niej. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[ImageMap.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageMap.Cstr/CS/imagemap.cstrcs.aspx#1)]
 [!code-aspx-vb[ImageMap.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageMap.Cstr/VB/imagemap.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
        <altmember cref="M:System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)" />
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="hotSpotCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="hotSpotCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.HotSpot spot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.HotSpot spot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, spot As HotSpot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::HotSpot ^ spot);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.HotSpot -&gt; unit" Usage="hotSpotCollection.Insert (index, spot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="spot" Type="System.Web.UI.WebControls.HotSpot" />
      </Parameters>
      <Docs>
        <param name="index">Indeks tablicy, w której ma zostać dodany <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiektu.</param>
        <param name="spot">
          <see cref="T:System.Web.UI.WebControls.HotSpot" /> Obiekt do dodania do kolekcji.</param>
        <summary>Wstawia określoną <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiekt do <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> kolekcji w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> Metody dodaje określony <xref:System.Web.UI.WebControls.HotSpot> obiektu do kolekcji w określonej lokalizacji indeksu. Aby dołączyć <xref:System.Web.UI.WebControls.HotSpot> obiektu do końca kolekcji, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób programowego dodawania dwóch <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty do <xref:System.Web.UI.WebControls.ImageMap> formantu. <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> Właściwość jest używana do dostępu <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji. <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> Dodaje metody `Circle2` do kolekcji. <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> Dodaje metody `Circle1` do kolekcji w pierwszym elementem w przód `Circle2`. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[HotSpotCollection.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HotSpotCollection.Insert/CS/hotspotcollection.insertcs.aspx#1)]
 [!code-aspx-vb[HotSpotCollection.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HotSpotCollection.Insert/VB/hotspotcollection.insertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)" />
        <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.HotSpot this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.HotSpot Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HotSpot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::HotSpot ^ default[int] { System::Web::UI::WebControls::HotSpot ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.HotSpot" Usage="System.Web.UI.WebControls.HotSpotCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HotSpot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Wartość indeksem, który określa lokalizację <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiektu w kolekcji.</param>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiektu pod określonym indeksem <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> kolekcji.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HotSpot" /> Obiektu pod określonym indeksem <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego indeksatora, aby uzyskać dostęp do <xref:System.Web.UI.WebControls.HotSpot> obiektu w kolekcji w określonym indeksie, używając notacji tablicy. Indeksator pozwala na modyfikację lub Zastąp <xref:System.Web.UI.WebControls.HotSpot> obiektu w kolekcji bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A> właściwości bezpośredni dostęp do <xref:System.Web.UI.WebControls.HotSpot> obiektów zawartych w <xref:System.Web.UI.WebControls.ImageMap> formantu <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji i wyświetlanie wartość każdego obiektu <xref:System.Web.UI.WebControls.HotSpot.AlternateText%2A> właściwości w Etykieta na stronie. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[HotSpotCollection.Item#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HotSpotCollection.Item/CS/hotspotcollection.itemcs.aspx#1)]
 [!code-aspx-vb[HotSpotCollection.Item#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HotSpotCollection.Item/VB/hotspotcollection.itemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="hotSpotCollection.OnValidate o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.HotSpot spot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.HotSpot spot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (spot As HotSpot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::HotSpot ^ spot);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.HotSpot -&gt; unit" Usage="hotSpotCollection.Remove spot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spot" Type="System.Web.UI.WebControls.HotSpot" />
      </Parameters>
      <Docs>
        <param name="spot">
          <see cref="T:System.Web.UI.WebControls.HotSpot" /> Obiekt ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa określoną <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiekt z <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> Metoda usuwa określoną <xref:System.Web.UI.WebControls.HotSpot> obiekt z kolekcji. Aby usunąć <xref:System.Web.UI.WebControls.HotSpot> obiekt z kolekcji w określonej lokalizacji indeksu, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> metody.  
  
 Aby dodać nowe <xref:System.Web.UI.WebControls.HotSpot> obiekty do kolekcji, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> lub <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób programowego dodawania dwóch <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty do <xref:System.Web.UI.WebControls.ImageMap> formantu. Po dwóch <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty są dodawane do <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji, <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> metoda służy do usuwania `Circle1` z kolekcji. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[HotSpotCollection.Remove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HotSpotCollection.Remove/CS/hotspotcollection.removecs.aspx#1)]
 [!code-aspx-vb[HotSpotCollection.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HotSpotCollection.Remove/VB/hotspotcollection.removevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="hotSpotCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks tablicy, z którego mają zostać usunięte <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiektu.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.HotSpot" /> obiekt w określonej lokalizacji indeksu z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> Usuwa metody <xref:System.Web.UI.WebControls.HotSpot> obiektu w określonej lokalizacji indeksu z kolekcji. Aby usunąć określony <xref:System.Web.UI.WebControls.HotSpot> obiekt z kolekcji według nazwy, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> metody.  
  
 Aby dodać nowe <xref:System.Web.UI.WebControls.HotSpot> obiekty do kolekcji, użyj <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> lub <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób programowego dodawania dwóch <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty do <xref:System.Web.UI.WebControls.ImageMap> formantu. Po dwóch <xref:System.Web.UI.WebControls.CircleHotSpot> obiekty są dodawane do <xref:System.Web.UI.WebControls.HotSpotCollection> kolekcji, <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> metoda jest używana do usunięcia obiektu znajdującego się w pierwszym indeksem w kolekcji. W tym przykładzie działał prawidłowo, należy podać obrazu dla <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości i odpowiednio zaktualizować ścieżkę obrazu, dzięki czemu aplikacja może go zlokalizować.  
  
 [!code-aspx-csharp[HotSpotCollection.RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HotSpotCollection.RemoveAt/CS/hotspotcollection.removeatcs.aspx#1)]
 [!code-aspx-vb[HotSpotCollection.RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HotSpotCollection.RemoveAt/VB/hotspotcollection.removeatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)" />
        <altmember cref="T:System.Web.UI.WebControls.HotSpot" />
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="hotSpotCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>