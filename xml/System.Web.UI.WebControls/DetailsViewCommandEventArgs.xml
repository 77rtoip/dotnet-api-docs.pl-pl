<Type Name="DetailsViewCommandEventArgs" FullName="System.Web.UI.WebControls.DetailsViewCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="063c6c389ffdb8dbcff619372480089c8b687005" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69392610" /></Metadata><TypeSignature Language="C#" Value="public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type DetailsViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.CommandField>Kontrolka <xref:System.Web.UI.WebControls.ButtonField>wywołuje zdarzenie, gdy kliknięto przycisk wewnątrz pola, lub wiersza. <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> <xref:System.Web.UI.WebControls.DetailsView> Pozwala to na dostarczenie procedury obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  Kontrolka wywołuje również inne wyspecjalizowane zdarzenia po kliknięciu pewnych przycisków (przyciski `CommandName` z właściwością ustawioną na "Delete", "INSERT", "page" lub "Update"). <xref:System.Web.UI.WebControls.DetailsView> W przypadku korzystania z jednego z tych przycisków należy rozważyć użycie jednego ze specjalnych zdarzeń dostarczonych przez formant (na <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> przykład lub <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).  
  
 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> Obiekt jest przesyłany do procedury obsługi zdarzeń. Jeśli przycisk, który spowodował zdarzenie, ma nazwę polecenia lub wartość argumentu polecenia, można użyć <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> obiektu, aby określić te wartości. Aby określić nazwę polecenia i argument polecenia klikniętego przycisku, użyj <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> odpowiednio właściwości i. <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Możesz również uzyskać dostęp do <xref:System.Web.UI.WebControls.DetailsView> kontrolki, która wywołała zdarzenie <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> przy użyciu właściwości.  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> klasy, <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> obiektu przekazaną do procedury obsługi zdarzeń dla zdarzenia, <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> aby określić nazwę polecenia klikniętego przez użytkownika. W tym przykładzie zastosowano model kodowania jednoplikowego.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/CS/detailsviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/VB/detailsviewcommandeventargsvb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje model kodowania związany z kodem w poprzednim przykładzie. Aby ten przykład działał, należy skopiować poniższy kod do skojarzonego pliku związanego z kodem.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx#1)]  
  
 Poniższy przykład kodu pokazuje plik związany z kodem dla poprzedniego przykładu.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx.cs#2)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.DetailsViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.DetailsViewCommandEventArgs" Usage="new System.Web.UI.WebControls.DetailsViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">Źródło polecenia.</param>
        <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|Wartość <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> `originalArgs` właściwości <xref:System.Web.UI.WebControls.CommandEventArgs> zawartej w parametrze.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|Wartość <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> `originalArgs` właściwości <xref:System.Web.UI.WebControls.CommandEventArgs> obiektu zawartego w parametrze.|  
|<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|Obiekt zawarty w `commandSource` parametrze.|  
  
> [!NOTE]
>  Ten konstruktor jest używany głównie przez kontrolowanie deweloperów podczas podnoszenia zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera źródło polecenia.</summary>
        <value>Wystąpienie <see cref="T:System.Object" /> klasy, która reprezentuje źródło polecenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> Użyj właściwości, aby uzyskać dostęp do właściwości obiektu, który reprezentuje źródło polecenia. W niektórych przypadkach będzie <xref:System.Web.UI.WebControls.DetailsView> to sama kontrolka, a w innych przypadkach będzie <xref:System.Web.UI.WebControls.Button> to formant, który został kliknięty.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> aby określić, które z dwóch <xref:System.Web.UI.WebControls.DetailsView> formantów spowodowały <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> zdarzenie.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/CS/detailsviewcommandeventargscommandsourcecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/VB/detailsviewcommandeventargscommandsourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolka obsłużył zdarzenie.</summary>
        <value><see langword="true" />Jeśli kod zdarzenia powiązany z danymi został pominięty lub zakończył działanie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` w programie obsługi zdarzeń, aby określić <xref:System.Web.UI.WebControls.DetailsView> , że kontrolka nie powinna obsłużyć zdarzenia, ponieważ obsługuje je w kodzie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
