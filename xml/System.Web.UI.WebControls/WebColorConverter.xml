<Type Name="WebColorConverter" FullName="System.Web.UI.WebControls.WebColorConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bd724025bf47d20ed580a85e1e5fcd5d19f54c4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebColorConverter : System.Drawing.ColorConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebColorConverter extends System.Drawing.ColorConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebColorConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class WebColorConverter&#xA;Inherits ColorConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebColorConverter : System::Drawing::ColorConverter" />
  <TypeSignature Language="F#" Value="type WebColorConverter = class&#xA;    inherit ColorConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.ColorConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konwertuje nazwę kolor wstępnie zdefiniowanych lub wartości kolorów RGB do i z <see cref="T:System.Drawing.Color" /> obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebColorConverter> Klasa jest używana do konwertowania <xref:System.Drawing.Color?displayProperty=nameWithType> obiektu wstępnie zdefiniowane nazwy lub wartości kolorów RGB. On również służy do konwertowania nazwy kolor wstępnie zdefiniowanych lub wartości kolorów RGB do <xref:System.Drawing.Color?displayProperty=nameWithType> obiektu.  
  
> [!CAUTION]
>  Konwerter typów nigdy nie powinien bezpośredni dostęp. Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType>. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter?displayProperty=nameWithType> Przegląd klasy.  
  
 Poniższa lista zawiera szesnastu nazwy kolor wstępnie zdefiniowanego HTML, które można użyć:  
  
-   Czarne  
  
-   Niebieski  
  
-   Błękitny  
  
-   Szary  
  
-   Zielony  
  
-   Wapna  
  
-   Amarantowy  
  
-   Kasztanowy  
  
-   Marynarki  
  
-   Oliwek  
  
-   Purpurowa  
  
-   Czerwony  
  
-   Srebrny  
  
-   Jest  
  
-   Biały  
  
-   Żółty  
  
 Można również określić niestandardowego koloru przy użyciu liczbą szesnastkową poprzedzone znakiem numeru (#), w postaci `#RRGGBB`. `RR`, `GG`, i `BB` reprezentują wartości szesnastkowe z przedziału od 0 do 255 wskazujących składniki czerwony, zielonemu i niebieskiemu koloru,. Na przykład wartość `#0000FF` reprezentuje kolor niebieski. Określa wartość minimalną (`00`) dla składników czerwony i zielony podczas określania wartości maksymalnej (`FF`) dla składnika niebieski.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebColorConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebColorConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebColorConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebColorConverter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="webColorConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Wskazuje, w kontekście obiektu do skonwertowania.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje informacje o kulturze, takich jak języka, kalendarza systemu i tak dalej. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje podaną wartość do typu konwertera.</summary>
        <returns>Obiekt wyniku konwersji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="webColorConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Wystąpienie, które wskazuje kontekst obiektu do skonwertowania.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje informacje o kulturze, takich jak języka, kalendarza systemu i tak dalej. Ten parametr nie jest używany w przypadku tej metody. Jest on zarezerwowany do przyszłych wersji tej metody. Opcjonalnie można przekazać <see langword="null" /> dla tego parametru.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <param name="destinationType">Typ docelowy konwersji.</param>
        <summary>Konwertuje określony obiekt określonego typu.</summary>
        <returns>Obiekt wyniku konwersji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>