<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97835c334aeb6983aa3c9003c8dd43555415c178" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323401" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla formant przycisku polecenia, na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#Introduction)  
  
-   [Zachowanie zwrotu przycisku i zdarzeń serwera](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Obsługa zdarzeń przycisku w skrypt po stronie klienta](#HandlingButtonEventsinClientScript)  
  
-   [Formanty przycisków i sprawdzanie poprawności](#ButtonControlsAndValidation)  
  
-   [Przyciski w formantach danych](#ButtonsInDataControls)  
  
-   [Powiązywanie danych z kontrolkami](#BindingDataToTheControls)  
  
-   [Za pomocą przycisków przy użyciu formantów UpdatePanel](#UsingButtonsWithUpdatePanelControls)  
  
-   [Składni deklaratywnej](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj <xref:System.Web.UI.WebControls.Button> formantu do utworzenia przycisku na stronie sieci Web, pozwalającą użytkownikom na do publikowania strony do serwera. Kontrolka wyzwala zdarzenie w kodzie serwera, który może obsłużyć, aby odpowiedzieć na zwrot. Może również wywołać zdarzenie w skrypcie klienta, który może obsłużyć, zanim strona jest przesyłana lub które Uruchom, a następnie anulować przesyłania strony.  
  
> [!NOTE]
>  Program ASP.NET zawiera kilka rodzajów kontrolek przycisku, z których każdy wygląda inaczej na stronach sieci Web. Są one <xref:System.Web.UI.WebControls.Button> formant, który jest renderowany jako przycisk polecenia; <xref:System.Web.UI.WebControls.LinkButton> formant, który jest renderowany jako link; i <xref:System.Web.UI.WebControls.ImageButton> formant, który jest renderowany jako obrazu; i <xref:System.Web.UI.WebControls.ImageMap> formant, który umożliwia tworzenie grafiki, która ma punkty aktywne czy użytkownicy mogą kliknąć. Domyślnie strona, po kliknięciu przesyłania wszystkich kontrolek przycisku. Można również użyć <xref:System.Web.UI.HtmlControls.HtmlButton> i <xref:System.Web.UI.HtmlControls.HtmlInputButton> formantów do tworzenia przyciski na stronie, które są programowalnych w kodzie serwera. Aby uzyskać szczegółowe informacje na temat różnic między formantami serwera sieci Web i HTML, zobacz [omówienie kontrolek serwera sieci Web programu ASP.NET](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 Domyślnie <xref:System.Web.UI.WebControls.Button> formant jest przycisk Prześlij. Przycisk Zatwierdź nie ma nazwę polecenia (określony przez <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwość) skojarzonych z przycisku i po prostu wpisów strony sieci Web z powrotem do serwera. Możesz podać program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenie, aby programistycznie sterować akcje wykonywane, gdy kliknięto przycisk Prześlij.  
  
 Przycisk polecenia o nazwie polecenie skojarzone z nim, takie jak `Sort`, ustawiając <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości. Dzięki temu można utworzyć wiele <xref:System.Web.UI.WebControls.Button> kontrolek w sieci Web strony i programowo określenie <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. Można również użyć <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości za pomocą przycisku polecenia, aby zapewnić dodatkowe informacje na temat poleceń do wykonania, takie jak `Ascending`. Możesz podać program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Command> zdarzenie, aby programistycznie sterować akcje wykonywane po kliknięciu przycisku polecenia.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Zachowanie zwrotu przycisku i zdarzeń serwera  
 Po kliknięciu dowolnego przycisku kontrolki serwera sieci Web, strony są wysyłane do serwera. Powoduje to stron sieci Web, które mają być przetwarzane i wszystkie oczekujące zdarzenia do wywołania w kodzie na serwerze. Po zakończeniu wszystkich stron i kontrolujących przetwarzanie strony renderowany w przeglądarce ponownie.  
  
 Przyciski można podnieść swoje własne <xref:System.Web.UI.WebControls.Button.Click> zdarzenia lub <xref:System.Web.UI.WebControls.Button.Command> zdarzenie, które można obsługiwać przy użyciu kodu na serwerze. Stanowi to odmianę zdarzenia w tradycyjnych stron HTML lub w aplikacji sieci Web opartą na kliencie w przypadku, gdy przycisk `onclick` zdarzeń odbywa się przy użyciu języka JavaScript, który jest uruchamiany na kliencie. Aby uzyskać więcej informacji, zobacz [Model zdarzeń formantu serwera ASP.NET sieci Web formularzy](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Gdy użytkownik kliknie kontrolkę przycisku, strona jest przesyłana z powrotem do serwera. Domyślnie strona jest przesyłana z powrotem do samego siebie,  
  
 Można skonfigurować przyciski do opublikowania bieżącej strony do innej strony. Może to być przydatne w przypadku tworzenia wielu stron formularzy. Aby uzyskać więcej informacji, zobacz [Księgowanie między stronami ASP.NET Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Obsługa zdarzeń przycisku w skrypt po stronie klienta  
 Formanty przycisków można podnieść, zarówno serwer zdarzenia i klienta. Serwer zdarzenia występują po odświeżeniu strony i są obsługiwane w kodzie po stronie serwera, który zapisu dla strony. Zdarzenia klienta są wykonywane w skrypcie klienta, zwykle ECMAScript (JavaScript) i są wywoływane przed przesłaniem strony. Przez dodawanie zdarzenia po stronie klienta do kontrolki przycisku ASP.NET, można wykonywać zadania, takie jak wyświetlanie okien dialogowych potwierdzenia przed przesłaniem strony i potencjalnie anulowanie przesyłania. Aby uzyskać więcej informacji, zobacz [skrypt po stronie klienta w programie ASP.NET Web Pages](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) i [jak: Odpowiadanie na zdarzenia kontrolki serwera sieci Web przycisku w skrypt po stronie klienta](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  
  
 Można także <xref:System.Web.UI.WebControls.Button> formantu, aby użyć skryptu klienta do wykonywania zwrotu (a nie po prostu wykonywania operacji HTTP POST). Może to być przydatne, jeśli chcesz programowo manipulować zwrotu, takich jak podłączenie jej do innych elementów na stronie. Możesz ustawić <xref:System.Web.UI.WebControls.Button> kontrolki <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwości `true` spowodować <xref:System.Web.UI.WebControls.Button> formantu, aby użyć skryptu klienta na podstawie zwrotu.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Formanty przycisków i sprawdzanie poprawności  
 Jeśli strona zawiera formanty weryfikacji platformy ASP.NET, domyślnie, klikając kontrolki przycisku powoduje, że kontrolki modułu walidacji jej sprawdzania. Jeśli weryfikacja po stronie klienta jest włączona dla kontrolki modułu walidacji, strona nie jest przekazywana, gdy sprawdzanie poprawności zakończyło się niepowodzeniem.  
  
 W poniższej tabeli opisano właściwości obsługiwanych przez formanty przycisków, które umożliwiają bardziej precyzyjne kontrolowanie proces sprawdzania poprawności.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Określa, czy też kliknięcie przycisku wykonuje sprawdzenie poprawności. Ustaw tę właściwość na `false` zapobiegające sprawdzenie poprawności.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Umożliwia określenie, które moduły weryfikacji na stronie są wywoływane po kliknięciu przycisku. Jeśli żadne sprawdzanie poprawności grupy są ustanowione, kliknij przycisk wywołuje wszystkie moduły weryfikacji, które znajdują się na stronie.|  
  
 Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych wejściowych użytkownika w produkcie ASP.NET Web Pages](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Przyciski w formantach danych  
 Formanty serwera sieci Web przycisk są często używane w formantach danych, takich jak w <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, i <xref:System.Web.UI.WebControls.Repeater> liście kontrolek. W takich przypadkach należy zwykle nie odpowiadaj bezpośrednio na przycisk kliknij zdarzenie. Zamiast tego przycisku w formancie danych wywołuje zdarzenie, które są specyficzne dla kontrolki danych. Na przykład w <xref:System.Web.UI.WebControls.DataList> kontrolki przycisku mogą zgłaszać <xref:System.Web.UI.WebControls.DataList> kontrolki <xref:System.Web.UI.WebControls.DataList.ItemCommand> zdarzeniu zamiast wywoływania <xref:System.Web.UI.WebControls.Button> kontrolki <xref:System.Web.UI.WebControls.Button.Click> zdarzeń.  
  
 Formanty powiązane z danymi listy może zawierać wiele przycisków, można skonfigurować przycisk <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości w celu określenia wartości do przekazania w ramach zdarzenia. Następnie można przetestować dla tego argumentu zobaczyć, który przycisk został kliknięty.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Powiązywanie danych z kontrolkami  
 Formanty serwera sieci Web przycisku można powiązać ze źródłem danych, w celu kontrolowania ustawień właściwości dynamicznie. Na przykład można ustawić przycisku <xref:System.Web.UI.WebControls.Button.Text%2A> właściwości przy użyciu powiązania danych.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Za pomocą przycisków przy użyciu formantów UpdatePanel  
 Częściowe renderowanie strony umożliwia odświeżanie części strony bez zwrotu. <xref:System.Web.UI.UpdatePanel> kontrolki umożliwiające oznaczanie części strony, które uczestniczą w częściowe renderowanie strony. Domyślne zachowanie formanty <xref:System.Web.UI.UpdatePanel> kontrolować, w tym <xref:System.Web.UI.WebControls.Button> steruje się przeprowadzić asynchronicznego zwrotu zamiast ogłaszania zwrotnego. Spowoduje to odświeżenie tylko zawartość <xref:System.Web.UI.UpdatePanel> kontrolować, z której pochodzi zwrotu.  
  
 Oprócz scenariusz <xref:System.Web.UI.WebControls.Button> formant, który znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel> kontrolki, można użyć <xref:System.Web.UI.WebControls.Button> steruje się za pomocą <xref:System.Web.UI.UpdatePanel> kontrolek w następujących scenariuszach:  
  
-   Definiowanie <xref:System.Web.UI.WebControls.Button> formant, który znajduje się poza <xref:System.Web.UI.UpdatePanel> powinna być kontrolka <xref:System.Web.UI.AsyncPostBackTrigger> kontroli tego panelu. Po kliknięciu przycisku, wykonuje asynchroniczny zwrot i odświeża zawartość panelu.  
  
-   Definiowanie <xref:System.Web.UI.WebControls.Button> formant, który znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel> powinna być kontrolka <xref:System.Web.UI.PostBackTrigger> panelu. Po kliknięciu przycisku, wykonuje odświeżenie strony, mimo że znajduje się wewnątrz <xref:System.Web.UI.UpdatePanel> kontroli.  
  
 Aby uzyskać więcej informacji na temat stron częściowych renderowania i przy użyciu <xref:System.Web.UI.UpdatePanel> formantów, zobacz [UpdatePanel informacje o formancie](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowanie części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia Prześlij <xref:System.Web.UI.WebControls.Button> formant, który ogłasza zawartości na serwer strony sieci Web.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak utworzyć polecenie <xref:System.Web.UI.WebControls.Button> kontrolki, która sortuje listy.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Button" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie i inicjuje nowe wystąpienie klasy za pomocą tego konstruktora <xref:System.Web.UI.WebControls.Button> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.Button> klasy.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający strumienia wyjściowego do renderowania na komputerze klienckim.</param>
        <summary>Dodaje atrybuty <see cref="T:System.Web.UI.WebControls.Button" /> formantu do strumienia wyjściowego do renderowania na komputerze klienckim.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób zastąpienia <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> metody w niestandardowy formant serwera, dzięki czemu <xref:System.Web.UI.WebControls.Button> tekst jest zawsze wyświetlany w kolorze czerwonym.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Weryfikacja jest przeprowadzana po <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu formantu.</summary>
        <value><see langword="true" /> Jeśli weryfikacja jest przeprowadzana po <see cref="T:System.Web.UI.WebControls.Button" /> formant jest kliknięto; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie strony jest przeprowadzana Walidacja w przypadku <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. Walidowanie strony określa, czy kontrolki wejściowe skojarzone z formantu sprawdzania poprawności na stronie, które przekazać wszystkie reguły sprawdzania poprawności określonego przez formant sprawdzania poprawności.  
  
 Można określić lub określić, czy sprawdzanie poprawności jest wykonywane zarówno klient, jak i na serwerze po <xref:System.Web.UI.WebControls.Button> kliknięciu formantu przy użyciu <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwości. Aby zapobiec wykonywane sprawdzanie poprawności, ustaw <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość `false`.  
  
> [!NOTE]
>  Należy ustawić <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwości `false` podczas, używania <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwość ogłosić innej strony. Sprawdzania poprawności należy sprawdzić jawnie, gdy opublikowanie innej strony. Aby uzyskać przykład, zobacz sekcję Uwagi <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości.  
  
 Ta właściwość jest zazwyczaj równa `false` dla `reset` lub `clear` przycisk, aby zapobiec weryfikacji z wykonywana po kliknięciu przycisku.  
  
 Gdy wartość <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość jest ustawiona na `true`, można również użyć <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwość, aby określić nazwę grupy sprawdzania poprawności, dla których <xref:System.Web.UI.WebControls.Button> kontrola powoduje, że sprawdzanie poprawności.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość, aby zapobiec Walidowanie strony występowaniu. Należy pamiętać, że <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> metoda aktywuje każdego formantu sprawdzania poprawności niezależnie.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. To zdarzenie jest często używana nazwa polecenia nie jest skojarzona z <xref:System.Web.UI.WebControls.Button> kontrola (na przykład przy użyciu przycisku Prześlij).  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i kodu programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> stronie zdarzeń, aby wyświetlić komunikat w sieci Web, gdy <xref:System.Web.UI.WebControls.Button> kliknięciu formantu.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. To zdarzenie jest często używana nazwa polecenia, takie jak `Sort`, jest skojarzona z <xref:System.Web.UI.WebControls.Button> kontroli. Dzięki temu można utworzyć wiele <xref:System.Web.UI.WebControls.Button> kontrolek w sieci Web strony i programowo określenie <xref:System.Web.UI.WebControls.Button> kliknięciu formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> Zdarzenie jest wywoływane za pośrednictwem hierarchii kontroli w formie `BubbleEvent`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i kodu programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Command> zdarzenie, aby posortować listę po <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. W tym przykładzie określa program obsługi zdarzeń deklaratywne, przy użyciu <xref:System.Web.UI.WebControls.Button.OnClick%2A> właściwość <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób określenia programu obsługi zdarzeń i programowo dodać do zdarzenia w `Page_Load` metody.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcjonalny parametr przekazywany do <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzeń wraz ze skojarzonym <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</summary>
        <value>Opcjonalny parametr przekazany do <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzeń wraz ze skojarzonym <see cref="P:System.Web.UI.WebControls.Button.CommandName" />. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwość, aby określić parametr będący gratulacjami <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości.  
  
> [!NOTE]
>  Chociaż można ustawić <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwość samodzielnie, jest zwykle używana tylko w przypadku <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwość jest również ustawiona.  
  
 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Uzupełniające właściwość <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości, dzięki czemu możesz podać dodatkowe informacje dotyczące polecenia do wykonania. Na przykład jeśli ustawisz <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości `Sort` i <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości `Ascending`, należy określić polecenie, aby sortować w kolejności rosnącej.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości, aby utworzyć <xref:System.Web.UI.WebControls.Button> kontrolki, która sortuje listę w kolejności rosnącej.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę polecenie skojarzone z <see cref="T:System.Web.UI.WebControls.Button" /> formant, który jest przekazywany do <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzeń.</summary>
        <value>Nazwę polecenia <see cref="T:System.Web.UI.WebControls.Button" /> kontroli. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli masz wiele <xref:System.Web.UI.WebControls.Button> kontrolki na stronie sieci Web używać <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości do określania lub ustalania nazwa polecenia związany z każdą <xref:System.Web.UI.WebControls.Button> kontroli. Możesz ustawić <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwość o dowolny ciąg, który identyfikuje polecenie do wykonania. Następnie możesz programowo określić nazwę polecenia <xref:System.Web.UI.WebControls.Button> kontroli i wykonać odpowiednie działania.  
  
 Dodatkowe informacje na temat polecenia, takie jak `Ascending`, można określić za pomocą <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości, aby utworzyć <xref:System.Web.UI.WebControls.Button> kontrolki, która sortuje listy.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.PostBackOptions" /> obiekt, który reprezentuje <see cref="T:System.Web.UI.WebControls.Button" /> zwrotu zachowania formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.PostBackOptions" /> reprezentujący <see cref="T:System.Web.UI.WebControls.Button" /> zwrotu zachowania formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> Metoda tworzy <xref:System.Web.UI.PostBackOptions> obiekt, który reprezentuje <xref:System.Web.UI.WebControls.Button> zwrotu zachowania formantu. <xref:System.Web.UI.PostBackOptions> Obiektu zwykle są następnie przekazywane do <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> metody, która jest używana do uzyskiwania odwołanie do funkcji skryptu po stronie klienta, gdy wywoływany, powoduje, że serwer Opublikuj na stronie.  
  
 Ta metoda jest używana przede wszystkim deweloperom sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.Button> klasy.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> metody w klasie pochodnej zmodyfikować zwrotu opcje dla formantu button lub wywołanie skryptu po stronie klienta, po kliknięciu przycisku. Pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> metody, aby standardowych opcji zwrotu są ustawione.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt po stronie klienta w programie ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.Button.Click" /> zdarzenia <see cref="T:System.Web.UI.WebControls.Button" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. To zdarzenie jest często używana nazwa polecenia nie jest skojarzona z <xref:System.Web.UI.WebControls.Button> kontrola (na przykład przy użyciu przycisku Prześlij).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.Button.OnClick%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i kodu programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> zdarzeń, aby wyświetlić komunikat prostego na stronie sieci Web.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia skrypt po stronie klienta, który jest wykonywany, gdy <see cref="T:System.Web.UI.WebControls.Button" /> kontrolki <see cref="E:System.Web.UI.WebControls.Button.Click" /> zdarzenie jest wywoływane.</summary>
        <value>Skrypt po stronie klienta, który jest wykonywany, gdy <see cref="T:System.Web.UI.WebControls.Button" /> kontrolki <see cref="E:System.Web.UI.WebControls.Button.Click" /> zdarzenie jest wywoływane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> właściwości w celu określenia dodatkowych skryptu po stronie klienta, który jest wykonywany, gdy <xref:System.Web.UI.WebControls.Button> kontrolki <xref:System.Web.UI.WebControls.Button.Click> zdarzenie jest wywoływane. Skrypt, który określisz dla tej właściwości jest wyświetlana w <xref:System.Web.UI.WebControls.Button> kontrolki `OnClick` atrybut oprócz formantu wstępnie zdefiniowane skryptu po stronie klienta.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Projekt witryny internetowego programu Visual Studio z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](https://go.microsoft.com/fwlink/?LinkId=192871).  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> właściwości w celu określenia dodatkowych skryptu po stronie klienta, który jest wykonywany, gdy <xref:System.Web.UI.WebControls.Button> kliknięciu formantu.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzenia <see cref="T:System.Web.UI.WebControls.Button" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> Zdarzenie jest zgłaszane w przypadku <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. To zdarzenie jest często używana nazwa polecenia, takie jak `Sort`, jest skojarzona z <xref:System.Web.UI.WebControls.Button> kontroli. Dzięki temu można utworzyć wiele <xref:System.Web.UI.WebControls.Button> kontrolek w sieci Web strony i programowo określenie <xref:System.Web.UI.WebControls.Button> kliknięciu formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> Zdarzenie jest wywoływane za pośrednictwem hierarchii kontroli w formie `BubbleEvent`.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i kodu programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Command> zdarzenie, aby posortować listę po <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. W tym przykładzie określa program obsługi zdarzeń deklaratywne, przy użyciu <xref:System.Web.UI.WebControls.Button.OnClick%2A> właściwość <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób określenia programu obsługi zdarzeń i programowo dodać do zdarzenia w `Page_Load` metody.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Określa, czy przycisk został kliknięty przed renderowaniem na komputerze klienckim.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> Metoda jest używana przede wszystkim deweloperom sterowania podczas wyprowadzania niestandardowej klasy na podstawie <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL strony do wysłania do na bieżącej stronie, kiedy <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu formantu.</summary>
        <value>Adres URL strony sieci Web do wysłania do na bieżącej stronie, kiedy <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu formantu. Wartość domyślna to ciąg pusty (""), co powoduje, że strona publikować powrót do samego siebie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Właściwość pozwala wykonać po użyciu między stronami <xref:System.Web.UI.WebControls.Button> kontroli.  
  
> [!NOTE]
>  Tylko prawidłowo określonych ścieżek działać z tą właściwością. Na przykład ścieżek względnych (Test/default.aspx) ścieżek bezwzględnych (https://localhost/WebApp/default.aspx) i wirtualnych (~ \Test\default.aspx) działają poprawnie. Niepoprawnie sformułowany takich jak ścieżki "/ Test/default.aspx" lub "\Test\default.aspx" nie będą działać. Zobacz [ścieżek projektów sieci Web platformy ASP.NET](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) do dyskusji na temat tworzenia prawidłowe ścieżki.  
  
 Ustaw <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwość adres URL strony sieci Web do wysłania do kiedy <xref:System.Web.UI.WebControls.Button> kliknięciu formantu. Na przykład określenie `Page2.aspx` powoduje, że na stronie zawierającej <xref:System.Web.UI.WebControls.Button> formantu do wysłania do `Page2.aspx`. Jeśli nie określisz wartości <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości strony publikuje powrót do samego siebie.  
  
> [!IMPORTANT]
>  Podczas przeprowadzania ogłaszania zwrotnego między stronami za pomocą kontrolek za pomocą weryfikacji po stronie serwera, należy sprawdzić, które strony <xref:System.Web.UI.Page.IsValid%2A> właściwość `true` przed rozpoczęciem przetwarzania zwrotu. W przypadku ogłaszania zwrotnego między stronami, strony Aby sprawdzić jest <xref:System.Web.UI.Page.PreviousPage%2A>. Poniższy kod VB pokazuje, jak to zrobić:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Aby uzyskać więcej informacji na temat technik Księgowanie między stronami, zobacz [Księgowanie między stronami ASP.NET Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości Księgowanie między stronami. Kiedy użytkownik kliknie <xref:System.Web.UI.WebControls.Button> kontrolki, publikuje stronę wartość wprowadzona w polu tekstowym do strony docelowej, określone przez <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości. Aby uruchomić ten przykład, należy także utworzyć plik strony docelowej w tym samym katalogu co w tym przykładzie kodu. Kod dla docelowej strony znajduje się w następnym przykładzie.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> właściwości dostępu do wartości, który został opublikowany w innej strony przy użyciu <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości. Ta strona pobiera parametry, które opublikowano na poprzedniej stronie, a następnie wyświetla dla użytkownika. Jeśli użytkownik podejmie próbę bezpośrednio uruchomić ten przykład kodu, otrzymasz błąd, ponieważ wartość `text` pole będzie `null`. Użyj tego kodu do tworzenia strony docelowej i umieścić go w tym samym katalogu co kod w poprzednim przykładzie. Nazwa pliku musi odpowiadać wartości określonej dla <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwość w poprzednim przykładzie. Podczas uruchamiania kodu w poprzednim przykładzie, ta strona zostanie wykonany automatycznie po wystąpieniu wpisu między stronami.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Między stronami w na stronie sieci Web platformy ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla <see cref="T:System.Web.UI.WebControls.Button" /> kontroli, gdy wysyła on żądanie POST na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.Button> kontrolki, po kliknięciu, aby podnieść <xref:System.Web.UI.WebControls.Button.Click> zdarzeń i jeśli zdefiniowane, <xref:System.Web.UI.WebControls.Button.Command> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt, który reprezentuje strumień wyjściowy do renderowania elementów HTML zawartości na komputerze klienckim.</param>
        <summary>Renderuje zawartość formantu w określonym składniku zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób zastąpienia <xref:System.Web.UI.WebControls.Button.RenderContents%2A> metody w niestandardowego serwera kontrolować tak, aby zawsze wyświetla tekst, następujące niestandardowe <xref:System.Web.UI.WebControls.Button> kontrolki serwera.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla <see cref="T:System.Web.UI.WebControls.Button" /> kontroli, gdy wysyła on żądanie POST na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.Button> kontrolki, po kliknięciu, aby podnieść <xref:System.Web.UI.WebControls.Button.Click> zdarzeń i jeśli zdefiniowane, <xref:System.Web.UI.WebControls.Button.Command> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób zastąpienia <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> metodę, tak aby zawsze zgłasza <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzeń w niestandardowym <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podpis tekstowy wyświetlany w <see cref="T:System.Web.UI.WebControls.Button" /> kontroli.</summary>
        <value>Podpis tekstowy wyświetlany w <see cref="T:System.Web.UI.WebControls.Button" /> kontroli. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Button.Text%2A> właściwości do określania lub ustalania podpisu do wyświetlenia w <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.Text%2A> właściwości w celu określenia Podpis wyświetlany w <xref:System.Web.UI.WebControls.Button> kontroli.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.Button" /> klient korzysta z kontrolki przeglądarki przesłać mechanizmu lub mechanizm zwrotu ASP.NET.</summary>
        <value><see langword="true" /> Jeśli kontrolka używa przeglądarki klienta przesłać mechanizm; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.Button> klient korzysta z kontrolki przeglądarki przesłać mechanizmu lub mechanizm zwrotu ASP.NET. Domyślnie wartość tej właściwości jest `true`, powodując <xref:System.Web.UI.WebControls.Button> kontrolki używanej przeglądarki przesłać mechanizm. Jeśli określisz `false`, architektura strony ASP.NET dodaje skryptu po stronie klienta do strony do opublikowania formularza do serwera.  
  
 Gdy <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest `false`, kontroli deweloperzy mogą używać <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodę, aby zwrócić klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button>. Ciąg zwracany przez <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda zawiera tekst, liczby wywołań funkcji po stronie klienta i mogą być wstawiane do obsługi zdarzenia po stronie klienta.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwości w celu określenia mechanizm przesyłania, <xref:System.Web.UI.WebControls.Button> kontroli używa gdy wysyła on żądanie POST na serwerze. <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Właściwość jest ustawiona na `false`, powodując, aby używać platformy ASP.NET ogłaszanie zwrotne mechanizm. Możesz wyświetlić kod źródłowy renderowanej strony za pomocą polecenia Wyświetl źródło w przeglądarce, zobaczysz czy skrypt po stronie klienta został dodany przez platformę ASP.NET strony do opublikowania formularza do serwera.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt po stronie klienta w programie ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupy formantów, dla którego <see cref="T:System.Web.UI.WebControls.Button" /> formant powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze.</summary>
        <value>Grupy formantów, dla którego <see cref="T:System.Web.UI.WebControls.Button" /> formant powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdzanie poprawności grupy umożliwiają przypisywanie sprawdzania poprawności formantów na stronie do określonej kategorii. Każda grupa sprawdzania poprawności można zweryfikować niezależnie od innych grup sprawdzania poprawności na stronie. Użyj <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwość, aby określić nazwę grupy sprawdzania poprawności, dla których <xref:System.Web.UI.WebControls.Button> formant powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze.  
  
 Ta właściwość ma wpływ tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość jest ustawiona na `true`. Po określeniu wartości <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwości, formanty sprawdzania poprawności, które należą do określonej grupy są weryfikowane podczas <xref:System.Web.UI.WebControls.Button> kontroli wysyła do serwera. Jeśli nie określisz wartości dla tej właściwości i <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość jest ustawiona na `true`, wszystkie formanty sprawdzania poprawności na stronie, które nie są przypisane do grupy sprawdzania poprawności są weryfikowane, gdy kontrolka publikuje ponownie do serwera.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwości, aby określać formanty, aby sprawdzić, kiedy <xref:System.Web.UI.WebControls.Button> kontroli wysyła do serwera. Ta strona zawiera trzy pola tekstowe do przechwycenia danych użytkownika i trzy <xref:System.Web.UI.WebControls.RequiredFieldValidator> formantów, aby upewnić się, że użytkownik nie jest pusta pola tekstowego. <xref:System.Web.UI.WebControls.RequiredFieldValidator> Kontroluje dla pierwszych dwóch pól tekstowych znajdują się w `PersonalInfoGroup` grupy sprawdzania poprawności i <xref:System.Web.UI.WebControls.RequiredFieldValidator> kontrolować trzecie pole tekstowe jest `LocationInfoGroup` grupy sprawdzania poprawności. Gdy `Button1` zostanie kliknięty tylko formanty sprawdzania poprawności grupy `PersonalInfoGroup` są prawidłowe. Gdy `Button2` po kliknięciu formantu sprawdzania poprawności grupy `LocationInfoGroup` sprawdzania poprawności.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Formanty serwera sieci Web przycisku</related>
      </Docs>
    </Member>
  </Members>
</Type>