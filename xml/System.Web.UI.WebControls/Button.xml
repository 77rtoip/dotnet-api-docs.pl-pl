<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2f3ae803e60d99d5abeef13911eea9e7986bc8a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401776" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla kontrolkę przycisku push na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#Introduction)  
  
-   [Zachowanie ogłaszania zwrotnego przycisku i zdarzenia serwera](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Obsługa zdarzeń przycisków w skrypcie klienta](#HandlingButtonEventsinClientScript)  
  
-   [Kontrolki przycisku i walidacja](#ButtonControlsAndValidation)  
  
-   [Przyciski w kontrolkach danych](#ButtonsInDataControls)  
  
-   [Powiązywanie danych z kontrolkami](#BindingDataToTheControls)  
  
-   [Używanie przycisków z kontrolkami UpdatePanel](#UsingButtonsWithUpdatePanelControls)  
  
-   [Składnia deklaracyjne](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj kontrolki, <xref:System.Web.UI.WebControls.Button> aby utworzyć przycisk wypychania na stronie sieci Web, który umożliwia użytkownikom opublikowanie strony na serwerze. Kontrolka wyzwala zdarzenie w kodzie serwera, który można obsłużyć, aby odpowiedzieć na ogłaszanie zwrotne. Może również zgłosić zdarzenie w skrypcie klienta, który można obsłużyć przed opublikowaniem strony lub można uruchomić, a następnie anulować przesyłanie strony.  
  
> [!NOTE]
>  ASP.NET zawiera kilka rodzajów kontrolek przycisku, z których każdy pojawia się inaczej na stronach sieci Web. Są <xref:System.Web.UI.WebControls.Button> one kontrolką, która renderuje jako przycisk wypychania <xref:System.Web.UI.WebControls.LinkButton> ; kontrolka, która jest renderowana jako link; <xref:System.Web.UI.WebControls.ImageButton> i kontrolka, <xref:System.Web.UI.WebControls.ImageMap> która renderuje jako obraz, i kontrolka, która pozwala na utworzenie grafiki z hotspotami , które użytkownicy mogą kliknąć. Domyślnie wszystkie kontrolki przycisku przesyłają stronę po kliknięciu. Można również użyć <xref:System.Web.UI.HtmlControls.HtmlButton> kontrolek i <xref:System.Web.UI.HtmlControls.HtmlInputButton> do tworzenia przycisków na stronie, które są programowalne w kodzie serwera. Aby uzyskać szczegółowe informacje o różnicach między kontrolkami HTML i serwera sieci Web, zobacz [Omówienie kontrolek serwera sieci web ASP.NET](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 Domyślnie <xref:System.Web.UI.WebControls.Button> formant jest przyciskiem przesyłania. Przycisk przesyłania nie ma nazwy polecenia (określonej przez <xref:System.Web.UI.WebControls.Button.CommandName%2A> Właściwość) skojarzonej z przyciskiem i po prostu zapisuje stronę sieci Web z powrotem na serwerze. Możesz dostarczyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenia, aby programowo kontrolować akcje wykonywane po kliknięciu przycisku Prześlij.  
  
 Przycisk polecenia ma nazwę polecenia skojarzoną z przyciskiem, na przykład `Sort`przez <xref:System.Web.UI.WebControls.Button.CommandName%2A> ustawienie właściwości. Pozwala to na utworzenie wielu <xref:System.Web.UI.WebControls.Button> formantów na stronie sieci Web i programowo określenie, która <xref:System.Web.UI.WebControls.Button> kontrolka została kliknięta. Możesz również użyć <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości z przyciskiem polecenia, aby uzyskać dodatkowe informacje o poleceniu, na przykład `Ascending`. Możesz dostarczyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Command> zdarzenia, aby programowo kontrolować akcje wykonywane po kliknięciu przycisku polecenia.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Zachowanie ogłaszania zwrotnego przycisku i zdarzenia serwera  
 Gdy użytkownik kliknie dowolny przycisk kontroli serwera sieci Web, strona jest wysyłana do serwera. Powoduje to przetworzenie strony sieci Web i wszystkie oczekujące zdarzenia, które mają zostać zgłoszone w kodzie opartym na serwerze. Po zakończeniu przetwarzania wszystkich stron i kontrolek Strona ponownie renderuje do przeglądarki.  
  
 Przyciski mogą zgłosić własne <xref:System.Web.UI.WebControls.Button.Click> zdarzenia lub <xref:System.Web.UI.WebControls.Button.Command> zdarzenia, które można obsłużyć za pomocą kodu opartego na serwerze. Jest to inne niż zdarzenia w tradycyjnych stronach HTML lub w aplikacjach sieci Web opartych na kliencie, gdzie `onclick` zdarzenie przycisku jest obsługiwane przy użyciu języka JavaScript, który jest uruchamiany na kliencie programu. Aby uzyskać więcej informacji, zobacz [ASP.NET kontrolki serwerowe dla formularzy sieci Web model zdarzeń](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Gdy użytkownik kliknie kontrolkę przycisk, Strona zostanie odesłana na serwer. Domyślnie strona jest księgowana z powrotem do samej siebie,  
  
 Można skonfigurować przyciski, aby ogłosić bieżącą stronę na innej stronie. Może to być przydatne w przypadku tworzenia wielostronicowych formularzy. Aby uzyskać szczegółowe informacje, zobacz [Publikowanie między stronami w formularzach sieci Web ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Obsługa zdarzeń przycisków w skrypcie klienta  
 Kontrolki przycisków mogą zgłaszać zarówno zdarzenia serwera, jak i zdarzenia klienta. Zdarzenia serwera są wykonywane po odświeżeniu i są obsługiwane w kodzie po stronie serwera, który można napisać na stronie. Zdarzenia klienta są obsługiwane w skrypcie klienta, zazwyczaj ECMAScript (JavaScript) i są wywoływane przed przesłaniem strony. Dodając zdarzenia po stronie klienta do kontrolek przycisków ASP.NET, można wykonywać zadania, takie jak wyświetlanie okien dialogowych potwierdzenia przed przesłaniem strony i potencjalnie anulować przesyłanie. Aby uzyskać szczegółowe informacje, zobacz [skrypt klienta na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) i [instrukcje: Reaguj na przycisk zdarzenia kontroli serwera sieci Web w skrypcie](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)klienta.  
  
 Możesz również chcieć <xref:System.Web.UI.WebControls.Button> , aby formant mógł również używać skryptu klienta do przeprowadzenia ogłaszania zwrotnego (zamiast zwykłego wykonywania operacji post protokołu HTTP). Może to być przydatne, jeśli chcesz programowo manipulować ogłaszaniem zwrotnym, na przykład dołączając je do innych elementów na stronie. <xref:System.Web.UI.WebControls.Button> Właściwość`true`kontrolki można ustawić tak, aby powodowała użycie przez formantogłaszaniazwrotnegonapodstawieskryptuklienta.<xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Kontrolki przycisku i walidacja  
 Jeśli strona zawiera kontrolki walidatora ASP.NET, domyślnie kliknięcie kontrolki przycisku powoduje wykonanie sprawdzenia przez formant modułu sprawdzania poprawności. Jeśli walidacja po stronie klienta jest włączona dla kontrolki walidacji, Strona nie zostanie przesłana, jeśli sprawdzanie poprawności nie powiodło się.  
  
 W poniższej tabeli opisano właściwości obsługiwane przez kontrolki przycisków, które umożliwiają precyzyjne kontrolowanie procesu sprawdzania poprawności.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Określa, czy kliknięcie przycisku powoduje także sprawdzenie poprawności. Ustaw tę właściwość na `false` , aby uniemożliwić sprawdzanie poprawności.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Umożliwia określenie, które walidatory na stronie są wywoływane po kliknięciu przycisku. Jeśli nie zostaną nawiązane żadne grupy sprawdzania poprawności, kliknięcie przycisku wywoła wszystkie walidatory, które znajdują się na stronie.|  
  
 Aby uzyskać więcej informacji, zobacz [Weryfikowanie danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Przyciski w kontrolkach danych  
 Kontrolki serwera sieci Web przycisku są często używane w kontrolkach danych, na <xref:System.Web.UI.WebControls.DataList>przykład <xref:System.Web.UI.WebControls.GridView>w formantach, i <xref:System.Web.UI.WebControls.Repeater> . W takich przypadkach zwykle nie odpowiadają bezpośrednio na kliknięcie przycisku. Zamiast tego przycisk w kontrolce danych wywołuje zdarzenie specyficzne dla kontrolki danych. <xref:System.Web.UI.WebControls.DataList> Na przykład w kontrolce przycisk może <xref:System.Web.UI.WebControls.DataList.ItemCommand> <xref:System.Web.UI.WebControls.DataList> podnieść zdarzenie kontrolki, zamiast <xref:System.Web.UI.WebControls.Button> poddawać <xref:System.Web.UI.WebControls.Button.Click> zdarzenia kontrolce.  
  
 Ze względu na to, że formanty listy powiązane z danymi mogą zawierać wiele przycisków, <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> można ustawić właściwość przycisku, aby określić wartość do przekazania w ramach zdarzenia. Następnie można testować dla tego argumentu, aby zobaczyć, który przycisk został kliknięty.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Powiązywanie danych z kontrolkami  
 Kontrolki serwera sieci Web przycisku można powiązać ze źródłem danych, aby kontrolować ich ustawienia właściwości dynamicznie. Na przykład można ustawić <xref:System.Web.UI.WebControls.Button.Text%2A> właściwość przycisku przy użyciu powiązania danych.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Używanie przycisków z kontrolkami UpdatePanel  
 Częściowe renderowanie strony umożliwia odświeżanie fragmentów strony bez ogłaszania zwrotnego. <xref:System.Web.UI.UpdatePanel>kontrolki umożliwiają oznaczenie części strony, które uczestniczą w renderowaniu części strony. Domyślnie zachowanie formantów wewnątrz <xref:System.Web.UI.UpdatePanel> kontrolki, włącznie <xref:System.Web.UI.WebControls.Button> z kontrolkami, polega na asynchronicznym ogłaszaniu zwrotnym zamiast ogłaszaniu zwrotnego. Spowoduje to odświeżenie tylko zawartości <xref:System.Web.UI.UpdatePanel> kontrolki, z której pochodzi ogłaszanie zwrotne.  
  
 Oprócz scenariusza <xref:System.Web.UI.WebControls.Button> kontrolki, która znajduje się <xref:System.Web.UI.UpdatePanel> wewnątrz kontrolki, można użyć <xref:System.Web.UI.WebControls.Button> kontrolek z <xref:System.Web.UI.UpdatePanel> kontrolkami w następujących scenariuszach:  
  
-   Definiowanie formantu, który znajduje się <xref:System.Web.UI.UpdatePanel> poza kontrolką jako <xref:System.Web.UI.AsyncPostBackTrigger> kontrolką dla tego panelu. <xref:System.Web.UI.WebControls.Button> Gdy przycisk zostanie kliknięty, wykonuje asynchroniczne ogłaszanie zwrotne i odświeża zawartość panelu.  
  
-   Definiowanie kontrolki, która znajduje się <xref:System.Web.UI.UpdatePanel> wewnątrz kontrolki <xref:System.Web.UI.PostBackTrigger> jako dla panelu. <xref:System.Web.UI.WebControls.Button> Gdy przycisk zostanie kliknięty, wykonuje ogłaszanie zwrotne, mimo że znajduje się <xref:System.Web.UI.UpdatePanel> w kontrolce.  
  
 Aby uzyskać więcej informacji na temat renderowania części strony i <xref:System.Web.UI.UpdatePanel> używania kontrolek, zobacz sekcję [Przegląd formantów UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowania częściowej strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć formant przesyłania <xref:System.Web.UI.WebControls.Button> , który ogłasza zawartość strony sieci Web z powrotem na serwerze.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, jak utworzyć kontrolkę polecenia <xref:System.Web.UI.WebControls.Button> , która sortuje listę.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Button" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.Button> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.Button> klasy.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawiera strumień wyjściowy do renderowania na kliencie.</param>
        <summary>Dodaje atrybuty <see cref="T:System.Web.UI.WebControls.Button" /> kontrolki do strumienia wyjściowego w celu renderowania na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> metodę w niestandardowym formancie serwera, aby <xref:System.Web.UI.WebControls.Button> tekst był zawsze wyświetlany na czerwono.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu kontrolki.</summary>
        <value><see langword="true" />Jeśli walidacja jest wykonywana po <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu kontrolki; w przeciwnym <see langword="false" />razie,. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Walidacja strony jest wykonywana po <xref:System.Web.UI.WebControls.Button> kliknięciu kontrolki. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji określone przez kontrolkę walidacji.  
  
 Możesz określić lub określić, czy Walidacja jest wykonywana zarówno na kliencie, jak i na serwerze <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki przy <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> użyciu właściwości. Aby zapobiec wykonywaniu walidacji, należy ustawić <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość na `false`.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Właściwość należy ustawić na `false` wartość, <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> gdy jest używana właściwość do ogłaszania zwrotnego na innej stronie. Sprawdzanie poprawności powinno być jawnie sprawdzane podczas ogłaszania na innej stronie. Aby zapoznać się z przykładem, zobacz sekcję <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> uwagi właściwości.  
  
 Ta właściwość jest zwykle ustawiona `false` `reset` na przycisk lub `clear` , aby zapobiec wykonywaniu walidacji po kliknięciu przycisku.  
  
 Gdy wartość <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwości jest ustawiona na `true`, można również użyć <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwości, aby określić <xref:System.Web.UI.WebControls.Button> nazwę grupy walidacji, dla której formant powoduje sprawdzenie poprawności.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> aby zapobiec występowaniu walidacji strony. Należy pamiętać, <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> że metoda aktywuje poszczególne kontrolki weryfikacji niezależnie.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="T:System.Web.UI.WebControls.Button" /> gdy formant zostanie kliknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.WebControls.Button> gdy zostanie kliknięty formant. <xref:System.Web.UI.WebControls.Button.Click> To zdarzenie jest często używane, gdy nazwa polecenia nie jest skojarzona <xref:System.Web.UI.WebControls.Button> z kontrolką (na przykład za pomocą przycisku Prześlij).  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak określić i zakodować procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenia w celu wyświetlenia komunikatu na stronie sieci Web <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="T:System.Web.UI.WebControls.Button" /> gdy formant zostanie kliknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.WebControls.Button> gdy zostanie kliknięty formant. <xref:System.Web.UI.WebControls.Button.Command> To zdarzenie jest często używane, gdy nazwa polecenia, `Sort`na przykład, jest skojarzona <xref:System.Web.UI.WebControls.Button> z kontrolką. Pozwala to na utworzenie wielu <xref:System.Web.UI.WebControls.Button> formantów na stronie sieci Web i programowo określenie, która <xref:System.Web.UI.WebControls.Button> kontrolka została kliknięta.  
  
> [!NOTE]
>  Zdarzenie jest zgłaszane przez hierarchię formantów w postaci `BubbleEvent`. <xref:System.Web.UI.WebControls.Button.Command>  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi zdarzeń, <xref:System.Web.UI.WebControls.Button.Command> aby posortować listę <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki. Ten przykład określa procedurę obsługi zdarzeń deklaratywnie przy użyciu <xref:System.Web.UI.WebControls.Button.OnClick%2A> właściwości <xref:System.Web.UI.WebControls.Button> kontrolki.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Poniższy przykład kodu ilustruje sposób określania programu obsługi zdarzeń i programistycznego dodawania go do zdarzenia w `Page_Load` metodzie.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcjonalny parametr przesłany do <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzenia wraz z skojarzoną. <see cref="P:System.Web.UI.WebControls.Button.CommandName" /></summary>
        <value>Opcjonalny parametr przesłany do <see cref="E:System.Web.UI.WebControls.Button.Command" /> zdarzenia wraz z skojarzoną. <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić parametr, który uzupełnia <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwość. <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>  
  
> [!NOTE]
>  Chociaż można ustawić <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Właściwość sama, jest ona zwykle używana tylko <xref:System.Web.UI.WebControls.Button.CommandName%2A> wtedy, gdy właściwość jest również ustawiona.  
  
 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Właściwość uzupełnia<xref:System.Web.UI.WebControls.Button.CommandName%2A> Właściwość przez umożliwienie podania dodatkowych informacji na temat polecenia do wykonania. Na <xref:System.Web.UI.WebControls.Button.CommandName%2A> przykład, jeśli ustawisz właściwość na `Sort` i <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwość na `Ascending`, określisz polecenie, aby posortować w kolejności rosnącej.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości, aby <xref:System.Web.UI.WebControls.Button> utworzyć kontrolkę, która sortuje listę w kolejności rosnącej.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę polecenia skojarzoną z <see cref="T:System.Web.UI.WebControls.Button" /> kontrolką, która jest przenoszona <see cref="E:System.Web.UI.WebControls.Button.Command" /> do zdarzenia.</summary>
        <value>Nazwa <see cref="T:System.Web.UI.WebControls.Button" /> polecenia formantu. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli masz wiele <xref:System.Web.UI.WebControls.Button> kontrolek na stronie sieci Web, <xref:System.Web.UI.WebControls.Button.CommandName%2A> Użyj właściwości, aby określić lub określić nazwę polecenia skojarzoną z każdą <xref:System.Web.UI.WebControls.Button> kontrolką. Można ustawić <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwość z dowolnym ciągiem, który identyfikuje polecenie do wykonania. Następnie można programowo określić nazwę <xref:System.Web.UI.WebControls.Button> polecenia kontrolki i wykonać odpowiednie działania.  
  
 Dodatkowe informacje o poleceniu, takie jak `Ascending`, można określić za <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> pomocą właściwości.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.Button.CommandName%2A> właściwości, aby <xref:System.Web.UI.WebControls.Button> utworzyć kontrolkę, która sortuje listę.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy obiekt, który reprezentuje zachowanie <see cref="T:System.Web.UI.WebControls.Button" /> ogłaszania zwrotnego kontrolki. <see cref="T:System.Web.UI.PostBackOptions" /></summary>
        <returns>Reprezentuje zachowanie ogłaszania zwrotnego kontrolki. <see cref="T:System.Web.UI.WebControls.Button" /> <see cref="T:System.Web.UI.PostBackOptions" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy obiekt, który reprezentuje <xref:System.Web.UI.WebControls.Button> zachowanie ogłaszania zwrotnego kontrolki. <xref:System.Web.UI.PostBackOptions> <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> Obiekt jest zwykle przekazywać <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> do metody, która jest używana do uzyskania odwołania do funkcji skryptu po stronie klienta, która po wywołaniu powoduje, że serwer ogłasza zwrotnie na stronie. <xref:System.Web.UI.PostBackOptions>  
  
 Ta metoda jest używana głównie przez kontrolowanie deweloperów podczas rozszerzania <xref:System.Web.UI.WebControls.Button> klasy.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> metodę w klasie pochodnej, aby zmodyfikować opcje ogłaszania zwrotnego dla kontrolki przycisk lub wywołać skrypt po stronie klienta po kliknięciu przycisku. Pamiętaj, aby wywołać <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> metodę klasy bazowej, aby ustawić standardowe opcje ogłaszania zwrotnego.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt klienta na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Button.Click" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.Button" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.WebControls.Button> gdy zostanie kliknięty formant. <xref:System.Web.UI.WebControls.Button.Click> To zdarzenie jest często używane, gdy nazwa polecenia nie jest skojarzona <xref:System.Web.UI.WebControls.Button> z kontrolką (na przykład za pomocą przycisku Prześlij).  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.Button.OnClick%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.Button.Click> zdarzenia w celu wyświetlenia prostego komunikatu na stronie sieci Web.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia skrypt po stronie klienta, który jest wykonywany po <see cref="T:System.Web.UI.WebControls.Button" /> wywołaniu <see cref="E:System.Web.UI.WebControls.Button.Click" /> zdarzenia kontrolki.</summary>
        <value>Skrypt po stronie klienta, który jest wykonywany po <see cref="T:System.Web.UI.WebControls.Button" /> wywołaniu <see cref="E:System.Web.UI.WebControls.Button.Click" /> zdarzenia kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> , aby określić dodatkowy skrypt po stronie klienta, który jest wykonywany <xref:System.Web.UI.WebControls.Button> po wywołaniu <xref:System.Web.UI.WebControls.Button.Click> zdarzenia kontrolki. Skrypt określony dla tej właściwości jest renderowany w <xref:System.Web.UI.WebControls.Button> `OnClick` atrybucie kontrolki oprócz wstępnie zdefiniowanego skryptu po stronie klienta.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Projekt witryny sieci Web programu Visual Studio z kodem źródłowym jest dostępny do załączenia do tego tematu: [Pobierz](https://go.microsoft.com/fwlink/?LinkId=192871).  
  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> aby określić dodatkowy skrypt po stronie klienta, który jest wykonywany <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Button.Command" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.Button" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.WebControls.Button> gdy zostanie kliknięty formant. <xref:System.Web.UI.WebControls.Button.Command> To zdarzenie jest często używane, gdy nazwa polecenia, `Sort`na przykład, jest skojarzona <xref:System.Web.UI.WebControls.Button> z kontrolką. Pozwala to na utworzenie wielu <xref:System.Web.UI.WebControls.Button> formantów na stronie sieci Web i programowo określenie, która <xref:System.Web.UI.WebControls.Button> kontrolka została kliknięta.  
  
> [!NOTE]
>  Zdarzenie jest zgłaszane przez hierarchię formantów w postaci `BubbleEvent`. <xref:System.Web.UI.WebControls.Button.Command>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi zdarzeń, <xref:System.Web.UI.WebControls.Button.Command> aby posortować listę <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki. Ten przykład określa procedurę obsługi zdarzeń deklaratywnie przy użyciu <xref:System.Web.UI.WebControls.Button.OnClick%2A> właściwości <xref:System.Web.UI.WebControls.Button> kontrolki.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Poniższy przykład kodu ilustruje sposób określania programu obsługi zdarzeń i programistycznego dodawania go do zdarzenia w `Page_Load` metodzie.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Określa, czy przycisk został kliknięty przed renderowaniem na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez kontrolowanie deweloperów podczas wyprowadzania klasy niestandardowej <xref:System.Web.UI.WebControls.Button> z formantu. <xref:System.Web.UI.WebControls.Button.OnPreRender%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL strony do opublikowania na bieżącej stronie, gdy <see cref="T:System.Web.UI.WebControls.Button" /> formant zostanie kliknięty.</summary>
        <value>Adres URL strony sieci Web do opublikowania na bieżącej stronie po <see cref="T:System.Web.UI.WebControls.Button" /> kliknięciu kontrolki. Wartość domyślna to ciąg pusty (""), który powoduje, że strona jest ogłaszana z powrotem do siebie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia wykonywanie międzystronicowego wpisu <xref:System.Web.UI.WebControls.Button> przy użyciu formantu. <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>  
  
> [!NOTE]
>  Tylko prawidłowo określone ścieżki działają z tą właściwością. Na przykład ścieżki względne (`Test/default.aspx`), ścieżki bezwzględne (`https://localhost/WebApp/default.aspx`) i`~\Test\default.aspx`wirtualne () działają poprawnie. Nieprawidłowo sformułowane ścieżki, takie jak "/Test/default.aspx" lub "\Test\default.aspx", nie działają. Zobacz [ścieżki projektu sieci Web ASP.NET](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) dla dyskusji na temat tworzenia poprawnych ścieżek.  
  
 Ustaw właściwość na adres URL strony sieci Web, która ma być opublikowana <xref:System.Web.UI.WebControls.Button> po kliknięciu kontrolki. <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Na przykład określenie `Page2.aspx` powoduje, że strona <xref:System.Web.UI.WebControls.Button> zawierająca formant do opublikowania `Page2.aspx`. Jeśli nie określisz wartości dla <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości, Strona zostanie odesłana do samej siebie.  
  
> [!IMPORTANT]
>  Podczas przeprowadzania wielostronicowego ogłaszania zwrotnego z kontrolkami z walidacją po stronie serwera należy sprawdzić, <xref:System.Web.UI.Page.IsValid%2A> czy właściwość `true` strony jest przed przetwarzaniem zwrotnego. W przypadku ogłaszania zwrotnego między stronami Strona do sprawdzenia to <xref:System.Web.UI.Page.PreviousPage%2A>. Następujący kod w języku VB pokazuje, jak to zrobić:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Aby uzyskać więcej informacji na temat technik ogłaszania wielostronicowego, zobacz [Publikowanie krzyżowe w formularzach sieci Web ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> aby wykonać wpis między stronami. Gdy użytkownik kliknie <xref:System.Web.UI.WebControls.Button> formant, Strona ogłasza wartość wprowadzoną w polu tekstowym do strony docelowej określonej <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> przez właściwość. Aby uruchomić ten przykład, należy również utworzyć plik dla strony docelowej w tym samym katalogu, w którym znajduje się ten przykład kodu. Kod strony docelowej jest podany w następnym przykładzie.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> jak używać właściwości, aby uzyskać dostęp do wartości, która została opublikowana z innej strony <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> przy użyciu właściwości. Ta strona Pobiera ciąg, który został opublikowany na poprzedniej stronie i wyświetla go użytkownikowi. Jeśli spróbujesz uruchomić ten przykład kodu bezpośrednio, zostanie wyświetlony komunikat o błędzie, ponieważ wartość `text` pola `null`będzie. Zamiast tego należy użyć tego kodu do utworzenia strony docelowej i umieszczenia pliku w tym samym katalogu, w którym znajduje się kod dla poprzedniego przykładu. Nazwa pliku musi odpowiadać wartości określonej dla <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> właściwości w poprzednim przykładzie. Po uruchomieniu kodu dla poprzedniego przykładu ta strona zostanie wykonana automatycznie, gdy nastąpi ogłoszenie między stronami.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Ogłaszanie między stronami na stronie internetowej ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.WebControls.Button" /> gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używane wewnętrznie przez <xref:System.Web.UI.WebControls.Button> kontrolkę, gdy zostanie kliknięty, w celu <xref:System.Web.UI.WebControls.Button.Click> podniesienia zdarzenia <xref:System.Web.UI.WebControls.Button.Command> i zdefiniowania zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który reprezentuje strumień wyjściowy do renderowania zawartości HTML na kliencie.</param>
        <summary>Renderuje zawartość kontrolki do określonego składnika zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.Button.RenderContents%2A> jak zastąpić metodę w niestandardowym formancie serwera, aby zawsze wyświetlała tekst po niestandardowej <xref:System.Web.UI.WebControls.Button> kontrolce serwera.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.WebControls.Button" /> gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używane wewnętrznie przez <xref:System.Web.UI.WebControls.Button> kontrolkę, gdy zostanie kliknięty, w celu <xref:System.Web.UI.WebControls.Button.Click> podniesienia zdarzenia <xref:System.Web.UI.WebControls.Button.Command> i zdefiniowania zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> metodę, aby zawsze <xref:System.Web.UI.WebControls.Button.OnClick%2A> wywoływała zdarzenie w kontrolce niestandardowej <xref:System.Web.UI.WebControls.Button> .  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia napis tekstowy wyświetlany w <see cref="T:System.Web.UI.WebControls.Button" /> kontrolce.</summary>
        <value>Podpis tekstowy wyświetlany w <see cref="T:System.Web.UI.WebControls.Button" /> kontrolce. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.Button.Text%2A> , aby określić lub określić podpis, który ma być wyświetlany <xref:System.Web.UI.WebControls.Button> w kontrolce.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.Button.Text%2A> właściwości, aby określić podpis wyświetlany <xref:System.Web.UI.WebControls.Button> w kontrolce.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.Button" /> kontrolka używa mechanizmu przesyłania lub ASP.NETego ogłaszania w przeglądarce klienta.</summary>
        <value><see langword="true" />Jeśli formant używa mechanizmu przesyłania do przeglądarki klienta; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> , aby określić, <xref:System.Web.UI.WebControls.Button> czy kontrolka używa mechanizmu przesyłania przez przeglądarkę klienta lub mechanizmu ogłaszania zwrotnego ASP.NET. Domyślnie wartość tej właściwości to `true`, powodując, że <xref:System.Web.UI.WebControls.Button> formant używa mechanizmu przesyłania przeglądarki. Jeśli określisz `false`, struktura strony ASP.NET dodaje skrypt po stronie klienta do strony, aby opublikować formularz na serwerze.  
  
 Gdy właściwość jest `false` <xref:System.Web.UI.WebControls.Button> ,<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> kontrolowanie deweloperów może użyć metody do zwrócenia zdarzenia ogłaszania zwrotnego klienta dla programu. <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Ciąg zwracany przez <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodę zawiera tekst wywołania funkcji po stronie klienta i może zostać wstawiony do programu obsługi zdarzeń po stronie klienta.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwości, aby określić mechanizm przesyłania, który jest <xref:System.Web.UI.WebControls.Button> używany przez kontrolkę, gdy zapisuje z powrotem na serwerze. Właściwość jest ustawiona na `false`, co powoduje, że przycisk używa mechanizmu ogłaszania zwrotnego ASP.NET. <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Jeśli oglądasz kod źródłowy renderowanej strony za pomocą polecenia Wyświetl źródło przeglądarki, zobaczysz, że skrypt po stronie klienta został dodany przez strukturę strony ASP.NET w celu opublikowania formularza na serwerze.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt klienta na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę kontrolek, dla których <see cref="T:System.Web.UI.WebControls.Button" /> formant powoduje uruchomienie walidacji, gdy odsyła na serwer.</summary>
        <value>Grupa kontrolek, dla których <see cref="T:System.Web.UI.WebControls.Button" /> formant powoduje sprawdzenie poprawności po odesłaniu na serwer. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla <xref:System.Web.UI.WebControls.Button> której formant powoduje sprawdzenie poprawności po zaksięgowaniu z powrotem na serwerze.  
  
 Ta właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwości jest ustawiona na. `true` Po określeniu wartości dla <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są weryfikowane <xref:System.Web.UI.WebControls.Button> po ponownym zaksięgowaniu na serwerze. Jeśli nie określisz wartości dla tej właściwości, a <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> właściwość jest ustawiona na `true`, wszystkie kontrolki walidacji na stronie, które nie są przypisane do grupy walidacji, zostaną zweryfikowane, gdy sterowanie zostanie odesłane na serwer.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> właściwości, aby określić kontrolki do zweryfikowania, <xref:System.Web.UI.WebControls.Button> gdy kontrolka przechodzi z powrotem na serwer. Strona zawiera trzy pola tekstowe służące do przechwytywania danych od użytkownika i trzech <xref:System.Web.UI.WebControls.RequiredFieldValidator> formantów, aby upewnić się, że użytkownik nie pozostawia pustego pola tekstowego. Kontrolki dla pierwszych dwóch pól tekstowych znajdują się `PersonalInfoGroup` w grupie walidacji, <xref:System.Web.UI.WebControls.RequiredFieldValidator> a kontrolka trzeciego pola tekstowego znajduje się w `LocationInfoGroup` grupie walidacji. <xref:System.Web.UI.WebControls.RequiredFieldValidator> Gdy `Button1` jest kliknięty, sprawdzane są tylko kontrolki w grupie `PersonalInfoGroup` walidacji. Gdy `Button2` jest kliknięty, sprawdzana jest tylko kontrola `LocationInfoGroup` w grupie walidacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Kontrolki serwera sieci Web</related>
      </Docs>
    </Member>
  </Members>
</Type>
