<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563df817cb8f8f66bd22697bce653971ac74dc4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Porównuje wartości wprowadzonej przez użytkownika w formancie wejściowych z wartość wprowadzona w innym kontrolki wprowadzania lub z wartością stałą.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.CompareValidator> formantu, aby porównać wartości wprowadzone przez użytkownika w formancie wejściowych, takich jak <xref:System.Web.UI.WebControls.TextBox> sterowania wartość wprowadzona w innym kontrolki wprowadzania lub wartość stałą. <xref:System.Web.UI.WebControls.CompareValidator> Kontroli pozytywnej weryfikacji, jeśli wartość kontrolki wprowadzania spełnia kryteria określone przez <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, i/lub <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości.  
  
 Można również użyć <xref:System.Web.UI.WebControls.CompareValidator> sterowania, aby wskazać, czy wartość wprowadzona w formancie wejściowy można przekonwertować na typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości.  
  
 Określ kontrolki wprowadzania do sprawdzania poprawności przez ustawienie <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> właściwości. Jeśli chcesz porównać określonej kontrolki wprowadzania z innego kontrolki wprowadzania, ustaw <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości w celu określenia do porównania z formantu.  
  
> [!NOTE]
>  Jeśli wprowadzone kontrolki wprowadzania określony przez wartość <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości nie można przekonwertować na typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości, ale wartość wprowadzona w kontrolki wprowadzania określony przez <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> właściwości mogą być konwertowane, kontrolki wprowadzania sprawdzana jest uznawany za ważny. W związku z tym należy również umieścić <xref:System.Web.UI.WebControls.CompareValidator> lub <xref:System.Web.UI.WebControls.RangeValidator> formantu kontrolki wprowadzania określony przez <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości.  
  
 Porównanie wartości wejściowe formantu z innego kontrolki wprowadzania, a nie można porównać wartości wejściowe formantu wartość stałą. Określ wartości stałej do porównania z przez ustawienie <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości.  
  
> [!NOTE]
>  Jeśli wartość jest określona przez <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości nie można przekonwertować na typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości, jest zgłaszany wyjątek. Sprawdź typ danych wartości przed programowo przypisywania go do <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości.  
  
> [!NOTE]
>  Nie ustawiaj zarówno <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> i <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości w tym samym czasie. Można albo porównanie wartości kontrolki wprowadzania kontrolki wprowadzania w innym, lub wartość stałą. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości ma pierwszeństwo.  
  
 Użyj <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> właściwość, aby określić typ porównania do wykonania, takich jak większe, równa, i tak dalej. Jeśli ustawisz <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> właściwości `ValidationCompareOperator.DataTypeCheck`, <xref:System.Web.UI.WebControls.CompareValidator> ignoruje kontroli <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> i <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości i po prostu wskazuje, czy wartość wprowadzona w formancie wejściowy można przekonwertować na typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> Właściwość jest używana do określania typu danych obu wartości porównania. Obie wartości są automatycznie konwertowane do tego typu danych, przed wykonaniem operacji porównania.  
  
> [!IMPORTANT]
>  Gdy <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.ValidationDataType.Date> i bieżący typ kalendarza jest innych niż gregoriański, że moduł sprawdzania poprawności po stronie serwera tylko. Moduł sprawdzania poprawności skryptu klienta obsługuje tylko gregoriańskiego.  
  
 W poniższej tabeli wymieniono różne typy danych, które można porównać.  
  
|Typ danych|Opis|  
|---------------|-----------------|  
|`String`|Typ danych ciągu.|  
|`Integer`|Typ danych 32-bitowej liczby całkowitej ze znakiem.|  
|`Double`|Podwójnej precyzji zmiennoprzecinkowe dane numeryczne.|  
|`Date`|Date — typ danych.|  
|`Currency`|Typ danych dziesiętnych. Nie może zawierać symbol waluty.|  
  
> [!NOTE]
>  Jeśli kontrolki wprowadzania jest pusta, są nazywane żadnych funkcji weryfikacji i sprawdzania poprawności zakończy się pomyślnie. Użyj <xref:System.Web.UI.WebControls.RequiredFieldValidator> sterowania, aby wymagać od użytkownika wprowadzić dane do kontrolki wprowadzania.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Web.UI.WebControls.CompareValidator> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> sterowania, upewnij się, że formantem modułu sprawdzania poprawności i skojarzonej z nim są na tym samym panelu. Aby uzyskać więcej informacji o korzystaniu z <xref:System.Web.UI.UpdatePanel> kontrolować aktualizacje stron częściowych, zobacz [omówienie renderowania stron częściowych](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Aby uzyskać więcej informacji o weryfikacji formantów, zobacz <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Aby uzyskać informacje o sposobie konfigurowania tego formantu, dzięki czemu generuje kod znaczników, który jest zgodny ze standardami ułatwień dostępu, zobacz [ułatwień dostępu w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) i [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.CompareValidator> formantu, aby porównać wartości w dwóch <xref:System.Web.UI.WebControls.TextBox> kontrolki.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.CompareValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny konstruktor inicjuje dowolne pola z ich domyślnymi wartościami.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> zawierający strumienia wyjściowego do renderowania na kliencie.</param>
        <summary>Dodaje atrybutów tego formantu do strumienia wyjściowego do renderowania na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> metody w formancie niestandardowego serwera, aby <xref:System.Web.UI.WebControls.CompareValidator> pogrubione zawsze jest wyświetlany komunikat o błędzie.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy właściwości formantu prawidłowe wartości.</summary>
        <returns>
          <see langword="true" /> Jeśli właściwości są prawidłowe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> metoda niestandardowego serwera kontroli tak, aby zawsze zwraca wartość właściwości visible tak długo, jak <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwość <xref:System.Web.UI.WebControls.CompareValidator> formant znajduje się na stronie i zawiera właściwości sprawdzania poprawności.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie można przekonwertować wartości właściwości docelowej do oczekiwanej <see cref="T:System.Type" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolki wprowadzania do porównania z kontrolki wprowadzania sprawdzania poprawności.</summary>
        <value>Kontrolki wprowadzania do porównania z kontrolki wprowadzania sprawdzania poprawności. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości w celu określenia kontrolki wprowadzania, takich jak <xref:System.Web.UI.WebControls.TextBox> formantu do porównania z kontrolki wprowadzania sprawdzania poprawności. Jeśli kontrolki wprowadzania określonej przez tę właściwość nie jest formantem na stronie, jest zwracany wyjątek.  
  
> [!NOTE]
>  Nie ustawiaj zarówno <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> i <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości w tym samym czasie. Można albo porównanie wartości kontrolki wprowadzania kontrolki wprowadzania w innym, lub wartość stałą. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości ma pierwszeństwo.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>.  
  
> [!IMPORTANT]
>  Jeśli formant do porównania jest ukryty lub znajduje się wewnątrz kontenera (takich jak <xref:System.Web.UI.WebControls.Panel> kontroli) który nie jest widoczne, że moduł sprawdzania poprawności po stronie serwera tylko. Moduł sprawdzania poprawności skryptu klienta obsługuje tylko widoczne formanty.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości w celu określenia formantu do porównania z formantu w trakcie walidacji.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ta metoda zawiera kod, aby ustalić, czy wartość formantu wejściowy jest nieprawidłowy.</summary>
        <returns>
          <see langword="true" /> Jeśli wartość w formancie wejściowy jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> metoda niestandardowego serwera kontroli tak, aby zawsze zwraca `true` Jeśli wartości dwóch formantów określonego są takie same i `false` inaczej.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia operacji porównania do wykonania.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> wartości. Wartość domyślna to <see langword="Equal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> właściwości w celu określenia operacji porównania do wykonania. W poniższej tabeli wymieniono operacje porównania, które są możliwe.  
  
|Operacja|Opis|  
|---------------|-----------------|  
|`Equal`|Porównania równości między wartości wejściowe formantu w trakcie walidacji i inny formant lub wartość stałą.|  
|`NotEqual`|Porównanie pod kątem nierówności między wartości wejściowe formantu w trakcie walidacji i inny formant lub wartość stałą.|  
|`GreaterThan`|Porównanie dla większa od wartości wejściowe formantu w trakcie walidacji i inny formant lub wartość stałą.|  
|`GreaterThanEqual`|Porównanie większa niż lub równą wartości wejściowe formantu w trakcie walidacji i inny formant lub wartość stałą.|  
|`LessThan`|Porównanie dla mniej niż między wartości wejściowe formantu w trakcie walidacji i inny formant lub wartość stałą.|  
|`LessThanEqual`|Porównanie dla mniejsza niż lub równa między wartości wejściowe formantu w trakcie walidacji i inny formant lub stała wartość.|  
|`DataTypeCheck`|Porównanie typu danych wartość wprowadzona w kontrolki wprowadzania sprawdzania poprawności i typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości. Sprawdzanie poprawności zakończy się niepowodzeniem, jeśli wartości nie można przekonwertować na określony typ danych. **Uwaga:** <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> i <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości są ignorowane w przypadku użycia tego operatora.|  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> właściwości w celu określenia operacji porównania.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Operator porównania określony nie jest jednym z <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość stałą do porównania z wartości wprowadzonej przez użytkownika w kontrolki wprowadzania sprawdzania poprawności.</summary>
        <value>Stała wartość do porównania z wartości wprowadzonej przez użytkownika w kontrolki wprowadzania sprawdzania poprawności. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości w celu określenia wartości stałej do porównania z wartości wprowadzonej przez użytkownika w kontrolki wprowadzania sprawdzania poprawności. Jeśli wartość stała określonej przez tę właściwość nie można przekonwertować na typ danych określony przez <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> właściwości, jest zgłaszany wyjątek.  
  
> [!NOTE]
>  Nie ustawiaj zarówno <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> i <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwości w tym samym czasie. Można albo porównanie wartości kontrolki wprowadzania kontrolki wprowadzania w innym, lub wartość stałą. Jeśli ustawiono obie właściwości, <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> właściwości ma pierwszeństwo.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> właściwość do porównania wartości wprowadzonej przez użytkownika w <xref:System.Web.UI.WebControls.TextBox> kontroli z wartością stałą.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>