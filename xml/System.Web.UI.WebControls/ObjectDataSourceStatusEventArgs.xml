<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e47f0857a8d0623beb44d99fad55c61c8e7f6ce" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />, i <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> zdarzenia <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Klasa jest używana w <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metody w celu zapewnienia dostępu do parametrów wyjściowych, zwracanych wartości i wyjątki, które są generowane przez metodę, która jest wywoływana przez <xref:System.Web.UI.WebControls.ObjectDataSource> formant. Są one dostępne przez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, i <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> właściwości, odpowiednio. Dodając pełnomocnika, aby obsłużyć <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, lub <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzenia, można sprawdzać te dane i wykonywać żadnych dodatkowych post przetwarzania, które jest wymagane.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli udostępnia wiele zdarzeń, które może obsłużyć do pracy z podstawowej obiektu biznesowego w różnym czasie, w jego cyklu życia. W poniższej tabeli wymieniono zdarzenia i skojarzone <xref:System.EventArgs> klasy i delegaci programu obsługi zdarzeń.  
  
|Zdarzenie|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Występuje bezpośrednio przed tworzenia wystąpienia obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Występuje, natychmiast po utworzeniu wystąpienia obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> występuje przed pobraniem danych.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, i <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Występuje przed wykonaniem insert, update lub operację usuwania.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Występuje po pobraniu danych.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, i <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Występuje po zakończeniu insert, update lub operację usuwania.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Występuje, zanim zostanie zniszczony obiektu biznesowego.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. Drugim przykładzie kodu przedstawiono przykład obiektu biznesowym warstwy środkowej, który korzysta z pierwszego przykładu kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. <xref:System.Web.UI.WebControls.GridView> Początkowo wyświetlane zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. W tym przykładzie kodu jeden parametr jest określony w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji, która odpowiada identyfikatorowi pracownika. Wynika to z faktu, mimo że identyfikator jest uwzględniona w <xref:System.Windows.Forms.DataGridView.Columns%2A> kolekcji jako <xref:System.Web.UI.WebControls.BoundField> obiektu, zostaną przekazane jako ciąg, aby <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli. Dodając jawnie na <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji z <xref:System.Web.UI.WebControls.Parameter.Type%2A> ustawioną właściwość <xref:System.TypeCode.Int32> wartość on, przechodzą prawidłowo przez <xref:System.Web.UI.WebControls.ObjectDataSource> do metody jako liczba całkowita, a nie jako ciąg.  
  
 Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzeń po <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcji została zakończona, do obsługi dowolnej wyjątki, które mogły wystąpić. `NorthwindEmployeeDeleted` Delegata uzyskuje dostęp do możliwości wyjątki, które są generowane przez obiekt biznesowy, którego używa <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> obiektu. W tym przykładzie Jeśli `NorthwindDataException` jest zgłoszone, jest on obsługiwany przez ten delegat.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Poniższy przykład kodu zawiera obiekt biznesowym warstwy środkowej przykład używający w poprzednim przykładzie kodu. Na poniższej liście opisano dwie główne kategorie zdefiniowane w przykładzie kodu:  
  
-   `EmployeeLogic` Klasy to klasa, która nie przechowuje stanu i obejmuje logikę biznesową.  
  
-   `NorthwindEmployee` Klasa jest klasą modelu, który zawiera tylko podstawowe funkcje, które są wymagane do załadowania i utrwalenia danych z warstwy danych.  
  
 Ponadto `NorthwindDataException` klasy jest dostarczane jako udogodnienie.  
  
 Ten zestaw klas przykład używa bazy danych Northwind Traders, czyli na przykład bazy danych, która jest dostępna w programie Microsoft SQL Server i programu Microsoft Access. Pełny przykład pracy musi skompilowanie tego kodu jako biblioteki, a następnie użyć tych klas ze strony ASP. Strony ASP, które jest dostępne w poprzednim przykładzie jest skonfigurowane do pracy z tej biblioteki klas.  `UpdateEmployeeInfo` Metoda nie jest całkowicie zaimplementowana, dlatego możesz nie wstawia dane do bazy danych Northwind Traders po eksperymentować w tym przykładzie.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Obiekt, który reprezentuje zwracaną wartość dla tej operacji zakończonych bazy danych.</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość parametru obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> przy użyciu parametrów określonym produktem wyjściowym i zwracać wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` Parametr może być dowolny obiekt, który jest zwracany przez wywołanie do metody danych obiektu biznesowych. `outputParameters` Parametr jest <xref:System.Collections.IDictionary> zbiór par nazw i wartości, które są zgodne z tymi w podpisie metody i są przekazywane przez odwołanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Obiekt, który reprezentuje zwracaną wartość dla tej operacji zakończonych bazy danych.</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość parametru obiektów.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> Zawija się żadnych wyjątków wewnętrznych zgłoszony podczas wywołania metody.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> przy użyciu parametrów określonym produktem wyjściowym, zwraca wartość i wyjątków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` Parametr może być dowolny obiekt, który jest zwracany przez wywołanie do metody danych obiektu biznesowych. `outputParameters` Parametr jest <xref:System.Collections.IDictionary> zbiór par nazw i wartości, które są zgodne z tymi w podpisie metody i są przekazywane przez odwołanie. `exception` Parametr jest <xref:System.Exception> wyjątek, który opakowuje wszelkie wyjątki, które są generowane przez metodę, która jest wywoływana przez <xref:System.Web.UI.WebControls.ObjectDataSource> formantu podczas operacji danych. Jeśli wyjątek nie jest obsługiwany przez <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, lub <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> metody go zgłasza wyjątek <xref:System.Web.UI.WebControls.ObjectDataSource> kontroluje po powrocie z operacji danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę wierszy, które ma wpływ operacji danych.</summary>
        <value>Liczba wierszy wpływ operacji danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> wartość, aby sprawdzić, czy wywarła oczekiwanej liczby wierszy.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera otokę żadnych wyjątków, które są generowane przez metodę, która jest wywoływana przez <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> formantu podczas operacji danych.</summary>
        <value>
          <see cref="T:System.Exception" /> Który opakowuje wszelkie wyjątki zgłaszane przez obiektu biznesowego w jego <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> Wyjątek nie reprezentuje faktyczny wyjątek, który jest zwracany przez metodę firm obiektu danych. Można użyć <xref:System.Exception.InnerException%2A> właściwości dostępu zwrócony wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. <xref:System.Web.UI.WebControls.GridView> Początkowo wyświetlane zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji.  
  
 Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzeń po <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ukończeniu akcji do wykonania wszelkie obsługi wyjątków. W tym przykładzie Jeśli `NorthwindDataException` jest zgłoszony, jest on obsługiwany przez `NorthwindEmployeeDeleted` delegowanie.  
  
 Do wykonania sprawdzenia `EmployeeLogic` obiektu biznesowym warstwy środkowej, używanego w tym przykładzie kodu, zobacz Omówienie klasy w <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został zgłoszony przez obiekt biznesowy został obsłużony.</summary>
        <value>
          <see langword="true" /> Jeśli wyjątek zgłoszony przez obiekt biznesowy został obsłużony i nie powinien być zgłaszany przez <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obiekt biznesowy zgłasza wyjątek, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> właściwość jest ustawiona na `false` i wyjątek jest opakowane przez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> właściwości. Jeśli używasz <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> obiektu, można sprawdzić <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> właściwości i obsługi wyjątku. Jeśli obsłużyć wyjątek, ustaw <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> właściwości `true` lub <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki spowoduje zgłoszenie wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki z obiektu biznesowego i <xref:System.Web.UI.WebControls.GridView> sterowania do usunięcia danych. <xref:System.Web.UI.WebControls.GridView> Początkowo wyświetlane zbiór wszystkich pracowników, za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości można pobrać danych z `EmployeeLogic` obiektu. Ponieważ <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.GridView> kontrolować automatycznie wyświetla **usunąć** przycisku.  
  
 Jeśli klikniesz przycisk **usunąć** przycisku <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana za pomocą metody określonej przez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> właściwości i wszelkie parametry, które są określone w <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> kolekcji. Niektóre kroki przetwarzania wstępnego i przetwarzanie końcowe również są wykonywane w tym przykładzie kodu. `NorthwindEmployeeDeleting` Delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zdarzeń przed <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcja jest wykonywana i `NorthwindEmployeeDeleted` delegata jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> zdarzeń po <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> akcji została zakończona, do obsługi dowolnej wyjątki, które mogły wystąpić. W tym przykładzie Jeśli `NorthwindDataException` jest zgłoszony, jest on obsługiwany przez `NorthwindEmployeeDeleted` delegowanie.  
  
 Do wykonania sprawdzenia `EmployeeLogic` obiektu biznesowym warstwy środkowej, używanego w tym przykładzie kodu, zobacz Omówienie klasy w <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję, która zawiera parametry metody obiektu biznesowych i ich wartości.</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują parametry metody obiektu biznesowych i ich wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracane są wszystkie parametry, które są przekazywane do metody obiektu firm przez odwołanie w <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość zwracaną, który jest zwracany przez metodę obiekt biznesowych, jeśli występują jako obiekt.</summary>
        <value>Obiekt reprezentujący wartość zwracaną zwracany przez metodę obiekt firm; w przeciwnym razie <see langword="null" />, jeśli metoda obiektu biznesowych nie zwraca żadnej wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> Właściwość jest ustawiona <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> konstruktora. Wartość ma ustawioną wartość zwracana wywołania metody obiektu biznesowych, która jest wywoływana przy użyciu odbicia. Jeśli metoda biznesowych nie zwraca wartości (np. gdy metoda obiektu firm zwraca `void`), <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> obliczoną wartością właściwości `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>