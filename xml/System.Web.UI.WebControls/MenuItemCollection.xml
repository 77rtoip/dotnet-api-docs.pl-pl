<Type Name="MenuItemCollection" FullName="System.Web.UI.WebControls.MenuItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="278b5308a466ef1f527940171cdae09118c2fc49" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39813345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItemCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItemCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItemCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję elementów menu w <see cref="T:System.Web.UI.WebControls.Menu" /> kontroli. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemCollection> Klasa jest używana do przechowywania i zarządzania nimi zbiór <xref:System.Web.UI.WebControls.MenuItem> obiekty w <xref:System.Web.UI.WebControls.Menu> kontroli. <xref:System.Web.UI.WebControls.Menu> Kontrolować używa <xref:System.Web.UI.WebControls.MenuItemCollection> klasę do przechowywania jego menu główne elementy w <xref:System.Web.UI.WebControls.Menu.Items%2A> właściwości. Ta kolekcja jest również używany do <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> właściwość <xref:System.Web.UI.WebControls.MenuItem> obiekt, aby zapisać element menu podmenu (jeśli istnieje).  
  
 <xref:System.Web.UI.WebControls.MenuItemCollection> Klasa obsługuje dostęp do elementów w kolekcji na kilka sposobów:  
  
-   Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A> indeksator bezpośrednio pobrać <xref:System.Web.UI.WebControls.MenuItem> obiektu o określonym indeksie liczony od zera.  
  
-   Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metodę, aby utworzyć moduł wyliczający, który może służyć do iterowania po kolekcji.  
  
-   Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metodę, aby skopiować zawartość kolekcji do tablicy.  
  
 Możesz programowo zarządzać <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu, dodając i usuwając <xref:System.Web.UI.WebControls.MenuItem> obiektów. Aby dodać elementy menu do kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> lub <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> metody. Aby usunąć węzły z kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>, <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>, lub <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.Menu> kontrolka jest powiązana ze źródłem danych <xref:System.Web.UI.WebControls.Menu.Items%2A> i <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> kolekcje są wypełniane automatycznie każdorazowo występuje powiązania. Wszelkie zmiany w kolekcji między powiązań zostaną utracone. Aby zachować te zmiany, zaktualizować źródło danych lub ręcznie przebudować każdorazowo, gdy powiąże kolekcję.  
  
 <xref:System.Web.UI.WebControls.MenuItemCollection> Klasy zawiera właściwości i metody, które umożliwiają pobieranie informacji o sama kolekcja. Aby dowiedzieć się, ile elementów znajdują się w kolekcji, należy użyć <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> właściwości. Jeśli chcesz ustalić, czy kolekcja zawiera określony <xref:System.Web.UI.WebControls.MenuItem> obiektu, należy użyć <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> metody. Aby uzyskać indeks <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wypełnić <xref:System.Web.UI.WebControls.Menu.Items%2A> i <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> kolekcji za pomocą składni deklaratywnej.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak programowo dodać <xref:System.Web.UI.WebControls.MenuItem> obiekt <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> kolekcji elementów menu głównego.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> klasy przy użyciu wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.MenuItemCollection> klasy przy użyciu wartości domyślnych. Ten konstruktor jest często stosowany podczas tworzenia kolekcji głównych elementów menu gdzie menu nadrzędnego (lub właściciela) nie jest wymagane.  
  
> [!NOTE]
>  Podczas tworzenia kolekcji podrzędnych elementów menu, należy używać przeciążonego konstruktora, który przyjmuje `owner` parametru, zamiast tego konstruktora, aby określić nadrzędnego elementu menu.  
  
 Ten konstruktor jest używany przede wszystkim deweloperom sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.Menu> formantu, aby zainicjować <xref:System.Web.UI.WebControls.Menu.Items%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.MenuItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Web::UI::WebControls::MenuItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItemCollection : System.Web.UI.WebControls.MenuItem -&gt; System.Web.UI.WebControls.MenuItemCollection" Usage="new System.Web.UI.WebControls.MenuItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Web.UI.WebControls.MenuItem" /> reprezentujący element menu nadrzędny bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> przy użyciu elementu menu określonego elementu nadrzędnego (lub właściciela).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.MenuItemCollection> przy użyciu elementu menu określonego elementu nadrzędnego (lub właściciela). Ten konstruktor jest często używany podczas tworzenia kolekcji elementów menu podrzędne gdzie należy określić nadrzędny element menu.  
  
> [!NOTE]
>  Podczas tworzenia kolekcji głównych elementów menu, należy wziąć pod uwagę przy użyciu konstruktora domyślnego, ponieważ elementy menu głównego, nie ma nadrzędnego elementu menu.  
  
 Ten konstruktor jest używany przede wszystkim deweloperom sterowania podczas rozszerzania <xref:System.Web.UI.WebControls.MenuItem> klasy, aby zainicjować <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="child">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Do dołączenia do końca bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt na koniec bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> metodę, aby dołączyć określonego <xref:System.Web.UI.WebControls.MenuItem> obiektu na końcu kolekcji.  
  
> [!NOTE]
>  Możesz dodać wartości puste i zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiekty do kolekcji.  
  
 Alternatywnie, można wstawić <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji pod określonym indeksem przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> metodę, aby programowo dodać <xref:System.Web.UI.WebControls.MenuItem> obiekt <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="child" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizację liczony od zera indeks, w której mają zostać wstawione <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="child">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> metodę, aby wstawić określonego <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji pod określonym indeksem.  
  
> [!NOTE]
>  Możesz dodać wartości puste i zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiekty do kolekcji.  
  
 Alternatywnie, można po prostu dołączyć <xref:System.Web.UI.WebControls.MenuItem> obiektu do końca kolekcji przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> metody programowe wstawianie <xref:System.Web.UI.WebControls.MenuItem> obiektu <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu w określonej lokalizacji indeksu.  
  
 [!code-aspx-csharp[MenuItemCollectionAddAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAddAt/CS/menuitemcollectionaddatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAddAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAddAt/VB/menuitemcollectionaddatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="menuItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metodę, aby usunąć każdy <xref:System.Web.UI.WebControls.MenuItem> obiekt z bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
> [!NOTE]
>  Aby usunąć jednego węzła z kolekcji, należy rozważyć użycie <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> lub <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metodę, aby usunąć wszystkie elementy z <xref:System.Web.UI.WebControls.Menu.Items%2A> zbiór <xref:System.Web.UI.WebControls.Menu> kontroli.  
  
 [!code-aspx-csharp[MenuItemCollectionClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionClear/CS/menuitemcollectionclearcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionClear/VB/menuitemcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.MenuItem c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.MenuItem c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::MenuItem ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.MenuItem -&gt; bool" Usage="menuItemCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="c">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Można znaleźć.</param>
        <summary>Określa, czy określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt jest zawarty w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> metodę pozwala ustalić czy <xref:System.Web.UI.WebControls.MenuItem> obiekt znajduje się w bieżącym <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu. <xref:System.Web.UI.WebControls.MenuItem> i jego właściwości jest porównywana z wartością przekazana. Ta metoda jest często używana do testowania obecności <xref:System.Web.UI.WebControls.MenuItem> obiektu przed wykonaniem zadania, takie jak dodanie lub usunięcie elementu menu z kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> metodę pozwala ustalić czy <xref:System.Web.UI.WebControls.MenuItem> obiekt jest zawarty w <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionContains/CS/menuitemcollectioncontainscs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionContains/VB/menuitemcollectioncontainsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje zawartość bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <param name="index">Pozycja w docelowej tablicy, od którego należy rozpocząć odbierani skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu zgodnego z jednowymiarowa <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metodę, aby skopiować zawartość bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu do określonego liczony od zera <xref:System.Array?displayProperty=nameWithType>. Elementy są kopiowane, rozpoczynając od określonego indeksu tablicy docelowej. Za pomocą <xref:System.Array?displayProperty=nameWithType>, można następnie użyć składni tablicy dostępu do elementów w <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 Alternatywnie, można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metodę, aby utworzyć moduł wyliczający, który może służyć do dostępu do elementów w kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> nie jest tablicą <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektów.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.MenuItem[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As MenuItem(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::MenuItem ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.MenuItem[] * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.MenuItem[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera tablicę <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektów, które odbiera skopiowane elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <param name="index">Pozycja w docelowej tablicy, od którego należy rozpocząć odbierani skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu zgodne Jednowymiarowa tablica <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektów, zaczynając od określonego indeksu w tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metodę, aby skopiować zawartość bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu do określonej tablicy liczony od zera. Elementy są kopiowane, rozpoczynając od określonego indeksu tablicy docelowej. Za pomocą tablicy można następnie użyć składni tablicy dostępu do elementów w <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 Alternatywnie, można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metodę, aby utworzyć moduł wyliczający, który może służyć do dostępu do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metodę, aby skopiować elementy w <xref:System.Web.UI.WebControls.MenuItemCollection> obiekt jako tablicę <xref:System.Web.UI.WebControls.MenuItem> obiektów.  
  
 [!code-aspx-csharp[MenuItemCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCopyTo/CS/menuitemcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCopyTo/VB/menuitemcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów menu zawartych w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <value>Liczba elementów menu zawartych w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> właściwości, aby określić liczbę elementów w <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu. Ta właściwość jest często używana do określenia górna granica kolekcji podczas iteracji w kolekcji. <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> Jest również powszechnie używana do określenia, czy kolekcja jest pusta.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> właściwości, aby określić liczbę elementów menu w <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCount/CS/menuitemcollectioncountcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCount/VB/menuitemcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="menuItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który może służyć do iteracji przez elementy w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <returns>Moduł wyliczający, który może służyć do iteracji przez elementy w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metodę, aby utworzyć moduł wyliczający, który można łatwo należy powtórzyć za pośrednictwem uzyskać każdego elementu w bieżącym <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu. Aby uzyskać element obecnie wskazany w moduł wyliczający, użyj <xref:System.Collections.IEnumerator.Current%2A> właściwości. Użyj <xref:System.Collections.IEnumerator.MoveNext%2A> metodę, aby przejść do następnego elementu. Jeśli musisz przenieść modułu wyliczającego z powrotem do stanu sprzed kolekcji, użyj <xref:System.Collections.IEnumerator.Reset%2A> metody.  
  
> [!NOTE]
>  Po utworzeniu modułu wyliczającego lub użyj <xref:System.Collections.IEnumerator.Reset%2A> metody, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> metody. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.  
  
 Alternatywnie, można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metodę, aby skopiować elementy w kolekcji do tablicy. Następnie można użyć tablicy, dostęp do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metodę, aby utworzyć moduł wyliczający, który zawiera elementy podmenu `Music` elementu menu w <xref:System.Web.UI.WebControls.Menu> kontroli.  
  
 [!code-aspx-csharp[MenuItemCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/CS/menuitemcollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/VB/menuitemcollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.MenuItem -&gt; int" Usage="menuItemCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Do zlokalizowania.</param>
        <summary>Określa indeksuje określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu w kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w obrębie bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> metodę, aby określić indeks określonego <xref:System.Web.UI.WebControls.MenuItem> obiektu w bieżącym <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu. Jeśli element menu nie znajduje się w kolekcji, metoda zwraca wartość -1.  
  
> [!NOTE]
>  Jeśli podany element menu pojawia się wiele razy w kolekcji, zwracany jest indeks pierwszego wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> metodę, aby określić indeks <xref:System.Web.UI.WebControls.MenuItem> obiektów w ramach <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionIndexOf/CS/menuitemcollectionindexofcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionIndexOf/VB/menuitemcollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu jest synchronizowany (wątkowo).</summary>
        <value>Zawsze zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> Właściwość jest używana w celu wskazania, czy dostęp do <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu jest synchronizowany (wątkowo). Ta właściwość jest tworzony na podstawie <xref:System.Collections.ICollection?displayProperty=nameWithType> klasy i zostanie zastąpiony zawsze zwracają `false`.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> właściwości, zobacz <xref:System.Collections.ICollection.IsSynchronized%2A> właściwość <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ default[int] { System::Web::UI::WebControls::MenuItem ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks <see cref="T:System.Web.UI.WebControls.MenuItem" /> do pobrania.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu wskazywanego przez określony indeks w bieżącej <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Pod określonym indeksem w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do za pomocą ten indeksator <xref:System.Web.UI.WebControls.MenuItem> obiekt z bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu wskazywanego przez określony indeks tablicy notacji. Indeksator pozwala na dostęp, zmodyfikować lub Zastąp <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobrać element menu głównego, z za pomocą indeksatora <xref:System.Web.UI.WebControls.Menu.Items%2A> zbiór <xref:System.Web.UI.WebControls.Menu> kontroli.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> Obiekt ma zostać usunięty.</param>
        <summary>Usuwa określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu z <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> metodę, aby usunąć podany element menu z kolekcji. Wszystkie elementy, które należy wykonać ten element menu są następnie przenoszone w górę do wypełnienia wolnych pozycji. Indeksy przeniesionych elementów również są aktualizowane.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItemCollection> Obiektu może zawierać wartości null, a także zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiektów.  
  
 Alternatywnie, możesz usunąć element menu od określonego indeksu w kolekcji przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metody. Możesz również usunąć wszystkie elementy menu z kolekcji, przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> metodę, aby programowo usunąć <xref:System.Web.UI.WebControls.MenuItem> obiektu z <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemove/CS/menuitemcollectionremovecs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemove/VB/menuitemcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="menuItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks elementu menu, aby usunąć.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu w określonej lokalizacji indeksu z bieżącej <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metodę, aby usunąć <xref:System.Web.UI.WebControls.MenuItem> obiektu w określonej lokalizacji indeksu z kolekcji. Wszystkie elementy, które należy wykonać ten element menu są następnie przenoszone w górę do wypełnienia wolnych pozycji. Indeksy przeniesionych elementów również są aktualizowane.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItemCollection> Obiektu może zawierać wartości null, a także zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiektów.  
  
 Alternatywnie, można usunąć określonego <xref:System.Web.UI.WebControls.MenuItem> obiektu za pomocą <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> metody. Możesz również usunąć wszystkie elementy menu z kolekcji, przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metodę, aby programowo usunąć <xref:System.Web.UI.WebControls.MenuItem> obiektu z <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu w określonej lokalizacji indeksu.  
  
 [!code-aspx-csharp[MenuItemCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/CS/menuitemcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/VB/menuitemcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <value>
          <see cref="T:System.Object" /> Który może służyć do synchronizowania dostępu do <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> Dostarcza zsynchronizowaną wersję <xref:System.Web.UI.WebControls.MenuItemCollection> obiekt, który może być używany z synchronizowania kodu (wątku).  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> Właściwości tej klasy zawsze zwraca `false`, który wskazuje, że <xref:System.Web.UI.WebControls.MenuItemCollection> klasy nie jest synchronizowany (nie wątkowo).  
  
 Synchronizowanie kodu należy wykonywać operacje <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> obiektu <xref:System.Web.UI.WebControls.MenuItemCollection> kolekcji, nie są bezpośrednio w <xref:System.Web.UI.WebControls.MenuItemCollection> sam obiekt. Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów. W szczególności utrzymuje właściwe synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
> [!NOTE]
>  Obiekt zwrócony w tej implementacji jest <xref:System.Collections.ArrayList> obiekt używany do przechowywania <xref:System.Web.UI.WebControls.MenuItem> obiektów w kolekcji.  
  
 Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość. Nawet gdy kolekcja jest synchronizowana, inne wątki nadal można zmodyfikować kolekcji, powodując modułu wyliczającego do zgłoszenia wyjątku. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> właściwości, zobacz <xref:System.Collections.ICollection.SyncRoot%2A> właściwość <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu jest zapisywanie zmian stanu widoku.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolka jest oznaczona zapisanie swojego stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> Zawierający wartości stanu zapisanego widoku.</param>
        <summary>Ładunki <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu uprzednio zapisanego stanu widoku.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany, aby wyświetlić stan <see cref="T:System.Object" />.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający zmian stanu widoku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektów do śledzenia zmian stanu widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody w kontrolce serwera <xref:System.Web.UI.Control.IsTrackingViewState%2A> właściwość zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
  </Members>
</Type>