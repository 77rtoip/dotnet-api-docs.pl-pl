<Type Name="MenuItemCollection" FullName="System.Web.UI.WebControls.MenuItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f7df81693cfe2b8e098db45ee3dcb1122efb2aa7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69390191" /></Metadata><TypeSignature Language="C#" Value="public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItemCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItemCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItemCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję elementów menu w <see cref="T:System.Web.UI.WebControls.Menu" /> kontrolce. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana do przechowywania <xref:System.Web.UI.WebControls.MenuItem> kolekcji obiektów w <xref:System.Web.UI.WebControls.Menu> kontrolce i zarządzania nią. <xref:System.Web.UI.WebControls.MenuItemCollection> Kontrolka używa klasy do przechowywania swoich elementów menu <xref:System.Web.UI.WebControls.Menu.Items%2A> głównego we właściwości. <xref:System.Web.UI.WebControls.MenuItemCollection> <xref:System.Web.UI.WebControls.Menu> Ta kolekcja jest również używana jako <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Właściwość <xref:System.Web.UI.WebControls.MenuItem> obiektu do przechowywania elementów podmenu elementu menu (jeśli istnieją).  
  
 <xref:System.Web.UI.WebControls.MenuItemCollection> Klasa obsługuje kilka sposobów uzyskiwania dostępu do elementów w kolekcji:  
  
-   Użyj indeksatora, <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A> aby bezpośrednio <xref:System.Web.UI.WebControls.MenuItem> pobrać obiekt w określonym indeksie liczonym od zera.  
  
-   <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> Użyj metody, aby utworzyć moduł wyliczający, który może być używany do iteracji kolekcji.  
  
-   Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> , aby skopiować zawartość kolekcji do tablicy.  
  
 Można programowo zarządzać <xref:System.Web.UI.WebControls.MenuItemCollection> obiektem przez dodawanie i usuwanie <xref:System.Web.UI.WebControls.MenuItem> obiektów. Aby dodać elementy menu do kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> metody lub. Aby usunąć węzły z kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody, lub.  
  
> [!NOTE]
>  Gdy formant jest powiązany ze źródłem danych <xref:System.Web.UI.WebControls.Menu.Items%2A> , kolekcje i <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> są wypełniane automatycznie przy każdym wystąpieniu powiązania. <xref:System.Web.UI.WebControls.Menu> Wszystkie zmiany kolekcji między powiązaniami zostaną utracone. Aby zachować te zmiany, należy zaktualizować źródło danych lub ręcznie skompilować kolekcję po każdym utworzeniu powiązania.  
  
 <xref:System.Web.UI.WebControls.MenuItemCollection> Klasa zawiera właściwości i metody, które umożliwiają pobieranie informacji o samej kolekcji. Aby dowiedzieć się, ile elementów znajduje się w kolekcji, użyj <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> właściwości. Jeśli chcesz określić, czy kolekcja zawiera określony <xref:System.Web.UI.WebControls.MenuItem> obiekt, <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> Użyj metody. Aby uzyskać indeks <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji, <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> Użyj metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wypełniania <xref:System.Web.UI.WebControls.Menu.Items%2A> kolekcji i <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> przy użyciu składni deklaratywnej.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, jak programowo dodać <xref:System.Web.UI.WebControls.MenuItem> obiekt <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> do kolekcji elementu menu głównego.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> klasy przy użyciu wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.MenuItemCollection> klasy przy użyciu wartości domyślnych. Ten konstruktor jest często używany podczas tworzenia kolekcji elementów menu głównego, w których menu nadrzędne (lub właściciel) nie jest wymagane.  
  
> [!NOTE]
>  Podczas tworzenia kolekcji elementów menu podrzędnego należy użyć przeciążonego konstruktora, który przyjmuje `owner` parametr, zamiast tego konstruktora, aby określić element menu nadrzędnego.  
  
 Ten konstruktor jest używany głównie poprzez kontrolowanie deweloperów podczas rozszerzania <xref:System.Web.UI.WebControls.Menu> kontrolki w celu <xref:System.Web.UI.WebControls.Menu.Items%2A> zainicjowania właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.MenuItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Web::UI::WebControls::MenuItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItemCollection : System.Web.UI.WebControls.MenuItem -&gt; System.Web.UI.WebControls.MenuItemCollection" Usage="new System.Web.UI.WebControls.MenuItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="owner">Reprezentuje element menu nadrzędny bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />. <see cref="T:System.Web.UI.WebControls.MenuItem" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> klasy przy użyciu określonego elementu nadrzędnego menu (lub właściciela).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.MenuItemCollection> klasy przy użyciu określonego elementu menu nadrzędnego (lub właściciela). Ten konstruktor jest często używany podczas tworzenia kolekcji elementów menu podrzędnego, w których należy określić element menu nadrzędnego.  
  
> [!NOTE]
>  Podczas tworzenia kolekcji elementów menu głównego należy rozważyć użycie konstruktora bez parametrów, ponieważ elementy menu głównego nie mają nadrzędnego elementu menu.  
  
 Ten konstruktor jest używany głównie poprzez kontrolowanie deweloperów podczas rozszerzania <xref:System.Web.UI.WebControls.MenuItem> klasy w celu <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> zainicjowania właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="child">Do dołączenia na koniec bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />elementu. <see cref="T:System.Web.UI.WebControls.MenuItem" /></param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt do końca bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> , aby dołączyć określony <xref:System.Web.UI.WebControls.MenuItem> obiekt do końca kolekcji.  
  
> [!NOTE]
>  Do kolekcji można dodawać wartości null i <xref:System.Web.UI.WebControls.MenuItem> zduplikowane obiekty.  
  
 Alternatywnie można wstawić <xref:System.Web.UI.WebControls.MenuItem> obiekt w kolekcji w określonym indeksie przy <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> użyciu metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> jak używać metody do programistycznego <xref:System.Web.UI.WebControls.MenuItem> dodawania obiektu do <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera), w którym należy <see cref="T:System.Web.UI.WebControls.MenuItem" />wstawić.</param>
        <param name="child"><see cref="T:System.Web.UI.WebControls.MenuItem" /> Do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekcie w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby wstawić określony <xref:System.Web.UI.WebControls.MenuItem> obiekt w kolekcji pod określonym indeksem. <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>  
  
> [!NOTE]
>  Do kolekcji można dodawać wartości null i <xref:System.Web.UI.WebControls.MenuItem> zduplikowane obiekty.  
  
 Alternatywnie można po prostu dołączyć <xref:System.Web.UI.WebControls.MenuItem> obiekt na końcu kolekcji przy <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> użyciu metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> jak używać metody do programistycznego <xref:System.Web.UI.WebControls.MenuItem> wstawiania obiektu w <xref:System.Web.UI.WebControls.MenuItemCollection> obiekcie w określonej lokalizacji indeksu.  
  
 [!code-aspx-csharp[MenuItemCollectionAddAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAddAt/CS/menuitemcollectionaddatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAddAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAddAt/VB/menuitemcollectionaddatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="menuItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> , aby usunąć wszystkie <xref:System.Web.UI.WebControls.MenuItem> obiekty z bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
> [!NOTE]
>  Aby usunąć pojedynczy węzeł z kolekcji, należy rozważyć użycie <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metody lub.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> jak używać metody do usuwania wszystkich elementów <xref:System.Web.UI.WebControls.Menu.Items%2A> z kolekcji <xref:System.Web.UI.WebControls.Menu> kontrolki.  
  
 [!code-aspx-csharp[MenuItemCollectionClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionClear/CS/menuitemcollectionclearcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionClear/VB/menuitemcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.MenuItem c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.MenuItem c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::MenuItem ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.MenuItem -&gt; bool" Usage="menuItemCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="c"><see cref="T:System.Web.UI.WebControls.MenuItem" /> Do znalezienia.</param>
        <summary>Określa, czy określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt jest zawarty w kolekcji; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> , aby określić, <xref:System.Web.UI.WebControls.MenuItem> czy obiekt jest zawarty w bieżącym <xref:System.Web.UI.WebControls.MenuItemCollection> obiekcie. <xref:System.Web.UI.WebControls.MenuItem> I jego właściwości są porównywane z wartością przekazaną. Ta metoda jest często używana do testowania pod kątem istnienia <xref:System.Web.UI.WebControls.MenuItem> obiektu przed wykonaniem zadania, takiego jak dodanie lub usunięcie elementu menu z kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia metody w celu <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> ustalenia, <xref:System.Web.UI.WebControls.MenuItem> czy <xref:System.Web.UI.WebControls.MenuItemCollection> obiekt jest zawarty w obiekcie.  
  
 [!code-aspx-csharp[MenuItemCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionContains/CS/menuitemcollectioncontainscs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionContains/VB/menuitemcollectioncontainsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje zawartość bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Wartość zerowa <see cref="T:System.Array" /> , która odbiera skopiowane elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <param name="index">Pozycja w tablicy docelowej, w której ma zostać rozpoczęte otrzymywanie skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu w tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> , aby skopiować zawartość bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu do określonego zera na podstawie <xref:System.Array?displayProperty=nameWithType>. Elementy są kopiowane, rozpoczynając od określonego indeksu tablicy docelowej. Przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection> , można użyć składni tablicy, aby uzyskać dostęp do elementów w obiekcie. <xref:System.Array?displayProperty=nameWithType>  
  
 Alternatywnie można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metody, aby utworzyć moduł wyliczający, który może służyć do uzyskiwania dostępu do elementów w kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" />nie jest tablicą <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektów.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.MenuItem[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As MenuItem(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::MenuItem ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.MenuItem[] * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.MenuItem[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektów na podstawie zera, która odbiera skopiowane elementy z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</param>
        <param name="index">Pozycja w tablicy docelowej, w której ma zostać rozpoczęte otrzymywanie skopiowanej zawartości.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu do zgodnej jednowymiarowej <see cref="T:System.Web.UI.WebControls.MenuItem" /> tablicy obiektów, rozpoczynając od określonego indeksu w tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> , aby skopiować zawartość bieżącego <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu do określonej tablicy opartej na zero. Elementy są kopiowane, rozpoczynając od określonego indeksu tablicy docelowej. Za pomocą tablicy można użyć składni tablicy, aby uzyskać dostęp do elementów w <xref:System.Web.UI.WebControls.MenuItemCollection> obiekcie.  
  
 Alternatywnie można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metody, aby utworzyć moduł wyliczający, który może służyć do uzyskiwania dostępu do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metody do kopiowania elementów <xref:System.Web.UI.WebControls.MenuItemCollection> w <xref:System.Web.UI.WebControls.MenuItem> obiekcie do tablicy obiektów.  
  
 [!code-aspx-csharp[MenuItemCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCopyTo/CS/menuitemcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCopyTo/VB/menuitemcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów menu zawartych w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekcie.</summary>
        <value>Liczba elementów menu zawartych w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekcie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> , aby określić liczbę elementów <xref:System.Web.UI.WebControls.MenuItemCollection> w obiekcie. Ta właściwość jest często używana podczas iteracji kolekcji, aby określić górną granicę kolekcji. <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> Właściwość jest również często używana do określenia, czy kolekcja jest pusta.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> aby określić liczbę elementów menu <xref:System.Web.UI.WebControls.MenuItemCollection> w obiekcie.  
  
 [!code-aspx-csharp[MenuItemCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCount/CS/menuitemcollectioncountcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCount/VB/menuitemcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="menuItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który może być używany do iteracji przez elementy w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekcie.</summary>
        <returns>Moduł wyliczający, który może służyć do iteracji przez elementy w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby utworzyć moduł wyliczający, który może być łatwo powtarzany, aby uzyskać każdy element w <xref:System.Web.UI.WebControls.MenuItemCollection> bieżącym obiekcie. <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> Aby wyświetlić element, który jest obecnie wskazywany w module wyliczającym, użyj <xref:System.Collections.IEnumerator.Current%2A> właściwości. Użyj metody <xref:System.Collections.IEnumerator.MoveNext%2A> , aby przejść do następnego elementu. Jeśli musisz przenieść moduł wyliczający z powrotem do początku kolekcji, użyj <xref:System.Collections.IEnumerator.Reset%2A> metody.  
  
> [!NOTE]
>  Po utworzeniu modułu wyliczającego lub zastosowaniu <xref:System.Collections.IEnumerator.Reset%2A> metody należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowany.  
  
 Alternatywnie można również użyć <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> metody do kopiowania elementów w kolekcji do tablicy. Następnie możesz użyć tablicy, aby uzyskać dostęp do elementów w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> metody utworzyć moduł wyliczający, który zawiera elementy `Music` podmenu elementu menu w <xref:System.Web.UI.WebControls.Menu> kontrolce.  
  
 [!code-aspx-csharp[MenuItemCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/CS/menuitemcollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/VB/menuitemcollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.MenuItem -&gt; int" Usage="menuItemCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.UI.WebControls.MenuItem" /> Aby zlokalizować.</param>
        <summary>Określa indeks określonego <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiektu w kolekcji.</summary>
        <returns>Indeks (liczony od zera) pierwszego wystąpienia <paramref name="value" /> w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, jeśli został znaleziony; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby określić indeks określonego <xref:System.Web.UI.WebControls.MenuItem> obiektu w bieżącym <xref:System.Web.UI.WebControls.MenuItemCollection> obiekcie. <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> Jeśli element menu nie znajduje się w kolekcji, metoda zwróci wartość-1.  
  
> [!NOTE]
>  Jeśli określony element menu pojawia się wiele razy w kolekcji, zwracany jest indeks pierwszego wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> metody do określenia indeksu <xref:System.Web.UI.WebControls.MenuItem> obiektu w <xref:System.Web.UI.WebControls.MenuItemCollection> obiekcie.  
  
 [!code-aspx-csharp[MenuItemCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionIndexOf/CS/menuitemcollectionindexofcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionIndexOf/VB/menuitemcollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> czy dostęp do obiektu jest synchronizowany (bezpieczny wątkowo).</summary>
        <value>Zawsze zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość służy do wskazywania, czy dostęp <xref:System.Web.UI.WebControls.MenuItemCollection> do obiektu jest synchronizowany (bezpieczny wątkowo). <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> Ta właściwość jest pochodną <xref:System.Collections.ICollection?displayProperty=nameWithType> klasy i jest zastępowana, aby zawsze zwracać. `false`  
  
 Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> temat właściwości, <xref:System.Collections.ICollection.IsSynchronized%2A> Zobacz Właściwość <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ default[int] { System::Web::UI::WebControls::MenuItem ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) <see cref="T:System.Web.UI.WebControls.MenuItem" /> do pobrania.</param>
        <summary>Pobiera obiekt o określonym indeksie w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekcie. <see cref="T:System.Web.UI.WebControls.MenuItem" /></summary>
        <value>Na określonym indeksie w bieżącym <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />. <see cref="T:System.Web.UI.WebControls.MenuItem" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego indeksatora, aby uzyskać <xref:System.Web.UI.WebControls.MenuItem> dostęp do obiektu z <xref:System.Web.UI.WebControls.MenuItemCollection> bieżącego obiektu o określonym indeksie przy użyciu notacji tablicy. Indeksator umożliwia bezpośredni dostęp, modyfikowanie lub zastępowanie <xref:System.Web.UI.WebControls.MenuItem> obiektu w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą indeksatora pobrać element menu głównego z <xref:System.Web.UI.WebControls.Menu.Items%2A> kolekcji <xref:System.Web.UI.WebControls.Menu> kontrolki.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.UI.WebControls.MenuItem" /> Obiekt do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Web.UI.WebControls.MenuItem" /> obiekt <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> z obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> Użyj metody, aby usunąć określony element menu z kolekcji. Wszystkie elementy znajdujące się po tym elemencie menu są następnie przenoszone w górę w celu wypełnienia wolnej pozycji. Zostaną również zaktualizowane indeksy przeniesionych elementów.  
  
> [!NOTE]
>  Obiekt może zawierać wartości null, a także zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiekty. <xref:System.Web.UI.WebControls.MenuItemCollection>  
  
 Alternatywnie, można usunąć element menu z określonego indeksu w kolekcji przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metody. Można również usunąć wszystkie elementy menu z kolekcji przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> metody do programistycznego <xref:System.Web.UI.WebControls.MenuItem> usuwania obiektu z <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu.  
  
 [!code-aspx-csharp[MenuItemCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemove/CS/menuitemcollectionremovecs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemove/VB/menuitemcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="menuItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja indeksu (liczony od zera) elementu menu do usunięcia.</param>
        <summary>Usuwa obiekt znajdujący się w określonej lokalizacji indeksu z bieżącego <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu. <see cref="T:System.Web.UI.WebControls.MenuItem" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> , aby <xref:System.Web.UI.WebControls.MenuItem> usunąć obiekt znajdujący się w określonej lokalizacji indeksu z kolekcji. Wszystkie elementy znajdujące się po tym elemencie menu są następnie przenoszone w górę w celu wypełnienia wolnej pozycji. Zostaną również zaktualizowane indeksy przeniesionych elementów.  
  
> [!NOTE]
>  Obiekt może zawierać wartości null, a także zduplikowane <xref:System.Web.UI.WebControls.MenuItem> obiekty. <xref:System.Web.UI.WebControls.MenuItemCollection>  
  
 Alternatywnie można usunąć konkretny <xref:System.Web.UI.WebControls.MenuItem> obiekt za <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> pomocą metody. Można również usunąć wszystkie elementy menu z kolekcji przy użyciu <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> metody do programistycznego <xref:System.Web.UI.WebControls.MenuItem> usuwania obiektu z <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu w określonej lokalizacji indeksu.  
  
 [!code-aspx-csharp[MenuItemCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/CS/menuitemcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/VB/menuitemcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiektu.</summary>
        <value>, Który może służyć do synchronizowania dostępu do programu <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />. <see cref="T:System.Object" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera zsynchronizowaną wersję <xref:System.Web.UI.WebControls.MenuItemCollection> obiektu, który może być używany z synchronizacją kodu (wątkowość). <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A>  
  
> [!CAUTION]
>  Właściwość tej klasy zawsze zwraca `false` <xref:System.Web.UI.WebControls.MenuItemCollection> , co oznacza, że Klasa nie jest zsynchronizowana (nie jest bezpieczna wątkowo). <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>  
  
 Synchronizowanie kodu musi wykonywać operacje na <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> obiekcie <xref:System.Web.UI.WebControls.MenuItemCollection> kolekcji <xref:System.Web.UI.WebControls.MenuItemCollection> , nie bezpośrednio na samym obiekcie. Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów. W celu zapewnienia odpowiedniej synchronizacji z innymi wątkami, które mogą jednocześnie modyfikować <xref:System.Web.UI.WebControls.MenuItemCollection> obiekt.  
  
> [!NOTE]
>  Obiekt zwrócony w tej implementacji jest <xref:System.Collections.ArrayList> obiektem używanym do <xref:System.Web.UI.WebControls.MenuItem> przechowywania obiektów w kolekcji.  
  
 Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość. Nawet w przypadku synchronizacji kolekcji inne wątki mogą nadal modyfikować kolekcję, powodując wygenerowanie wyjątku przez moduł wyliczający. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.  
  
 Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> temat właściwości, <xref:System.Collections.ICollection.SyncRoot%2A> Zobacz Właściwość <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekt zapisuje zmiany w stanie widoku.</summary>
        <value><see langword="true" />Jeśli formant jest oznaczony do zapisania jego stanu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Object" /> zawierający zapisane wartości stanu widoku.</param>
        <summary>Ładuje stan widoku poprzednio zapisanego obiektu.<see cref="T:System.Web.UI.WebControls.MenuItemCollection" /></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany stanu <see cref="T:System.Object" />widoku.</summary>
        <returns><see cref="T:System.Object" /> Zawiera zmiany stanu widoku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> obiekt śledzi zmiany stanu widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody w formancie <xref:System.Web.UI.Control.IsTrackingViewState%2A> serwera Właściwość zwraca. `true`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
