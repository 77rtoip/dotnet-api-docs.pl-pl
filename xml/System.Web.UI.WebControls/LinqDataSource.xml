<Type Name="LinqDataSource" FullName="System.Web.UI.WebControls.LinqDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4323afd0155d6f6f505f6da2b25515de052ac9b4" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48732093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSource extends System.Web.UI.WebControls.ContextDataSource implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSource&#xA;Inherits ContextDataSource&#xA;Implements IDynamicDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSource : System::Web::UI::WebControls::ContextDataSource, System::Web::DynamicData::IDynamicDataSource" />
  <TypeSignature Language="F#" Value="type LinqDataSource = class&#xA;    inherit ContextDataSource&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSource</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.5">System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("ContextTypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia korzystanie z Language-Integrated Query (LINQ) na stronie sieci Web platformy ASP.NET za pomocą znaczników tekstu, aby pobrać i zmodyfikować dane z obiektu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Kolejność operacji](#order_of_operations)  
  
-   [Porządkowanie danych](#ordering_data)  
  
-   [Grupowanie danych](#grouping_data)  
  
-   [Data modyfikacji](#data_modifications)  
  
-   [Ocena wartości w czasie wykonywania](#evaluating_value_at_run_time)  
  
-   [Praca z procedurami składowanymi](#working_with_stored_procedures)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Language-Integrated Query (LINQ) jest składnia zapytania, który definiuje zestaw operatorów zapytań, które umożliwiają przechodzenie, filtrowanie i operacje być wyrażone w sposób deklaratywne we wszystkich. Języka programowania opartego na sieci. Obiekt danych może być zbierania danych w pamięci lub obiekt, który reprezentuje dane z bazy danych. Można pobrać lub zmodyfikować dane bez konieczności pisania poleceń SQL dla każdej operacji.  
  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli umożliwia używanie LINQ na stronie sieci Web platformy ASP.NET przez ustawienie właściwości w tekście znaczników. <xref:System.Web.UI.WebControls.LinqDataSource> Kontrola korzysta LINQ to SQL w celu automatycznego generowania polecenia danych. Aby uzyskać więcej informacji na temat programu LINQ to SQL, zobacz [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  
  
 Jeśli dane są pobierane z kolekcji danych w pamięci, można skonfigurować ustawienie <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości do klasy, która zawiera kolekcję danych. Możesz ustawić <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości do właściwości lub pola, które zwraca kolekcję danych. Na przykład masz klasę o nazwie `Person` zawiera właściwość o nazwie `FavoriteCities` która zwraca tablicę wartości ciągu. W takim przypadku należy ustawić <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości `Person` i ustaw <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość `FavoriteCities`.  
  
 Gdy jest wykonywane zapytanie bazy danych, należy najpierw utworzyć klas jednostek, które reprezentują bazy danych i jego tabel. Możesz użyć [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] lub narzędzia SqlMetal.exe do wygenerowania tych klas. Następnie ustawiamy <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości do klasy, która reprezentuje bazy danych i ustaw <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość Właściwość, która reprezentuje tabeli bazy danych.  
  
<a name="order_of_operations"></a>   
## <a name="order-of-operations"></a>Kolejność operacji  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli stosuje operacje na danych w następującej kolejności:  
  
1.  Gdzie (Określ dane, które rekordów do zwrócenia).  
  
2.  Klauzula Order By (sortowania).  
  
3.  Group By (rekordy zagregowane dane, które mają wartości).  
  
4.  Kolejność grup (sortowania pogrupowanych danych).  
  
5.  Wybierz (Określ pola lub właściwości do zwrócenia).  
  
6.  Sortuj automatycznie (Sortowanie rekordów danych przez właściwość, która ma wybrany przez użytkownika).  
  
7.  Automatyczne strona (pobierania na podzestaw rekordów danych, które zostały wybrane przez użytkownika).  
  
 Można dodać warunki, które <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości do filtrowania rekordów danych, które są zwracane z kwerendy. Jeśli <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> nie ustawiono właściwości <xref:System.Web.UI.WebControls.LinqDataSource> kontroli pobiera każdy rekord z obiektu danych.  
  
<a name="ordering_data"></a>   
## <a name="ordering-data"></a>Porządkowanie danych  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości w celu określenia nazwy właściwości ze zwracanych danych, aby posortować według.  
  
> [!NOTE]
>  Kiedy używasz <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką [!INCLUDE[ss2k](~/includes/ss2k-md.md)] lub [!INCLUDE[ssEW](~/includes/ssew-md.md)] i <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość jest ustawiona na `true`, należy podać wartość w <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości. Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość `true`. Jeśli przypisujesz wartość do <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość, należy również uwzględnić wszystkie kolumny tożsamości na liście właściwości, które są zwracane w zapytaniu.  
  
<a name="grouping_data"></a>   
## <a name="grouping-data"></a>Grupowanie danych  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości w celu określenia, właściwości, które są używane w celu skonsolidowania rekordów danych, które mają takie same wartości. Grupując dane mogą obejmować `Key` i `It`, które są tworzone dynamicznie właściwości w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. `Key` Właściwość odwołuje się do wartości właściwości lub właściwości, które były używane do grupowania danych. Na przykład, jeśli w przypadku grupowania według właściwości o nazwie `Category`, `Key` właściwość będzie zawierać wszystkie unikatowe wartości w `Category` właściwości. `It` Właściwość odwołuje się do kolekcji poszczególnych rekordów w grupowania danych. Można przejść przez `It` właściwość służąca do pobierania pojedynczych rekordów, które zostały skonsolidowane w operacji grupowania. Na przykład, jeśli w przypadku grupowania według właściwości o nazwie `Category`, `It` właściwość zawiera współużytkujące wspólne wartości w poszczególnych rekordów `Category` właściwości.  
  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości w celu określenia właściwości na potrzeby sortowania zgrupowanych danych. W przypadku grupowania danych <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwość określa sposób sortowania poszczególnych rekordów w ramach zgrupowanych danych.  
  
 Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource> kontroli pobiera wartości wszystkich właściwości z obiektu danych. Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości w celu określenia właściwości, które do zwrócenia, jeśli chcesz pracować z podzbiorem dostępnych właściwości. Wybierz operację są stosowane po Where, Order By, a następnie Grupuj według działań. W związku z tym Jeśli tworzysz nazwa aliasu w klauzuli Select, alias nie jest dostępna w innych klauzul.  
  
<a name="data_modifications"></a>   
## <a name="data-modifications"></a>Data modyfikacji  
 Można określić, czy włączono modyfikacji danych przy użyciu <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, i <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> właściwości. Interfejs użytkownika do modyfikowania danych z <xref:System.Web.UI.WebControls.LinqDataSource> formant jest zwykle zapewniane za pomocą kontrolki powiązania danych, takich jak <xref:System.Web.UI.WebControls.DetailsView> kontroli. Oprócz ustawienia <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, lub <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> do `true`, poniższe warunki są wymagane do włączenia modyfikacji danych automatyczne:  
  
-   <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Właściwości nie można przypisać wartość.  
  
-   <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Właściwości nie można przypisać wartość.  
  
-   Klasa, która jest przypisana do <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.DataContext>.  
  
-   Właściwość, która jest przypisana do <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.Table%601>.  
  
 Można ograniczyć, właściwości, które są wyświetlane w kontrolce powiązanych z danymi na dwa sposoby. Możesz albo zestaw <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości do podzbioru właściwości lub możesz zdefiniować pola kontrolki powiązane z danymi, dodając <xref:System.Web.UI.WebControls.DataControlField> kontrolki. Jednak jeśli ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości, oznacza to, że nie można włączyć automatycznego aktualizowania, wstawiania i operacje usuwania. Jeśli chcesz włączyć modyfikacji danych podczas pracy z podzbioru dostępnych właściwości, nie należy ustawiać <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Zamiast tego należy pobrać wszystkie właściwości z obiektu danych i zarządzania, które są wyświetlane przy użyciu kontrolki powiązania danych. Kiedy używasz <xref:System.Web.UI.WebControls.DetailsView> kontroli lub <xref:System.Web.UI.WebControls.GridView> kontrolki, należy także ustawić <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> lub <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> właściwości w celu `false`. Zapobiega to automatycznie w tym przyciski edytowania i usuwania danych kontrolki powiązania danych. Wszelkie wartości, które nie są wyświetlane w kontrolki powiązania danych są przechowywane w widoku stanu. Są one przekazywane bez zmian w źródle danych podczas aktualizacji danych.  
  
<a name="evaluating_value_at_run_time"></a>   
## <a name="evaluating-values-at-run-time"></a>Ocena wartości w czasie wykonywania  
 Jeśli masz pozwala obliczyć wartości w czasie wykonywania do ustalania kolejności, filtrowanie, lub grupowania wartości, można dodać parametry do <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, lub <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji.  
  
 Jeśli chcesz określić wartości domyślnych, można dodać parametry do <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> kolekcji.  
  
 Jeśli chcesz przejrzeć lub zmodyfikować wartości przed wykonaniem operacji danych, które ułatwią Ci obsługę <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, lub <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia. Może również obsługiwać te zdarzenia, aby anulować operację danych lub sprawdzać błędy sprawdzania poprawności, które wystąpiły podczas ustawiania właściwości w klasie danych, w oparciu o dane wejściowe użytkownika.  
  
 Badanie wartości po zakończeniu operacji danych, obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, lub <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzenia.  
  
<a name="working_with_stored_procedures"></a>   
## <a name="working-with-stored-procedures"></a>Praca z procedurami składowanymi  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource> formantu do pobierania danych z procedury składowanej, tworząc program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń. W zdarzeniu programu obsługi, możesz wywołać metodę w klasie kontekst danych, która reprezentuje procedury składowanej i ustawić wynik <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> obiektu. Jeśli chcesz, aby włączyć automatyczną aktualizację, wstawiania i operacje usuwania danych, typ, który jest zwracany z metody musi odpowiadać typowi, który jest określony w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości. Aby uzyskać więcej informacji na temat tworzenia metody kontekst danych, zobacz [jak: metod tworzenia DataContext zamapowanych na procedury składowane i funkcje (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:LinqDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    ContextTypeName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableTheming="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    GroupBy="string"  
    ID="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    SkinID="string"  
    StoreOriginalValuesInViewState="True|False"  
    TableName="string"  
    Visible="True|False"  
    Where="string"  
>  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <WhereParameters />  
</asp:LinqDataSource>  
```  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formant, który pobiera dane z klasą jednostki o nazwie `Products`. Klasa jednostki można został wygenerowany przy użyciu [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] lub narzędzia SqlMetal.exe. <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> Właściwość jest ustawiona na zwracać tylko te rekordy, które mają wartość w `Price` właściwości większej niż 50. A <xref:System.Web.UI.WebControls.GridView> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.LinqDataSource> formantu, aby wyświetlić dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formant, który umożliwia użytkownikom aktualizowanie, usuwanie i wstawianie rekordów w źródle danych. A <xref:System.Web.UI.WebControls.DetailsView> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli i umożliwia użytkownikom wyświetlić i modyfikować dane. Należy zauważyć, że żadne polecenia SQL są wymagane do wybierz, aktualizowanie, usuwanie lub wstawiania rekordów.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń, która ustawia obiekt danych na podstawie wartości na stronie sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolować, to znaczy skonfigurowanego do grupy przez dwie kolumny. `Key` Właściwości odwołuje się do obiektu, który ma dwie właściwości `ProductCategory` i `Color`. Obiekt reprezentowany przez `It` jest których nazwy zostały zmienione (alias) `Products`. Zmieniono nazwę `Products` obiekt zawiera zbiór poszczególnych rekordów w metodzie grupowania. Każde wystąpienie będzie zawierać wszystkie kolumny z `Products` tabeli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 W poniższym przykładzie pokazano dwa <xref:System.Web.UI.WebControls.ListView> formantów, które wyświetlają dane z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli w poprzednim przykładzie. Jeden <xref:System.Web.UI.WebControls.ListView> kontrolka Wyświetla pogrupowanych danych, a druga <xref:System.Web.UI.WebControls.ListView> kontrolka Wyświetla nazwy poszczególnych produktów, które należą do tej grupy. Zagnieżdżony formant powiązany z danymi <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> właściwość jest ustawiona na `Products`, która jest aliasem dla `It` obiektu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli dynamicznie tworzy klauzuli Order By, na podstawie wartości w <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli tworzy klauzuli Order By; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> właściwości `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli dynamicznie tworzy klauzuli Order By, który jest oparty na wartościach w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji. <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli dane są sortowane za pomocą pierwszego parametru i dodatkowo sortuje danych dla każdego dodatkowego parametru. Parametry, które zawierają `null` lub wartość pustą nie są uwzględnione w klauzuli Order By.  
  
 Nie należy ustawiać <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości podczas <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> ustawiono `true`, ponieważ analizator dynamicznie tworzy klauzuli Order By. <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli zgłasza wyjątek, jeśli <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> ustawiono `true` i <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwość przypisano wartości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> równa `true`. Parametr znajduje się w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji, która porządkuje dane na podstawie właściwości nazw, które użytkownik wybiera z <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli dynamicznie tworzy Where — klauzula oparty na wartościach określonych w <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> formantu, utworzy Where — klauzula; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwości `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli dynamicznie tworzy Where klauzuli z parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji. Każdy parametr, który dodasz do <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Kolekcja musi mieć jej <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość ustawioną na wartość, która jest zgodna właściwości w obiekcie danych, którego dotyczy kwerenda. Automatycznie generowane gdzie klauzula będzie sprawdzał, czy określona wartość w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji jest równa wartości dopasowania właściwości w obiekcie danych. Jeśli podasz więcej niż jeden parametr, parametry są połączone z logicznych `AND` operacji. Parametry, które zawierają `null` lub wartość pustą nie są uwzględniane w klauzuli.  
  
 Automatycznie generowane <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> klauzula można przetestować tylko pod kątem równości i połączyć parametry tylko w przypadku `AND` operacji. Nie należy ustawiać <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwości `true` Jeśli trzeba dodać warunek, który nie testowanie dla równości lub jeśli masz powiązanie parametrów za pomocą `OR` operacji. Te zadania można wykonać, ustawiając <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwości `false` i dodawanie symbole zastępcze w wywołaniach <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości dla każdego parametru <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji. W <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości poprzedzony nazwy symbolu zastępczego za pomocą znaku @.  
  
 Nie należy ustawiać <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości podczas <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwość jest `true`, ponieważ analizator dynamicznie tworzy Where — klauzula. <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli zgłasza wyjątek, jeśli <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwość `true` i <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwość przypisano wartości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> równa `true`. A <xref:System.Web.UI.WebControls.GridView> kontrolka jest powiązana z <xref:System.Web.UI.WebControls.LinqDataSource> formantu, aby wyświetlić dane, które jest zwróconych przez kwerendę. Element <xref:System.Web.UI.WebControls.DropDownList> jest dostępny to znaczy wypełniane przy użyciu trzech wartości. Parametr znajduje się w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Kolekcja o nazwie równa `Category,` zgodnej z jednej z właściwości obiektu danych. Jego <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwość jest ustawiona na identyfikator <xref:System.Web.UI.WebControls.DropDownList> kontroli. <xref:System.Web.UI.WebControls.LinqDataSource> Automatycznie tworzy formant <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości do filtrowania rekordów na podstawie wartości wybierany przez użytkownika z <xref:System.Web.UI.WebControls.DropDownList> kontroli. Kwerenda zwraca rekordy, których `Category` właściwości pasuje do wartości, który użytkownik wybrał ze <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default7.aspx#7)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default7.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontrolka obsługuje nawigacji sekcjami danych w czasie wykonywania.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może przeglądania danych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwości `true` Włączanie stronicowania w <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. Aby umożliwić użytkownikowi strony za pomocą danych, należy połączyć kontrolki powiązania danych, która udostępnia interfejs umożliwiający stronicowania do <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli pobiera tylko wystarczającej liczby rekordów na jednej stronie w formancie powiązanych z danymi. Używa ona <xref:System.Linq.Enumerable.Skip%2A> i <xref:System.Linq.Enumerable.Take%2A> metod w celu pobrania rekordów dla bieżącej strony.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwością `true` i <xref:System.Web.UI.WebControls.GridView> formant, który jest powiązany z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> Właściwość <xref:System.Web.UI.WebControls.GridView> kontrolki jest ustawiona na `true` zapewnia interfejs, umożliwiający użytkownikom strony za pomocą danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontrolka obsługuje sortowanie danych w czasie wykonywania.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może sortować danych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontrolka obsługuje dwa podejścia do sortowania danych. Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> można ustawić właściwości, aby włączyć sortowanie w czasie wykonywania lub <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości, aby zdefiniować sortowania w czasie projektowania.  
  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> właściwości `true` Aby włączyć sortowanie w <xref:System.Web.UI.WebControls.LinqDataSource> formant, który jest oparty na wyrażeniu sortowania w kontrolce powiązanych z danymi. Kontrolki powiązania danych udostępnia interfejs, który umożliwia użytkownikowi wybranie w czasie wykonywania, które właściwości na potrzeby sortowania.  
  
 Możesz programowo ustawić kolejność, w którym dane są zwracane przez ustawienie <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości do właściwości lub właściwości używane do sortowania. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości ustawiono właściwość i <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> właściwość jest `true`, wyrażenia sortowania z kontrolki powiązane z danymi jest stosowana po wyrażeniu w <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości. W związku z tym ta opcja określa ostateczny sortowania danych.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> właściwością `true` i <xref:System.Web.UI.WebControls.GridView> formant, który jest powiązany z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Właściwość <xref:System.Web.UI.WebControls.GridView> kontrolki jest ustawiona na `true` zapewnia interfejs, który pozwala użytkownikom na sortowanie danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utworzeniu wystąpienia obiektu typu kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> zdarzeń, aby sprawdzić obiekt typu kontekstu lub zbadać wyjątki, które są wywoływane podczas tworzenia obiektu. Pobierz obiekt typu kontekstu z <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu, który jest skojarzony z tym zdarzeniem. Możesz pobrać wyjątek, który został zgłoszony podczas operacji danych z <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwości.  
  
 Obiekt typu kontekstu jest tworzony podczas select, update, insert i operacje usuwania i zostanie ponownie użyty w żądaniu.  
  
 Istnieje jeden raz, gdy zdarzenie nie zostanie wywołane. Jest to, gdy programowo ustawić <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości do obiektu podczas <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń. Dodatkowy warunek jest, że oryginalnych wartości nie mają być przechowywane w widoku stanu lub obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> implementuje właściwość <xref:System.Data.Linq.ITable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed utworzeniem wystąpienia obiektu typu kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource> kontroli tworzy wystąpienie tego typu, który jest określony w <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości. <xref:System.Web.UI.WebControls.LinqDataSource> Kontrolki wywołuje domyślnego konstruktora obiektu kontekstu danych, aby utworzyć wystąpienie obiektu. Istnieje możliwość, że trzeba użyć innego niż domyślny konstruktor lub należy utworzyć obiekt, który różni się od podanej w <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości. W takim przypadku należy samodzielnie <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> zdarzeń i ręcznie utworzyć obiekt kontekstu danych.  
  
 Obiekt typu kontekstu jest tworzony podczas select, update, insert i operacje usuwania.  
  
 Istnieje jeden raz, gdy zdarzenie nie zostanie wywołane. Jest to, gdy programowo ustawić <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości do obiektu w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń. Dodatkowy warunek jest, że oryginalnych wartości nie mają być przechowywane w widoku stanu lub obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> implementuje właściwość <xref:System.Data.Linq.ITable> interfejsu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć obiekt kontekstu danych za pomocą konstruktora innych niż domyślne podczas <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> zdarzeń. Kod przypisuje obiekt do <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> właściwości.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed disposing obiekt typu kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz obsłużyć <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> zdarzenia można zlikwidować obiektu ręcznie lub do wykonywania oczyszczania, które są specyficzne dla obiektu, zanim obiekt zostanie zniszczony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę typu, który zawiera właściwość, którego wartość ma dane, które mają zostać pobrane.</summary>
        <value>Nazwa klasy, aby pobrać dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kiedy używasz <xref:System.Web.UI.WebControls.LinqDataSource> sterowania do pobierania danych z zbierania danych w pamięci lub bazy danych, należy określić dwie właściwości. Pierwszy jest klasa kontekstu danych, która reprezentuje źródło danych. Drugim jest właściwość z klasy kontekstu danych, która zawiera dane. Możesz ustawić <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> ustaw właściwość na nazwę klasy kontekstu danych i <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość do zbierania danych, która zawiera dane.  
  
 Na przykład podczas pobierania danych z bazy danych, ustaw <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwość na nazwę klasy, która reprezentuje bazę danych. Również ustawić <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość Właściwość, która reprezentuje tabelę w bazie danych. Aby wygenerować klas z bazy danych, należy użyć [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] lub narzędzia SqlMetal.exe do automatycznego wygenerowania tych klas.  
  
 Podczas pobierania danych ze zbierania danych w pamięci, takich jak tablica, ustaw <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwość na nazwę klasy, która zawiera właściwości tablicy. Następnie ustaw <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość Właściwość, która pobiera tablicy.  
  
 Aby włączyć automatyczną aktualizację, wstawiania lub usuwania operacji za pomocą <xref:System.Web.UI.WebControls.LinqDataSource> kontrolować klasy przypisane do <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.DataContext>. Ponadto właściwość przypisane do <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.Table%601>. Jeśli nie potrzebujesz Włączenie automatycznej aktualizacji, wstawiania lub usuń operacje, można przypisać nazwę dowolnego typu klasy, aby <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości.  
  
 Aby uzyskać informacje o sposobie wybierania danych z wystąpienia klasy, zobacz <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwości do klasy, która zawiera tablicę ciągów. Pokazano również, jak ustawić właściwości do klasy (generowany przez [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) reprezentujący bazy danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 Klasa o nazwie `ExampleDataContext` czy reprezentuje tabeli bazy danych nie jest wyświetlany w tym przykładzie. W tym przykładzie do pracy, należy utworzyć tej klasy, dodając klasy programu LINQ do SQL o nazwie Example.dbml i przeciągając tabelę o nazwie filmu na [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]. Klasa o nazwie `ExampleDataContext` z właściwością o nazwie `Movies` jest generowany.  
  
 W poniższym przykładzie pokazano klasę o nazwie `MovieLibrary` , o której mowa w <xref:System.Web.UI.WebControls.LinqDataSource> kontroli.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryableView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateQueryableView () As QueryableDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::QueryableDataSourceView ^ CreateQueryableView();" />
      <MemberSignature Language="F#" Value="override this.CreateQueryableView : unit -&gt; System.Web.UI.WebControls.QueryableDataSourceView" Usage="linqDataSource.CreateQueryableView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.QueryableDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca widok obsługą zapytań.</summary>
        <returns>Widok obsługą zapytań.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.LinqDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As LinqDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::LinqDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView" Usage="linqDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> klasę, która jest skojarzona z danym formantem.</summary>
        <returns>Obiekt, który działa jako interfejs dla formantów powiązanych z danymi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby udostępnić widok niestandardowy, można zastąpić tę metodę w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Wartości klucza wiersza dla rekordów do usunięcia.</param>
        <param name="oldValues">Wartości wierszy, które są oceniane w celu wykrywania konfliktów danych.</param>
        <summary>Wykonuje operację usuwania.</summary>
        <returns>Liczba zmodyfikowanych przez operację usuwania rekordów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie trzeba wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> metody w kodzie. Kiedy używasz <xref:System.Web.UI.WebControls.LinqDataSource> kontroli w przypadku kontrolek powiązanych z danymi, kontrolki powiązania danych będzie automatycznie wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> metody, gdy użytkownik wykona akcję, aby usunąć rekord. Jawnie wywołać <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> metody, gdy chcesz utworzyć proces usuwania danych. Na przykład, można wywołać <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> metody, jeśli chcesz usunąć rekord na podstawie zdarzenia poza kontrolą powiązanych z danymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja usuwania została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> zdarzenie można przechwycić wyjątków z operację usuwania lub zbadać parametry wyjściowe, po zakończeniu operacji. Można pobrać parametrów wyjściowych z <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiekt, który zostanie przekazany do procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest używana przez <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> klasy.</summary>
        <value>Kolekcja parametrów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzenie, aby sprawdzić poprawność obiektu do usunięcia, aby sprawdzić błędy sprawdzania poprawności danych z klasy danych, aby zmienić wartość przed wykonaniem operacji usuwania lub anulować operację usuwania. <xref:System.Web.UI.WebControls.LinqDataSource> Kontrola przechodzi <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> obiekt do obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzeń. <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Obiekt zawiera dane, które zostaną usunięte i pozwala anulować operację usuwania. Jeśli dane klasy zgłasza <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> wyjątku, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> obiekt zawiera ten wyjątek w <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> właściwości.  
  
 Jeśli wyjątek jest zgłaszany w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzenia musi obsłużyć wyjątek w tej procedurze obsługi zdarzeń. Wyjątek nie zostaną przekazane do programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> zdarzeń (za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu). <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Właściwość zawiera tylko wyjątki, które są generowane po <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzeń. Kod anuluje operację usuwania, na podstawie właściwości w <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> właściwości i wartość ze strony internetowej. W tym przykładzie po `OnSale` właściwość jest ustawiona na `true`, użytkownik musi wybrać <xref:System.Web.UI.WebControls.CheckBox> sterowania, aby upewnić się, że należy usunąć rekord.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy rekordy danych może zostać usunięty przez <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli.</summary>
        <value>
          <see langword="true" /> Jeśli operacje automatycznego usuwania są włączone; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> właściwości `true` kiedy chcesz umożliwić użytkownikom usunąć rekord danych za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> jest `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli używa LINQ to SQL do automatycznego tworzenia polecenie, aby usunąć dane. Musi zawierać interfejs, który pozwala użytkownikom na wybór rekordu, aby usunąć, takie jak <xref:System.Web.UI.WebControls.DetailsView> kontroli.  
  
 <xref:System.Web.UI.WebControls.LinqDataSource> Formant nie obsługuje operacje automatycznego usuwania podczas <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości lub <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość jest ustawiona. W takim przypadku <xref:System.Web.UI.WebControls.LinqDataSource> kontroli zgłasza wyjątek, jeśli operacja usuwania zostanie podjęta próba.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formantu, który ma <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> równa `true`. A <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla dane i tworzy przycisk, który pozwala użytkownikom na usuwanie rekordu danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy rekordy danych mogą być wstawiane za pośrednictwem <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli.</summary>
        <value>
          <see langword="true" /> Po włączeniu operacji automatycznego wstawiania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> właściwości `true` kiedy chcesz umożliwić użytkownikom do wstawienia rekordu danych za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> jest `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli używa LINQ to SQL do automatycznego tworzenia polecenie, aby wstawić dane. Interfejs, który umożliwia użytkownikom, takie jak wstawić nowy rekord, należy uwzględnić <xref:System.Web.UI.WebControls.DetailsView> kontroli.  
  
 <xref:System.Web.UI.WebControls.LinqDataSource> Formant nie obsługuje operacji wstawiania automatyczne podczas <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości lub <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość jest ustawiona. W takim przypadku <xref:System.Web.UI.WebControls.LinqDataSource> kontroli zgłasza wyjątek, jeśli zostanie wybrany jako operacja wstawiania.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formantu, który ma <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> równa `true`. A <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla dane oraz przycisk, który zmienia formant Aby wstawić tryb, w którym użytkownicy mogą tworzyć i zapisać nowy rekord.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableObjectTracking : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zmiany wprowadzone w obiekcie kontekstu danych są śledzone.</summary>
        <value>
          <see langword="true" /> Jeśli obiekt kontekstu danych jest śledzone zmiany. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> Właściwość jest używana tylko podczas wybierania danych z obiektu kontekstu danych LINQ do SQL.  
  
 Gdy użytkownik korzysta z danych tylko do odczytu, ustawiając <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> właściwość `false` zwiększa wydajność, ponieważ dane nie są buforowane w celu określenia, czy został zmieniony. Jednak również wyłączany wykonanie odroczone zapytanie. Ta właściwość musi być równa `true` Jeśli chcesz używać wykonanie odroczone zapytanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy rekordy danych może być aktualizowana przy użyciu <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> kontroli.</summary>
        <value>
          <see langword="true" /> Jeśli operacje aktualizacji automatycznych są włączone; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> właściwości `true` kiedy chcesz umożliwić użytkownikom próbę zaktualizowania rekordu danych przy użyciu <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> jest `true`, <xref:System.Web.UI.WebControls.LinqDataSource> kontroli używa LINQ to SQL, aby automatycznie utworzyć polecenie, aby zaktualizować dane. Musi zawierać interfejs, który umożliwia użytkownikom zaktualizowania rekordu, takie jak <xref:System.Web.UI.WebControls.DetailsView> kontroli.  
  
 <xref:System.Web.UI.WebControls.LinqDataSource> Formantu nie obsługuje operacji aktualizacji automatycznych podczas <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości lub <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość jest ustawiona. W takim przypadku <xref:System.Web.UI.WebControls.LinqDataSource> kontroli zgłasza wyjątek, jeśli wypróbowuje operacji aktualizacji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formantu, który ma <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> równa `true`. A <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla dane i tworzy przycisk, który pozwala użytkownikom na aktualizowanie rekordu danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="linqDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="linqDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, właściwości, które są używane do grupowania tych danych.</summary>
        <value>Ciąg, który jest używany do tworzenia w klauzuli Group By.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości w celu określenia, właściwości, które są używane do konsolidacji rekordów danych, które mają takie same wartości. Na przykład jeśli ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości `Name`, wszystkie rekordy w zapytaniu, które mają taki sam `Name` wartość właściwości zostaną zwrócone jako pojedynczy rekord skonsolidowany.  
  
 Można przypisać więcej niż jedna właściwość <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości, umieszczając wszystkie właściwości w `new` funkcji i oddzielając poszczególne właściwości za pomocą przecinka. Na przykład, aby Grupuj według właściwości `Name` i następnie `Category`ustaw <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość `new(Name, Category)`.  
  
 Wartości we właściwości, które są używane do grupowania są zwracane przez wygenerowanej właściwości o nazwie `Key`. Możesz uwzględnić `Key` właściwość <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość służąca do pobierania pogrupowanych wartościach. Możesz ustawić `Key` właściwość aliasem, za pomocą `As` — słowo kluczowe, ale nie muszą używać aliasu. Na przykład możesz ustawić <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość Właściwość o nazwie `Category`. Można pobrać wartości skonsolidowanego z `Category` właściwości, ustawiając <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość `new(Key As ProductCategory)`.  
  
 Dostęp do poszczególnych rekordów w zgrupowaniu umieszczając `It` właściwość <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. `It` Właściwość zawiera kolekcję rekordów, które mają wartość we właściwości zgrupowane. Można przejść przez `It` właściwość służąca do pobierania pojedynczych rekordów.  
  
 <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Jest często używana przy użyciu metody agregacji. Można użyć następujących metod agregacji:  
  
-   `Count()`  
  
-   `Average(` *column* `)`  
  
-   `Sum(` *column* `)`  
  
-   `Max(` *column* `)`  
  
-   `Min(` *column* `)`  
  
-   `Where(` *Warunek* `)`  
  
-   `Any()`  
  
-   `All(` *Warunek* `)`  
  
 Aby uzyskać więcej informacji, zobacz [NIB: omówienie kontrolki serwera sieci Web LinqDataSource](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) i [jak: Grupa i agregowanie danych za pomocą formantu LinqDataSource](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> formant, który grupuje dane zwrócone przez właściwość o nazwie `Category`. On zwraca wartości udostępnionych i oblicza średnią cenę pogrupowanych rekordów.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolować, to znaczy skonfigurowanego do grupy przez dwie kolumny. `Key` Właściwości odwołuje się do obiektu, który ma dwie właściwości `ProductCategory` i `Color`. Obiekt reprezentowany przez `It` została zmieniona `Products`. Zmieniono nazwę `Products` obiekt zawiera zbiór poszczególnych rekordów w grupowanie, a każde wystąpienie zawiera wszystkie kolumny z tabeli Produkty.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 W poniższym przykładzie pokazano dwa <xref:System.Web.UI.WebControls.ListView> formanty do wyświetlania danych z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli w poprzednim przykładzie. Jeden <xref:System.Web.UI.WebControls.ListView> kontrolka Wyświetla pogrupowanych danych, a druga <xref:System.Web.UI.WebControls.ListView> kontrolka Wyświetla nazwy poszczególnych produktów, które należą do tej grupy. Zagnieżdżony formant powiązany z danymi <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> właściwość jest ustawiona na `Products`, która jest aliasem dla `It` obiektu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ GroupByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia w klauzuli Group By.</summary>
        <value>Parametry, które są używane do tworzenia w klauzuli Group By.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli używa parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji do utworzenia w klauzuli Group By w czasie wykonywania. Zazwyczaj użytkownik nie będzie używać <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji do grupowania danych. Zamiast tego można użyć <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości. Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji tylko wtedy, gdy wartości w klauzuli Group By musi zostać ustawiona w czasie wykonywania, a ta wartość nie jest nazwą właściwości. Na przykład użyć <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji do grupowania danych na ich podstawie `LastName` właściwość rekordów danych jest równa wartości dostarczone przez użytkownika.  
  
 Jeśli chcesz dane grupy według właściwości i nie ma tej właściwości można ustawić w czasie wykonywania, można zdefiniować właściwości grupowania w <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości. Na przykład, aby zwrócić wartości z tabeli bazy danych w rozbiciu na `LastName`ustaw <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> "LastName" bez żadnych parametrów. Dynamiczne grupy danych według właściwości, utworzyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń i dostosowywanie <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości zgodnie z potrzebami.  
  
 Nazwa właściwości nie można przypisać jako wartość dla parametru w <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji. Dodaj parametry do <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji, jeśli chcesz dodać warunek do <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości, które musi zostać ustawione w czasie wykonywania.  
  
 Aby ustawić wartości na <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> kolekcji, można przypisać nazwy do każdego parametru, a następnie dodać symbol zastępczy w <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwość o nazwie parametru. W klauzuli Group By poprzedzony nazwa każdego parametru za pomocą znaku @.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.Insert : System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Wartości wiersza, który ma zostać wstawiony do źródła danych.</param>
        <summary>Wykonuje operację wstawiania.</summary>
        <returns>Liczba zmodyfikowanych przez operację wstawiania wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie trzeba wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> metody w kodzie. Kontrolki powiązania danych będzie automatycznie wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> metody, gdy użytkownik wykona akcję, aby wstawić nowy rekord. Jawnie wywołać <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> metody, gdy chcesz utworzyć proces do wstawiania danych.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób programowe Wstawianie nowego rekordu w źródle danych, po kliknięciu przycisku. Kod przekazuje <xref:System.Collections.Specialized.ListDictionary> obiekt zawierający domyślne wartości <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> metody.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx.vb#1)]  
  
 Poniższy przykład pokazuje znaczniki dla poprzedniego przykładu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja wstawiania została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenie można przechwycić wyjątków z operacji wstawiania lub umożliwiającej sprawdzenie wartości po zakończeniu operacji wstawiania. Możesz pobrać nowe wartości za pomocą <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiekt, który zostanie przekazany do procedury obsługi zdarzeń. Na przykład, można użyć <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu do pobrania właściwości tożsamości, generowane przez bazę danych dla rekordu danych.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenia, które sprawdza, czy wyjątki i pobiera właściwość tożsamości dla nowego rekordu.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenie, aby sprawdzić poprawność obiekt ma zostać wstawiony, aby sprawdzić błędy sprawdzania poprawności danych z klasy danych, aby zmienić wartość przed wykonaniem operacji wstawiania lub do anulowania operacji wstawiania. <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Obiekt przekazany do procedury obsługi zdarzeń dla tego zdarzenia zawiera nowy obiekt do wstawienia w źródle danych.  
  
 Jeśli wystąpi błąd sprawdzania poprawności podczas operacji wstawiania <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> obiekt zawiera wyjątki sprawdzania poprawności, które są generowane przez klasę danych. Jeśli wartości do wstawienia nie jest zgodny z typem właściwości w klasie danych lub jeśli nie zostały spełnione wyboru niestandardowego sprawdzania poprawności, wystąpienia błędu weryfikacji. W obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia, można pobrać wyjątki sprawdzania poprawności i podjąć odpowiednie działania.  
  
 Jeśli wyjątek jest zgłaszany w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia musi obsłużyć wyjątek w tej procedurze obsługi zdarzeń. Wyjątek nie zostaną przekazane do programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzeń (za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu). <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Właściwość zawiera tylko wyjątki, które są generowane po <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzeń, który modyfikuje dane przed wykonaniem operacji wstawiania. Obiekt z <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> właściwość jest rzutowany na typ o nazwie `Product`. `DateModified` Właściwość `Product` obiekt jest ustawiony na bieżącą datę i godzinę.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia, które pobiera wyjątki sprawdzania poprawności.  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 Poprzedni przykład pobiera wyjątki sprawdzania poprawności. Może zostać wygenerowany wyjątek, jeśli wartość nie jest zgodny z typem właściwości. Również może zostać wygenerowany z dostosowanych wyboru, takiego jak w poniższym przykładzie. `OnAgeChanging` Metoda sprawdza, czy numer `Age` właściwość nie jest ujemna.  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane podczas operacji wstawiania.</summary>
        <value>Parametry, które są używane podczas operacji wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj wartości, które są potrzebne do operacji wstawiania są przekazywane do <xref:System.Web.UI.WebControls.LinqDataSource> kontroli przez formant powiązany z danymi. Określ parametry insert należy do zapewniania domyślnego wartość lub zdefiniować, czy można przekonwertować wartości puste, aby `null`. Nie trzeba podać parametr dla każdej wartości, który zostanie wstawiony tylko dla wartości, które muszą być obsługiwane, gdy użytkownik nie dostarcza wartość.  
  
 Wartości, które zapewniają w <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> kolekcji są używane tylko dla pól, które zostały zdefiniowane w źródle danych, ale nie są powiązane w formancie danych. Na przykład załóżmy, że tabela bazy danych zawiera kolumny, które noszą nazwę, adres i KodPocztowy, ale <xref:System.Web.UI.WebControls.ListView> formant, który jest powiązany z tabelą jest powiązana tylko z polami nazwy i adresu. Wartości w <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> bezużytecznych zostanie użyty tylko w przypadku pola KodPocztowy. Nie będą one używane dla pola nazwy i adresu. Ta zasada obowiązuje, nawet jeśli została wprowadzona żadna wartość, dla tych pól. Jeśli źródło pola automatycznie generuje kontrolki powiązania danych dla wszystkich pól w danych, bez wartości z <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> bezużytecznych zostanie użyty.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolki z parametr, który zawiera wartość domyślna <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> kolekcji. Jeśli użytkownik nie poda wartość `Category` właściwości wartość domyślna, który jest dostarczany przez parametr jest zapisywany w bazie danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default9.aspx#9)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default9.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="linqDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="linqDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Inicjuje <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="linqDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.Control.Unload" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która określa pola, które są używane do ustalania kolejności tych danych.</summary>
        <value>Ciąg, który jest używany do tworzenia klauzuli Order By.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości w celu określenia właściwości, które ze zwracanych danych na potrzeby sortowania. Właściwość sortowania danych musi istnieć w oryginalnym źródle danych, ale nie musi być objęte <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Można dodać spację i `Ascending`, `ASC`, `Descending`, lub `DESC` właściwości w <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> ciągu, aby określić, jak uporządkowane dane są zwracane.  
  
 Możesz podać więcej niż jedną właściwość <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości, rozdzielając poszczególne właściwości za pomocą przecinka. Na przykład, aby kolejność według właściwości o nazwie `LastName` i `FirstName`ustaw <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwość "Lastname, FirstName".  
  
> [!NOTE]
>  Kiedy używasz <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką [!INCLUDE[ss2k](~/includes/ss2k-md.md)] lub [!INCLUDE[ssEW](~/includes/ssew-md.md)] i <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość jest ustawiona na `true`, należy podać wartość w <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości. Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość `true`. Jeśli przypisujesz wartość do <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość, należy również uwzględnić wszystkie kolumny tożsamości na liście właściwości, które są zwracane w zapytaniu.  
  
 Jeśli <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> właściwość jest ustawiona na `true`, wyrażenie sortowania, aby przekazać formant powiązany z danymi <xref:System.Web.UI.WebControls.LinqDataSource> formantu w czasie wykonywania. <xref:System.Web.UI.WebControls.LinqDataSource> Sterowania zostaną zastosowane wyrażenia sortowania z kontrolki powiązane z danymi, gdy ma to zastosowanie <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości. W związku z tym dane są zwracane zgodnie z wyrażenia sortowania z kontrolki powiązane z danymi.  
  
   
  
## Examples  
 Poniższy przykład zwraca dane w odwrotnej kolejności alfabetycznej na podstawie wartości w `Category` właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default4.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia klauzuli Order By.</summary>
        <value>Parametry, które są używane do tworzenia klauzuli Order By.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli używa parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji, aby utworzyć klauzuli Order By w czasie wykonywania. Zwykle ustawiana <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> właściwości `true` podczas dodawania parametrów do <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> właściwość jest ustawiona na `true`, każdego parametru w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji jest dodawany do klauzuli Order By w sekwencji, do której są wymienione <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> właściwość `true`, parametry nie muszą mieć nazwy, ponieważ są stosowane w kolejności, a nie zostały dopasowane do symbolu zastępczego.  
  
 Jeśli musisz ustawić wartość w czasie wykonywania w klauzuli Order By, trzeba użyć <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji. Można zdefiniować pola używane do porządkowania danych w <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości. Na przykład, aby zwrócić wartości z tabeli bazy danych uporządkowanych według `LastName`ustaw <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> "LastName" bez żadnych parametrów.  
  
 Parametry można ustawić w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji i zgodne z parametrami, aby symbole zastępcze w wywołaniach <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> właściwości, ale ta metoda ma ograniczoną aplikacji. Jeśli używasz tego podejścia parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji nie może reprezentować nazwę kolumny. Można ustawić parametr na wartość, a następnie porównaj tę wartość do wartości we właściwości. Na przykład może zamówić łączność obejmującą danych oparte na wartości we właściwości czy mniejsza niż wartość czasu wykonywania, reprezentowany przez parametr.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> właściwością `true`. Parametr znajduje się w <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> kolekcji, która porządkuje dane na podstawie właściwości nazw, które użytkownik wybiera z <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pola, które są używane do sortowania zgrupowanych danych.</summary>
        <value>Ciąg, który jest używany do tworzenia grup klauzuli Order.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości w celu określenia sposobu sortowania grupy danych. Na przykład można grupować według `CategoryID` właściwości i następnie Sortuj każdy identyfikator kategorii Grupuj według średniej `Price` właściwości.  
  
 Możesz ustawić <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości tylko wtedy, gdy grupowania danych. Jeśli ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości bez ustawienia <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSource> kontroli zgłasza wyjątek.  
  
 Właściwość, która jest używana do sortowania danych musi być właściwością, która służy do grupowania danych lub wynik funkcji agregacji pogrupowanych danych. Aby określić, jak dane są sortowane, można dodać spację, a ciąg "Ascending", "ASC", "Descending" lub "Opis" Nazwa właściwości w <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> ciągu.  
  
 Można określić więcej niż jedną właściwość <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości. Oddziel poszczególne właściwości za pomocą przecinka.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób grupowania danych za pomocą dwóch właściwości oraz sortować zgrupowanych danych przy użyciu jednej z tych właściwości. Dane z tabeli o nazwie `Products` jest zgrupowany za pomocą właściwości o nazwie `CategoryID` i `Discontinued`. Dane zgrupowane są posortowane według `CategoryID` właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default.aspx#1)]  
  
 Poniższy przykład pokazuje sposób grupowania danych za pomocą właściwości oraz sortować je na podstawie wyników funkcję agregacji. Dane z `Products` tabeli są grupowane według przy użyciu `CategoryID` właściwości. Są sortowane w oparciu o średniej `UnitPrice` właściwości w każdej grupie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderGroupsByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia grup klauzuli Order.</summary>
        <value>Parametry, które są używane do tworzenia grup klauzuli Order.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli używa parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> kolekcji, aby utworzyć grupy klauzuli Order w czasie wykonywania.  
  
 Dodawanie wartości do <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> kolekcji tylko wtedy, gdy ustawisz wartości w czasie wykonywania w grupach klauzuli Order. Możesz zdefiniować pola, które są używane do porządkowania danych przy użyciu <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości.  
  
 Parametry można ustawić w <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> kolekcji i zgodne z parametrami, aby symbole zastępcze w wywołaniach <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> właściwości. Jednak jeśli używasz tego podejścia parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> kolekcji nie może reprezentować nazwę kolumny; musi reprezentują one wartości. Można ustawić parametr na wartość, a następnie porównaj tę wartość do właściwości. Na przykład może zamówić łączność obejmującą danych oparte na wartości we właściwości czy mniejsza niż wartość czasu wykonywania, reprezentowany przez parametr.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="linqDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości i obliczone wartości, które są zawarte w tych danych.</summary>
        <value>Ciąg, który jest używany do tworzenia klauzuli Select.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSource> kontroli pobiera wszystkie właściwości (kolumny danych) z obiektu danych. Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości, aby pobrać podzbiór właściwości z obiektu lub Oblicz nowe wartości podczas pobierania danych.  
  
 Określ właściwości, które można pobrać przez ustawienie <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości nazwy właściwości, które mają zostać uwzględnione w zwracanych danych.  
  
 Jeśli możesz pobrać podzbiór właściwości z obiektu danych <xref:System.Web.UI.WebControls.LinqDataSource> kontroli dynamicznie tworzy klasę, która zawiera właściwości, które są określone w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Klasa również jest tworzony dynamicznie, jeśli obliczane właściwości, które nie są właściwości w obiekcie danych. W takich przypadkach obiektów zwróconych przez kwerendę nie jest wystąpieniem klasy, która została określona w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości. Zamiast tego należy użyć `new` method in Class metoda <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości, aby wskazać, że nowa klasa jest zwróconych przez kwerendę. Na przykład, aby zwrócić tylko `FirstName` i `LastName` właściwości z obiektu, który zawiera więcej niż te właściwości, należy ustawić <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość `new(FirstName, LastName)`. <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli dynamicznie spowoduje utworzenie nowej klasy, który określiłeś w `new` metody.  
  
 Możesz użyć `As` — słowo kluczowe, aby przypisać aliasu do wybranej wartości. W przypadku przypisania alias musi zawierać Aliasy właściwości w `new` metody. Wszystkie kontrolki powiązania danych, która jest powiązywana z wyników z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli musi odwoływać się do właściwości przez alias. Na przykład jeśli ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, kontrolki powiązania danych będą mogli dwie właściwości `SalesRegion` i `RevenueThousands`.  
  
 Możesz użyć `new` działa w programach <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości zgodnie z warunkami wymienione w poniższej tabeli.  
  
|Wybierz|Korzystanie z nowego|Przykład|  
|------------|----------------|-------------|  
|Jedną właściwość.|`new` nie jest wymagany.|`Select="Category"`|  
|Wiele właściwości.|`new` wymagane.|`Select="new(Cateogry, Name)"`|  
|Jedną lub wiele właściwości, które mają alias.|`new` wymagane.|`Select="new(Category As CategoryGroup)"`|  
  
 Jeśli chcesz włączyć modyfikacji danych automatyczne, ale nie chcesz wyświetlić wszystkie właściwości z obiektu danych, nie należy ustawiać <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Zamiast tego należy zarządzać wyświetlana za pomocą kontrolki powiązania danych. Kiedy używasz <xref:System.Web.UI.WebControls.DetailsView> kontroli lub <xref:System.Web.UI.WebControls.GridView> kontrolki, należy także ustawić <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> lub <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> właściwość `false`. Wszelkie wartości, które nie są wyświetlane w kontrolki powiązania danych są przechowywane w widoku stanu. Są one przekazywane bez zmian w źródle danych podczas aktualizacji danych.  
  
 W przypadku grupowania danych w zapytaniu, może zawierać metody agregacji w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Można użyć następujących metod agregacji:  
  
-   `Count()`  
  
-   `Average(` *column* `)`  
  
-   `Sum(` *column* `)`  
  
-   `Max(` *column* `)`  
  
-   `Min(` *column* `)`  
  
-   `Where(` *Warunek* `)`  
  
-   `Any()`  
  
-   `All(` *Warunek* `)`  
  
 Aby uzyskać więcej informacji, zobacz [NIB: omówienie kontrolki serwera sieci Web LinqDataSource](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) i [jak: Grupa i agregowanie danych za pomocą formantu LinqDataSource](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).  
  
 Grupując dane mogą obejmować `Key` i `It`, które są tworzone dynamicznie właściwości w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. `Key` Właściwość odwołuje się do wartości właściwości lub właściwości, które były używane do grupowania danych. Na przykład, jeśli w przypadku grupowania według właściwości o nazwie `Category`, `Key` właściwość będzie zawierać każdej unikatowej wartości w `Category` właściwości. `It` Właściwość odwołuje się do kolekcji poszczególnych rekordów w grupowania danych. Można przejść przez `It` właściwość służąca do pobierania pojedynczych rekordów, które zostały skonsolidowane w operacji grupowania. Na przykład, jeśli w przypadku grupowania według właściwości o nazwie `Category`, `It` właściwość zawiera współużytkujące wspólne wartości w poszczególnych rekordów `Category` właściwości.  
  
 Jeśli dołączysz `It` — słowo kluczowe w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości grupy danych, należy przypisać aliasu do `It` — słowo kluczowe. <xref:System.Web.UI.WebControls.LinqDataSource> Kontrolki spowoduje zgłoszenie wyjątku, jeśli `It` nie ma aliasu. Można przypisać aliasu do `Key` — słowo kluczowe, ale nie jest wymagane.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości do podzbioru właściwości w obiekcie danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default10.aspx#10)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default10.aspx#10)]  
  
 Poniższy przykład pokazuje, jak można pobrać wartości właściwości, który został użyty do grupowania danych oraz jak pobierać średnia dla zgrupowanych rekordów. `Key` — Słowo kluczowe zawiera właściwość, która została użyta do grupowania danych. W tym przykładzie `Key` będzie zawierać wartości z udostępnionego z `ProductCategory` właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzenie można przechwycić wyjątków z operacji pobierania danych lub zbadać obiekt danych po zakończeniu operacji pobierania. Obiekt jest dostępny z <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiekt, który zostanie przekazany do procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń, aby można było wykonać następujące zadania:  
  
-   Zmodyfikuj parametry w celu pobierania danych.  
  
-   Generuj zapytanie programowo.  
  
-   Zmodyfikuj wartości sortowania i stronicowania.  
  
-   Wykonaj niestandardowy sortowania i stronicowania.  
  
-   Anuluj operację pobierania danych.  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Obiektu, który jest przekazywany do obsługi zdarzeń dla tego zdarzenia zawiera parametry dla operacji pobierania danych. Można zmodyfikować parametry w <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> programu obsługi zdarzeń przed wykonuje zapytanie, lub możesz utworzyć nowy zestaw wyników i przypisać ją do <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> właściwości.  
  
 Możliwość implementacji niestandardowych sortowania i stronicowania w procedurach obsługi dla tego zdarzenia może być ograniczona przez formant, który jest powiązany z <xref:System.Web.UI.WebControls.LinqDataSource>. Na przykład, jeśli nagłówek <xref:System.Web.UI.WebControls.GridView> kliknięciu formantu, formant wykonuje automatyczne sortowanie który może być zastąpienie, niezależnie od kolejności, możesz ustanowić w zdarzeniu programu obsługi.  
  
 Jeśli wyjątek jest zgłaszany w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzenia musi obsłużyć wyjątek w tej procedurze obsługi zdarzeń. Wyjątek nie zostaną przekazane do programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzeń (za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu). <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Właściwość zawiera tylko wyjątki, które są generowane po <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń. Program obsługi tworzy kwerendę, która pobiera dane z tablicy wartości ciągu na stronie sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 Poniższy przykład pokazuje, jak przypisać <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> właściwości do obiektu, który jest zwracany z metody reprezentująca procedury składowanej.  
  
```vb  
Protected Sub LinqDataSource_Selecting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceSelectEventArgs)  
    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  
    e.Result = exampleContext.GetRegisteredCustomers()  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Selecting(object sender,   
        LinqDataSourceSelectEventArgs e)  
{  
    ExampleDataContext exampleContext = new ExampleDataContext();  
    e.Result = exampleContext.GetRegisteredCustomers();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane podczas operacji pobierania danych.</summary>
        <value>Parametry, które są używane do tworzenia klauzuli Select.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli używa parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji, aby utworzyć klauzuli Select w czasie wykonywania. Dodaj parametry do <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji, jeśli chcesz użyć wartości czasu wykonywania w klauzuli Select. Na przykład można dodać parametr do <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji do reprezentowania właściwości w profilu użytkownika. Następnie można użyć tej właściwości i wartości ze źródła danych, aby obliczyć nową wartość.  
  
 Jeśli musisz ustawić wartość w czasie wykonywania w klauzuli Select, trzeba użyć <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji. Można zdefiniować właściwości do pobrania w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości. Na przykład, aby zwrócić `FirstName` i `LastName` zestawu wartości z tabeli bazy danych <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> na "FirstName, LastName" bez żadnych parametrów.  
  
 Aby ustawić wartości na <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji, możesz dodać jego symbol zastępczy w <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości dla tego parametru. W klauzuli Select, należy poprzedzić nazwa każdego parametru za pomocą znaku @.  
  
 Nie można użyć parametru w <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji do reprezentowania nazwy właściwości. Aby dynamicznie ustawić <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwość na nazwę właściwości, utworzyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń i dostosowywanie <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> właściwości zgodnie z potrzebami.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak użycie wartości dostarczone przez użytkownika, aby obliczyć wartość w zwracanych danych. Użytkownik może wprowadzić wartość w polu tekstowym, który reprezentuje liczbę dni, produkcji. Ta wartość jest podzielona przez wartość z bazy danych, który reprezentuje liczbę dni do produkcji produktu. Zwracana wartość wskazuje, ile produktów można wyprodukowany w ciągu określonej liczby dni. W danych wprowadzonych przez użytkownika znajduje się w polecenia Select za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> kolekcji.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane ze źródła danych powinny być przechowywane w stan widoku, aby upewnić się, że dane nie został zmieniony przez inny proces, zanim zostanie zaktualizowany lub usunięty.</summary>
        <value>
          <see langword="true" /> Jeśli wartości będą przechowywane w widoku stanu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie, gdy operacje aktualizowania i usuwania została włączona, <xref:System.Web.UI.WebControls.LinqDataSource> formant przechowuje oryginalnych wartości dla wszystkich rekordów w widoku stanu. <xref:System.Web.UI.WebControls.LinqDataSource> Formant przechowuje wartości dla wszystkich kluczy podstawowych i wszystkie właściwości nie jest oznaczony atrybutem `UpdateCheck.Never` w `Column` atrybutu. Możesz ustawić `UpdateCheck` właściwość `Column` atrybutu w [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].  
  
 Zanim LINQ to SQL aktualizuje lub usuwa dane, umożliwia sprawdzenie wartości w widoku stanu w odniesieniu do bieżącej wartości w źródle danych. Jeśli wartości nie są zgodne, zmienił się rekord źródła danych. W takim przypadku LINQ to SQL zgłasza wyjątek, a nie kontynuować aktualizację operacji lub usunięcia. Aby uzyskać więcej informacji na temat programu LINQ to SQL, zobacz [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  
  
 Przechowywanie oryginalnych wartości w widoku stanu może spowodować, że rozmiar strony aby stać się niepotrzebnie i udostępnić danych poufnych na złośliwy użytkownik. Możesz wyłączyć przechowywanie wartości w widoku stanu, ustawiając <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> właściwość `false`. Jeśli to zrobisz, musisz podać własny sposób, aby upewnić się, że dane nie uległy zmianie. Jeśli ustawisz <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> właściwości `false`, oryginalnym wartości nie zostaną utrwalone w stanie widoku dla kontrolki powiązania danych. W takim przypadku LINQ to SQL nie można zweryfikować integralności danych. LINQ do SQL zgłosi wyjątek, który wskazuje na konflikt danych, nawet jeśli nie zmienił faktycznie dane w źródle danych.  
  
 Jeśli bazowe źródło danych zawiera pole znacznika czasu, który jest automatycznie aktualizowana podczas aktualizacji, można przechowywać tylko tej wartości, które są w widoku stanu. W takim przypadku ustawiono właściwość sygnatury czasowej w klasie jednostki `IsVersion=true` i wszystkie właściwości są ustawione na `UpdateCheck.Never`. Ponieważ pole znacznika czasu jest automatycznie aktualizowana przez bazy danych, za każdym razem, gdy zmienia się te dane, w tym rekordzie, LINQ to SQL określa od tej wartości, jeśli dane zostały zmienione. Pozwala to zmniejszyć rozmiar stan widoku, a żadne poufne dane, jest widoczna. LINQ do SQL będzie sprawdzać spójność danych przez porównanie wartości sygnatury czasowej w widoku stanu z wartością sygnatury czasowej w bazie danych. Aby uzyskać więcej informacji, zobacz [Instruktaż: za pomocą kontrolki LinqDataSource, aby sprawdzić integralność danych przy użyciu sygnatury czasowej](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.ContextType">
      <MemberSignature Language="C#" Value="Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType" />
      <MemberSignature Language="VB.NET" Value=" Property ContextType As Type Implements IDynamicDataSource.ContextType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Web::DynamicData::IDynamicDataSource::ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
        <value>Typ, który jest skojarzony z klasą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.LinqDataSource> wystąpienia jest rzutowany na <xref:System.Web.DynamicData.IDynamicDataSource> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <MemberSignature Language="C#" Value="string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName" />
      <MemberSignature Language="VB.NET" Value=" Property EntitySetName As String Implements IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::DynamicData::IDynamicDataSource::EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
        <value>Nazwa jednostki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.LinqDataSource> wystąpienia jest rzutowany na <xref:System.Web.DynamicData.IDynamicDataSource> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.LinqDataSource> wystąpienia jest rzutowany na <xref:System.Web.DynamicData.IDynamicDataSource> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę właściwości lub pola w klasie kontekst danych, który reprezentuje kolekcję danych.</summary>
        <value>Ciąg, który zawiera nazwę właściwości, która zawiera kolekcję danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość na nazwę właściwości lub pól, który reprezentuje dane, które mają zostać pobrane. Gdy łączysz się do tabeli bazy danych, nazwa właściwości jest zwykle taka sama jak nazwa tabeli. Gdy łączysz się zbieranie danych w pamięci, należy ustawić <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość na nazwę właściwości lub pola, które zwraca kolekcję danych.  
  
 Można przypisać właściwości, która zwraca wartość dowolnego typu do <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości dla operacji pobierania. Jeśli nie implementuje obiektu, który jest reprezentowany przez właściwość <xref:System.Collections.IEnumerable>, <xref:System.Web.UI.WebControls.LinqDataSource> formant będzie automatycznie zawijany obiekt w wystąpieniu <xref:System.Collections.IEnumerable> obiektu.  
  
 Aby włączyć automatyczną aktualizację, wstawiania lub usuwania czynności, klasę, która jest przypisana do <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.DataContext> i właściwość, która jest przypisana do <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość musi pochodzić od klasy <xref:System.Data.Linq.Table%601>.  
  
 Aby uzyskać informacje o sposobie wybierania danych z wystąpienia klasy, zobacz <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano dwa <xref:System.Web.UI.WebControls.LinqDataSource> kontrolki. W jednym <xref:System.Web.UI.WebControls.LinqDataSource> kontroli <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość jest ustawiona na właściwości w klasie. Ta właściwość zwraca tablicę ciągów. W drugim <xref:System.Web.UI.WebControls.LinqDataSource> kontroli <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwość jest ustawiona na właściwość, która reprezentuje tabeli bazy danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 Klasa o nazwie `ExampleDataContext` czy reprezentuje tabeli bazy danych nie jest wyświetlany w tym przykładzie. W tym przykładzie do pracy, należy utworzyć tej klasy, dodając LINQ do klas SQL o nazwie Example.dbml i przeciągając tabelę o nazwie filmu na [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]. Klasa o nazwie `ExampleDataContext` z właściwością o nazwie `Movies` jest generowany.  
  
 W poniższym przykładzie pokazano klasę o nazwie `MovieLibrary` , o której mowa w <xref:System.Web.UI.WebControls.LinqDataSource> kontroli.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="linqDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Wartości klucza wiersza dla rekordów do zaktualizowania.</param>
        <param name="values">Wartości wiersza do zaktualizowania w źródle danych.</param>
        <param name="oldValues">Wartości wierszy, które są oceniane w celu wykrywania konfliktów danych.</param>
        <summary>Wykonuje operację aktualizacji.</summary>
        <returns>Liczba zmodyfikowanych przez operację aktualizacji rekordów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie trzeba wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> metody w kodzie. Kontrolki powiązania danych będzie automatycznie wywoływać <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> metody, gdy użytkownik wykona akcję próbę zaktualizowania rekordu. Jawnie wywołać <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> metody, gdy chcesz utworzyć własny proces aktualizowania danych.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak programowo zaktualizować rekord w źródle danych, po kliknięciu przycisku. Kod przekazuje <xref:System.Collections.Specialized.ListDictionary> obiekt, który zawiera wartość klucza <xref:System.Collections.Specialized.ListDictionary> obiekt, który zawiera oryginalne wartości, a <xref:System.Collections.Specialized.ListDictionary> obiekt, który zawiera nowe wartości do <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> metody.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx.vb#1)]  
  
 Poniższy przykład pokazuje znaczniki dla poprzedniego przykładu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzeń, aby przechwycić wyjątków z operacji aktualizacji lub sprawdzać wartości parametrów wyjściowych, po zakończeniu operacji aktualizacji. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiekt, który zostanie przekazany do procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta kolekcja nie jest używany przez <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> klasy.</summary>
        <value>Kolekcja parametrów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenie, aby sprawdzić poprawność obiektu, należy zaktualizować, aby sprawdzić błędy sprawdzania poprawności danych z klasy danych, aby zmienić wartość przed wykonaniem operacji aktualizacji lub do anulowania operacji aktualizacji. <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Obiekt, który zostanie przekazany do procedury obsługi zdarzeń zawiera oryginalnego obiektu i zaktualizowany obiekt.  
  
 Jeśli wystąpi błąd sprawdzania poprawności podczas operacji aktualizacji <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> obiekt zawiera wyjątki sprawdzania poprawności, które są generowane przez klasę danych. Błąd sprawdzania poprawności występuje, jeśli wartość do zaktualizowania nie jest zgodny z typem właściwości w klasie danych lub nie zostały spełnione wyboru niestandardowego sprawdzania poprawności. W obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia, można pobrać wyjątki sprawdzania poprawności i podjąć odpowiednie działania.  
  
 Jeśli wyjątek jest zgłaszany w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia musi obsłużyć wyjątek w tej procedurze obsługi zdarzeń. Wyjątek nie zostaną przekazane do programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzeń (za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiektu). <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Właściwość zawiera tylko wyjątki, które są generowane po <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń. Kod porównuje właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwości, aby zobaczyć, czy wartość została zmieniona. Jeśli wartość została zmieniona, wartość <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwość jest ustawiona na `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia, które pobiera wyjątki sprawdzania poprawności.  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 Poprzedni przykład pobiera wyjątki sprawdzania poprawności. Może zostać wygenerowany wyjątek, jeśli wartość nie jest zgodny z typem właściwości. Również może zostać wygenerowany z dostosowanych wyboru, takiego jak w poniższym przykładzie. `OnAgeChanging` Metoda sprawdza, czy numer `Age` właściwość nie jest ujemna.  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która określa, jakie warunki musi być prawdziwe dla rekordu mają zostać uwzględnione w tych danych.</summary>
        <value>Ciąg, który jest używany do tworzenia Where — klauzula.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości w celu określenia warunków dla rekordu, które mają zostać zwrócone w wyniku zapytania. Składnia <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości jest taka sama jak składnia klauzuli LINQ Where w C#.  
  
 Należy określić wyrażenie, którego wynikiem jest wartość logiczna, a jeśli wyrażenie ma `true` dla danego wiersza wiersza znajduje się w zestawie wyników. Wyrażeń składają się z nazwy kolumn, operatory porównania i wartości do porównania, jak pokazano w poniższym przykładzie:  
  
```  
<asp:LinqDataSource ... Where="Price > 50"...>  
```  
  
 Aby określić wiele wyrażeń logicznych połączone `AND` lub `OR` operatorów, możesz użyć `&&` jako logicznego operatora AND i `||` jako logicznego operatora OR, jak pokazano w poniższym przykładzie:  
  
```  
<asp:LinqDataSource ... Where="Price > 50 && Price < 100"...>  
<asp:LinqDataSource ... Where="Price <= 50 || Price >= 100"...>  
```  
  
 Jeśli chcesz przetestować właściwości względem wartości literału ciągu, wartości literału ciągu muszą być ujęte w podwójny cudzysłów. Aby to zrobić w znaczniku, należy ująć <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> wartość klauzuli w pojedynczym cudzysłowie, jak pokazano w poniższym przykładzie:  
  
```  
<asp:LinqDataSource ... Where='Category = "Sports"' ... >  
```  
  
 Na potrzeby testowania wstępnego wartość literału ciągu w kodzie, należy użyć znaków ucieczki, które są odpowiednie do języka używanego w celu wstawienia znaki cudzysłowu, jak pokazano w poniższym przykładzie:  
  
```vb  
LinqDataSource1.Where = "Category = ""Sports"""  
```  
  
```csharp  
LinqDataSource1.Where = "Category = \"Sports\"";  
```  
  
 Jeśli chcesz sprawdzić, czy ciąg jest większy lub mniejszy niż inny ciąg, należy użyć metody <xref:System.String> klasy zamiast `<` lub `>` operatorów między nazwa kolumny i wartość ciągu. W poniższych przykładach pokazano sposób wybierania wierszy zawierających wartości kategorii, które są mniejsze niż, mniejsze lub równe, większe niż, lub większa niż lub równa "Sport":  
  
```  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") < 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") <= 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") > 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") >= 0' ... >  
```  
  
 Można również użyć innych metod <xref:System.String> klasy, takie jak <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, i <xref:System.String.Contains%2A>. Aby uzyskać więcej informacji dotyczących sposobu porównywania ciągów, zobacz [porównywania ciągów](~/docs/standard/base-types/comparing.md). Aby uzyskać więcej informacji o tym, gdzie klauzula składni, zobacz [operatory języka C#](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) i [gdzie klauzula](~/docs/csharp/language-reference/keywords/where-clause.md).  
  
 Oprócz filtrowania na podstawie wartości statycznej, należy zdefiniować, po utworzeniu strony sieci Web, można filtrować na podstawie wartości dynamicznych, które są oceniane w czasie wykonywania. W takim przypadku należy uwzględnić nazwany parametr w <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwość, która działa jako symbol zastępczy dla wartości. Następnie dodaj parametr, który ma pasujące nazwy do <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji.  
  
 Alternatywnie, można ustawić <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwości `true` i zdefiniuj parametry w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji. Gdy <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> właściwość `true`, nie trzeba dołączać nazwanych parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości. Zamiast tego <xref:System.Web.UI.WebControls.LinqDataSource> kontroli automatycznie generuje Where — klauzula z parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> właściwości.  
  
 Aby uzyskać więcej informacji o tym, jak można filtrować dane, zobacz [Instruktaż: Wybieranie i filtrowanie podzbiór danych z kontrolkami GridView i LinqDataSource](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak filtrować dane zwrócone przez zapytanie, w oparciu o warunek statyczny.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 Poniższy przykład pokazuje, jak filtrować dane na podstawie wartości, dostarczone przez użytkownika w czasie wykonywania. W tym przykładzie <xref:System.Web.UI.WebControls.DropDownList> kontroli i <xref:System.Web.UI.WebControls.GridView> formantu są wyświetlane na stronie. Po wybraniu jednej z wartości w <xref:System.Web.UI.WebControls.DropDownList> kontroli <xref:System.Web.UI.WebControls.LinqDataSource> kontroli wybierana jest opcja `Products` tylko wiersze z tabeli `UserPrice` do wybranej wartości są równe. <xref:System.Web.UI.WebControls.GridView> Kontrolki, następnie wyświetli odfiltrowane dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który jest używany do tworzenia Where — klauzula.</summary>
        <value>Zbiór parametrów, które są używane do tworzenia Where w klauzuli <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli używa parametrów w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji, aby utworzyć Where — klauzula w czasie wykonywania. Dodaj parametry do <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji, jeśli chcesz programowo ustawić co najmniej jeden z warunków, kiedy klauzula. Na przykład może wyszukać tabeli bazy danych dla rekordów o nazwisko jest równa wartości <xref:System.Web.UI.WebControls.TextBox> kontroli. W takim przypadku należy dodać parametr do <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji dla wartości pola tekstowego.  
  
 Jeśli nie trzeba ustawić wartość w czasie wykonywania, kiedy klauzula, nie trzeba używać <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji. Możesz zdefiniować pola do pobrania z <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości. Na przykład, aby zwrócić wartości z tabeli bazy danych gdzie `LastName` równa się "Adams" w znaczniku, ustaw <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości `'LastName = "Adams"'` bez żadnych parametrów.  
  
 Aby ustawić wartości na <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji, można przypisać nazwy do każdego parametru, a następnie dodać symbol zastępczy w <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> właściwości dla tego parametru. Kiedy klauzula poprzedzony nazwa każdego parametru za pomocą znaku @.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji umożliwia dynamiczne tworzenie Where — klauzula. <xref:System.Web.UI.WebControls.LinqDataSource> Formant zwraca wszystkie rekordy z wartością w `Price` kolumny, która jest większa niż wartość wybrana przez użytkownika w <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>