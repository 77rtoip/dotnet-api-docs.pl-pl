<Type Name="TableCell" FullName="System.Web.UI.WebControls.TableCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef718b89ff2803c5167a6ce0fd6bb705eccdb8b1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TableCell : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCell extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class TableCell&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableCell : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type TableCell = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TableCellControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje komórkę w <see cref="T:System.Web.UI.WebControls.Table" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.TableCell> Klasy reprezentuje komórkę w <xref:System.Web.UI.WebControls.Table> formantu. Można użyć <xref:System.Web.UI.WebControls.TableCell.Text%2A> właściwości do określania zawartości komórki.  
  
 <xref:System.Web.UI.WebControls.TableCell> Klasa umożliwia kontrolowanie sposobu wyświetlania zawartości komórki. Wyrównanie zawartości komórki są określone przez ustawienie <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> i <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> właściwości. Można użyć <xref:System.Web.UI.WebControls.TableCell.Wrap%2A> właściwości w celu określenia, czy zawartość komórki opakowywania w komórce.  
  
 Można również określić liczbę wierszy lub kolumn w tabeli reprezentowany przez <xref:System.Web.UI.WebControls.Table> kontrolować, są zajęte przez pojedynczych komórek. <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> i <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> właściwości formantu, ile wierszy i kolumn służą odpowiednio.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:TableCell  
    AccessKey="string"  
    AssociatedHeaderCellID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    ColumnSpan="integer"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RowSpan="integer"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    VerticalAlign="NotSet|Top|Middle|Bottom"  
    Visible="True|False"  
    Width="size"  
    Wrap="True|False"  
/></asp:TableCell>  
```  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć tabelę, programowane Dodawanie elementów do tabeli i wyświetlania tabeli na stronie sieci Web. Uwaga jak <xref:System.Web.UI.WebControls.TableCell> formanty są tworzone i ich wartości właściwości są ustawione.  
  
> [!NOTE]
>  Poniższy przykład kodu wykorzystuje model pojedynczego pliku kodu i może nie działać poprawnie skopiowany bezpośrednio do pliku CodeBehind. Ten przykładowy kod musi być skopiowany do pusty plik tekstowy, który ma rozszerzenie aspx. Aby uzyskać więcej informacji na modelu kodu formularzy sieci Web, zobacz [modelu kodu strony formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[TableCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#1)]
 [!code-aspx-vb[TableCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Table" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TableCell" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell> Jest tworzony przy użyciu <xref:System.Web.UI.HtmlTextWriterTag.Td> tagu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak programowo utworzyć nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Td" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="tableCell.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Strumień wyjściowy, który renderuje HTML zawartości do klienta.</param>
        <summary>Dodaje właściwości specyficzne dla <see cref="T:System.Web.UI.WebControls.TableCell" /> formantu do listy atrybuty do renderowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> Metoda zastępuje klasy podstawowej <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> pierwszy i metoda wywołuje metodę podstawową, a następnie dodaje <xref:System.Web.UI.WebControls.TableCell> atrybuty odpowiadający <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> właściwość <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> właściwości i <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> Właściwość. Jeśli <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> właściwość odwołuje się do <xref:System.Web.UI.WebControls.TableHeaderCell> którego nie można odnaleźć, <xref:System.Web.HttpException> jest generowany.  
  
 <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> metoda niestandardowego serwera kontroli tak, aby atrybut niestandardowy tytuł jest renderowana dla każdej komórki.  
  
 [!code-aspx-csharp[CustomTableCellAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTableCellAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomTableCellAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/CS/custom_tablecell_addattributestorender.cs#2)]
 [!code-vb[CustomTableCellAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellAddAttributesToRender/VB/custom_tablecell_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie można odnaleźć komórki wymieniony jako powiązana komórka nagłówka.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metody klasy podstawowej, aby <see cref="T:System.Web.UI.WebControls.TableCell" /> atrybuty kontrolki prawidłowo są renderowane.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="tableCell.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Reprezentujący przeanalizowany element</param>
        <summary>Dodaje formantu podrzędnego przeanalizowany <see cref="T:System.Web.UI.WebControls.TableCell" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.TableCell> formant zawiera formanty podrzędne, a następnie klasy podstawowej <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A> metoda jest wywołana; w przeciwnym razie <xref:System.Web.UI.WebControls.TableCell> formantu <xref:System.Web.UI.WebControls.TableCell.Text%2A> wartość właściwości jest dodawana jako <xref:System.Web.UI.LiteralControl> do obiektu <xref:System.Web.UI.WebControls.TableCell> kontroli <xref:System.Web.UI.ControlCollection>.  
  
 <xref:System.Web.UI.WebControls.TableCell.AddParsedSubObject%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)" /> metody, dzięki czemu obiekty są poprawnie dodane do <see cref="T:System.Web.UI.WebControls.TableCell" /> kontroli <see cref="T:System.Web.UI.ControlCollection" />.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedHeaderCellID">
      <MemberSignature Language="C#" Value="public virtual string[] AssociatedHeaderCellID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AssociatedHeaderCellID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AssociatedHeaderCellID As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AssociatedHeaderCellID { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedHeaderCellID : string[] with get, set" Usage="System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozdzieloną spacjami listę skojarzonych z komórek nagłówka tabeli <see cref="T:System.Web.UI.WebControls.TableCell" /> formantu.</summary>
        <value>Tablica ciągów zawierająca identyfikatory komórek nagłówka skojarzona tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> Właściwość zawiera listę nagłówka komórki programowe identyfikatorów, które udostępniają informacje nagłówka <xref:System.Web.UI.WebControls.TableCell> formantu. Lista identyfikatorów komórki nagłówka jest renderowane jako lista rozdzielona przecinkami w kodzie HTML `<td>` elementu `header` atrybutu.  
  
 Podczas ustawiania <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> rozdzielana przecinkami lista ciągów użyj właściwości. Jeśli element listy nie został rozpoznany jako prawidłowa komórki nagłówka <xref:System.Web.HttpException> jest generowany, gdy <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób deklaratywnego określenia <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> właściwość <xref:System.Web.UI.WebControls.TableCell> formantu. W szczególności należy zauważyć, jak jest skojarzony z trzech komórek nagłówka komórki w ostatnim wierszu. Na przykład kod pełną, praca, zobacz <xref:System.Web.UI.WebControls.TableHeaderCell> temat klasy.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
        <altmember cref="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.StringArrayConverter" />
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public virtual int ColumnSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ColumnSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnSpan : int with get, set" Usage="System.Web.UI.WebControls.TableCell.ColumnSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kolumn w <see cref="T:System.Web.UI.WebControls.Table" /> formant, który obejmuje komórki.</summary>
        <value>Liczba kolumn w renderowanym tabeli, która obejmuje komórki. Wartość domyślna to <see langword="0" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> właściwości do określania liczby kolumn w renderowanym tabeli, która obejmuje komórki. Na przykład, jeśli ta właściwość jest ustawiona na `2`, komórki zajmuje dwie kolumny w <xref:System.Web.UI.WebControls.Table> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób deklaratywnego określenia <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> z <xref:System.Web.UI.WebControls.TableCell> formantu. W szczególności należy zauważyć, jak ostatni wiersz jednej komórce obejmuje trzy kolumny. Na przykład kod pełną, praca, zobacz <xref:System.Web.UI.WebControls.TableHeaderCell> temat klasy.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header Column2Header Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.RowSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="tableCell.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> dla <see cref="T:System.Web.UI.WebControls.TableCell" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> reprezentujący <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> dla <see cref="T:System.Web.UI.WebControls.TableCell" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableItemStyle> Utworzone przez <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> metoda jest używana z <xref:System.Web.UI.WebControls.TableCell.Wrap%2A>, <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>, i <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.TableCell.CreateControlStyle%2A> metoda niestandardowego serwera kontroli tak, aby zawsze zwraca nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TableStyle> klasy dla <xref:System.Web.UI.WebControls.TableCell>.  
  
 [!code-aspx-csharp[CustomTableCellCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomTableCellCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstylevb.aspx#1)]  
  
 [!code-csharp[CustomTableCellCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/CS/custom_tablecell_createcontrolstyle.cs#2)]
 [!code-vb[CustomTableCellCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellCreateControlStyle/VB/custom_tablecell_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Wrap" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie poziome zawartości w komórce.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> wartości wyliczenia. Wartość domyślna to <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> właściwości w celu określenia wyrównanie poziome zawartości komórki. Możliwe wartości do użycia są określone w <xref:System.Web.UI.WebControls.HorizontalAlign> wyliczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób deklaratywnego określenia <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> właściwość <xref:System.Web.UI.WebControls.TableCell> formantu. W szczególności należy zauważyć, jak komórki w ostatnim wierszu są wyrównane do lewej. Na przykład kod pełną, praca, zobacz <xref:System.Web.UI.WebControls.TableHeaderCell> temat klasy.  
  
```csharp  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
```vb  
<asp:TableCell AssociatedHeaderCellID="Column1Header,Column2Header,Column3Header"  
ColumnSpan="3"  
HorizontalAlign="Left">(2,0)  
</asp:TableCell>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
        <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="tableCell.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Strumień wyjściowy, który renderuje HTML zawartości do klienta.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.WebControls.TableCell" /> zawartości do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.TableCell> formant ma formantów podrzędnych lub został zastąpiony w klasy pochodnej klasy podstawowej <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> metoda jest wywołana; w przeciwnym razie wartość <xref:System.Web.UI.WebControls.TableCell.Text%2A> właściwości są zapisywane w <xref:System.Web.UI.HtmlTextWriter> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.TableCell.RenderContents%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.TableCell> kontrolować sposób jego niestandardowe wstawiony w zawartości komórki.  
  
 [!code-aspx-csharp[CustomTableCellRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomTableCellRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontentsvb.aspx#1)]  
  
 [!code-csharp[CustomTableCellRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCellRenderContents/CS/custom_tablecell_rendercontents.cs#2)]
 [!code-vb[CustomTableCellRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCellRenderContents/VB/custom_tablecell_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public virtual int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.WebControls.TableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę wierszy w <see cref="T:System.Web.UI.WebControls.Table" /> formant, który obejmuje komórki.</summary>
        <value>Liczba wierszy w tabeli renderowanych obejmującej komórki. Wartość domyślna to <see langword="0" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> właściwości do określania liczby wierszy w tabeli renderowanych obejmującej komórki. Na przykład, jeśli ta właściwość jest ustawiona na `2`, komórki zajmuje dwa wiersze w <xref:System.Web.UI.WebControls.Table> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TableCell.ColumnSpan" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant powinien być ustawiony <see langword="disabled" /> atrybut renderowanego elementu HTML do "disabled" kiedy formantu <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> jest właściwość <see langword="false" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> właściwość wskazuje ASP.NET w wersji niższej niż <c>4.0</c>; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość wskazuje, jak ASP.NET mają renderować kod HTML dla formantu, gdy formant jest wyłączony. Jeśli ta właściwość jest `true`, platforma ASP.NET renderuje `disabled` atrybutu, gdy formant jest wyłączony. Jeśli ta właściwość jest `false`, platforma ASP.NET renderuje `class` atrybutu, gdy formant jest wyłączony. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TableCell.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość tekstową komórki.</summary>
        <value>Zawartość tekstu komórki. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.Text%2A> właściwości do określania zawartości tekstu komórki. Ta właściwość jest często używana do programowane aktualizowanie zawartości komórki.  
  
> [!NOTE]
>  Ustawienie <xref:System.Web.UI.WebControls.TableCell.Text%2A> właściwości usunie inne formanty zawarte w <xref:System.Web.UI.WebControls.TableCell>.  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.TableCell.Text%2A> Formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [porady: ochrona przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie kodowanie HTML do ciągów](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [sprawdzanie poprawności danych wejściowych użytkownika w ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TableCell> kontrolować programowo. W szczególności należy pamiętać, jak <xref:System.Web.UI.WebControls.TableCell.Text%2A> właściwość jest używana do ustawiania zawartość <xref:System.Web.UI.WebControls.TableCell> formantu.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.TableCell> klasy.  
  
 [!code-csharp[TableCell#5](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCell/CS/tablecellcs.aspx#5)]
 [!code-vb[TableCell#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCell/VB/tablecellvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.Text" />
      </Docs>
    </Member>
    <Member MemberName="VerticalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.VerticalAlign VerticalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalAlign As VerticalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::VerticalAlign VerticalAlign { System::Web::UI::WebControls::VerticalAlign get(); void set(System::Web::UI::WebControls::VerticalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalAlign : System.Web.UI.WebControls.VerticalAlign with get, set" Usage="System.Web.UI.WebControls.TableCell.VerticalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.VerticalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie pionowe zawartości w komórce.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> wartości wyliczenia. Wartość domyślna to <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> właściwości w celu określenia wyrównanie pionowe zawartości komórki. Możliwe wartości do użycia są określone w <xref:System.Web.UI.WebControls.VerticalAlign> wyliczenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.VerticalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.TableCell.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.TableCell.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość tego wskazująca, czy zawartość komórki być zawijany.</summary>
        <value>
          <see langword="true" /> Jeśli zawartość komórki opakowywania w komórce; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCell.Wrap%2A> właściwość, aby określić lub Sprawdzanie, czy zawartość komórki opakowywania w komórce.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TableItemStyle.Wrap" />
      </Docs>
    </Member>
  </Members>
</Type>