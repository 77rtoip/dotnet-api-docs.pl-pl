<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8ae7451236a61233aad5861792535d77e32aee0" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39939198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje bazę danych SQL database do formantów powiązanych z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Połączenia danych](#data_connections)  
  
-   [Wykonywanie operacji na danych](#performing_data_operations)  
  
-   [Dostawca danych](#data_provider)  
  
-   [Buforowanie](#caching)  
  
-   [Dodatkowe funkcje](#additional_features)  
  
-   [Widok źródła danych](#data_source_view)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli źródła danych reprezentuje dane w relacyjnej bazy danych SQL do formantów powiązanych z danymi. Możesz użyć <xref:System.Web.UI.WebControls.SqlDataSource> kontroli w połączeniu z kontrolką powiązanych z danymi do pobierania danych z relacyjnej bazy danych oraz do wyświetlania, edytowania i sortowanie danych w witrynie sieci Web przy użyciu niewielkiego lub żadnego kodu.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Połączenia danych  
 Aby połączyć się z bazą danych, należy ustawić <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość prawidłowe parametry połączenia. <xref:System.Web.UI.WebControls.SqlDataSource> Może obsługiwać wszystkie SQL relacyjnej bazy danych może być połączony z przy użyciu dostawcy ADO.NET, takich jak `SqlClient`, `OleDb`, `Odbc`, lub `OracleClient` dostawcy. Aby dowiedzieć się, jak zabezpieczyć parametry połączenia, zobacz [How to: bezpieczne parametry połączenia, gdy źródła danych Using decyduje](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Aby pobrać dane z podstawowej bazy danych, należy ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość z zapytania SQL. Jeśli baza danych, <xref:System.Web.UI.WebControls.SqlDataSource> jest skojarzony z obsługuje przechowywane procedury, można ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość na nazwę procedury składowanej. Zapytanie SQL, które określisz może być również sparametryzowanych zapytań. Możesz dodać <xref:System.Web.UI.WebControls.Parameter> obiekty, które są skojarzone z zapytanie parametryczne, aby <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji. Aby uzyskać więcej informacji na temat sparametryzowane zapytania SQL oraz ich składni, zobacz [przy użyciu parametrów za pomocą kontrolki źródła danych dla filtrowanie](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli pobiera dane zawsze wtedy, gdy <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana. Ta metoda zapewnia dostęp programistyczny do metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Metoda jest wywoływana automatycznie przez formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> podczas ich <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metoda jest wywoływana. Jeśli ustawisz <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> właściwości kontrolki powiązania danych, formant automatycznie tworzy powiązanie z danymi ze źródła danych, zgodnie z potrzebami. Ustawienie `DataSourceID` właściwość jest zalecaną metodą dla powiązania <xref:System.Web.UI.WebControls.ObjectDataSource> formantu na formant powiązany z danymi. Alternatywnie, można użyć `DataSource` właściwości, ale następnie użytkownik musi jawnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metoda kontrolki powiązania danych. Przykłady formantów powiązanych z danymi, których można użyć <xref:System.Web.UI.WebControls.SqlDataSource> są <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, i <xref:System.Web.UI.WebControls.DropDownList>. Możesz wywołać <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda programowo w dowolnym momencie, aby pobrać dane z bazy danych.  
  
 W scenariuszach ASP.NET deklaracyjne i programowe, można ustawić <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwości kontrolki powiązania danych, identyfikator <xref:System.Web.UI.WebControls.SqlDataSource> kontroli. Można także przypisać wystąpienie <xref:System.Web.UI.WebControls.SqlDataSource> klasy <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> właściwości kontrolki powiązania danych. Aby uzyskać więcej informacji na temat wiązania kontrolki powiązania danych do kontrolki źródła danych, zobacz [ASP.NET Data Access Options](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Wykonywanie operacji na danych  
 W zależności od możliwości podstawowy produkt bazy danych i konfiguracji wystąpienia <xref:System.Web.UI.WebControls.SqlDataSource> klasy, można wykonywać operacje na danych, takich jak operacji wstawiania, aktualizacji i usuwa. Aby wykonać te operacje na danych, Ustaw tekst odpowiednie polecenia oraz wszelkie skojarzone parametry dla operacji, którą chcesz wykonać. Na przykład w przypadku operacji aktualizacji, należy ustawić <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwości instrukcji SQL lub nazwa procedury składowanej i wszelkie wymagane parametry, aby dodać <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Aktualizacja jest wykonywana po <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metoda jest wywoływana jawnie przez kod lub automatycznie przez formant powiązany z danymi. Następnie dla tego samego wzorca ogólnego <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operacji.  
  
 Zapytania SQL i poleceń, których używasz w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, i <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwości mogą być parametryzowane. Oznacza to, że polecenie lub zapytanie użyć symbole zastępcze zamiast wartości literałów i powiązać symbole zastępcze aplikacji lub zmienne zdefiniowane przez użytkownika. Można powiązać parametry zapytania SQL zmiennych sesji, wartości, które są przekazywane na ciąg zapytania dla strony formularzy sieci Web, wartości właściwości innych formantów serwera i nie tylko. Aby uzyskać więcej informacji o sposobie używania parametrów zapytania SQL z <xref:System.Web.UI.WebControls.SqlDataSource>, zobacz [przy użyciu parametrów za pomocą kontrolki źródła danych dla filtrowanie](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) i [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  Domyślnie, jeśli jeden z parametrów jest `null` podczas wykonywania `Select` polecenia, zostaną zwrócone nie dane i zostanie zgłoszony żaden wyjątek. Można zmienić to zachowanie przez ustawienie <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> właściwość `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Dostawca danych  
 Domyślnie <xref:System.Web.UI.WebControls.SqlDataSource> sterowania w programach .NET Framework Data Provider dla programu SQL Server, ale <xref:System.Web.UI.WebControls.SqlDataSource> programu Microsoft SQL nie jest specyficzne dla serwera. Możesz połączyć <xref:System.Web.UI.WebControls.SqlDataSource> formantu o dowolny produkt bazy danych, dla których ma zarządzanego dostawcy ADO.NET. Gdy jest używane z <xref:System.Data.OleDb?displayProperty=nameWithType> dostawcy <xref:System.Web.UI.WebControls.SqlDataSource> można pracować z żadną OLE DB zgodne z bazą danych. Gdy jest używane z <xref:System.Data.Odbc?displayProperty=nameWithType> dostawcy <xref:System.Web.UI.WebControls.SqlDataSource> mogą być używane z dowolnego sterownika ODBC i bazy danych, w tym programu IBM DB2, MySQL i PostgreSQL. Gdy jest używane z <xref:System.Data.OracleClient?displayProperty=nameWithType> dostawcy <xref:System.Web.UI.WebControls.SqlDataSource> można pracować z bazami danych Oracle 8.1.7 lub nowszy. Lista dostawców dozwolony jest zarejestrowany w `DbProviderFactories` sekcję pliku konfiguracji, albo w pliku Machine.config lub Web.config. Aby uzyskać więcej informacji, zobacz [wybranie danych przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Pamięć podręczna  
 Jeśli dane są wyświetlane na Twojej stronie za pomocą <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki, może zwiększyć wydajność strony przy użyciu danych buforowania możliwości kontroli źródła danych. Buforowanie zmniejsza obciążenie na serwerach bazy danych, kosztem pamięci na serwerze sieci Web; w większości przypadków jest to dobry kompromisu. <xref:System.Web.UI.WebControls.SqlDataSource> Automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwość jest ustawiona na liczbę sekund, które pamięć podręczna przechowuje dane, zanim wpis pamięci podręcznej jest odrzucany. Można również określić <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> oraz opcjonalny <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> wartość.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Dodatkowe funkcje  
 <xref:System.Web.UI.WebControls.SqlDataSource> Zapewnia dodatkowe funkcje, zgodnie z opisem w poniższej tabeli.  
  
|Możliwość|Wymagania|  
|----------------|------------------|  
|Pamięć podręczna|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwości `true`i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości, zgodnie z zachowaniem buforowania ma buforowanych danych.|  
|Usuwanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwości instrukcji SQL służy do usuwania danych. Ta instrukcja jest zazwyczaj sparametryzowanych.|  
|Filtrowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość. Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości do filtrowania wyrażenia używane do filtrowania danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana.|  
|Wstawianie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwości instrukcji SQL służy do wstawiania danych. Ta instrukcja jest zazwyczaj sparametryzowanych.|  
|Stronicowania|Nie są obecnie obsługiwane przez <xref:System.Web.UI.WebControls.SqlDataSource>, jednak niektóre powiązane z danymi kontrolki, takie jak <xref:System.Web.UI.WebControls.GridView>, obsługę stronicowania po ustawieniu <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość.|  
|Zaznaczenie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości instrukcji SQL używane do pobierania danych.|  
|Sortowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Aktualizowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwości instrukcji SQL używane do aktualizowania danych. Ta instrukcja jest zazwyczaj sparametryzowanych.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Widok źródła danych  
 Podobnie jak w przypadku wszystkich kontrolki źródła danych, <xref:System.Web.UI.WebControls.SqlDataSource> formant jest skojarzony z klasa widoku źródła danych. <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka ma tylko jeden skojarzone <xref:System.Web.UI.WebControls.SqlDataSourceView>, i zawsze nadaje mu nazwę `Table`.  
  
 Nie ma żadnych wizualnych renderowanie <xref:System.Web.UI.WebControls.SqlDataSource> kontroli jest implementowany jako kontrolkę, dzięki czemu można go utworzyć deklaratywnie i, opcjonalnie, aby zezwalała na należą do zarządzania stanem. W rezultacie <xref:System.Web.UI.WebControls.SqlDataSource> nie obsługuje funkcje wizualne, takie jak te, które są dostarczane przez <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> lub <xref:System.Web.UI.DataSourceControl.SkinID%2A> właściwości.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Projekt witryny internetowego programu Visual Studio z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 Ta sekcja zawiera cztery przykłady kodu:  
  
-   Pierwszy przykład kodu demonstruje sposób wyświetlania danych z programu SQL Server w <xref:System.Web.UI.WebControls.GridView> sterować za pomocą składni deklaratywnej.  
  
-   Drugi przykład kodu demonstruje sposób wyświetlania danych w bazie danych ODBC w <xref:System.Web.UI.WebControls.GridView> sterować za pomocą składni deklaratywnej.  
  
-   Trzeci przykład kodu pokazuje, jak wyświetlać i aktualizować dane w <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
-   Czwarty przykład kodu pokazuje, jak wyświetlać i aktualizować dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
    > [!NOTE]
    >  Te przykłady pokazują, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.SqlDataSource> deklaratywne kontrolki pobierania danych z programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.SqlDataSource> deklaratywne kontrolki pobierać dane z bazy danych zgodne z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Właściwości jest nazwa dostawcy danych .NET Framework dla ODBC, czyli <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje wyświetlanie typowych i scenariuszy aktualizacji za pomocą <xref:System.Web.UI.WebControls.GridView> kontroli. Zgodnie z poprzednich przykładach, dane z bazy danych Northwind jest wyświetlana w <xref:System.Web.UI.WebControls.GridView> kontroli. Ponadto ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> określono właściwości i <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> właściwość jest ustawiona na `true`, edytować i zaktualizować rekordy z żaden dodatkowy kod. <xref:System.Web.UI.WebControls.GridView> Kontroli automatycznie obsługuje dodawanie parametrów do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody podczas **aktualizacji** znajdujący się w <xref:System.Web.UI.WebControls.GridView> kliknięciu formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje wyświetlanie typowych i scenariuszy aktualizacji za pomocą <xref:System.Web.UI.WebControls.DropDownList> i <xref:System.Web.UI.WebControls.TextBox> kontrolki. <xref:System.Web.UI.WebControls.DropDownList> Formantu nie powoduje automatycznego dodania Parametry aktualizacji <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji ani wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody, więc należy to zrobić. Parametry aktualizacji są określone w sposób deklaratywny i można dodać program obsługi zdarzeń, aby wykonać <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacji, gdy zostanie wywołane zdarzenie.  
  
> [!IMPORTANT]
>  W tym przykładzie zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia używane do łączenia z podstawowej bazy danych.</param>
        <param name="selectCommand">Zapytanie SQL służące do pobierania danych z bazy danych. Jeśli zapytanie SQL w ciągu sparametryzowanym SQL, może być konieczne dodanie <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekty do <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy przy użyciu określonych parametrów połączenia i polecenia Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ produkty innej bazy danych używają różnych odmian SQL i składnia `selectCommand` zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, symbol zastępczy parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> to symbol zastępczy, parametru klasy, `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Wartość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia <xref:System.Web.UI.WebControls.SqlDataSource> sterować za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> konstruktora. Przykład jest nietypowy w tym <xref:System.Web.UI.WebControls.SqlDataSource> formant jest używany nie na strony formularzy sieci Web, ale w implementacji obiektu warstwy środkowej jako prosty sposób obiektem biznesowym do interakcji z bazą danych. W przykładzie użyto parametrów połączenia, który jest przechowywany w pliku Web.config.  
  
 Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy danych, <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa. Jeśli żaden dostawca jest ustawiona, <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> domyślnie używa dostawcy ADO.NET dla programu Microsoft SQL Server.</param>
        <param name="connectionString">Parametry połączenia używane do łączenia z podstawowej bazy danych.</param>
        <param name="selectCommand">Zapytanie SQL służące do pobierania danych z bazy danych. Jeśli zapytanie SQL w ciągu sparametryzowanym SQL, może być konieczne dodanie <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekty do <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy przy użyciu określonych parametrów połączenia i polecenia Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ produkty innej bazy danych używają różnych odmian SQL i składnia `selectCommand` zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez `providerName` parametru. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, symbol zastępczy parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> to symbol zastępczy, parametru klasy, `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, w ciągu kilku sekund, że kontrola źródła danych buforuje dane, które zostaną pobrane przez <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metody.</summary>
        <value>Liczba sekund, przez jaką <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zapisuje wyniki w pamięci podręcznej <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> operacji. Wartość domyślna to 0. Wartość nie może być ujemna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli automatycznie zapisuje w pamięci podręcznej danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwość jest ustawiona na wartość większą niż 0, który wskazuje liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostanie odrzucony. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
 Zachowanie pamięci podręcznej jest określone przez kombinację czasu trwania i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.SqlDataSource> buforuje dane na pierwszą operacją pobierania danych, przechowuje go w pamięci do co najwyżej ilość czasu, który jest określony przez <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości. Danych może być zwolnione przed upływem czasu trwania, jeśli pamięć jest wymagana. Następnie odświeżeniu pamięci podręcznej podczas następnej operacji. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartości, kontrola źródła danych przechowuje dane na pierwszą operacją pobierania danych, ale resetuje przechowuje pamięci podręcznej dla każdej kolejnej operacji w danym przedziale czasu. Wygaśnięcia pamięci podręcznej, jeśli nie ma działania przez czas, który jest równy <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> wartość od momentu ostatniego <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli może buforować dane tylko wtedy, gdy jest on <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> trybu. A <xref:System.NotSupportedException> wyjątek jest generowany przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i pamięć podręczna jest włączona.  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych i weryfikacji konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli przy użyciu włączone buforowanie danych. <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Jest ustawiona na 20 sekund i, ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartości domyślnie użytkownicy na tej stronie zostanie wyświetlony najnowszych danych, co 20 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zachowanie wygaśnięcia pamięci podręcznej, w połączeniu z czasem trwania, w tym artykule opisano zachowanie pamięci podręcznej, który używa kontroli źródła danych.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 Zachowanie pamięci podręcznej jest określany przy użyciu kombinacji <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> ustawienia. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.SqlDataSource> buforuje dane na pierwszą operacją pobierania danych, przechowuje go w pamięci, ilości czasu, który jest określony przez <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości i odrzuci ją po tym czasie wygasły. Następnie odświeżeniu pamięci podręcznej podczas następnej operacji. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartości, kontrola źródła danych przechowuje dane na pierwszą operacją pobierania danych, ale resetuje przechowuje pamięci podręcznej dla każdej kolejnej operacji w danym przedziale czasu. Wygaśnięcia pamięci podręcznej, jeśli nie ma działania przez czas, który jest równy <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> wartość od momentu ostatniego <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli może buforować dane tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> trybu. A <xref:System.NotSupportedException> wyjątek jest generowany przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i pamięć podręczna jest włączona.  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych i weryfikacji konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli przy użyciu włączone buforowanie danych. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartości, użytkownicy nie będą widzieć aktualnych danych nawet jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> długość wynosi 20 sekund. Buforowane dane są odświeżane tylko wtedy, gdy nie ma działania na stronie więcej niż 20 sekund od momentu ostatniego ładowania strony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdefiniowanych przez użytkownika klucza zależność, która jest połączona z wszystkie dane obiektów pamięci podręcznej, które są tworzone przez kontrolę źródła danych. Wszystkie obiekty w pamięci podręcznej są jawnie wygasł po wygaśnięciu klucza.</summary>
        <value>Klucz identyfikujący wszystkich obiektów w pamięci podręcznej utworzone przez <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 Możesz ustawić <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> właściwości, aby utworzyć zależność między wszystkie wpisy pamięci podręcznej, które są tworzone przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli, jak i klucz. Wszystkie wpisy pamięci podręcznej można programowo unieważnić w dowolnym momencie przez wygaśnięciu klucza.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli może buforować dane tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> trybu. A <xref:System.NotSupportedException> wyjątek jest generowany przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i pamięć podręczna jest włączona.  
  
 Wpis pamięci podręcznej unikatowy jest tworzony dla każdej kombinacji <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, i <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> właściwości. Wiele <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki można użyć tego samego wpisy w pamięci podręcznej w scenariuszach, gdzie formanty obciążenia tych samych danych z tej samej bazy danych.  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych i weryfikacji konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy operacja pobierania danych zostało anulowane podczas każdego parametru, który jest zawarty w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji, które daje w wyniku <see langword="null" />.</summary>
        <value>
          <see langword="true" /> Jeśli operacja pobierania danych została anulowana, gdy parametr zawarte w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji oszacowywane, aby <see langword="null" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> właściwość jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób, w jaki <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli wykonuje aktualizacje i usuwa podczas zmiany bazy danych w źródłowym wiersza danych w czasie operacji.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.ConflictOptions" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwość określa, czy parametry dla starej i nowej wartości są stosowane do `Update` metody. Na przykład, jeśli polecenie jest określony przez <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość zwraca <xref:System.Data.DataTable> obiektu z kolumnami `Name` i `Number` i <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.OverwriteChanges> wartości, parametry są tworzone dla `Name` i `Number` dla `Update` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości, parametry są tworzone dla `Name`, `Number`, `original_Name`, i `original_Number`. (Zależy od dokładną nazwę parametrów dla oryginalnej wartości <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości.) <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli następnie określa, czy `Update` metodę, która została określona w <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość ma następujące parametry, które odpowiadają.  
  
 Kontrola współbieżności to technika, używanego przez magazyny danych do kontroli danych odczytu i zmienić w magazynie, jeśli wielu klientów są uzyskiwania dostępu i manipulowania tych samych danych. Na przykład jednego klienta odczytuje dane i prezentuje je do użytkownika, podczas gdy inny klient odczytuje te same dane i prezentuje je do innego użytkownika. Jeśli użytkownicy aktualizacji danych i przesłać go do magazynu danych, mogą wystąpić pewne nieoczekiwany wynik, ponieważ obaj klienci mogą aktualizować różne wartości dla tych samych danych. To jest traktowany jako konflikt. Ustawiając <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwości <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość Twojej `Update` metoda następnie porównać stare i nowe wartości do oryginalnego źródła danych do wykrywania konfliktów i obsługiwać je, zgodnie z potrzebami.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametry połączenia specyficzne dla dostawcy ADO.NET, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli używa do łączenia z podstawowej bazy danych.</summary>
        <value>String — właściwe dla dostawcy danych .NET Framework, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do łączenia się z bazą danych SQL, który reprezentuje. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli może być używany z różnych dostawców ADO.NET i składnia ciągu połączenia, który jest używany do łączenia do bazowego źródła danych jest specyficzne dla dostawcy.  
  
 Po skonfigurowaniu <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki ustawisz <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość typu bazy danych (wartość domyślna to <xref:System.Data.SqlClient?displayProperty=nameWithType>), i ustawiasz <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość parametrów połączenia, który zawiera informacje, które jest wymagane w celu nawiązania połączenia w bazie danych. Zawartość ciągu połączenia różnią się w zależności od tego, jakiego typu bazy danych, uzyskiwania dostępu do kontroli źródła danych. Na przykład <xref:System.Web.UI.WebControls.SqlDataSource> formant wymaga nazwy serwera, nazwę bazy danych (katalog) i informacje o tym, jak można uwierzytelnić użytkownika podczas nawiązywania połączenia z programem SQL Server. Aby uzyskać informacje o zawartości parametry połączenia, zobacz <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwość <xref:System.Data.SqlClient.SqlConnection> klasy, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> właściwość <xref:System.Data.OracleClient.OracleConnection> klasy, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwość <xref:System.Data.OleDb.OleDbConnection> klasy lub <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> Właściwość <xref:System.Data.Odbc.OdbcConnection> klasy.  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, aby ponownie powiązać.  
  
> [!IMPORTANT]
>  Aby dowiedzieć się, jak przechowywanie parametrów połączenia, zobacz [How to: Zabezpieczanie parametry połączenia, gdy źródła danych Using decyduje](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości do nawiązywania połączeń z bazą danych programu Microsoft SQL Server i wyświetlić wyniki <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość <xref:System.Web.UI.WebControls.GridView> kontroli. Drugi przykład kodu demonstruje bardziej złożonych scenariuszach, gdzie <xref:System.Web.UI.WebControls.SqlDataSource> formant jest używany do wyświetlania i aktualizowania danych w bazie danych Microsoft Access chroniony hasłem. W każdym przypadku `connectionStrings` elementu w pliku Web.config są wyświetlane w pierwszej kolejności, następuje strony ASP.NET, która zawiera <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości do nawiązywania połączeń z bazą danych programu SQL Server i wyświetlić wyniki <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje scenariusza bardziej skomplikowane niż w poprzednim przykładzie kodu, gdzie <xref:System.Web.UI.WebControls.SqlDataSource> formant jest używany do wyświetlania i aktualizowania danych w bazie danych programu Access chroniony hasłem. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource> jest używany, do których dostęp <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość jest ustawiona na <xref:System.Data.OleDb> dostawcy i <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość jest ustawiona na parametry połączenia odpowiednie usługi dla bazy danych programu Access udostępnione UNC. A <xref:System.Web.UI.WebControls.GridView> kontrolka Wyświetla zamówień za pomocą dat wydania. Możesz zaktualizować zamówienie sprawdzanie odpowiednie pole wyboru, a następnie klikając polecenie **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  Ten przykład obejmuje hasła w postaci zwykłego tekstu tylko w celach ilustracyjnych. W przypadku aplikacji produkcyjnej parametry połączenia, które obejmują hasła powinny być szyfrowane. Aby uzyskać więcej informacji, zobacz [ochrony informacji o połączeniu](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku źródła danych.</param>
        <summary>Tworzy obiekt widoku źródła danych, który jest skojarzony z kontroli źródła danych.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Web.UI.WebControls.SqlDataSource> zastępować <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> metodę, aby zwrócić silnie typizowane obiekty widoku źródła danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb pobierania danych, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontrola korzysta w celu pobrania danych.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryb pobieranie danych identyfikuje jak <xref:System.Web.UI.WebControls.SqlDataSource> kontroli pobiera dane z bazy danych.  
  
 Gdy <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość, dane są ładowane do <xref:System.Data.DataSet> obiektu i przechowywane w pamięci na serwerze. Umożliwia to obsługę scenariuszy, w którym interfejs użytkownika kontrolki, takie jak <xref:System.Web.UI.WebControls.GridView>, oferty, sortowanie, filtrowanie i stronicowanie możliwości.  
  
 Gdy <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość, dane są pobierane przez <xref:System.Data.IDataReader> obiektu, który jest tylko do przodu, tylko do odczytu kursora. Określony typ <xref:System.Data.IDataReader> obiekt jest zależny od dostawcy danych netto, <xref:System.Web.UI.WebControls.SqlDataSource> zastosowań, które jest identyfikowane za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Domyślnie <xref:System.Web.UI.WebControls.SqlDataSource> kontroli używa dostawcy programu Microsoft SQL Server, <xref:System.Data.SqlClient?displayProperty=nameWithType>, i czytnik danych jest <xref:System.Data.SqlClient.SqlDataReader> obiektu.  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> Aby ponownie powiązać.  
  
 Wartość <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontrolę <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość dla scenariusza z <xref:System.Web.UI.WebControls.ListBox> formantu, który wymaga sortowania nie, stronicowania ani filtrowania.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> Właściwość nie jest jedną z wartości zdefiniowanych w <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację usuwania przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> ciąg SQL oraz wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy usunięte z bazy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wykonaniem operacji usuwania <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzeń. Może obsługiwać to zdarzenie do sprawdzenia wartości parametrów i przeprowadzić wszystkie przetwarzania wstępnego przed wykonaniem operacji usuwania.  
  
 Po zakończeniu tej operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> zdarzeń. Może obsługiwać to zdarzenie, aby sprawdzić kody błędów i wartości zwracane i wykonywać żadnego przetwarzania po.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Metoda jest przewidziana dostęp programowy do `Delete` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource> formant jest skojarzony z kontrolki powiązania danych, formant powiązany z danymi automatycznie wywołuje **Usuń** metody.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Metoda deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli. Do wykonania tej operacji <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> wartości, a następnie wykonuje <xref:System.Data.Common.DbCommand> w podstawowej bazie danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu, aby usunąć zamówienie z bazy danych Northwind. Początkowo dane są pobierane z tabeli Orders i wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Należy jawnie zadeklarować <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> właściwości i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody, korzystając z formantów powiązanych z danymi, takie jak <xref:System.Web.UI.WebControls.DropDownList> (w przeciwieństwie do innych formantów takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>, który automatycznie wypełnić Parametry, a następnie wywołać <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody w kontroli źródła danych). W tym przykładzie <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzeń jest delegowane do prywatnego `OnDelete` programu obsługi zdarzeń, która wywołuje jawnie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może nawiązać połączenia z bazowego źródła danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli używa do usuwania danych z bazy danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do usuwania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Reprezentuje kwerendę SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody.  
  
 Ponieważ produkty innej bazy danych używają różnych odmian programu SQL Server, składnia ciągu SQL zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, składnia parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasy, składnia parametru jest `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli baza danych obsługuje procedury składowane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwości nie są przechowywane w widoku stanu. Ponieważ jest możliwe do zdekodowania zawartość widoku stanu na komputerze klienckim, przechowywanie poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu, aby usunąć zamówienie z tabeli Orders bazy danych Northwind. Dane są pobierane z tabeli Orders i wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli. <xref:System.Web.UI.WebControls.GridView> Renderuje **Usuń** przycisku automatycznie po <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`. Ponadto, gdy **Usuń** kliknięto przycisk <xref:System.Web.UI.WebControls.GridView> kontrolki spowoduje automatyczne wypełnienie <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcji i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody. Na koniec, ponieważ ten przykładowy kod powoduje usunięcie danych, program obsługi zdarzeń jest dodawana próbuje utworzyć kopię zapasową bazy danych na dysku przed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja została wykonana.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja usuwania została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> zdarzenie, aby sprawdzić wartości z danych wyjściowych parametrów, po ukończeniu operacji usuwania. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwość <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiekt, który jest skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwość zawiera sparametryzowanego zapytania SQL <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcja zawiera dowolne <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametr symbole zastępcze w ciągu SQL.  
  
> [!NOTE]
>  Upewnij się, że nie <xref:System.Web.UI.WebControls.BoundField> formantów w formancie powiązanych z danymi, które możesz powiązać <xref:System.Web.UI.WebControls.SqlDataSource> kontroli mieć nazwy zgodne z dowolnej nazwy parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcji. Parametry, które mają taką samą nazwę jak powiązane pola są wykluczane z polecenia SQL, a także o błędzie "nie został podany parametr" może spowodować.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości, parametry są tworzone dla starej i nowej wartości danych. Parametry stare wartości są nazywane zgodnie z opisem w <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości.  
  
 W zależności od dostawcy ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji zgodnie z kolejnością, w jakiej są wyświetlane parametry w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, kojarzy parametrów w kolekcji, dopasowując nazwy parametru z symbolem zastępczym w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu, aby usunąć zamówienie z bazy danych Northwind. Początkowo dane są pobierane z tabeli Orders i wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Należy jawnie zadeklarować <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> właściwości i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody, korzystając z formantów powiązanych z danymi, takie jak <xref:System.Web.UI.WebControls.DropDownList> (w przeciwieństwie do innych formantów takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>, który automatycznego wypełniania parametrów i Wywołaj <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> kontroli źródła danych). W tym przykładzie <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzeń jest delegowane do prywatnego `OnDelete` programu obsługi zdarzeń, która wywołuje jawnie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzeń do wykonywania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, w celu walidacji wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację usuwania.  
  
 Połączenie z bazowego źródła danych nie jest jeszcze otwarty po wywołaniu delegata obsługi zdarzeń. W związku z tym, nie można anulować operacji bezpośrednio przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metody <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiektu. Można jednak anulowania operacji bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiekt `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzenia, które jest wywoływane przed wykonaniem <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja jest wykonywana. Ponieważ w tym przykładzie usuwa dane z bazy danych Northwind <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> program obsługi zostanie dodany próbuje utworzyć kopię zapasową bazy danych na dysku przed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja została wykonana.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontrolka ma włączone buforowanie danych.</summary>
        <value>
          <see langword="true" /> Jeśli do kontroli źródła danych; włączone jest buforowanie danych w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli automatycznie zapisuje w pamięci podręcznej danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwość jest ustawiona na wartość większą niż 0, który wskazuje liczbę sekund, że pamięć podręczna przechowuje dane przed pobraniem Nowy zestaw.  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych i weryfikacji konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli przy użyciu włączone buforowanie danych. <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> Właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> jest ustawiona na 20 sekund. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> pola domyślnie użytkownicy na tej stronie zostanie wyświetlony najnowszych danych, co 20 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> Właściwość jest ustawiona na <see langword="true" /> podczas buforowania nie jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie filtrowania, która będzie stosowana, jeśli <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metoda jest wywoływana.</summary>
        <value>Ciąg, który reprezentuje wyrażenie filtrowania stosowane, gdy dane są pobierane za pomocą <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Wartość właściwości jest wyrażenie ciągu formatu (ciąg, który jest przetwarzany przez <xref:System.String.Format%2A?displayProperty=nameWithType> metoda) które używa wartości w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> kolekcji parametrów podstawiania uwzględnione w ciągu. Składnia wyrażeń filtru jest tej samej składni, który jest akceptowany przez <xref:System.Data.DataView.RowFilter%2A> właściwość, ponieważ wyrażenie filtru jest stosowany do <xref:System.Data.DataView.RowFilter%2A> właściwość <xref:System.Data.DataView> obiekt, który jest zwracany z wykonywania <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody. Aby uzyskać więcej informacji, zobacz <xref:System.Data.DataColumn.Expression%2A>.  
  
 Jeśli dodasz parametry <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji, mogą również obejmować symbole zastępcze w ciągu formatu (na przykład `"{0}")` w wyrażeniu, aby zastąpić wartości parametrów. Symbole zastępcze są zastępowane zgodnie z indeksu parametru w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Jeśli obiekt w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcja jest `null`, obiekt zostanie zastąpiony przez ciąg pusty.  
  
 Może zawierać parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. Jeśli parametr jest typu ciąg lub znak, należy ująć parametr w znaki pojedynczego cudzysłowu. Znaki cudzysłowu nie są wymagane, jeśli parametr jest typu liczbowego. <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Kolekcji zawiera parametry, które są oceniane pod kątem symbole zastępcze, które znajdują się w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje filtrowania danych tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> trybu.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych Northwind i filtrowanie ich przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> ciągu i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwość jest stosowana w dowolnym momencie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wykonywana w celu pobrania danych. W tym przykładzie <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> zawiera symbol zastępczy dla parametru filtru, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Ponadto jest parametr filtru <xref:System.Web.UI.WebControls.ControlParameter> obiektu, który jest powiązany z <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość <xref:System.Web.UI.WebControls.DropDownList> kontroli. Ponieważ <xref:System.Web.UI.WebControls.DropDownList> kontrolkę jego <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> właściwością `true`, wszelkie zmiany w wybranych dla <xref:System.Web.UI.WebControls.DropDownList> kontrola powoduje, że strona do publikowania informacji do serwera i <xref:System.Web.UI.WebControls.GridView> sterowania, aby ponownie powiązać ze źródłem danych kontrolowanie za pomocą nowego filtru.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> Właściwość została ustawiona i <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> znajduje się w <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> trybu.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji filtru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenia w celu wykonywania operacji sprawdzania poprawności w wartości parametru filtru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację filtru. Możesz anulować <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda ustawiając <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> obiekt `true`. Zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwość jest ustawiona.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> Zdarzeń deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> zdarzenia <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są skojarzone z symbolami zastępczymi żadnych parametrów, znajdujących się w <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> ciągu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierającą zestaw parametrów skojarzonych z symbolami zastępczymi żadnych parametrów, znaleziono w <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji są skojarzone z parametrami, które są określone w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. Symbole zastępcze parametrów, które są określone w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości są dopasowywane według kolejności w obiektach parametr <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych Northwind i filtrowanie ich przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli jest stosowana w dowolnym momencie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wykonywana w celu pobrania danych. W tym przykładzie <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwość zawiera symbol zastępczy dla parametru filtru, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Ponadto jest parametr filtru <xref:System.Web.UI.WebControls.ControlParameter> obiektu, który jest powiązany z <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość <xref:System.Web.UI.WebControls.DropDownList> kontroli. Ponieważ <xref:System.Web.UI.WebControls.DropDownList> kontrolkę jego <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> właściwością `true`, wszelkie zmiany <xref:System.Web.UI.WebControls.DropDownList> zaznaczenie powoduje, że strona do publikowania informacji do serwera i <xref:System.Web.UI.WebControls.GridView> sterowania, aby ponownie powiązać do kontroli źródła danych z Nowy filtr.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Data.Common.DbProviderFactory" /> obiekt, który jest skojarzony dostawca ADO.NET, która jest identyfikowana przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> właściwości.</summary>
        <returns>A <see cref="T:System.Data.Common.DbProviderFactory" /> reprezentujący zidentyfikowanych dostawcy ADO.NET; w przeciwnym razie i wystąpienie <see cref="N:System.Data.SqlClient" />, jeśli żaden dostawca jest ustawiona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbProviderFactory> Właściwość jest używana przez <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby utworzyć prawidłowe obiekty połączenia, polecenie i parametru ADO.NET podczas interakcji z bazą danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania. Ponieważ <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> obsługuje tylko jeden widok <c>Nazwa widoku</c> jest ignorowana.</param>
        <summary>Pobiera widok źródła danych o nazwie, który jest skojarzony z kontroli źródła danych.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> o nazwie "Tabeli", która jest skojarzona z <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje widoku źródła danych tylko jeden. Podobnie jak w przypadku wszystkich obiektów widoku źródła danych, <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, który jest skojarzony z kontroli źródła danych definiuje jego możliwości, wykonuje całą pracę, należy pobrać dane z bazy danych, która wykonuje operacje, takie jak sortowanie, Wstawianie, usuwanie i aktualizowanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> jest <see langword="null" /> lub coś innego niż <c>tabeli</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę obiektów widoku, które są skojarzone z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje tylko jeden widok w jego danych źródłowych o nazwie `"Table"`. <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> Metoda zwraca kolekcję Jednoelementowy o tej nazwie w jednym widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację wstawiania przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> ciąg SQL oraz wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wiersze wstawione do podstawowej bazy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wykonaniem operacji wstawiania <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń. Może obsługiwać to zdarzenie do sprawdzenia wartości parametrów i przeprowadzić wszystkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operacji. Można wykonać operacji wstawiania <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu kompilacje <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> właściwości, a następnie wykonuje <xref:System.Data.Common.DbCommand> obiektu w podstawowej bazie danych.  
  
 Po zakończeniu tej operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń. Może obsługiwać to zdarzenie, aby sprawdzić kody błędów i wartości zwracane i wykonywać żadnego przetwarzania po.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Metoda jest przewidziana dostęp programowy do `Insert` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource> formant jest skojarzony z kontrolki powiązania danych, formant powiązany z danymi automatycznie wywołuje `Insert` metody.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Metoda deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> kontrolek, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych, a następnie <xref:System.Web.UI.WebControls.DropDownList> jest odświeżane.  
  
> [!IMPORTANT]
>  W tym przykładzie zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa i wartości są wstawiane do parametrów bez weryfikacji, który również jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  W tym przykładzie pokazano, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może nawiązać połączenia z bazowego źródła danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa kontroli, aby wstawić dane do podstawowej bazy danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do wstawiania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Reprezentuje kwerendę SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody.  
  
 Ponieważ produkty innej bazy danych używają różnych odmian programu SQL Server, składnia ciągu SQL zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, symbol zastępczy parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> to symbol zastępczy, parametru klasy, `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
 Ta właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwość nie jest przechowywana jest w stanie widoku. Ponieważ jest możliwe do zdekodowania zawartość widoku stanu na komputerze klienckim, przechowywanie poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Drugi przykład kodu pokazuje, jak pobierać dane z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu używania <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> kontroli oraz formularz do wstawianie nowych rekordów.  
  
> [!NOTE]
>  Te przykłady pokazują, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Poniższy przykład kodu pokazuje, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Można dodawać nowe rekordy, wprowadzając wartości <xref:System.Web.UI.WebControls.TextBox> kontrolek, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> odświeżeniu formantu.  
  
> [!IMPORTANT]
>  W tym przykładzie zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości są wstawiane do parametrów bez weryfikacji, który również jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak pobierać dane z programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu używania <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> kontroli oraz formularz do wstawianie nowych rekordów.  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlany na <xref:System.Web.UI.WebControls.DetailsView> kontroli. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formantów używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Po kliknięciu przycisku automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli <xref:System.Web.UI.WebControls.DetailsView> pokazuje interfejs inny użytkownik, który służy do wstawiania nowego rekordu. W przykładzie korzysta z procedury składowanej wstawiania rekordów i zwraca wartość klucza podstawowego wstawionego wiersza. Podczas wstawiania rekordów <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji z wartościami z powiązanych kolumn i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Może wywnioskować poprawnych parametrów za pomocą dowolnego <xref:System.Web.UI.WebControls.BoundField> obiektu i parametr <xref:System.Web.UI.WebControls.TemplateField> obiektu, gdy używana jest składnia powiązanie danych z dwukierunkowe ASP.NET. W tym przykładzie dodatkowy parametr zostanie dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> programu obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po wstawieniu danych do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontrolki, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> programu obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzenie, wartość klucza podstawowego wstawionego wiersza jest wyświetlane i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metoda <xref:System.Web.UI.WebControls.GridView> kontroli jest jawnie wywoływana w celu odświeżenia danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z bazy danych programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli. Ilustruje też sposób używania <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> oraz formularz do wstawianie nowych rekordów.  
  
 <xref:System.Web.UI.WebControls.GridView> Kontrolka Wyświetla zestaw danych i <xref:System.Web.UI.WebControls.DetailsView> wyświetlająca szczegóły dla konkretnego wiersza. Po kliknięciu przycisku automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli <xref:System.Web.UI.WebControls.DetailsView> pokazuje interfejs inny użytkownik, który służy do wstawiania nowego rekordu. W przykładzie korzysta z procedury składowanej wstawiania rekordów i zwraca wartość klucza podstawowego wstawionego wiersza. Nazwa procedury składowanej jest ustawiona w <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwości i ustawienia, oznaczona jako procedurę przechowywaną <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość.  
  
 Po wstawieniu danych do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontroli <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> programu obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzenie, wartość klucza podstawowego wstawionego wiersza jest wyświetlane i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metody <xref:System.Web.UI.WebControls.GridView> Kontrolka jest wywoływana jawnie odświeżania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja wstawiania została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzenie, aby sprawdzić wartości z danych wyjściowych parametrów, po zakończeniu operacji wstawiania. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu używania <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> oraz formularz do wstawianie nowych rekordów.  
  
> [!NOTE]
>  W tym przykładzie pokazano, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlany na <xref:System.Web.UI.WebControls.DetailsView> kontroli. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formantów używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Po kliknięciu przycisku automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli <xref:System.Web.UI.WebControls.DetailsView> pokazuje interfejs inny użytkownik, który służy do wstawiania nowego rekordu. W przykładzie korzysta z procedury składowanej wstawiania rekordów i zwraca wartość klucza podstawowego wstawionego wiersza. Podczas wstawiania rekordów <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji z wartościami z powiązanych kolumn i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Może wywnioskować poprawnych parametrów za pomocą dowolnego <xref:System.Web.UI.WebControls.BoundField> obiektu i parametr <xref:System.Web.UI.WebControls.TemplateField> obiektu, gdy używana jest składnia powiązanie danych z dwukierunkowe ASP.NET. W tym przykładzie dodatkowy parametr zostanie dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> programu obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po wstawieniu danych do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontrolki, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> programu obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzenie, wartość klucza podstawowego wstawionego wiersza jest wyświetlane i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metoda <xref:System.Web.UI.WebControls.GridView> kontroli jest jawnie wywoływana w celu odświeżenia danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń do wykonywania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, w celu walidacji wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację wstawiania. Połączenie z bazowego źródła danych nie jest jeszcze otwarty po wywołaniu delegata obsługi zdarzeń. W związku z tym, nie można anulować operacji bezpośrednio przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metody <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> właściwości. Można jednak anulowania operacji bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiekt `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak pobierać dane z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu używania <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> oraz formularz do wstawianie nowych rekordów.  
  
> [!NOTE]
>  W tym przykładzie pokazano, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlany na <xref:System.Web.UI.WebControls.DetailsView> kontroli. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formantów używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które zaznaczonym wierszu <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Po kliknięciu przycisku automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli <xref:System.Web.UI.WebControls.DetailsView> pokazuje interfejs inny użytkownik, który służy do wstawiania nowego rekordu. W przykładzie korzysta z procedury składowanej wstawiania rekordów i zwraca wartość klucza podstawowego wstawionego wiersza. Podczas wstawiania rekordów <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji z wartościami z powiązanych kolumn i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Może wywnioskować poprawnych parametrów za pomocą dowolnego <xref:System.Web.UI.WebControls.BoundField> obiektu i parametr <xref:System.Web.UI.WebControls.TemplateField> gdy używana jest składnia powiązanie danych z dwukierunkowe ASP.NET. W tym przykładzie dodatkowy parametr zostanie dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> programu obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po wstawieniu danych do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontrolki, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> programu obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzenie, wartość klucza podstawowego wstawionego wiersza jest wyświetlane i `DataBind` metoda <xref:System.Web.UI.WebControls.GridView> kontroli jest jawnie wywoływana w celu odświeżenia danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwość <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiekt, który jest skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwość zawiera sparametryzowanego zapytania SQL <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcja zawiera dowolne <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametr symbole zastępcze w ciągu SQL.  
  
 W zależności od dostawcy ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji zgodnie z kolejnością, które parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, kojarzy parametrów w kolekcji, dopasowując nazwy parametru z aliasem symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wstawić dane do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> kontroli. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> kontrolek, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> odświeżeniu formantu.  
  
> [!IMPORTANT]
>  W tym przykładzie zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości są wstawiane do parametrów bez weryfikacji, który również jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  W tym przykładzie pokazano, jak używać składni deklaratywnej uzyskać dostęp do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt, który reprezentuje stan <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Ładuje stan właściwości w <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontrolki, które mają zostać utrwalone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> Metoda jest używana do ładowania widoku uprzednio zapisanego stanu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu, aby zastosować do nazwy parametrów, które są przekazywane do <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> lub <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> metody.</summary>
        <value>Ciąg, który reprezentuje ciąg formatu stosowane do nazw dowolnego <paramref name="oldValues" /> parametry przekazane do <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> lub <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> metody. Wartość domyślna to "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Ciąg formatu jest stosowany tylko do kluczy podstawowych, takich jak te, które są identyfikowane przez `DataKeyNames` właściwości formant powiązany z danymi lub w obszarze usuwanie i aktualizowanie scenariuszy gdzie <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues>wartość i zestaw `oldValues` są przekazywane do odpowiedniej metody danych. W tym przypadku ciąg formatu jest stosowany do nazwy parametrów w `oldValues` kolekcji.  
  
 Dwa typowe scenariusze, w którym można zmienić <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości są następujące:  
  
-   W celu rozróżnienia starej i nowej wartości w ramach aktualizacji. Gdy <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów dla oryginalnego i nowe wartości są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji. Bez ciąg formatowania dwa parametry o takiej samej nazwie zostałyby utworzone dla każdego pola danych. Zmieniając nazwę parametru oryginalne wartości, można porównać dane do oryginalnego źródła danych do wykrywania konfliktów i porównywania wartości klucza.  
  
-   Niektórych projektantów wizualnych implementacji określonego schemat nazewnictwa dla oryginalnej wartości i kluczy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Dodaje <see cref="E:System.Web.UI.Page.LoadComplete" /> procedurę obsługi zdarzeń do <see cref="T:System.Web.UI.Page" /> kontrolkę zawierającą <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program obsługi zdarzeń, który jest dodawany przez <xref:System.Web.UI.WebControls.SqlDataSource> obiekt aktualizacji <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> wartości. Jeśli wartości są aktualizowane, <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, aby ponownie powiązać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy danych .NET Framework, która <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli używa do łączenia z bazowego źródła danych.</summary>
        <value>Nazwa dostawcy danych, <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa; w przeciwnym razie dostawca ADO.NET dla programu Microsoft SQL Server, jeśli żaden dostawca jest ustawiony. Wartość domyślna to dostawca ADO.NET dla programu Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program .NET Framework zawiera następujących dostawców danych:  
  
-   <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy jest ustawieniem domyślnym .NET Framework Data Provider for SQL Server.  
  
-   <xref:System.Data.OleDb?displayProperty=nameWithType> Dostawca jest .NET Framework Data Provider for OLE DB.  
  
-   <xref:System.Data.Odbc?displayProperty=nameWithType> Dostawca jest .NET Framework Data Provider for ODBC.  
  
-   <xref:System.Data.OracleClient?displayProperty=nameWithType> Dostawca jest .NET Framework Data Provider for Oracle.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Nigdy nie ustawiono właściwość na nazwę niezarządzanych dostawca ADO.NET, takich jak `MSDAORA`. Aby uzyskać więcej informacji, zobacz [wybranie danych przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> Aby ponownie powiązać.  
  
 Lista dostępnych dostawców jest określona w `DbProviderFactories` podsekcję `system.data` sekcji w pliku Machine.config.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy kod przedstawia sposób nawiązywania połączeń z bazą danych programu SQL Server przy użyciu domyślnego dostawcy danych .NET Framework dla programu SQL Server dla <xref:System.Web.UI.WebControls.SqlDataSource> kontroli <xref:System.Data.SqlClient?displayProperty=nameWithType>. Drugi przykład kodu pokazuje, jak nawiązać połączenie z bazą danych ODBC, za pomocą dostawcy danych .NET Framework dla ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 Poniższy przykład kodu pokazuje, jak nawiązać połączenie z bazą danych programu SQL Server, używając domyślnego dostawcę danych dla <xref:System.Web.UI.WebControls.SqlDataSource> kontroli <xref:System.Data.SqlClient?displayProperty=nameWithType>. Zawsze, gdy <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość nie jest jawnie określona, używany jest domyślny dostawca. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Właściwość jest specyficzny dla dostawcy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 Poniższy przykład kodu jest funkcjonalnie taka sama jak w poprzednim przykładzie kodu, pokazuje, jak nawiązać połączenie z bazą danych ODBC, za pomocą dostawcy danych .NET Framework dla ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Właściwość jest ustawiona na nazwę nazwę źródła danych ODBC (DSN) używanego do łączenia z bazą danych ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <returns>Obiekt, który zawiera zapisany stan <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> obiekt, który jest używany do żądania operacji na danych, poza pobieranie danych podstawowych.</param>
        <summary>Pobiera dane z bazy danych przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> ciąg SQL oraz wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Listę wierszy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Metoda jest wywoływana automatycznie podczas <xref:System.Web.UI.Control.PreRender> fazy cyklu życia strony. Jest ona wywoływana przez formanty powiązane z danymi, które zostały dołączone do <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować za pośrednictwem ich <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Metoda zwraca <xref:System.Data.DataView> obiektu, jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość. <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Metoda zwraca <xref:System.Data.IDataReader> obiektu, jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość. Zamknij <xref:System.Data.IDataReader> obiektu po zakończeniu operacji odczytu danych.  
  
 Przed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzeń. Może obsługiwać to zdarzenie, aby sprawdzić wartości parametrów i wykonywać żadnego przetwarzania przed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 Po <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Selected> zdarzeń. Może obsługiwać to zdarzenie, aby sprawdzić kody błędów i wartości zwracane i wykonywać żadnego przetwarzania po.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> i buforowanie jest włączone, <xref:System.Web.UI.WebControls.SqlDataSource> pobiera dane z obiektu i zapisuje dane w pamięci podręcznej podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji. Pamięć podręczna jest tworzony, odrzuconych lub odświeżane na podstawie zachowania buforowania, który jest określony przez kombinację <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości.  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych do weryfikacji w konfiguracjach zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwość została określona, jest obliczane wyrażenie filtru, ze wszystkimi dostarczony <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości i wynikowy filtrowanie jest stosowane do listy danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Metoda deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli. Aby wykonać operację pobierania danych <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> obiektu za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> wartości, a następnie wykonuje <xref:System.Data.Common.DbCommand> w podstawowej bazie danych.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 W poniższych przykładach pokazano, jak i programowo wywołuj <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody i ustaw wartości na podstawie wyniku zapytania. Poniższy przykład pokazuje kod deklaratywny formantów sieci Web.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 Poniższy przykład pokazuje, jak i programowo wywołuj <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody. <xref:System.Web.UI.WebControls.SqlDataSource> Formant zwraca liczbę całkowitą. Wartość liczby całkowitej służy do ustawiania tekst <xref:System.Web.UI.WebControls.Label> kontroli i określenia, czy mają być wyświetlane <xref:System.Web.UI.WebControls.HyperLink> kontroli.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Obiektu nie może nawiązać połączenia z bazowego źródła danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli używa do pobierania danych z bazy danych.</summary>
        <value>Ciąg SQL lub nazwa procedury składowanej, <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do pobierania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość reprezentuje kwerendę SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody do pobierania danych z bazy danych programu SQL Server. Jeśli gwiazdka (*) w poleceniu Select umożliwia zaznacz wszystkie kolumny, a jeśli używasz automatyczne generowanie kodu do przeprowadzenia aktualizacji lub usuń operacje, upewnij się, że żadna kolumna nie ma spacji w nazwach.  
  
 Ponieważ produkty innej bazy danych używają różnych odmian programu SQL Server, składnia ciągu SQL zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, symbol zastępczy parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> to symbol zastępczy, parametru klasy, `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość nie jest przechowywana jest w stanie widoku. Ponieważ jest możliwe do zdekodowania zawartość widoku stanu na komputerze klienckim, przechowywanie poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu podstawowego zapytania SQL w celu pobierania danych z bazy danych zgodne z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli. Drugi przykład kodu pokazuje, jak ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst na nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość można pobrać danych z bazy danych programu Microsoft SQL Server i wyświetlić ją w <xref:System.Web.UI.WebControls.DropDownList> kontroli.  
  
 W obu przykładach nie istnieje potrzeba jawnego wywoływania <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody ponieważ formanty powiązane z danymi, które są dołączone do źródła danych, kontrolować za pomocą <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwość będzie automatycznie wywoływać <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody podczas <xref:System.Web.UI.Control.PreRender> fazy.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu podstawowego zapytania SQL w celu pobierania danych z bazy danych zgodne z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst na nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość, aby pobrać dane z bazy danych programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.DropDownList> kontroli. <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być kwerendę SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwość jest zapytanie SQL lub nazwa procedury składowanej.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst na nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartości, aby można było pobierać dane z bazy danych programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.DropDownList> formant.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Selected> zdarzenie, aby sprawdzić wartości z danych wyjściowych parametrów, po zakończeniu operacji pobierania danych. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzeń do wykonywania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, w celu walidacji wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operacji wyboru. Wybierz argumenty są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwość <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiekt, który jest skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość zawiera sparametryzowanego zapytania SQL <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcja zawiera dowolne <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametr symbole zastępcze w ciągu SQL.  
  
 W zależności od dostawcy ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji zgodnie z kolejnością, które parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, kojarzy parametrów w kolekcji, dopasowując nazwy parametru z aliasem symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób pobierania danych z bazy danych Northwind w programie Microsoft SQL Server, ustawiając <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości zapytania SQL. Jest sparametryzowane zapytania SQL oraz symbol zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość jest dopasowywany do <xref:System.Web.UI.WebControls.ControlParameter> obiektu, który jest dodawany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji. <xref:System.Web.UI.WebControls.DropDownList> Kontrolować, które <xref:System.Web.UI.WebControls.ControlParameter> jest powiązana, działa jako filtr, co jest wyświetlana w <xref:System.Web.UI.WebControls.ListBox> kontroli.  
  
 Aby uzyskać informacje o innych typach parametrów do użycia, zobacz <xref:System.Web.UI.WebControls.Parameter> klasa — Przegląd.  
  
> [!NOTE]
>  Ponieważ parametr jest używany w klauzuli WHERE, użycie <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> właściwość w przykładzie kodu jest funkcjonalnie równoważne użyciu <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę parametru procedury składowanej, która jest używana do sortowania pobrane dane podczas pobierania danych odbywa się przy użyciu procedury składowanej.</summary>
        <value>Nazwa parametru procedury składowanej, używane do sortowania pobrane dane podczas pobierania danych odbywa się przy użyciu procedury składowanej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Właściwość jest oceniane tylko podczas polecenia SQL to znaczy zawartych <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> właściwości jest nazwa procedury składowanej. W takim przypadku <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> właściwość jest ustawiona, zawiera nazwę parametru, który służy do sortowania wyników procedury składowanej.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> właściwość jest ustawiona, jest on dołączony do <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zawierający rozdzielaną średnikami, która wskazuje, które baz danych i tabel na potrzeby zależności pamięci podręcznej programu Microsoft SQL Server.</summary>
        <value>Ciąg, który wskazuje, które bazy danych i tabel na potrzeby zależności pamięci podręcznej programu SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontrolka obsługuje zasady wygasania opcjonalne na podstawie <xref:System.Web.Caching.SqlCacheDependency> obiektu dla pamięci podręcznej danych (usługa musi być skonfigurowany dla serwera bazy danych).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Ciąg identyfikuje baz danych i tabel, zgodnie z tym samym formacie, który jest używany przez `@ Page` dyrektywą, w którym pierwsza część ciągu jest ciąg połączenia z bazą danych programu Microsoft SQL Server, a następnie według ogranicznika dwukropek, i na koniec nazwę tabeli bazy danych (na przykład `"connectionstring1:table1"`). Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> właściwości zależy od kilku tabel, par nazwa ciągu i tabeli połączenia są oddzielone średnikami (na przykład `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Korzystając z Personifikowanie klienta w ramach uwierzytelniania Windows firmy Microsoft, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane przez inne wywołanie do bazy danych sprawdź dany użytkownik ma dostęp do danych. Jeśli oczekujesz, że więcej niż jednego użytkownika, aby uzyskać dostęp do danych i chcesz, aby każdy pobierania danych i weryfikacji konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć zależności pamięci podręcznej programu SQL Server i ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli. W tym przykładzie baza danych jest sondowania co 120 sekund. Jeśli dane pracowników Northwind Traders tabeli zmian podczas tego czas, wszelkie dane, które są buforowane przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i wyświetlane przez <xref:System.Web.UI.WebControls.GridView> kontrolki są odświeżane przy <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować przy następnym bazy danych jest sondowania.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmian stanu do widoku, ścieżki <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontrolki zmiany mogą być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiekt dla formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> Metoda zostanie przesłonięta aby oznaczyć punkt początkowy, aby rozpocząć śledzenie i zapisywanie zmian kontrolki jako część stan widoku dla kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację aktualizacji przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> ciąg SQL oraz wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy, zaktualizowane w bazie danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Metoda jest wywoływana automatycznie <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.FormView> kontroluje podczas ogłaszania zwrotnego, jeśli dane zostały zmienione. Dla danych, które zostały zmienione w innych kontrolek <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metoda może być jawnie wywoływana na zwrot podczas <xref:System.Windows.Forms.Form.Load> zdarzeń.  
  
 Przed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń. Może obsługiwać to zdarzenie do sprawdzenia wartości parametrów i przeprowadzić wszystkie przetwarzania wstępnego przed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacji.  
  
 Po <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> metoda jest wywoływana w celu podniesienia <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzeń. Może obsługiwać to zdarzenie, aby sprawdzić kody błędów i wartości zwracane i wykonywać żadnego przetwarzania po.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Metoda deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli. Można wykonać operacji aktualizacji <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> właściwości, a następnie wykonuje <xref:System.Data.Common.DbCommand> obiektu w podstawowej bazie danych.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** przycisku. Drugi przykład kodu demonstruje sposób wyświetlania danych, które są pobierane z bazy danych programu Microsoft SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i zaktualizować rekord za pomocą <xref:System.Web.UI.WebControls.TextBox> kontroli.  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** przycisku. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Właściwość została ustawiona za pomocą sparametryzowanych instrukcji SQL, a dwa <xref:System.Web.UI.WebControls.ControlParameter> parametry są dodawane do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Gdy **przesyłania** kliknięto przycisk <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzenie jest obsługiwane w celu wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metoda jawnie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób wyświetlania danych, które są pobierane z bazy danych programu SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i zaktualizować rekord za pomocą <xref:System.Web.UI.WebControls.TextBox> kontroli. W przykładzie pokazano, jak można użyć <xref:System.Data.Common.DbTransaction> obiekt do dodania kontekst transakcji w przypadku korzystania z <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki do aktualizowania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może nawiązać połączenia z bazowego źródła danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> korzysta z kontrolki do aktualizowania danych w bazie danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do aktualizacji danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Reprezentuje kwerendę SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody.  
  
 Ponieważ produkty innej bazy danych używają różnych odmian programu SQL Server, składnia ciągu SQL zależy od bieżącego dostawcy ADO.NET używany, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Jeśli ciąg SQL jest polecenie lub zapytanie parametryczne, symbol zastępczy parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> to symbol zastępczy, parametru klasy, `'@parameterName'`. Jednakże jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru jest `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedury składowane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość nie jest przechowywana jest w stanie widoku. Ponieważ jest możliwe do zdekodowania zawartość widoku stanu na komputerze klienckim, przechowywanie poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i aktualizację danych w bazie danych programu Microsoft SQL Server przy użyciu <xref:System.Web.UI.WebControls.GridView> kontroli. Drugi przykład kodu pokazuje, jak zaktualizować dane w bazie danych ODBC za pomocą <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i aktualizację danych w bazie danych programu SQL Server przy użyciu <xref:System.Web.UI.WebControls.GridView> kontroli. <xref:System.Web.UI.WebControls.GridView> Automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji wnioskowanie parametry z <xref:System.Web.UI.WebControls.BoundField> obiektów i wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody podczas **aktualizacji** link edycji <xref:System.Web.UI.WebControls.GridView>jest zaznaczone. W tym przykładzie zawiera również pewne przetwarzanie końcowe: po rekord zostanie zaktualizowany, zostanie wysłana wiadomość e-mail powiadomień.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 Poniższy przykład kodu, który jest funkcjonalnie identyczny w poprzednim przykładzie kodu, pokazuje, jak zaktualizować dane w bazie danych ODBC za pomocą <xref:System.Web.UI.WebControls.GridView> kontroli. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Jest ustawiona na dostawcy ADO.NET dla ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>i <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość jest ustawiona na nazwę nazwę źródła danych (DSN) ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> Właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja aktualizacji została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzenie, aby sprawdzić wartości z danych wyjściowych parametrów, po zakończeniu operacji aktualizacji. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyświetlać i aktualizować dane, które są pobierane z bazy danych ODBC w <xref:System.Web.UI.WebControls.GridView> kontroli. Po pomyślnym zaktualizowaniu rekordu <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzenie jest obsługiwane przez program obsługi zdarzeń, aby wykonać krok przetwarzania końcowego, wysyłania wiadomości e-mail z powiadomieniem.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwość <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> formant, który jest skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość zawiera sparametryzowanego zapytania SQL <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcja zawiera dowolne <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametr symbole zastępcze w ciągu SQL.  
  
 Nazwy parametrów może mieć wpływ <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości, w szczególności, jeśli nazwa określa klucz podstawowy, taki jak klucz określony za pomocą `DataKeyNames` właściwości kontrolki powiązania danych lub w obszarze usuwanie i aktualizowanie scenariuszy gdzie <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość i zestaw `oldValues` są przekazywane do odpowiedniej metody danych. W tym przypadku ciąg formatu jest stosowany do nazwy parametrów w `oldValues` kolekcji.  
  
 Kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Kolekcja może być ważne, w zależności od dostawcy ADO.NET. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji zgodnie z kolejnością, które parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, kojarzy parametrów w kolekcji, dopasowując nazwy parametru z aliasem symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów przy użyciu kontrolki SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> kontroli.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** przycisku. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Została ustawiona za pomocą sparametryzowanych instrukcji języka SQL i dwa <xref:System.Web.UI.WebControls.ControlParameter> parametry są dodawane do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Gdy **przesyłania** kliknięto przycisk <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzenie jest obsługiwane w celu wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metoda jawnie.  
  
> [!IMPORTANT]
>  W tym przykładzie zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości są wstawiane do parametrów bez weryfikacji, który również jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń do wykonywania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, w celu walidacji wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację aktualizacji. Połączenie z bazowego źródła danych nie jest jeszcze otwarty po wywołaniu delegata obsługi zdarzeń. W związku z tym, bezpośrednio nie można anulować <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacja na bazie danych przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metody <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiektu. Można jednak anulowania operacji bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzenie, aby sprawdzić poprawność wartości parametrów, przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wyświetlania danych, które są pobierane z bazy danych programu Microsoft SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i zaktualizować rekord za pomocą <xref:System.Web.UI.WebControls.TextBox> kontroli. W przykładzie pokazano, jak można użyć <xref:System.Data.Common.DbTransaction> obiekt do dodania kontekst transakcji w przypadku korzystania z <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki do aktualizowania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>