<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34dff01451d4ba6258731af2ba7a9443d91cb876" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje bazy danych SQL do formantów powiązanych z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Połączenia danych](#data_connections)  
  
-   [Wykonywanie operacji na danych](#performing_data_operations)  
  
-   [Dostawca danych](#data_provider)  
  
-   [Buforowanie](#caching)  
  
-   [Dodatkowe funkcje](#additional_features)  
  
-   [Widok źródła danych](#data_source_view)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli źródła danych reprezentuje dane w relacyjnej bazie danych SQL do formantów powiązanych z danymi. Można użyć <xref:System.Web.UI.WebControls.SqlDataSource> formant w połączeniu z formantu powiązanego z danymi można pobrać dane z relacyjnej bazy danych oraz do wyświetlania, edytowania i sortować dane na stronie sieci Web z niewielkiego lub żadnego kodu.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Połączenia danych  
 Aby połączyć się z bazą danych, należy ustawić <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości prawidłowe parametry połączenia. <xref:System.Web.UI.WebControls.SqlDataSource> Może obsługiwać żadnych relacyjnej bazie danych SQL mogą być połączone z przy użyciu dostawcy programu ADO.NET, takich jak `SqlClient`, `OleDb`, `Odbc`, lub `OracleClient` dostawcy. Aby dowiedzieć się, jak zabezpieczyć parametry połączenia, zobacz [jak: bezpiecznego parametry połączenia, gdy kontrolki źródła danych Using](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Aby pobrać dane z podstawowej bazy danych, ustaw <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości zapytania SQL. Jeśli bazy danych który <xref:System.Web.UI.WebControls.SqlDataSource> jest skojarzony z obsługuje przechowywane procedury, można ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość na nazwę procedury składowanej. Można też zapytania parametrycznego zapytanie SQL, który określisz. Możesz dodać <xref:System.Web.UI.WebControls.Parameter> obiektów, które są skojarzone z zapytania parametrycznego do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji. Aby uzyskać więcej informacji na temat sparametryzowane zapytania SQL i ich składni, zobacz [przy użyciu parametrów z kontrolki źródła danych dla filtrowanie](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli pobiera dane zawsze, gdy <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana. Ta metoda zapewnia dostęp programistyczny do metody, która jest określona przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Automatycznie wywoływana jest metoda przez formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> po ich <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metoda jest wywoływana. Jeśli ustawisz <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> właściwości formantu powiązanego z danymi, formantu automatycznie tworzy powiązanie z danymi ze źródła danych, zgodnie z wymaganiami. Ustawienie `DataSourceID` właściwości jest to zalecana metoda powiązania <xref:System.Web.UI.WebControls.ObjectDataSource> formant do formantu powiązanego z danymi. Alternatywnie można użyć `DataSource` właściwości, a następnie użytkownik musi jawnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metodę formantu powiązanego z danymi. Przykłady formantów powiązanych z danymi, które można użyć <xref:System.Web.UI.WebControls.SqlDataSource> są <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, i <xref:System.Web.UI.WebControls.DropDownList>. Możesz wywołać <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody programowo w dowolnym momencie można pobrać danych z bazy danych.  
  
 W scenariuszach ASP.NET deklaratywne i programowe, można ustawić <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwości formantu powiązanego z danymi na identyfikator <xref:System.Web.UI.WebControls.SqlDataSource> formantu. Można także przypisać wystąpienia <xref:System.Web.UI.WebControls.SqlDataSource> klasy do <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> właściwości formantu powiązanego z danymi. Aby uzyskać więcej informacji na temat wiązania kontrolki powiązania danych do kontrolki źródła danych, zobacz [opcje dostępu do danych programu ASP.NET](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Wykonywanie operacji na danych  
 W zależności od możliwości produktu podstawowej bazy danych i konfiguracji wystąpienia <xref:System.Web.UI.WebControls.SqlDataSource> klasy, można wykonywać operacje danych, takich jak wstawiania, aktualizacji i usuwa. Aby wykonać te operacje na danych, ustawić tekst odpowiednie polecenie i inne skojarzone parametry operację, którą chcesz wykonać. Na przykład operacji aktualizacji, należy ustawić <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwości ciągu SQL lub nazwa procedury składowanej i wszelkie wymagane parametry, aby dodać <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Aktualizacja jest wykonywana po <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metoda jest wywoływana bezpośrednio przez kod lub automatycznie przez formant powiązany z danymi. Tego samego wzorca ogólne obowiązuje w przypadku <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operacji.  
  
 Zapytania SQL i poleceń, które są używane w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, i <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> mogą nadać parametry właściwości. To oznacza, że zapytania lub polecenia można użyć symbole zastępcze zamiast wartości literałów i powiązać symbole zastępcze aplikacji lub zmienne zdefiniowane przez użytkownika. Parametry można powiązać kwerend SQL zmiennych sesji, wartości, które są przekazywane na ciąg zapytania dla strony formularzy sieci Web, inne formanty serwera i inne wartości właściwości. Aby uzyskać więcej informacji o sposobie używania parametrów w zapytania SQL z <xref:System.Web.UI.WebControls.SqlDataSource>, zobacz [przy użyciu parametrów z kontrolki źródła danych dla filtrowanie](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) i [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  Domyślnie, jeśli jeden z parametrów jest `null` podczas wykonywania `Select` polecenia nie zostanie zwrócone dane i nie zostanie wygenerowany wyjątek. To zachowanie można zmienić, określając <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> właściwości `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Dostawca danych  
 Domyślnie <xref:System.Web.UI.WebControls.SqlDataSource> działania kontroli z dostawcy danych programu .NET Framework dla programu SQL Server, ale <xref:System.Web.UI.WebControls.SqlDataSource> Microsoft SQL nie jest specyficzne dla serwera. Możesz połączyć <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki z jakimkolwiek produktem bazy danych, dla którego jest zarządzanego dostawcy ADO.NET. W przypadku użycia z <xref:System.Data.OleDb?displayProperty=nameWithType> dostawcy, <xref:System.Web.UI.WebControls.SqlDataSource> może pracować z dowolnego zgodnego OLE DB bazy danych. W przypadku użycia z <xref:System.Data.Odbc?displayProperty=nameWithType> dostawcy, <xref:System.Web.UI.WebControls.SqlDataSource> można używać z bazy danych, w tym programu IBM DB2 i MySQL, PostgreSQL i sterownik ODBC. W przypadku użycia z <xref:System.Data.OracleClient?displayProperty=nameWithType> dostawcy, <xref:System.Web.UI.WebControls.SqlDataSource> można pracować z bazami danych Oracle 8.1.7 lub nowszym. Lista dostawców dopuszczalny jest zarejestrowany w `DbProviderFactories` sekcji pliku konfiguracji, albo w pliku Machine.config lub Web.config. Aby uzyskać więcej informacji, zobacz [Selecting danych przy użyciu formantu SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Buforowanie  
 Jeśli dane są wyświetlane na Twojej stronie za pomocą <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, można zwiększyć wydajność strony przy użyciu danych buforowanie możliwości kontroli źródła danych. Buforowanie zmniejsza obciążenie związane z przetwarzaniem na serwerach bazy danych kosztem pamięci na serwerze sieci Web; w większości przypadków jest to dobry zależność. <xref:System.Web.UI.WebControls.SqlDataSource> Automatycznie buforuje dane w przypadku <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwość jest ustawiona na liczbę sekund, które pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Można również określić <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> i opcjonalne <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> wartość.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Dodatkowe funkcje  
 <xref:System.Web.UI.WebControls.SqlDataSource> Zapewnia dodatkowe funkcje wymienione w poniższej tabeli.  
  
|Możliwość|Wymagania|  
|----------------|------------------|  
|Buforowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwości `true`i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości zgodnie z zachowanie buforowania dla pamięci podręcznej danych.|  
|Usuwanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwości na instrukcję SQL służy do usuwania danych. Ta instrukcja jest zwykle sparametryzowana.|  
|Filtrowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość. Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości do filtrowania wyrażenia używane do filtrowania danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana.|  
|Wstawianie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwości na instrukcję SQL używane do wstawiania danych. Ta instrukcja jest zwykle sparametryzowana.|  
|Stronicowania|Nie są obecnie obsługiwane przez <xref:System.Web.UI.WebControls.SqlDataSource>, jednak niektóre powiązane z danymi formanty, takie jak <xref:System.Web.UI.WebControls.GridView>, obsługę stronicowania po ustawieniu <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość.|  
|Wybieranie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości na instrukcję SQL używane do pobierania danych.|  
|Sortowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Aktualizowanie|Ustaw <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwości na instrukcję SQL używane do aktualizowania danych. Ta instrukcja jest zwykle sparametryzowana.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Widok źródła danych  
 Podobnie jak w przypadku wszystkich kontrolki źródła danych, <xref:System.Web.UI.WebControls.SqlDataSource> formant jest skojarzone z klasą widoku źródła danych. <xref:System.Web.UI.WebControls.SqlDataSource> Formant ma tylko jedną skojarzone <xref:System.Web.UI.WebControls.SqlDataSourceView>, i jest zawsze nazwane `Table`.  
  
 Nie istnieje żadne visual renderowania <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować; jest zaimplementowany jako formantu, dzięki czemu można go utworzyć deklaratywnie i, opcjonalnie, aby zezwalała na uczestniczenie w zarządzanie stanem. W związku z tym <xref:System.Web.UI.WebControls.SqlDataSource> nie obsługuje visual funkcje, takie jak te, które są udostępniane przez <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> lub <xref:System.Web.UI.DataSourceControl.SkinID%2A> właściwości.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Projekt programu Visual Studio Web lokacji z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 Ta sekcja zawiera cztery przykłady kodu:  
  
-   W pierwszym przykładzie kodu pokazano sposób wyświetlania danych z programu SQL Server w <xref:System.Web.UI.WebControls.GridView> kontrolować za pomocą składni deklaratywnej.  
  
-   Drugi przykład kodu pokazuje sposób wyświetlania danych w bazie danych ODBC w <xref:System.Web.UI.WebControls.GridView> kontrolować za pomocą składni deklaratywnej.  
  
-   W trzecim przykładzie kodu pokazano, jak wyświetlać i aktualizować dane w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
-   Czwarty przykład kodu pokazuje, jak wyświetlać i aktualizować dane w <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
    > [!NOTE]
    >  Poniższe przykłady pokazują, jak uzyskać dostęp do danych za pomocą składni deklaratywnej. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.SqlDataSource> kontroli deklaratywnie można pobrać danych z programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.SqlDataSource> kontroli deklaratywnie można pobrać danych z bazy danych zgodnej z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> formantu. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Właściwość jest nazwą dostawcy danych programu .NET Framework dla ODBC, czyli <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje wyświetlania wspólnej oraz scenariusz aktualizacji <xref:System.Web.UI.WebControls.GridView> formantu. Zgodnie z poprzednich przykładach, dane z bazy danych Northwind są wyświetlane w <xref:System.Web.UI.WebControls.GridView> formantu. Ponadto ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> określona właściwość i <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> właściwość jest ustawiona na `true`, możesz edytować i zaktualizować rekordy z żaden dodatkowy kod. <xref:System.Web.UI.WebControls.GridView> Formant automatycznie obsługuje dodawanie parametrów do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> — metoda podczas **aktualizacji** przycisk <xref:System.Web.UI.WebControls.GridView> formant zostanie kliknięty.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje wyświetlania wspólnej oraz scenariusz aktualizacji <xref:System.Web.UI.WebControls.DropDownList> i <xref:System.Web.UI.WebControls.TextBox> kontrolki. <xref:System.Web.UI.WebControls.DropDownList> Formantu nie powoduje automatycznego dodania parametrów aktualizacji do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji ani wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody, dlatego należy to zrobić. Parametry aktualizacji podano deklaratywnie i można dodać obsługi zdarzeń, aby wykonać <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacją, gdy zdarzenie jest wywoływane.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia używane do łączenia się z podstawowej bazy danych.</param>
        <param name="selectCommand">Zapytanie SQL używane do pobierania danych z bazy danych. Zapytanie SQL w przypadku ciągu sparametryzowanego SQL, może być konieczne dodanie <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekty do <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy z określonych parametrów połączenia i wybranego polecenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ produkty innej bazy danych używać różnych odmian SQL, składnia `selectCommand` zależy od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. W przypadku zapytania parametrycznego lub polecenia ciągu SQL symbolu zastępczego parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest symbol zastępczy parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Wartość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> konstruktora. Przykład jest rzadko używana w tym <xref:System.Web.UI.WebControls.SqlDataSource> formant jest używany nie na strony formularzy sieci Web, ale w implementacji obiektu warstwy środkowej jako prosty sposób dla obiekt biznesowy wchodzić w interakcje z bazy danych. W przykładzie użyto parametrów połączenia, które są przechowywane w pliku Web.config.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy danych który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa. Jeśli żaden dostawca nie jest ustawiona, <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> domyślnie używa dostawcy ADO.NET dla programu Microsoft SQL Server.</param>
        <param name="connectionString">Parametry połączenia używane do łączenia się z podstawowej bazy danych.</param>
        <param name="selectCommand">Zapytanie SQL używane do pobierania danych z bazy danych. Zapytanie SQL w przypadku ciągu sparametryzowanego SQL, może być konieczne dodanie <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekty do <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> klasy z określonych parametrów połączenia i wybranego polecenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ produkty innej bazy danych używać różnych odmian SQL, składnia `selectCommand` zależy od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez `providerName` parametru. W przypadku zapytania parametrycznego lub polecenia ciągu SQL symbolu zastępczego parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest symbol zastępczy parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, w sekundach, jaki kontroli źródła danych przechowuje dane są pobierane przez <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metody.</summary>
        <value>Liczba sekund, które <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> buforuje wyniki <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> operacji. Wartość domyślna to 0. Wartość nie może być ujemna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza liczbę sekund, że pamięć podręczna przechowuje dane przed wpisu pamięci podręcznej zostaną odrzucone. Wartość 0 wskazuje nieskończenie długo pamięci podręcznej.  
  
 Zachowanie pamięci podręcznej jest określone przez kombinację czas trwania i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.SqlDataSource> buforuje dane w pierwszej operacji pobierania danych, przechowuje go w pamięci dla co najwyżej ilość czasu, który jest określony przez <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości. Dane mogą zostać zwolnione, aby czas trwania Jeśli ilość pamięci jest wymagana. Następnie odświeżeniu pamięci podręcznej podczas następnej operacji. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartość formantu źródła danych buforuje dane w pierwszej operacji pobierania danych, ale resetuje przedział czasu posiada pamięci podręcznej dla każdej kolejnej operacji. Bufor wygasa, jeśli nic się nie czasu, która jest równa <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> wartości od momentu ostatniego <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formant może buforować dane tylko wtedy, gdy jest on <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> tryb. A <xref:System.NotSupportedException> wyjątku przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrola jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i buforowanie jest włączona.  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych i weryfikacji dla konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać danych z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> sterowania włączone buforowanie danych. <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Jest ustawiony na 20 sekund i dlatego <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość domyślnie użytkowników tej strony zostaną wyświetlone świeże dane, co 20 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zachowanie wygaśnięcia pamięci podręcznej, która w połączeniu z czasem trwania, określa zachowanie pamięci podręcznej, która korzysta z kontroli źródła danych.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 Zachowanie pamięci podręcznej jest określone przez kombinację <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> ustawienia. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> wartość <xref:System.Web.UI.WebControls.SqlDataSource> buforuje dane w pierwszej operacji pobierania danych, przechowuje go w pamięci w zakresie, w jakim czasie określonym przez <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości i odrzuca je po tym czasie wygasły. Następnie odświeżeniu pamięci podręcznej podczas następnej operacji. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartość formantu źródła danych buforuje dane w pierwszej operacji pobierania danych, ale resetuje przedział czasu posiada pamięci podręcznej dla każdej kolejnej operacji. Bufor wygasa, jeśli nic się nie czasu, która jest równa <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> wartości od momentu ostatniego <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formant może buforować dane tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> tryb. A <xref:System.NotSupportedException> wyjątku przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrola jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i buforowanie jest włączona.  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych i weryfikacji dla konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać danych z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> sterowania włączone buforowanie danych. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> wartości, użytkownicy nie będą widzieć świeże dane mimo że <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> wartość wynosi 20 sekund. Buforowane dane są odświeżane tylko wtedy, gdy nic się nie dzieje na stronie więcej niż 20 sekund od czasu ostatniego ładowania strony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zależność klucza użytkownika połączonego z wszystkie dane obiektów pamięci podręcznej, które zostały utworzone przy użyciu formantu źródła danych. Po wygaśnięciu klucz jawnie wygasły wszystkich obiektów w pamięci podręcznej.</summary>
        <value>Klucz identyfikujący wszystkich obiektów w pamięci podręcznej utworzone przez <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 Można ustawić <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> właściwość, aby utworzyć zależność między wszystkie wpisy w pamięci podręcznej, które są tworzone przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i klucz. Wszystkie wpisy w pamięci podręcznej można programowo wygasa w dowolnym momencie poprzez wygaszenie klucza.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formant może buforować dane tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> tryb. A <xref:System.NotSupportedException> wyjątku przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody, jeśli <xref:System.Web.UI.WebControls.SqlDataSource> kontrola jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość i buforowanie jest włączona.  
  
 Wpis pamięci podręcznej unikatowy jest tworzona dla każdej kombinacji <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, i <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> właściwości. Wiele <xref:System.Web.UI.WebControls.SqlDataSource> formanty można użyć tego samego wpisy w pamięci podręcznej w scenariuszach, gdzie formantów obciążenia tych samych danych z tej samej bazy danych.  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych i weryfikacji dla konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy operacja pobierania danych została anulowana podczas żadnych parametrów, który jest zawarty w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> daje w wyniku kolekcji <see langword="null" />.</summary>
        <value>
          <see langword="true" /> Jeśli operacja pobierania danych jest anulowany, gdy parametr zawarte w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji oszacowywane, aby <see langword="null" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> właściwość jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli wykonuje aktualizacje i usuwa podczas zmiany bazy danych w podstawowych wiersza danych w czasie operacji.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.ConflictOptions" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwość określa, czy parametry dla starej i nowej wartości są stosowane do `Update` metody. Na przykład, jeśli polecenie jest określona przez <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> zwraca <xref:System.Data.DataTable> obiektu z kolumnami `Name` i `Number` i <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.OverwriteChanges> wartości parametrów są tworzone dla `Name` i `Number` dla `Update` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów są tworzone dla `Name`, `Number`, `original_Name`, i `original_Number`. (Zależy od dokładnej nazwy parametrów dla oryginalnej wartości <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości.) <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli określa, czy `Update` metodę, która została określona w <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość ma parametry, które odpowiadają.  
  
 Formant współbieżności to technika, magazyny danych używanego do kontroli, jak dane odczytane i zmienić w magazynie, gdy wielu klientów są uzyskiwanie dostępu i operowanie nimi tych samych danych. Na przykład jeden klient odczytuje dane i przedstawia do użytkownika, gdy inny klient odczytuje tych samych danych, przedstawiając ją do innego użytkownika. Jeśli użytkownicy zaktualizowanie danych i przesłania go do magazynu danych, niektóre nieoczekiwany wynik mogą wystąpić, ponieważ obaj klienci mogą aktualizować różne wartości dla tych samych danych. To jest traktowany jako konflikt. Przez ustawienie <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwości <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości, z `Update` metody następnie porównać starej i nowej wartości oryginalne źródło danych do wykrywania konfliktów i obsługiwać je w razie potrzeby.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametry połączenia specyficzne dla dostawcy ADO.NET, która <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kontroli nawiązywał połączenie z podstawowej bazy danych.</summary>
        <value>Ciąg specyficzne dla dostawcy danych .NET Framework, która <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> nawiązywał połączenie z bazą danych SQL, który reprezentuje. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formantu można używać z różnymi dostawcy ADO.NET i składnia ciągu połączenia, który jest używany do nawiązania połączenia źródła danych jest specyficzna dla dostawcy.  
  
 Podczas konfigurowania <xref:System.Web.UI.WebControls.SqlDataSource> kontroli, ustaw <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> dla właściwości typu bazy danych (wartość domyślna to <xref:System.Data.SqlClient?displayProperty=nameWithType>), a <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości parametrów połączenia, które zawierają informacje wymagane do połączenia w bazie danych. Zawartość ciągu połączenia różnią się w zależności od tego, jakiego typu bazy danych podczas uzyskiwania dostępu do kontroli źródła danych. Na przykład <xref:System.Web.UI.WebControls.SqlDataSource> formant wymaga nazwy serwera, nazwy bazy danych (katalog) oraz informacje na temat uwierzytelniania użytkownika, gdy połączenie z serwerem SQL. Aby uzyskać informacje dotyczące zawartości parametry połączenia, zobacz <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwość <xref:System.Data.SqlClient.SqlConnection> klasy, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> właściwość <xref:System.Data.OracleClient.OracleConnection> klasy, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwość <xref:System.Data.OleDb.OleDbConnection> klasy, lub <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> Właściwość <xref:System.Data.Odbc.OdbcConnection> klasy.  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby ponownie powiązać.  
  
> [!IMPORTANT]
>  Informacje o zapisywaniu ciąg połączenia, zobacz [jak: Secure parametry połączenia, gdy kontrolki źródła danych Using](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak ustawić <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości do łączenia z bazą danych programu Microsoft SQL Server i wyświetlić wyniki <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości w <xref:System.Web.UI.WebControls.GridView> formantu. W drugim przykładzie kodu przedstawiono bardziej złożonych scenariuszy, których <xref:System.Web.UI.WebControls.SqlDataSource> kontroli służy do wyświetlania i aktualizacji danych w bazie danych programu Microsoft Access chroniony hasłem. W każdym przypadku `connectionStrings` elementu w pliku Web.config jest wyświetlane jako pierwsze, następuje strony ASP.NET, który zawiera <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwości do łączenia z bazą danych programu SQL Server i wyświetlić wyniki <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje scenariusza bardziej złożone niż w poprzednim przykładzie kodu gdzie <xref:System.Web.UI.WebControls.SqlDataSource> formant służy do wyświetlania i aktualizacji danych w bazie danych programu Access chroniony hasłem. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource> jest używany w przypadku dostępu do <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość jest ustawiona na <xref:System.Data.OleDb> dostawcy i <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość jest ustawiona na ciąg połączenia dla udostępnionych UNC dostępu do bazy danych. A <xref:System.Web.UI.WebControls.GridView> kontrolka ma wyświetlać zamówienia z daty wydania. Można aktualizować kolejności sprawdzania odpowiednie pole wyboru, a następnie klikając polecenie **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie obejmuje hasła w postaci zwykłego tekstu tylko w celach ilustracyjnych. W aplikacji produkcyjnej parametry połączenia, które obejmują hasła powinny być szyfrowane. Aby uzyskać więcej informacji, zobacz [ochrony informacji o połączeniu](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku źródła danych.</param>
        <summary>Tworzy obiekt widoku źródła danych, który jest skojarzony z kontroli źródła danych.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> skojarzony z <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Web.UI.WebControls.SqlDataSource> klasy można zastąpić <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> metodę, aby powrócić do silnie typizowanej obiekty widoku źródła danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb pobierania danych, które <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formant używa można pobrać danych.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikuje tryb pobierania danych jak <xref:System.Web.UI.WebControls.SqlDataSource> kontroli pobiera dane z bazy danych.  
  
 Gdy <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartości, dane są ładowane do <xref:System.Data.DataSet> obiekt i przechowywane w pamięci na serwerze. Dzięki temu scenariuszy, w którym interfejs użytkownika formanty, takie jak <xref:System.Web.UI.WebControls.GridView>, oferują sortowanie, filtrowanie i możliwości stronicowania.  
  
 Gdy <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartości, dane są pobierane przez <xref:System.Data.IDataReader> obiektu, który jest kursor tylko do przodu, tylko do odczytu. Określony typ <xref:System.Data.IDataReader> obiektu zależy od dostawcy danych NET który <xref:System.Web.UI.WebControls.SqlDataSource> zastosowań, które są identyfikowane przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. Domyślnie <xref:System.Web.UI.WebControls.SqlDataSource> kontroli używa dostawcy programu Microsoft SQL Server <xref:System.Data.SqlClient?displayProperty=nameWithType>, i czytnik danych jest <xref:System.Data.SqlClient.SqlDataReader> obiektu.  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> Aby ponownie powiązać.  
  
 Wartość <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> formant <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość dla scenariusza z <xref:System.Web.UI.WebControls.ListBox> formantu, który wymaga sortowania nie, stronicowania, ani filtrowania.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> Właściwość nie jest jedną z wartości zdefiniowanych w <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację usuwania za pomocą <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> ciągu SQL i wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy usunięte z bazy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wykonaniem operacji usuwania <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzeń. Może obsłużyć tego zdarzenia do sprawdzenia wartości parametrów i wykonywanie żadnych przetwarzania wstępnego przed operację usuwania.  
  
 Po zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> zdarzeń. To zdarzenie, sprawdź, czy wszystkie wartości zwracanych i kody błędów i wykonywanie żadnych przetwarzania końcowego może obsłużyć.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Dostęp programistyczny umożliwiający przewidziana metoda `Delete` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource> formant jest powiązany z formantu powiązanego z danymi, automatycznie wywołuje formantu powiązanego z danymi **usunąć** metody.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Metody deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu. Do wykonania tej operacji <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> wartości, a następnie wykonuje <xref:System.Data.Common.DbCommand> w podstawowej bazie danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu do usunięcia z bazy danych Northwind zamówienia. Początkowo dane są pobierane z tabeli zamówienia i wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Musisz jawnie zadeklarować <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> właściwości i wywołanie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody, korzystając z formantów powiązanych z danymi, takich jak <xref:System.Web.UI.WebControls.DropDownList> (w odróżnieniu od innych kontrolek, takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>, który automatycznie wypełnić Parametry i wywołanie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody w kontroli źródła danych). W tym przykładzie <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzeń jest delegowane do prywatnego `OnDelete` program obsługi zdarzeń, które jawnie wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może ustanowić połączenia z podstawowym źródłem danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> w formancie używane do usuwania danych z bazy danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do usunięcia danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Reprezentuje zapytanie SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody.  
  
 Ponieważ produkty z inną bazą danych korzystają z różnych odmian programu SQL Server, składnia ciągu SQL jest zależny od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. W przypadku zapytania parametrycznego lub polecenia ciągu SQL składnia parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest składnia parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Właściwości może być ciągiem SQL lub nazwa procedury składowanej, jeśli bazy danych obsługuje procedur składowanych.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwości nie są przechowywane w widoku stanu. Ponieważ istnieje możliwość dekodowania zawartość widoku stanu na komputerze klienckim, przechowywania poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekst, aby usunąć zamówienie z tabeli zamówienia bazy danych Northwind. Dane są pobierane z tabeli zamówienia i wyświetlane w <xref:System.Web.UI.WebControls.GridView> formantu. <xref:System.Web.UI.WebControls.GridView> Renderuje **usunąć** przycisk automatycznie po <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> właściwość jest ustawiona na `true`. Ponadto, jeśli **usunąć** kliknięciu przycisku <xref:System.Web.UI.WebControls.GridView> formant automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcji i wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> — metoda. Na koniec, ponieważ ten przykład kodu usuwa dane, program obsługi zdarzeń jest dodawana próbuje utworzyć kopię zapasową bazy danych na dysku przed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja została wykonana.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wykonaniu operacji usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> zdarzeń do sprawdzenia wartości output parametrów po wykonaniu operacji usuwania. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwość z <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiektu, z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> właściwość zawiera sparametryzowane zapytania SQL, <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcji zawiera którykolwiek <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametru symbole zastępcze w ciągu SQL.  
  
> [!NOTE]
>  Upewnij się, że nie <xref:System.Web.UI.WebControls.BoundField> formantów w formancie powiązane z danymi, które można powiązać <xref:System.Web.UI.WebControls.SqlDataSource> kontroli mają nazwy, spełniających wszystkie nazwy parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> kolekcji. Parametry, które mają taką samą nazwę jak powiązane pola są wykluczane z polecenie SQL, a komunikat o błędzie "nie został podany parametr" może spowodować.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów są tworzone dla starej i nowej wartości danych. Parametrów starych wartości są nazywane zgodnie z <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości.  
  
 W zależności od dostawcy programu ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji w kolejności, w której parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować, kojarzy parametrów w kolekcji przez pasującego do nazwy parametru z symbolem zastępczym w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> tekstu do usunięcia z bazy danych Northwind zamówienia. Początkowo dane są pobierane z tabeli zamówienia i wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Musisz jawnie zadeklarować <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> właściwości i wywołanie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody, korzystając z formantów powiązanych z danymi, takich jak <xref:System.Web.UI.WebControls.DropDownList> (w przeciwieństwie do innych kontrolek takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>, który automatycznie wypełnić parametry i wywołanie <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> w kontroli źródła danych). W tym przykładzie <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzeń jest delegowane do prywatnego `OnDelete` program obsługi zdarzeń, które jawnie wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> metody <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji delete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzeń w celu wykonania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację usuwania.  
  
 Połączenia źródła danych nie jest jeszcze otwarty, gdy jest wywoływana delegata obsługi zdarzeń. W związku z tym nie można anulować operacji bezpośrednio przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metoda <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiektu. Można jednak anulować operację bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do obiektu `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> zdarzenie, które jest wywoływane przed wykonaniem <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja jest wykonywana. Ponieważ w tym przykładzie powoduje usunięcie danych z bazy danych Northwind <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> dodaniu obsługi próbuje utworzyć kopię zapasową bazy danych na dysku przed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operacja została wykonana.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu jest włączone buforowanie danych.</summary>
        <value>
          <see langword="true" /> Jeśli do kontroli źródła danych; jest włączone buforowanie danych w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z pamięci podręcznej, a nie z bazy danych. Po wygaśnięciu pamięci podręcznej <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda pobiera dane z bazy danych, a następnie ponownie buforuje dane.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Formant automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> właściwości ustawiono wartość większą niż 0, co oznacza, że pamięć podręczna przechowuje dane przed pobraniem czas w sekundach Nowy zestaw.  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych i weryfikacji dla konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać danych z bazy danych Northwind w programie Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> sterowania włączone buforowanie danych. <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> Właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> jest ustawiony na 20 sekund. Ponieważ <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> ma ustawioną wartość właściwości <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> pola domyślnie użytkowników tej strony zostaną wyświetlone świeże dane, co 20 sekund.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> Właściwość jest ustawiona na <see langword="true" /> gdy buforowanie nie jest obsługiwane przez <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie filtrowania, które są stosowane po <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metoda jest wywoływana.</summary>
        <value>Ciąg, który reprezentuje wyrażenie filtrowania stosowane, gdy dane są pobierane przy użyciu <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Wartość właściwości jest wyrażenie ciągu formatu (ciąg, który jest przetwarzany przez <xref:System.String.Format%2A?displayProperty=nameWithType> metody) używające wartości w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> kolekcji parametrów podstawiania uwzględniona w parametrach. Składnia wyrażenia filtru jest taka sama składnia jest akceptowane przez <xref:System.Data.DataView.RowFilter%2A> właściwości, ponieważ wyrażenie filtru jest stosowany do <xref:System.Data.DataView.RowFilter%2A> właściwość <xref:System.Data.DataView> obiekt, który jest zwracany wykonywanie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> — metoda. Aby uzyskać więcej informacji, zobacz <xref:System.Data.DataColumn.Expression%2A>.  
  
 Jeśli dodasz parametry <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji, mogą również obejmować symbole zastępcze formatu ciągu (na przykład `"{0}")` w wyrażeniu do zastąpienia dla wartości parametrów. Symbole zastępcze są zamieniane zgodnie z indeksem parametru w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Jeśli obiekt w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcja jest `null`, obiekt zostanie zastąpiony przez ciąg pusty.  
  
 Można uwzględnić parametry w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. Jeśli parametr jest typu ciąg lub znak, ujmij parametru w pojedynczy cudzysłów. Znaki cudzysłowu nie są wymagane, jeśli parametr jest typu liczbowego. <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Kolekcja zawiera parametry, które są oceniane pod kątem symbole zastępcze, które znajdują się w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje filtrowania danych tylko wtedy, gdy w <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> tryb.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można pobrać danych z bazy danych Northwind i filtrować za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> ciągu i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwość jest stosowana w dowolnym momencie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody jest wykonywany w celu pobierania danych. W tym przykładzie <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> zawiera symbol zastępczy dla parametru filtru, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Ponadto parametr filtru jest <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest powiązany z <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość <xref:System.Web.UI.WebControls.DropDownList> formantu. Ponieważ <xref:System.Web.UI.WebControls.DropDownList> formant ma jego <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> ustawioną właściwość `true`, zmiany w zaznaczeniu dla <xref:System.Web.UI.WebControls.DropDownList> formant powoduje strony publikowania informacji do serwera i <xref:System.Web.UI.WebControls.GridView> formantu, aby ponownie powiązać ze źródłem danych sterować za pomocą nowego filtru.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> Właściwość została ustawiona i <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> w <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> tryb.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed operacją filtru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń w celu wykonania operacji sprawdzania poprawności filtru wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację filtru. Możesz anulować <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody ustawiając <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> do obiektu `true`. Zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwość jest ustawiona.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> Zdarzeń deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> zdarzenie <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są skojarzone z żadnych symbole zastępcze parametru, które znajdują się w <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> ciągu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierającą zestaw parametrów skojarzonych z dowolnego zastępcze parametru w <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji skojarzonych z żadnych parametrów, które są określone w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. Symbole zastępcze parametrów, które są określone w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości są dopasowywane według kolejności w obiektach parametru <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji po <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metoda jest wywoływana.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można pobrać danych z bazy danych Northwind i filtrować za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli jest stosowana w dowolnym momencie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody jest wykonywany w celu pobierania danych. W tym przykładzie <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwość zawiera symbol zastępczy dla parametru filtru, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji. Ponadto parametr filtru jest <xref:System.Web.UI.WebControls.ControlParameter> obiekt, który jest powiązany z <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość <xref:System.Web.UI.WebControls.DropDownList> formantu. Ponieważ <xref:System.Web.UI.WebControls.DropDownList> formant ma jego <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> ustawioną właściwość `true`, wszelkie zmiany <xref:System.Web.UI.WebControls.DropDownList> zaznaczenie powoduje, że strona publikowania informacji do serwera i <xref:System.Web.UI.WebControls.GridView> formantu, aby ponownie powiązać do kontroli źródła danych z Nowy filtr.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Data.Common.DbProviderFactory" /> obiekt, który jest skojarzony z dostawcy ADO.NET, który jest identyfikowany przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> właściwości.</summary>
        <returns>A <see cref="T:System.Data.Common.DbProviderFactory" /> reprezentujący zidentyfikowanych dostawcy ADO.NET; w przeciwnym razie i wystąpienia <see cref="N:System.Data.SqlClient" />, jeśli żaden dostawca nie jest ustawiona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbProviderFactory> Jest używana przez <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby utworzyć prawidłowe połączenie, polecenia i parametru obiekty ADO.NET podczas interakcji z bazą danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania. Ponieważ <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> obsługuje tylko jeden widok <c>viewName</c> jest ignorowana.</param>
        <summary>Pobiera widok źródła danych o nazwie skojarzony z kontroli źródła danych.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> o nazwie "Tabela", z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje widoku źródła danych tylko jeden. Podobnie jak w przypadku wszystkich obiektów widoku źródła danych, <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt, który jest skojarzony z kontroli źródła danych definiuje jej możliwości, wykonuje wszystkie wykonywane jest niezbędne do pobrania danych z bazy danych, która wykonuje operacje, takie jak sortowania, Wstawianie, usuwanie i aktualizowanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> jest <see langword="null" /> lub coś innego niż <c>tabeli</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę wyświetlanie obiektów, które są skojarzone z <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje tylko jeden widok na jej odpowiednie dane o nazwie `"Table"`. <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> Metoda zwraca kolekcję jeden element o tej nazwie jeden widok.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację wstawiania przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> ciągu SQL i wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy wstawionych do podstawowej bazy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wykonaniem operacji insert <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń. To zdarzenie do sprawdzenia wartości parametrów i wykonywanie żadnych przetwarzania wstępnego przed może obsłużyć <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operacji. Próba wykonania operacji insert, <xref:System.Web.UI.WebControls.SqlDataSourceView> obiekt kompilacji <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> właściwości, a następnie wykonuje <xref:System.Data.Common.DbCommand> obiektu w podstawowej bazie danych.  
  
 Po zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń. To zdarzenie, sprawdź, czy wszystkie wartości zwracanych i kody błędów i wykonywanie żadnych przetwarzania końcowego może obsłużyć.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Dostęp programistyczny umożliwiający przewidziana metoda `Insert` metody. Jeśli <xref:System.Web.UI.WebControls.SqlDataSource> formant jest powiązany z formantu powiązanego z danymi, automatycznie wywołuje formantu powiązanego z danymi `Insert` metody.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Metody deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wstawianie danych do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> formantów, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych, a następnie <xref:System.Web.UI.WebControls.DropDownList> zostanie odświeżony.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa i wartości zostaną wstawione do parametrów bez weryfikacji, który jest także potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  Ten przykład przedstawia sposób użycia składni deklaratywnej dla dostępu do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może ustanowić połączenia z podstawowym źródłem danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> w formancie używane do wstawiania danych do podstawowej bazy danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używane do wstawiania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Reprezentuje zapytanie SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody.  
  
 Ponieważ produkty z inną bazą danych korzystają z różnych odmian programu SQL Server, składnia ciągu SQL jest zależny od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. W przypadku zapytania parametrycznego lub polecenia ciągu SQL symbolu zastępczego parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest symbol zastępczy parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
 Ta właściwość deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> skojarzony z <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwość nie jest przechowywana jest stan widoku. Ponieważ istnieje możliwość dekodowania zawartość widoku stanu na komputerze klienckim, przechowywania poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak wstawianie danych do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. W drugim przykładzie kodu pokazano, jak pobrać danych z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu użycia <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza do <xref:System.Web.UI.WebControls.GridView> kontroli i jako formularz, aby wstawić nowe rekordy.  
  
> [!NOTE]
>  Poniższe przykłady pokazują, jak uzyskać dostęp do danych za pomocą składni deklaratywnej. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 W poniższym przykładzie pokazano, jak wstawianie danych do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Można dodawać nowych rekordów, wprowadzając wartości do <xref:System.Web.UI.WebControls.TextBox> formantów, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> formantu zostanie odświeżony.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, która jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości zostaną wstawione do parametrów bez weryfikacji, który jest także potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak można pobrać danych z programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu użycia <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> kontroli i jako formularz, aby wstawić nowe rekordy.  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlany również w <xref:System.Web.UI.WebControls.DetailsView> formantu. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formanty używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Jeśli klikniesz przycisk automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.DetailsView> udostępnia interfejsem inny użytkownik, który służy do wstawiania nowego rekordu. Przykład używa procedury składowanej do wstawiania rekordów i zwraca klucz podstawowy wstawionego wiersza. Po wstawieniu rekordu, <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji wartościami z wywołań i powiązane kolumny <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Można wywnioskować prawidłowe parametry w dowolnym <xref:System.Web.UI.WebControls.BoundField> obiekt i parametr <xref:System.Web.UI.WebControls.TemplateField> obiektu, gdy jest używana składnia wiązania danych dwukierunkowe ASP.NET. W tym przykładzie dodatkowy parametr został dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po dane są wstawiane do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> program obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń, wartość klucza podstawowego wstawionego wiersza jest wyświetlany i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metody <xref:System.Web.UI.WebControls.GridView> kontroli jest wywoływane jawnie odświeżania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można pobrać danych z bazy danych programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> formantu. Także przedstawiono sposób użycia <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> i jako formularz, aby wstawić nowe rekordy.  
  
 <xref:System.Web.UI.WebControls.GridView> Kontrolka ma wyświetlać zestawu danych i <xref:System.Web.UI.WebControls.DetailsView> są wyświetlane szczegóły dotyczące określonego wiersza. Jeśli klikniesz przycisk automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.DetailsView> udostępnia interfejsem inny użytkownik, który służy do wstawiania nowego rekordu. Przykład używa procedury składowanej do wstawiania rekordów i zwraca klucz podstawowy wstawionego wiersza. Nazwa procedury składowanej jest ustawiona w <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwości i ustawienia, oznaczona jako procedura składowana <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość.  
  
 Po dane są wstawiane do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> program obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń, wartość klucza podstawowego wstawionego wiersza jest wyświetlana i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metody <xref:System.Web.UI.WebControls.GridView> formant jest wywoływane jawnie odświeżania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wykonaniu operacji wstawiania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń do sprawdzenia wartości output parametrów po wykonaniu operacji wstawiania. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać danych z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu użycia <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> i jako formularz, aby wstawić nowe rekordy.  
  
> [!NOTE]
>  Ten przykład przedstawia sposób użycia składni deklaratywnej dla dostępu do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlany również w <xref:System.Web.UI.WebControls.DetailsView> formantu. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formanty używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Jeśli klikniesz przycisk automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.DetailsView> udostępnia interfejsem inny użytkownik, który służy do wstawiania nowego rekordu. Przykład używa procedury składowanej do wstawiania rekordów i zwraca klucz podstawowy wstawionego wiersza. Po wstawieniu rekordu, <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji wartościami z wywołań i powiązane kolumny <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Można wywnioskować prawidłowe parametry w dowolnym <xref:System.Web.UI.WebControls.BoundField> obiekt i parametr <xref:System.Web.UI.WebControls.TemplateField> obiektu, gdy jest używana składnia wiązania danych dwukierunkowe ASP.NET. W tym przykładzie dodatkowy parametr został dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po dane są wstawiane do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> program obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń, wartość klucza podstawowego wstawionego wiersza jest wyświetlany i <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> metody <xref:System.Web.UI.WebControls.GridView> kontroli jest wywoływane jawnie odświeżania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji insert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń w celu wykonania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację wstawiania. Połączenia źródła danych nie jest jeszcze otwarty, gdy jest wywoływana delegata obsługi zdarzeń. W związku z tym nie można anulować operacji bezpośrednio przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metoda <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> właściwości. Można jednak anulować operację bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do obiektu `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać danych z programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> kontroli i sposobu użycia <xref:System.Web.UI.WebControls.DetailsView> sterowania, aby wyświetlić szczegóły wybranego wiersza w <xref:System.Web.UI.WebControls.GridView> i jako formularz, aby wstawić nowe rekordy.  
  
> [!NOTE]
>  Ten przykład przedstawia sposób użycia składni deklaratywnej dla dostępu do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Początkowo dane są wyświetlane w <xref:System.Web.UI.WebControls.GridView> kontroli i wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlany również w <xref:System.Web.UI.WebControls.DetailsView> formantu. <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView> formanty używanie różnych danych kontroli źródła; ten, który jest skojarzony z <xref:System.Web.UI.WebControls.DetailsView> ma <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości, które zapewnia, które wybranego wiersza <xref:System.Web.UI.WebControls.GridView> jest wyświetlane.  
  
 Jeśli klikniesz przycisk automatycznie generowanych **Wstaw** przycisku <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.DetailsView> udostępnia interfejsem inny użytkownik, który służy do wstawiania nowego rekordu. Przykład używa procedury składowanej do wstawiania rekordów i zwraca klucz podstawowy wstawionego wiersza. Po wstawieniu rekordu, <xref:System.Web.UI.WebControls.DetailsView> automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji wartościami z wywołań i powiązane kolumny <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> metody. <xref:System.Web.UI.WebControls.DetailsView> Można wywnioskować prawidłowe parametry w dowolnym <xref:System.Web.UI.WebControls.BoundField> obiekt i parametr <xref:System.Web.UI.WebControls.TemplateField> stosowania dwukierunkowe składnia wiązania danych ASP.NET. W tym przykładzie dodatkowy parametr został dodany w <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> obsługi zdarzeń do obsługi klucza podstawowego, który jest zwracany przez procedurę składowaną.  
  
 Na koniec po dane są wstawiane do bazy danych przez <xref:System.Web.UI.WebControls.DetailsView> kontroli, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> program obsługi zdarzeń jest wywoływana w celu obsługi <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> zdarzeń, wartość klucza podstawowego wstawionego wiersza jest wyświetlany i `DataBind` metody <xref:System.Web.UI.WebControls.GridView> kontroli jest wywoływane jawnie odświeżania danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwość z <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiektu, z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> właściwość zawiera sparametryzowane zapytania SQL, <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> kolekcji zawiera którykolwiek <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametru symbole zastępcze w ciągu SQL.  
  
 W zależności od dostawcy programu ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji w kolejności parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować, kojarzy parametrów w kolekcji przez pasującą do nazwy parametru z alias symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wstawianie danych do bazy danych przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i proste strony formularzy sieci Web. Bieżące dane w tabeli danych są wyświetlane w <xref:System.Web.UI.WebControls.DropDownList> formantu. Można dodawać nowe rekordy, wprowadzając wartości w <xref:System.Web.UI.WebControls.TextBox> formantów, a następnie klikając **Wstaw** przycisku. Gdy **Wstaw** przycisku, określone wartości są wstawiane do bazy danych i <xref:System.Web.UI.WebControls.DropDownList> formantu zostanie odświeżony.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, która jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości zostaną wstawione do parametrów bez weryfikacji, który jest także potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  Ten przykład przedstawia sposób użycia składni deklaratywnej dla dostępu do danych. Aby uzyskać informacje o tym, jak uzyskać dostęp do danych przy użyciu kodu zamiast znaczników, zobacz [uzyskiwanie dostępu do danych w programie Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt reprezentujący stan <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Ładuje stan właściwości w <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formant, który musi być utrwalona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> Metoda jest używana do ładowania widoku uprzednio zapisanego stanu <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu, aby zastosować do nazwy parametrów, które są przekazywane do <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> lub <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> metody.</summary>
        <value>Ciąg reprezentujący ciąg formatu stosowany do nazwy wszelkich <paramref name="oldValues" /> parametry przekazywane do <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> lub <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> metody. Wartość domyślna to "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Ciąg formatu jest stosowane tylko do kluczy podstawowych, takich jak te, które są identyfikowane przez `DataKeyNames` właściwości formant powiązany z danymi lub usuń i scenariuszy aktualizacji gdzie <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues>wartość i zestaw `oldValues` są przekazywane do odpowiedniej metody danych. W takim przypadku ciąg formatu jest stosowane do nazwy parametrów w `oldValues` kolekcji.  
  
 Dwie typowe scenariusze, w którym można zmienić <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości są następujące:  
  
-   W celu rozróżnienia starej i nowej wartości w ramach aktualizacji. Gdy <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartości parametrów dla oryginalnego i nowe wartości są dodawane do <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> kolekcji. Bez formatowania ciągu dwa parametry o takiej samej nazwie zostałyby utworzone dla każdego pola danych. Zmieniając nazwę parametru oryginalne wartości, możesz porównać dane do oryginalnego źródła danych do wykrywania konfliktów i porównywania wartości klucza.  
  
-   Niektóre wizualnych projektantów implementować schemat nazewnictwa określonego dla oryginalnej wartości i kluczy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Dodaje <see cref="E:System.Web.UI.Page.LoadComplete" /> program obsługi zdarzeń do <see cref="T:System.Web.UI.Page" /> formant, który zawiera <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program obsługi zdarzeń, który jest dodawany przez <xref:System.Web.UI.WebControls.SqlDataSource> obiekt aktualizacje <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> wartości. Jeśli wartości zostaną zaktualizowane, <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby ponownie powiązać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy danych programu .NET Framework, która <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> w formancie używane do nawiązania połączenia źródła danych.</summary>
        <value>Nazwa dostawcy danych który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa; w przeciwnym razie dostawcy ADO.NET dla programu Microsoft SQL Server, jeśli żaden dostawca nie jest ustawiona. Wartość domyślna to dostawcy ADO.NET dla programu Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework zawierają następujących dostawców danych:  
  
-   <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawca jest domyślnego dostawcy danych .NET Framework dla programu SQL Server.  
  
-   <xref:System.Data.OleDb?displayProperty=nameWithType> Dostawca jest .NET Framework Data Provider for OLE DB.  
  
-   <xref:System.Data.Odbc?displayProperty=nameWithType> Dostawca jest dostawcy danych programu .NET Framework dla ODBC.  
  
-   <xref:System.Data.OracleClient?displayProperty=nameWithType> Dostawca jest .NET Framework Data Provider for Oracle.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Nigdy nie ustawiono właściwości nazwy niezarządzane dostawcy ADO.NET, takich jak `MSDAORA`. Aby uzyskać więcej informacji, zobacz [Selecting danych przy użyciu formantu SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 Jeśli zmienisz <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest zgłaszane, powodując wszystkie formanty, które są powiązane z <xref:System.Web.UI.WebControls.SqlDataSource> Aby ponownie powiązać.  
  
 Lista dostępnych dostawców jest określona w `DbProviderFactories` podsekcji z `system.data` sekcji w pliku Machine.config.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy kod przedstawia sposób nawiązywania połączenia z bazą danych programu SQL Server przy użyciu domyślnego dostawcy danych .NET Framework dla programu SQL Server dla <xref:System.Web.UI.WebControls.SqlDataSource> formantu <xref:System.Data.SqlClient?displayProperty=nameWithType>. Drugi przykład kodu pokazuje sposób nawiązywania połączenia z bazą danych ODBC, za pomocą dostawcy .NET Framework Data Provider for ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 Poniższy przykład kodu pokazuje sposób nawiązywania połączenia z bazą danych programu SQL Server przy użyciu domyślnego dostawcy danych dla <xref:System.Web.UI.WebControls.SqlDataSource> formantu <xref:System.Data.SqlClient?displayProperty=nameWithType>. Zawsze, gdy <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwość nie jest jawnie ustawiona, domyślny dostawca jest używany. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Właściwość jest specyficznych dla dostawcy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 Poniższy przykład kodu, który jest funkcjonalnie taki sam jak w poprzednim przykładzie kodu, przedstawiono sposób nawiązywania połączenia z bazą danych ODBC, za pomocą dostawcy .NET Framework Data Provider for ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Właściwość jest ustawiona na nazwę nazwę źródła danych ODBC (DSN) używanego do łączenia z bazą danych ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <returns>Obiekt zawierający zapisany stan <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> obiekt, który jest używany do żądania operacji na danych poza pobierania danych podstawowych.</param>
        <summary>Pobiera dane z bazy danych przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> ciągu SQL i wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Lista wierszy danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Metoda automatycznie jest wywoływana podczas <xref:System.Web.UI.Control.PreRender> fazy cyklu życia strony. Jest ona wywoływana przez formanty powiązane z danymi, które zostały dołączone do <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować za pośrednictwem ich <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Metoda zwraca <xref:System.Data.DataView> obiekt zostanie <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wartość. <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Metoda zwraca <xref:System.Data.IDataReader> obiekt zostanie <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> wartość. Zamknij <xref:System.Data.IDataReader> obiekt po zakończeniu odczytywania danych.  
  
 Przed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzeń. To zdarzenie zbadać wartości parametrów i przetwarzania przed może obsłużyć <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji.  
  
 Po <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Selected> zdarzeń. To zdarzenie, sprawdź, czy wszystkie wartości zwracanych i kody błędów i wykonywanie żadnych przetwarzania końcowego może obsłużyć.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> i buforowanie jest włączone, <xref:System.Web.UI.WebControls.SqlDataSource> obiekt pobiera dane z i zapisuje dane w pamięci podręcznej podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operacji. Pamięć podręczna jest tworzony, odrzuconych lub odświeżyć na podstawie zachowania buforowania, określonym przez kombinację <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> właściwości.  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych należy zweryfikować przez konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> określono właściwość, wyrażenie filtru jest obliczane ze wszystkimi dostarczony <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości i wynikowy filtru jest stosowane do wykaz danych podczas <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operacji.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Metody deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu. Aby wykonać operację pobierania danych <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> obiektu za pomocą <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> wartości, a następnie wykonuje <xref:System.Data.Common.DbCommand> w podstawowej bazie danych.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższe przykłady pokazują, jak programowo wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> — metoda i ustawianie wartości na podstawie wyniku zapytania. Poniższy przykład przedstawia kod deklaratywne formantów sieci Web.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 Poniższy przykład przedstawia sposób programowo wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody. <xref:System.Web.UI.WebControls.SqlDataSource> Kontroli zwraca liczbę całkowitą. Aby ustawić tekst zostanie użyta wartość liczby całkowitej <xref:System.Web.UI.WebControls.Label> kontroli i ustalić, czy mają być wyświetlane <xref:System.Web.UI.WebControls.HyperLink> formantu.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Obiektu nie może ustanowić połączenia z podstawowym źródłem danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> w formancie używane do pobierania danych z bazy danych.</summary>
        <value>Ciąg SQL lub nazwa procedury składowanej który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do pobierania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość reprezentuje zapytanie SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody do pobierania danych z bazy danych programu SQL Server. Użyj gwiazdki (*) w poleceniu Select, aby wybrać wszystkie kolumny i użycie automatyczne generowanie kodu do aktualizowania lub usuwania operacje, upewnij się, że żadne kolumny ma spacje w nazwach.  
  
 Ponieważ produkty z inną bazą danych korzystają z różnych odmian programu SQL Server, składnia ciągu SQL jest zależny od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. W przypadku zapytania parametrycznego lub polecenia ciągu SQL symbolu zastępczego parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest symbol zastępczy parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość nie jest przechowywana jest stan widoku. Ponieważ istnieje możliwość dekodowania zawartość widoku stanu na komputerze klienckim, przechowywania poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu podstawowego zapytania SQL w celu pobierania danych z bazy danych zgodnej z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> formantu. W drugim przykładzie kodu pokazano, jak ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst, który ma nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość można pobrać danych z bazy danych programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.DropDownList> formantu.  
  
 W obu przykładach nie jest konieczne do jawnie wywołać <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody ponieważ kontrolować formantów powiązanych z danymi, które są dołączone do źródła danych za pośrednictwem <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> automatycznie wywoła właściwości <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> metody podczas <xref:System.Web.UI.Control.PreRender> fazy.  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekstu podstawowego zapytania SQL w celu pobierania danych z bazy danych zgodnej z ODBC i wyświetl ją w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst, który ma nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość do pobierania danych z bazy danych programu SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.DropDownList> formantu. <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Właściwość może być zapytanie SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwości to zapytanie SQL lub nazwa procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> tekst, który ma nazwę procedury składowanej i <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> właściwości <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> wartość, aby pobrać dane z bazy danych programu Microsoft SQL Server i wyświetl ją w <xref:System.Web.UI.WebControls.DropDownList> formant.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Selected> zdarzeń do sprawdzenia wartości output parametrów po wykonaniu operacji pobierania danych. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji pobierania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzeń w celu wykonania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant sprawdza operacji select. Wybierz argumenty są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwość z <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> obiektu, z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwość zawiera sparametryzowane zapytania SQL, <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji zawiera którykolwiek <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametru symbole zastępcze w ciągu SQL.  
  
 W zależności od dostawcy programu ADO.NET, kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja może być ważne. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji w kolejności parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować, kojarzy parametrów w kolekcji przez pasującą do nazwy parametru z alias symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można pobrać danych z bazy danych Northwind w programie Microsoft SQL Server przez ustawienie <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości zapytania SQL. Zapytanie SQL jest sparametryzowanych i symbol zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> właściwości jest dopasowywany do <xref:System.Web.UI.WebControls.ControlParameter> obiektu, który jest dodawany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> kolekcji. <xref:System.Web.UI.WebControls.DropDownList> Kontrolować, które <xref:System.Web.UI.WebControls.ControlParameter> jest powiązany, działa jako filtr, co jest wyświetlane w <xref:System.Web.UI.WebControls.ListBox> formantu.  
  
 Informacje o innych typów lub parametrów można użyć, zobacz <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
> [!NOTE]
>  Ponieważ parametr jest używany w klauzuli WHERE, użycie <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> właściwość w przykładzie kodu jest funkcjonalnym odpowiednikiem przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> i <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę parametru procedury składowanej, która jest używana do sortowania pobrane dane podczas pobierania danych odbywa się przy użyciu procedury składowanej.</summary>
        <value>Nazwa parametru procedury składowanej, używane do sortowania pobrane dane podczas pobierania danych odbywa się przy użyciu procedury składowanej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Właściwości jest oceniany, tylko gdy polecenia SQL będący zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> właściwości jest nazwa procedury składowanej. W tym przypadku jeśli <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> właściwość ma wartość, zawiera nazwę parametru, który służy do sortowania wyników procedury składowanej.  
  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> właściwość jest ustawiona, jej jest dołączany na początku <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg rozdzielany średnikami wskazujący, które bazy danych i tabele dla zależności bufora programu Microsoft SQL Server.</summary>
        <value>Ciąg, który wskazuje, które bazy danych i tabel dla zależności bufora SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Sterowanie obsługuje zasady wygasania opcjonalne na podstawie <xref:System.Web.Caching.SqlCacheDependency> obiektu pamięci podręcznej danych (usługa musi być skonfigurowana dla serwera bazy danych).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Ciąg identyfikuje bazy danych i tabele zgodnie z tym samym formacie, który jest używany przez `@ Page` dyrektywą, w którym pierwsza część ciągu to ciąg połączenia z bazą danych programu Microsoft SQL Server, a następnie podzielonej średnikami, i na koniec nazwę tabeli bazy danych (na przykład `"connectionstring1:table1"`). Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> właściwość zależy od więcej niż jednej tabeli, par nazwa ciągu tabeli połączenia są oddzielone średnikami (na przykład `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Korzystając z klienta personifikacji w obszarze uwierzytelnianie Microsoft Windows, dane są buforowane, gdy pierwszy użytkownik uzyskuje dostęp do danych. Jeśli inny użytkownik zażąda tych samych danych, dane są pobierane z pamięci podręcznej. Dane nie są pobierane za innego wywołania do bazy danych, aby zweryfikować dostęp użytkownika do danych. Jeśli oczekujesz więcej niż jednego użytkownika do uzyskania dostępu do danych i chcesz, aby każdy pobierania danych i weryfikacji dla konfiguracji zabezpieczeń dla bazy danych, nie używaj buforowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć zależności bufora SQL Server i ustawić <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> formantu. W tym przykładzie bazy danych jest wysyłane co 120 sekund. Jeśli dane w firmie Northwind Traders pracowników tabeli zmian podczas tego czasu, dane, które jest buforowany przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i wyświetlane przez <xref:System.Web.UI.WebControls.GridView> kontroli jest odświeżany przez <xref:System.Web.UI.WebControls.SqlDataSource> kontroli przy następnym bazy danych jest sondowania.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmian stanu do widoku <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> , aby zmiany mogą być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiekt dla formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> Metoda zostanie przesłonięta w celu oznaczenia punkt początkowy, aby rozpocząć śledzenie i zapisywanie zmian do formantu jako część stan widoku formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje operację aktualizacji przy użyciu <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> ciągu SQL i wszelkie parametry, które są w <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> kolekcji.</summary>
        <returns>Wartość, która reprezentuje liczbę wierszy zaktualizowane w bazie danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Metoda automatycznie jest wywoływana przez <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.FormView> formanty podczas ogłaszania zwrotnego, jeśli dane zostały zmienione. Dla danych, które zostało zmienione w innych kontrolek <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> można jawnie wywołać metody odświeżania strony podczas <xref:System.Windows.Forms.Form.Load> zdarzeń.  
  
 Przed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacja została wykonana, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń. To zdarzenie do sprawdzenia wartości parametrów i wykonywanie żadnych przetwarzania wstępnego przed może obsłużyć <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operacji.  
  
 Po <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> zakończeniu operacji <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> metoda jest wywoływana, aby podnieść <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzeń. To zdarzenie, sprawdź, czy wszystkie wartości zwracanych i kody błędów i wykonywanie żadnych przetwarzania końcowego może obsłużyć.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Metody deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> metody <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu. Można wykonać operacji aktualizacji <xref:System.Web.UI.WebControls.SqlDataSourceView> kompilacje <xref:System.Data.Common.DbCommand> przy użyciu <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> tekstu i wszelkie powiązane <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> właściwości, a następnie wykonuje <xref:System.Data.Common.DbCommand> obiektu w podstawowej bazie danych.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** kliknięciu przycisku. Drugi przykład kodu pokazuje sposób wyświetlania danych, które są pobierane z bazy danych programu Microsoft SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i Aktualizuj używając rekordu <xref:System.Web.UI.WebControls.TextBox> formantu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** kliknięciu przycisku. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Ustawiono właściwość sparametryzowanych instrukcji SQL i dwa <xref:System.Web.UI.WebControls.ControlParameter> parametry są dodawane do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Gdy **przesyłania** kliknięciu przycisku <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzenie jest obsługiwane do wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> — metoda jawnie.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych, które są pobierane z bazy danych programu SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i Aktualizuj używając rekordu <xref:System.Web.UI.WebControls.TextBox> formantu. W przykładzie pokazano, jak używasz <xref:System.Data.Common.DbTransaction> obiekt do dodania kontekst transakcji, korzystając z <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, aby zaktualizować dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Nie może ustanowić połączenia z podstawowym źródłem danych.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa kontrolki, aby zaktualizować dane w bazie danych.</summary>
        <value>Ciąg SQL, który <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> używa do aktualizacji danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Reprezentuje zapytanie SQL lub nazwa procedury składowanej i jest używany przez <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody.  
  
 Ponieważ produkty z inną bazą danych korzystają z różnych odmian programu SQL Server, składnia ciągu SQL jest zależny od bieżącego dostawcy ADO.NET używana, który jest identyfikowany przez <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> właściwości. W przypadku zapytania parametrycznego lub polecenia ciągu SQL symbolu zastępczego parametru zależy również używany dostawca ADO.NET. Na przykład, jeśli dostawca jest <xref:System.Data.SqlClient?displayProperty=nameWithType>, który jest domyślnym dostawcą dla <xref:System.Web.UI.WebControls.SqlDataSource> klasa, jest symbol zastępczy parametru `'@parameterName'`. Jednak jeśli ustawiono dostawcę <xref:System.Data.Odbc?displayProperty=nameWithType> lub <xref:System.Data.OleDb?displayProperty=nameWithType>, symbol zastępczy parametru `'?'`. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Właściwość może być ciągiem SQL lub nazwa procedury składowanej, jeśli źródło danych obsługuje procedur składowanych.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Ze względów bezpieczeństwa <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość nie jest przechowywana jest stan widoku. Ponieważ istnieje możliwość dekodowania zawartość widoku stanu na komputerze klienckim, przechowywania poufnych informacji na temat struktury bazy danych w widoku stanu może spowodować ujawnienie informacji.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak ustawić <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i aktualizacji danych w bazie danych programu Microsoft SQL Server przy użyciu <xref:System.Web.UI.WebControls.GridView> formantu. W drugim przykładzie kodu pokazano, jak zaktualizować dane w bazie danych ODBC przy użyciu <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSource> kontroli i aktualizacji danych w bazie danych programu SQL Server przy użyciu <xref:System.Web.UI.WebControls.GridView> formantu. <xref:System.Web.UI.WebControls.GridView> Automatycznie wypełni <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji mający wpływ na parametry z <xref:System.Web.UI.WebControls.BoundField> obiekty i wywołuje <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> — metoda podczas **aktualizacji** łącze edycji <xref:System.Web.UI.WebControls.GridView>jest zaznaczone. W tym przykładzie zawiera również pewne przetwarzania końcowego: po aktualizacji rekordu, zostanie wysłana wiadomość e-mail powiadomienia.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 Poniższy przykład kodu, który jest funkcjonalnie identyczny jak w poprzednim przykładzie kodu, przedstawiono sposób zaktualizować dane w bazie danych ODBC przy użyciu <xref:System.Web.UI.WebControls.GridView> formantu. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Ustawiono dla dostawcy ADO.NET ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>i <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> właściwość jest ustawiona na nazwę nazwę źródła danych (DSN) ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy tekst w <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwość jest instrukcji SQL lub nazwa procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> Właściwości deleguje do <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wykonaniu operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzeń do sprawdzenia wartości output parametrów po wykonaniu operacji aktualizacji. Parametry wyjściowe są dostępne z <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> obiekt, który jest skojarzony ze zdarzeniem.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wyświetlać i aktualizować dane, które są pobierane z bazy danych ODBC w <xref:System.Web.UI.WebControls.GridView> formantu. Po pomyślnym zaktualizowaniu rekordu <xref:System.Web.UI.WebControls.SqlDataSource.Updated> zdarzenie jest obsługiwane przez program obsługi zdarzeń, aby wykonać krok przetwarzania końcowego wysyłania powiadomień e-mail.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, który zawiera parametry, które są używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwość z <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> formantu, z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawierający parametry używane przez <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> właściwość zawiera sparametryzowane zapytania SQL, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji zawiera którykolwiek <xref:System.Web.UI.WebControls.Parameter> obiektów, które odpowiadają parametru symbole zastępcze w ciągu SQL.  
  
 Nazwy parametrów, które mogą wpłynąć na <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> właściwości, w szczególności, jeśli nazwa określa klucz podstawowy, takich jak określone za pomocą klucza `DataKeyNames` właściwości formantu powiązanego z danymi, lub usuń i scenariuszy aktualizacji gdzie <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Właściwość jest ustawiona na <xref:System.Web.UI.ConflictOptions.CompareAllValues> wartość i zestaw `oldValues` są przekazywane do odpowiedniej metody danych. W takim przypadku ciąg formatu jest stosowane do nazwy parametrów w `oldValues` kolekcji.  
  
 Kolejność parametrów w <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Kolekcja może być ważne, w zależności od dostawcy programu ADO.NET. <xref:System.Data.OleDb?displayProperty=nameWithType> i <xref:System.Data.Odbc?displayProperty=nameWithType> dostawców skojarzyć parametrów w kolekcji w kolejności parametry są wyświetlane w sparametryzowanego zapytania SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Dostawcy, który jest domyślny dostawca ADO.NET dla <xref:System.Web.UI.WebControls.SqlDataSource> kontrolować, kojarzy parametrów w kolekcji przez pasującą do nazwy parametru z alias symbol zastępczy w zapytaniu SQL. Aby uzyskać więcej informacji na temat sparametryzowanych zapytań SQL i poleceń, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Pobiera właściwość <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> właściwości, który jest zawarty w <xref:System.Web.UI.WebControls.SqlDataSourceView> obiektu, z którym skojarzony jest <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.SqlDataSource> formantu, aby wyświetlić dane w <xref:System.Web.UI.WebControls.DropDownList> kontroli i aktualizacji danych podczas **przesyłania** kliknięciu przycisku. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Ustawiono sparametryzowanych instrukcji SQL i dwa <xref:System.Web.UI.WebControls.ControlParameter> parametry są dodawane do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> kolekcji. Gdy **przesyłania** kliknięciu przycisku <xref:System.Web.UI.WebControls.Button.OnClick%2A> zdarzenie jest obsługiwane do wywołania <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> — metoda jawnie.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, która jest potencjalnym zagrożeniem dla bezpieczeństwa, a wartości zostaną wstawione do parametrów bez weryfikacji, który jest także potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wykonaniem operacji aktualizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń w celu wykonania operacji inicjowania dodatkowe, które są specyficzne dla aplikacji, aby sprawdzić poprawność wartości parametrów lub zmienić wartości parametru przed <xref:System.Web.UI.WebControls.SqlDataSource> formant wykonuje operację aktualizacji. Połączenia źródła danych nie jest jeszcze otwarty, gdy jest wywoływana delegata obsługi zdarzeń. W związku z tym nie można bezpośrednio anulować <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Operacja bazy danych przez wywołanie metody <xref:System.Data.Common.DbCommand.Cancel%2A> metoda <xref:System.Data.Common.DbCommand> obiektu uwidocznionego przez <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> obiektu. Można jednak anulować operację bazy danych przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  Wartości są wstawiane do parametrów bez weryfikacji, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Użyj <xref:System.Web.UI.WebControls.SqlDataSource.Updating> zdarzeń, aby sprawdzić poprawność wartości parametru przed wykonaniem kwerendy. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych, które są pobierane z bazy danych programu Microsoft SQL Server w <xref:System.Web.UI.WebControls.DropDownList> kontroli i Aktualizuj używając rekordu <xref:System.Web.UI.WebControls.TextBox> formantu. W przykładzie pokazano, jak używasz <xref:System.Data.Common.DbTransaction> obiekt do dodania kontekst transakcji, korzystając z <xref:System.Web.UI.WebControls.SqlDataSource> sterowania, aby zaktualizować dane.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>