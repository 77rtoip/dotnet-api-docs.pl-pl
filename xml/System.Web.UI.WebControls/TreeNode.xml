<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17720a946b0455e2c3c8dc13709a9ce7d383bb58" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399591" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka składa się z węzłów. Każdy wpis w drzewie jest nazywany węzłem i jest reprezentowany przez <xref:System.Web.UI.WebControls.TreeNode> obiekt. Węzeł, który zawiera inne węzły, jest nazywany *węzłem nadrzędnym*. Węzeł, który jest zawarty w innym węźle, jest nazywany *węzłem podrzędnym*. Węzeł, który nie ma węzłów podrzędnych, jest nazywany *węzłem liścia*. Węzeł, który nie jest zawarty w żadnym innym węźle, ale jest elementem nadrzędnym dla wszystkich innych węzłów, jest *węzłem głównym*. Węzeł może być zarówno nadrzędnym, jak i podrzędnym, ale węzły główne, nadrzędne i liścia wzajemnie się wykluczają. Kilka właściwości wizualizacji i behawioralnych węzłów jest określana na podstawie tego, czy węzeł jest węzłem *głównym*, *nadrzędnym*, czy *liściem* .  
  
 Chociaż typowe drzewo ma tylko jeden węzeł główny, <xref:System.Web.UI.WebControls.TreeView> formant umożliwia dodanie wielu węzłów głównych do struktury drzewa. Jest to przydatne, gdy chcesz wyświetlić listy elementów bez wyświetlania jednego głównego węzła głównego, jak na liście kategorii produktów.  
  
 Węzeł przede wszystkim przechowuje dane w dwóch właściwościach <xref:System.Web.UI.WebControls.TreeNode.Text%2A> , właściwość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> i właściwość. Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości jest wyświetlana <xref:System.Web.UI.WebControls.TreeView> w kontrolce, a <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość jest używana do przechowywania wszelkich dodatkowych danych dotyczących węzła, takich jak dane używane do obsługi zdarzeń ogłaszania zwrotnego. Węzeł przechowuje również ścieżkę z węzła do jego węzła głównego we <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość wskazuje położenie węzła względem węzła głównego.  
  
> [!NOTE]
>  Węzły na tym samym poziomie muszą mieć unikatową wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości <xref:System.Web.UI.WebControls.TreeView> . formant nie może rozróżnić różnych węzłów na tym samym poziomie, który ma tę samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł o zduplikowanej wartości, zostanie wybrany węzeł, który pojawia się jako pierwszy <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 <xref:System.Web.UI.WebControls.TreeNode> Obiekt składa się z czterech następujących elementów interfejsu użytkownika, które można dostosować lub ukryć:  
  
-   Ikona wskaźnika węzła rozwinięcia służąca do wyświetlania, czy węzeł jest rozwinięty, zwinięty lub nie rozwijany.  
  
-   Opcjonalne pole wyboru skojarzone z węzłem.  
  
-   Opcjonalny obraz węzła.  
  
-   Tekst węzła.  
  
 Możesz określić niestandardowy obraz dla rozwijanych, zwijanych i nierozwijalnych <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>wskaźników węzłów, ustawiając właściwości <xref:System.Web.UI.WebControls.TreeView> , <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> klasy. Ikony wskaźnika węzła rozwinięcia można nawet całkowicie ukryć, ustawiając <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView> klasy na `false`.  
  
 Aby wyświetlić pole wyboru obok węzła, ustaw <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView> klasy. Gdy właściwość jest ustawiona na wartość inną niż `TreeNodeType.Node`, pola wyboru są wyświetlane obok określonego typu węzła. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Można selektywnie zastępować pole wyboru danego węzła przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości węzła. Gdy pole wyboru jest wyświetlane, użyj <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> właściwości, aby określić, czy pole wyboru jest zaznaczone.  
  
 Możesz wyświetlić obraz w węźle przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości. Ten obraz jest wyświetlany obok tekstu węzła.  
  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> kontrolce może być w jednym z dwóch trybów: tryb wyboru lub tryb nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby umieścić węzeł w trybie nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość węzła na wartość inną niż pusty ciąg (""). Aby umieścić węzeł w trybie zaznaczania, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość węzła na pusty ciąg.  
  
> [!NOTE]
>  Niektóre przeglądarki internetowe mają ograniczenia, które mogą mieć wpływ na wydajność <xref:System.Web.UI.WebControls.TreeView> formantu. Na przykład program Microsoft Internet Explorer 6,0 ma limit znaków adresu URL równy 2067 znaków. Jeśli liczba znaków w adresie URL węzła jest większa niż ta liczba, rozszerzanie tego węzła zakończy się niepowodzeniem i nie zostanie zgłoszony żaden wyjątek.  
  
 Domyślnie kliknięcie węzła w trybie wyboru powoduje opublikowanie strony z powrotem na serwerze i wygeneruje <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzenie. Opcjonalnie możesz określić inne zdarzenie do podniesienia przez ustawienie `SelectAction` właściwości węzła. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Aby określić, który węzeł został kliknięty w trybie zaznaczania <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> , użyj właściwości <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji kieruje użytkownika do określonego adresu URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość, aby określić okno lub ramkę, w której ma zostać wyświetlona zawartość połączona.  
  
 <xref:System.Web.UI.WebControls.TreeNode> Klasa zawiera kilka właściwości, które są używane do przechowywania stanu węzła. Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> , aby określić, czy węzeł jest zaznaczony. Aby określić, czy węzeł jest rozwinięty, użyj <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Właściwość służy do określenia, czy węzeł jest powiązany z danymi. Gdy węzeł jest powiązany z danymi, można uzyskać dostęp do bazowego elementu danych przy użyciu <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A> właściwości.  
  
 Klasa zawiera kilka właściwości, które pomagają określić położenie węzła względem innych węzłów w drzewie. Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> , aby określić głębokość węzła. Można uzyskać rozdzieloną listę węzłów z bieżącego węzła do jego węzła głównego przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. Aby określić węzeł nadrzędny węzła, użyj <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> właściwości. Węzły podrzędne są dostępne przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji.  
  
 Czasami nie można statycznie definiować struktury drzewa ze względu na rozmiar danych lub zawartość niestandardową, która zależy od danych wprowadzonych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Węzeł może być wypełniany w czasie wykonywania, gdy jest rozwinięty. Należy zauważyć, że w przypadku utrwalania asynchronicznie utworzonych węzłów można uzyskać nieoczekiwane zachowanie. Na przykład w przypadku używania wątku roboczego w tle w celu asynchronicznego wypełniania węzłów drzewo węzłów może nie zostać wypełnione natychmiast, mimo że kontrolka kontynuuje pracę z pozostałą częścią cyklu życia strony. W przypadku ogłaszania zwrotnego opóźnione Tworzenie węzłów może spowodować problemy, gdy stan widoku formantu jest załadowany, ale drzewo węzła nie jest w pełni wypełnione.  Aby uzyskać więcej informacji na temat wypełniania węzłów <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> dynamicznych, zobacz Właściwość.  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>, <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek dla następnego przykładu kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, jak używać składni deklaracyjnej do tworzenia <xref:System.Web.UI.WebControls.TreeNode> obiektów <xref:System.Web.UI.WebControls.TreeView> w formancie. Ten przykład jest używany w zestawie ramek z poprzedniego przykładu do wyświetlania spisu treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy bez tekstu lub wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu wartości domyślnych.  
  
> [!NOTE]
>  Gdy ten konstruktor jest używany, wszystkie właściwości w <xref:System.Web.UI.WebControls.TreeNode> obiekcie są ustawiane na wartości domyślne. Należy pamiętać o ustawieniu właściwości, w razie potrzeby, po utworzeniu obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą tego konstruktora dynamicznie dodać węzeł do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce dla węzła.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu określonego tekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu tekstu określonego `text` przez parametr.  
  
 W poniższej tabeli przedstawiono początkową wartość właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą tego konstruktora dynamicznie dodać węzeł do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takie jak dane używane do obsługi zdarzeń ogłaszania zwrotnego.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu określonego tekstu i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu wartości tekstowych i parametrów określonych odpowiednio `text` przez parametry i `value` .  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą tego konstruktora dynamicznie dodać węzeł do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">To będzie zawierać nowy <see cref="T:System.Web.UI.WebControls.TreeNode" />. <see cref="T:System.Web.UI.WebControls.TreeView" /></param>
        <param name="isRoot"><see langword="true" />Jeśli jest węzłem głównym; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Web.UI.WebControls.TreeNode" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu określonego właściciela.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takie jak dane używane do obsługi zdarzeń ogłaszania zwrotnego.</param>
        <param name="imageUrl">Adres URL obrazu, który jest wyświetlany obok węzła.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu określonego tekstu, wartości i adresu URL obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, <xref:System.Web.UI.WebControls.TreeNode> aby zainicjować nowe wystąpienie klasy przy użyciu adresu URL tekstu, wartości i obrazu określonych odpowiednio `text`przez parametry, `value`i `imageUrl` .  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Wartość `imageUrl` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą tego konstruktora dynamicznie dodać węzeł do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takie jak dane używane do obsługi zdarzeń ogłaszania zwrotnego.</param>
        <param name="imageUrl">Adres URL obrazu, który jest wyświetlany obok węzła.</param>
        <param name="navigateUrl">Adres URL do połączenia po kliknięciu węzła.</param>
        <param name="target">Okno docelowe lub ramka, w której ma zostać wyświetlona zawartość strony sieci Web połączona po kliknięciu węzła.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu określonego tekstu, wartości, adresu URL obrazu, adresu URL nawigacji i celu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, <xref:System.Web.UI.WebControls.TreeNode> aby zainicjować nowe wystąpienie klasy za pomocą adresu URL tekstu, wartości, obrazu i nawigacji oraz wyświetlić obiekt docelowy określony `text`przez, `value`, `imageUrl`, `navigateUrl`, i `target` odpowiednio parametry.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Wartość `imageUrl` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Wartość `navigateUrl` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Wartość `target` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą tego konstruktora dynamicznie dodać węzeł do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru węzła jest zaznaczone.</summary>
        <value><see langword="true" />Jeśli pole wyboru węzła jest zaznaczone; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy węzeł Wyświetla pole wyboru, <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> właściwość jest często używana do określenia, czy pole wyboru jest zaznaczone. Gdy zaznaczone jest pole wyboru skojarzone z węzłem, węzeł zostanie automatycznie dodany do <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji <xref:System.Web.UI.WebControls.TreeView> kontrolki. <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> Właściwość może również służyć do określenia, czy pole wyboru jest zaznaczone.  
  
> [!NOTE]
>  Jest to bardziej powszechne, aby określić, które węzły <xref:System.Web.UI.WebControls.TreeView> w formancie mają zaznaczone pola wyboru przez iterację <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> aby określić, czy pole wyboru węzła jest zaznaczone. Inicjuje pola wyboru węzłów o głębokości jednej do wybranego stanu. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Grupa dyskusyjn. XML.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> Pobiera kolekcję zawierającą węzły podrzędne pierwszego poziomu bieżącego węzła.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> , który zawiera węzły podrzędne pierwszego poziomu bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby uzyskać kolekcję zawierającą węzły podrzędne pierwszego poziomu bieżącego węzła. <xref:System.Web.UI.WebControls.TreeNodeCollection> <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Ta kolekcja jest często używana do iterowania przez wszystkie węzły podrzędne pierwszego poziomu lub dostępu do określonego węzła podrzędnego pierwszego poziomu bieżącego węzła.  
  
 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Właściwość może również służyć do programistycznego zarządzania węzłami podrzędnymi pierwszego poziomu w bieżącym węźle. Można dodawać, wstawiać, usuwać i pobierać <xref:System.Web.UI.WebControls.TreeNode> obiekty z kolekcji. Wszystkie aktualizacje kolekcji zostaną automatycznie odzwierciedlone w <xref:System.Web.UI.WebControls.TreeView> kontrolce przy następnym odświeżeniu strony.  
  
 Aby uzyskać dostęp do węzłów podrzędnych w dalszej części drzewa <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> , użyj właściwości węzła podrzędnego następnego poziomu, aby przejść w dół poziomów węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości do przechodzenia z drzewa.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy z właściwościami bieżącego <see cref="T:System.Web.UI.WebControls.TreeNode" /> wystąpienia.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> z właściwościami bieżącego <see cref="T:System.Web.UI.WebControls.TreeNode" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda pomocnika, która obsługuje <xref:System.ICloneable> interfejs zaimplementowany przez <xref:System.Web.UI.WebControls.TreeNode>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija bieżący węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> , aby wygodnie zwinąć bieżący węzeł.  
  
> [!NOTE]
>  Alternatywnie można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość na. `false`  
  
 Aby zwinąć bieżący węzeł i wszystkie jego węzły podrzędne, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>Program będzie zwijał wszystkie węzły w całym drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> jak używać metody do programistycznego zwijania węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija bieżący węzeł i wszystkie jego węzły podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> Użyj metody, aby wygodnie zwinąć bieżący węzeł i wszystkie jego węzły podrzędne.  
  
> [!NOTE]
>  Alternatywnie można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Właściwość bieżącego węzła i każdego z jego węzłów podrzędnych na. `false`  
  
 Aby zwinąć tylko bieżący węzeł, rozważ użycie <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>Program będzie zwijał wszystkie węzły w całym drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> jak używać metody do programistycznego zwijania węzła i wszystkich jego węzłów podrzędnych <xref:System.Web.UI.WebControls.TreeView> w formancie. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł został utworzony za pomocą powiązania danych.</summary>
        <value><see langword="true" />Jeśli węzeł został utworzony za pomocą powiązania danych; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Właściwość służy do programowanego określenia, czy węzeł został utworzony za pomocą powiązania danych. Ponieważ zawartości dynamicznej i statycznej nie można mieszać w tym samym węźle, ta właściwość jest często używana podczas wypełniania <xref:System.Web.UI.WebControls.TreeView> kontrolki w celu ustalenia, czy węzeł zawiera zawartość statyczną.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element danych, który jest powiązany z kontrolką.</summary>
        <value><see cref="T:System.Object" /> Reprezentuje element danych, który jest powiązany z kontrolką. Wartość domyślna to <see langword="null" />, co oznacza, że węzeł nie jest powiązany z żadnym elementem danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formant jest powiązany ze źródłem danych, takim <xref:System.Web.UI.WebControls.XmlDataSource> jak obiekt, ta właściwość jest ustawiona na element danych, który jest powiązany z tym konkretnym węzłem. <xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest często używana do uzyskiwania dostępu do wartości elementu danych.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko po wystąpieniu powiązania danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę do danych powiązanych z węzłem.</summary>
        <value>Ścieżka do danych powiązanych z węzłem. Ta wartość pochodzi z hierarchicznej kontroli źródła danych, z którą <see cref="T:System.Web.UI.WebControls.TreeView" /> jest powiązany formant. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest często używana podczas <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> wywoływania metody w celu zapewnienia ścieżki do danych powiązanych z bieżącym węzłem. <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> Ta metoda zwraca <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> obiekt, który zawiera dane w określonej ścieżce.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera głębokość węzła.</summary>
        <value>Głębokość węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> , aby określić głębokość węzła. Głębokość reprezentuje liczbę poziomów hierarchii między węzłem a węzłem głównym. Na przykład węzeł główny ma głębokość równą zero. Element podrzędny węzła głównego ma głębokość jednego i tak dalej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> , aby określić głębokość węzła. Inicjuje wszystkie węzły z głębokością od jednego do wybranego stanu. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Grupa dyskusyjn. XML.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija bieżący węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> , aby wygodnie rozwinąć bieżący węzeł.  
  
> [!NOTE]
>  Alternatywnie można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość na. `true`  
  
 Aby rozwinąć bieżący węzeł i wszystkie jego węzły podrzędne, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>rozwinie wszystkie węzły w całym drzewie.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> jak używać metody do programistycznego rozszerzania węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija bieżący węzeł i wszystkie jego węzły podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> Użyj metody, aby wygodnie rozwinąć bieżący węzeł i wszystkie jego węzły podrzędne.  
  
> [!NOTE]
>  Alternatywnie można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Właściwość bieżącego węzła i każdego z jego węzłów podrzędnych na. `true`  
  
 Aby rozwinąć tylko bieżący węzeł, rozważ użycie <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>rozwinie wszystkie węzły w całym drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> jak używać metody do programistycznego rozszerzania węzła i wszystkich jego węzłów podrzędnych <xref:System.Web.UI.WebControls.TreeView> w formancie. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest rozwinięty.</summary>
        <value><see langword="true" />Jeśli węzeł jest rozwinięty, <see langword="false" /> Jeśli węzeł nie jest rozwinięty lub. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> , aby określić lub określić, czy węzeł jest rozwinięty.  
  
 Można rozwinąć i zwinąć węzeł, wywołując <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> odpowiednio metody i. <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> Można również rozwinąć i zwinąć węzeł oraz wszystkie jego węzły podrzędne, wywołując <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> odpowiednio metody i. <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>  
  
 Ponieważ właściwość jest właściwością Tri-State, poniższy C# fragment kodu powoduje błąd kompilacji: <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.NET niejawnie rzutuje `Boolean` wartość `NullableBoolean`na, C# nie jest. W związku z tym najlepszym rozwiązaniem jest jawne sprawdzenie stanu właściwości. Na przykład następujące przykłady kodu w Visual Basic i C# jawnie testują wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości.  
  
 Poniższy przykład kodu Visual Basic jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. Ten przykład sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w `Nothing` `If` związku `False` z tym i powraca przez instrukcję.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Ten C# przykład kodu jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. Ten przykład sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w `Null` `If` związku `False` z tym i powraca przez instrukcję.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> jak używać właściwości do programistycznego rozszerzania węzła. Inicjuje wszystkie węzły z głębokością od jednej do rozwiniętego stanu. Zauważ, że gdy węzeł główny jest rozwinięty, jego węzły podrzędne są już rozwinięte. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia dla obrazu wyświetlanego obok węzła.</summary>
        <value>Tekst etykietki narzędzia dla obrazu wyświetlanego obok węzła. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obraz jest wyświetlany obok węzła (gdy <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość jest ustawiona), <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> Użyj właściwości, aby określić etykietkę narzędzia wyświetlaną, gdy użytkownik umieści wskaźnik myszy nad obrazem. Określony tekst zawiera urządzenia z technologią pomocniczą z opisem obrazu, którego można użyć do ułatwienia dostępu do formantu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwości, aby określić tekst etykietki narzędzia dla obrazu wyświetlanego obok węzła. Aby ten przykład działał poprawnie, należy podać własne obrazy.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który jest wyświetlany obok węzła.</summary>
        <value>Adres URL obrazu niestandardowego, który jest wyświetlany obok węzła. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> , aby określić niestandardowy obraz dla bieżącego węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Obraz jest wyświetlany obok węzła i może być w dowolnym formacie pliku (jpg, GIF, BMP itd.), o ile przeglądarka klienta obsługuje ten format.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości w celu zapewnienia niestandardowego obrazu dla węzła. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł zapisuje zmiany w stanie widoku.</summary>
        <value><see langword="true" />Jeśli formant jest oznaczony do zapisania jego stanu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Object" /> Reprezentuje stan węzła.</param>
        <summary>Ładuje wcześniej zapisany stan widoku węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A>jest metodą pomocniczą służącą do ładowania poprzednio zapisanego stanu widoku węzła  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL, do którego ma nastąpić przejście po kliknięciu węzła.</summary>
        <value>Adres URL, do którego należy przejść po kliknięciu węzła. Wartość domyślna to ciąg pusty (""), który wskazuje, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst węzła może być w jednym z dwóch trybów: tryb wyboru lub tryb nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby umieścić węzeł w trybie nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość węzła na wartość inną niż pusty ciąg.  
  
 Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji powoduje połączenie użytkownika z określonym adresem URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość, aby określić okno lub ramkę, w której ma zostać wyświetlona zawartość połączona.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek dla następnego przykładu kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> jak użyć właściwości, aby określić adres URL do połączenia po kliknięciu węzła. Ten przykład jest używany w zestawie ramek z poprzedniego przykładu do wyświetlania spisu treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł nadrzędny bieżącego węzła.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNode" /> Reprezentuje węzeł nadrzędny bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Właściwość<xref:System.Web.UI.WebControls.TreeNode> zwraca obiekt, który reprezentuje węzeł nadrzędny bieżącego węzła. Jest on często używany do określenia węzła nadrzędnego lub uzyskania dostępu do właściwości węzła nadrzędnego.  
  
> [!NOTE]
>  Węzeł główny nie ma węzła nadrzędnego.  
  
 Aby uzyskać dostęp do węzłów podrzędnych bieżącego węzła, użyj <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> jak użyć właściwości, aby <xref:System.Web.UI.WebControls.TreeNode.Text%2A> uzyskać dostęp do właściwości węzła nadrzędnego bieżącego węzła.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest wypełniany dynamicznie.</summary>
        <value><see langword="true" />Aby automatycznie wypełnić węzeł; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie można statycznie definiować struktury drzewa ze względu na rozmiar danych lub zawartość niestandardową, która zależy od danych wprowadzonych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość węzła jest ustawiona na `true`, ten węzeł jest wypełniany w czasie wykonywania za pomocą zdarzenia ogłaszania zwrotnego, gdy węzeł jest rozwinięty. Aby wypełnić węzeł dynamicznie, metoda obsługi zdarzeń, która wypełnia węzeł, musi być zdefiniowana dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia.  
  
 Obsługiwane przeglądarki mogą również korzystać z wypełniania węzłów po stronie klienta. Gdy ta funkcja jest włączona, <xref:System.Web.UI.WebControls.TreeView> umożliwia kontrolowanie dynamicznego wypełniania węzła na kliencie po rozwinięciu tego węzła, co uniemożliwia załadowanie z powrotem na serwer. Aby uzyskać więcej informacji na temat wypełniania węzłów po <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>stronie klienta, zobacz.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości, aby wskazać, że węzeł jest wypełniany dynamicznie.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentuje strumień wyjściowy używany do zapisywania zawartości na stronie sieci Web.</param>
        <summary>Umożliwia deweloperom kontrolek Dodawanie dodatkowych renderingu do węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może zostać przesłonięta przez deweloperów formantów do dodawania dodatkowych renderingów po wyrenderowaniu węzła.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentuje strumień wyjściowy używany do zapisywania zawartości na stronie sieci Web.</param>
        <summary>Umożliwia deweloperom kontrolek Dodawanie dodatkowych renderingu do węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może zostać przesłonięta przez deweloperów formantów do dodania dodatkowego renderowania przed renderowaniem węzła.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku węzła.</summary>
        <returns><see cref="T:System.Object" /> Zawierający zapisany stan węzła.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> Metoda jest metodą pomocnika wywoływaną przez węzeł w celu zapisania jej stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wybiera bieżący węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby wybrać bieżący węzeł <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeNode.Select%2A>  
  
 **Uwaga** Alternatywnie można również wybrać bieżący węzeł przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> właściwości na. `true`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metody do wybrania węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdarzenie lub zdarzenia, które mają zostać podniesione w przypadku wybrania węzła.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> wartości. Wartość domyślna to <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> kontrolce może być w jednym z dwóch trybów: tryb wyboru lub tryb nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby umieścić węzeł w trybie nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość węzła na wartość inną niż pusty ciąg (""). Aby umieścić węzeł w trybie zaznaczania, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość węzła na pusty ciąg.  
  
> [!NOTE]
>  Gdy węzeł jest w trybie nawigacji, zdarzenia wyboru są wyłączone dla tego węzła. Kliknięcie węzła spowoduje skierowanie użytkownika do określonego adresu URL, a nie opublikowanie strony z powrotem na serwerze i wywołanie zdarzenia.  
  
 Gdy węzeł jest w trybie wyboru, użyj <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości, aby określić zdarzenie lub zdarzenia, które są zgłaszane w przypadku wybrania węzła. W poniższej tabeli wymieniono dostępne opcje.  
  
|Akcja wyboru|Opis|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Przełącza węzeł między rozwiniętym i zwiniętym. Podnosi zdarzenie lub zdarzenie odpowiednio <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> do potrzeb. <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|  
|`TreeNodeSelectAction.None`|Nie wywołuje żadnych zdarzeń w przypadku wybrania węzła.|  
|`TreeNodeSelectAction.Select`|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Podnosi zdarzenie po zaznaczeniu węzła.|  
|`TreeNodeSelectAction.SelectExpand`|Wywołuje zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenie, jak i po wybraniu węzła. Węzły są rozwinięte, nigdy nie zwinięte.|  
  
> [!NOTE]
>  Właściwość nie jest renderowana dla węzła, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> którego właściwość ma ustawioną `TreeNodeSelectAction.None`wartość. <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> aby określić, które zdarzenie jest zgłaszane po kliknięciu węzła.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest zaznaczony.</summary>
        <value><see langword="true" />w przypadku wybrania węzła; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> , aby określić lub określić, czy węzeł jest zaznaczony.  
  
> [!NOTE]
>  Mimo że właściwość może służyć do określenia, czy węzeł jest wybrany, jest to bardziej powszechne, aby użyć <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości.  
  
 Podczas używania tej właściwości można wybrać tylko jeden węzeł jednocześnie w <xref:System.Web.UI.WebControls.TreeView> kontrolce.  
  
> [!NOTE]
>  Alternatywnie można również wybrać węzeł przy użyciu <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metody.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> aby wybrać węzeł <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru jest wyświetlane obok węzła.</summary>
        <value><see langword="true" />Aby wyświetlić pole wyboru; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka umożliwia wyświetlenie pola wyboru obok obrazu węzła. Użyj właściwości <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> , aby pokazać lub ukryć pole wyboru dla bieżącego węzła.  
  
 Mimo że <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.TreeView> właściwość może być używana do wyświetlania pól wyboru, bardziej powszechne jest użycie właściwości formantu. <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Właściwość, jednak ma wpływ na każdy typ węzła określony przez właściwość; w związku <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> z tym właściwość jest często używana do przesłonięcia tego ustawienia dla danego węzła. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType>  
  
 Ponieważ właściwość jest właściwością Tri-State, poniższy C# fragment kodu powoduje błąd kompilacji: <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType>  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.NET niejawnie rzutuje `Boolean` wartość `NullableBoolean`na, C# nie jest. W związku z tym najlepszym rozwiązaniem jest jawne sprawdzenie stanu właściwości. Na przykład następujące przykłady kodu w Visual Basic i C# jawnie testują wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości.  
  
 Poniższy przykład kodu Visual Basic jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. Ten przykład sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w `Nothing` `If` związku `False` z tym i powraca przez instrukcję.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Ten C# przykład kodu jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. Ten przykład sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w `Null` `If` związku `False` z tym i powraca przez instrukcję.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości do programistycznego pokazywania i ukrywania pola wyboru dla węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML poniżej do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Poniższy kod stanowi przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu.</summary>
        <returns>Reprezentuje kopię <see cref="T:System.Web.UI.WebControls.TreeNode" />obiektu. <see cref="T:System.Object" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana przez klasę, <xref:System.Web.UI.WebControls.TreeNode> aby utworzyć kopię samej siebie. <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />Zobacz.</summary>
        <value>Wartość wskazująca, czy węzeł zapisuje zmiany w stanie widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używany tylko wtedy, <xref:System.Web.UI.WebControls.TreeNode> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IStateManager> do interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Object" /> zawierający zapisane wartości stanu widoku.</param>
        <summary>Ładuje stan widoku poprzednio zapisanego węzła.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany stanu widoku w <see cref="T:System.Object" />.</summary>
        <returns><see cref="T:System.Object" /> Zawiera zmiany stanu widoku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiekt śledzi zmiany stanu widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody w formancie <xref:System.Web.UI.Control.IsTrackingViewState%2A> serwera Właściwość zwraca. `true`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia okno docelowe lub ramkę, w której ma zostać wyświetlona zawartość strony sieci Web skojarzona z węzłem.</summary>
        <value>Okno docelowe lub ramka, w której ma zostać wyświetlona zawartość połączonej strony sieci Web. Wartości muszą zaczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem pewnych wartości specjalnych, które zaczynają się od znaku podkreślenia, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość docelowa 
 </term><description> Opis 
 </description></listheader><item><term><see langword="_blank" /></term><description> Renderuje zawartość w nowym oknie bez ramek.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Renderuje zawartość w elemencie nadrzędnym bezpośredniego zestawu ramek.  
  
 </description></item><item><term><see langword="_search" /></term><description> Renderuje zawartość w okienku wyszukiwania.  
  
 </description></item><item><term><see langword="_self" /></term><description> Renderuje zawartość w ramce z fokusem.  
  
 </description></item><item><term><see langword="_top" /></term><description> Renderuje zawartość w pełnym oknie bez ramek.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Sprawdź dokumentację przeglądarki, aby określić, <see langword="_search" /> czy wartość jest obsługiwana. Na przykład program Microsoft Internet Explorer 5,0 i jego <see langword="_search" /> nowsze wersje obsługują wartość docelową.  
  
</para></block>  
  
 Wartość domyślna to ciąg pusty (""), który odświeża okno lub ramkę z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Target%2A> Użyj właściwości, aby określić okno lub ramkę, w której ma zostać wyświetlona zawartość sieci Web połączona z węzłem po kliknięciu tego węzła.  
  
> [!NOTE]
>  Ustawienie tej właściwości przesłania <xref:System.Web.UI.WebControls.TreeView.Target%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
> [!NOTE]
>  Właściwość renderuje jako `target`atrybut. <xref:System.Web.UI.WebControls.TreeNode.Target%2A> `target` Atrybut dla`anchor` elementów jest niedozwolony w definicji typu dokumentu XHTML 1,1. Nie ustawiaj <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości, jeśli renderowane dane wyjściowe <xref:System.Web.UI.WebControls.TreeNode> dla obiektu muszą być zgodne z XHTML 1,1. Aby uzyskać więcej informacji, zobacz [standardy XHTML w programie Visual Studio i ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  W przypadku tworzenia dostępnych stron sieci Web zdecydowanie zalecamy uniknięcie użycia właściwości, <xref:System.Web.UI.WebControls.TreeNode.Target%2A> aby określić inne okno. Aby uzyskać więcej informacji, [zobacz NIB: Ułatwienia dostępu](https://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)ASP.NET.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek dla następnego przykładu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości, aby określić ramkę, w której ma zostać wyświetlona zawartość połączona. Ten przykład jest używany w zestawie ramek z poprzedniego przykładu do wyświetlania spisu treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany dla węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <value>Tekst wyświetlany dla węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić lub określić tekst, który będzie wyświetlany dla węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeNode.Text%2A>  
  
> [!NOTE]
>  Jeśli właściwość zawiera `null` <xref:System.Web.UI.WebControls.TreeNode.Value%2A> , `get` metoda dostępu zwraca wartość właściwości. <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Jeśli właściwość, z kolei zawiera `null`, <xref:System.String.Empty> jest zwracana. <xref:System.Web.UI.WebControls.TreeNode.Value%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeNode.Text%2A> aby określić tekst dla węzła.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Alternatywy między rozwiniętym i zwiniętym stanem węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> Użyj metody do alternatywy między rozwiniętym i zwiniętym stanem węzła. Na przykład, jeśli węzeł jest zwinięty, wywołanie <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metody rozszerza węzeł i na odwrót.  
  
> [!NOTE]
>  Alternatywnie można ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> jak używać metody do alternatywy między rozwiniętym i zwiniętym stanem węzła <xref:System.Web.UI.WebControls.TreeView> głównego formantu.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia dla węzła.</summary>
        <value>Tekst etykietki narzędzia dla węzła. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> Użyj właściwości, aby określić tekst etykietki narzędzia dla węzła. Tekst etykietki narzędzia jest wyświetlany po umieszczeniu wskaźnika myszy nad węzłem.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> aby dostarczyć etykietki narzędzi dla węzłów <xref:System.Web.UI.WebControls.TreeView> w formancie.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza punkt początkowy, od którego ma zostać rozpoczęte śledzenie i zapisywanie zmian stanu widoku w węźle.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość niewyświetlaną służącą do przechowywania wszelkich dodatkowych danych dotyczących węzła, takich jak dane używane do obsługi zdarzeń ogłaszania zwrotnego.</summary>
        <value>Dodatkowe dane dotyczące węzła, który nie jest wyświetlany. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość służy do <xref:System.Web.UI.WebControls.TreeNode.Text%2A> uzupełniania właściwości przez przechowywanie wszelkich dodatkowych danych skojarzonych z węzłem. <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Ta wartość nie jest wyświetlana w formancie i jest często używana do przechowywania danych do obsługi zdarzeń ogłaszania zwrotnego.  
  
> [!NOTE]
>  Jeśli właściwość zawiera `null` <xref:System.Web.UI.WebControls.TreeNode.Text%2A> , `get` metoda dostępu zwraca wartość właściwości. <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Jeśli właściwość, z kolei zawiera `null`, <xref:System.String.Empty> jest zwracana. <xref:System.Web.UI.WebControls.TreeNode.Text%2A>  
  
> [!NOTE]
>  Węzły na tym samym poziomie muszą mieć unikatową wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości <xref:System.Web.UI.WebControls.TreeView> . formant nie może rozróżnić różnych węzłów na tym samym poziomie, który ma tę samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł o zduplikowanej wartości, zostanie wybrany węzeł, który pojawia się jako pierwszy <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości do przechowywania pola klucza.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę z węzła głównego do bieżącego węzła.</summary>
        <value>Rozdzielana ogranicznikami lista wartości węzła, które tworzą ścieżkę z węzła głównego do bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość zawiera rozdzielaną ogranicznikami listę wartości węzła, które tworzą ścieżkę z węzła głównego do bieżącego węzła. <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Użyj właściwości, aby określić znak ogranicznika używany do oddzielania wartości węzła. Ta wartość jest często używana podczas analizowania listy dla poszczególnych wartości lub do przekazania jako argument do <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metody <xref:System.Web.UI.WebControls.TreeView> klasy.  
  
 W zależności od wartości wyświetlanej w <xref:System.Web.UI.WebControls.TreeView> formancie, może być konieczna zmiana znaku ogranicznika, aby zapobiec konfliktom. Na przykład, jeśli ustawisz znak ogranicznika na przecinek, wyświetlana wartość nie powinna zawierać żadnych przecinków; w przeciwnym razie nie można dokładnie przeanalizować <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości.  
  
> [!NOTE]
>  Węzły na tym samym poziomie muszą mieć unikatową wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości <xref:System.Web.UI.WebControls.TreeView> . formant nie może rozróżnić różnych węzłów na tym samym poziomie, który ma tę samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł o zduplikowanej wartości, zostanie wybrany węzeł, który pojawia się jako pierwszy <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób analizowania <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
