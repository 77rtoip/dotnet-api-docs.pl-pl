<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f8f4c9d4f9934b27f2dcf6bfd895d0770e100858" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48672694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Kontroli składa się z węzłów. Każdy wpis w drzewie, jest nazywana węzłem i jest reprezentowana przez <xref:System.Web.UI.WebControls.TreeNode> obiektu. Nosi nazwę węzła, który zawiera inne węzły *węzła nadrzędnego*. Nosi nazwę węzła, który jest zawarty w innym węźle *węzeł podrzędny*. Nosi nazwę węzła, który nie ma podrzędnych węzłów *węzeł liścia*. Węzeł, który nie jest zawarty w innym węźle, ale jest nadrzędny do innych węzłów jest *węzeł główny*. Węzłem może być zarówno element nadrzędny, jak i element nadrzędny podrzędny, ale w katalogu głównym, a węzły liści wzajemnie się wykluczają. Kilka właściwości wizualnej i zachowania węzłów zależą od tego, czy węzeł jest *głównego*, *nadrzędnego*, lub *liścia* węzła.  
  
 Mimo że typowe drzewa ma tylko jeden węzeł główny, <xref:System.Web.UI.WebControls.TreeView> kontrolka zezwala na dodawanie wielu węzłów głównych do strukturę drzewa. Jest to przydatne, jeśli chcesz wyświetlić element listy bez wyświetlania pojedynczego elementu głównego głównego węzła, jak lista kategorii produktów.  
  
 Węzeł przede wszystkim dane są przechowywane w dwóch właściwości <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości. Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość jest wyświetlana w <xref:System.Web.UI.WebControls.TreeView> kontroli i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość jest używana do przechowywania wszelkich danych dodatkowe informacje o węźle, takich jak dane używane do obsługi zdarzenia odświeżania strony. Węzeł przechowuje także ścieżkę z węzła do węzła głównego w <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość wskazuje Pozycja węzła względem węzła głównego.  
  
> [!NOTE]
>  Węzły na tym samym poziomie musi mieć unikatową wartość dla <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości; <xref:System.Web.UI.WebControls.TreeView> formantu nie rozróżnia w różnych węzłach na tym samym poziomie, które mają taką samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła, znajduje się w <xref:System.Web.UI.WebControls.TreeView> formant jest zaznaczony.  
  
 Element <xref:System.Web.UI.WebControls.TreeNode> obiektu składają się następujące cztery elementy interfejsu użytkownika (UI), które można dostosować lub ukryte:  
  
-   Ikona wskaźnika węzła Rozszerzenia używane do wyświetlania, czy węzeł jest rozwinięty, zwinięty lub nie można rozwijać.  
  
-   Opcjonalne pola wyboru skojarzone z tym węzłem.  
  
-   Obraz węzeł opcjonalny.  
  
-   Tekst, który węzeł.  
  
 Można określić niestandardowego obrazu dla wskaźników rozwijania zwijany i rozwijany węzeł, ustawiając <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> właściwości <xref:System.Web.UI.WebControls.TreeView> klasy. Nawet można ukryć ikony wskaźnika rozwijanie węzła całkowicie ustawiając <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> klasy `false`.  
  
 Aby wyświetlić pole wyboru obok węzła, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> klasy. Gdy <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwości jest równa wartości innych niż `TreeNodeType.Node`, są wyświetlane pola wyboru obok typu określonego węzła. Pole wyboru jednego węzła mogą selektywnego przesłaniania, ustawiając węzła <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości. Gdy pole wyboru jest wyświetlane, użyj <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> właściwości w celu określenia, czy pole wyboru jest zaznaczone.  
  
 Obraz można wyświetlić w węźle, ustawiając <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości. Ten obraz jest wyświetlany obok tekstu węzła.  
  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli może mieć jeden z dwóch trybów: trybu wyboru lub nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby przełączyć węzeł w tryb nawigacji, należy ustawić węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości na wartość inną niż ciąg pusty (""). Aby przełączyć węzeł do trybu zaznaczania, należy ustawić węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości na pusty ciąg.  
  
> [!NOTE]
>  Niektóre przeglądarki internetowe mają ograniczenie, które mogą wpływać na wydajność <xref:System.Web.UI.WebControls.TreeView> kontroli. Na przykład Microsoft Internet Explorer w wersji 6.0 jest objęta limitem adresu URL znak 2067 znaków, które wysyła on żądanie POST. Jeśli liczba znaków w adresie URL węzła jest większy niż ta liczba powiększający się, że node zakończy się niepowodzeniem i jest zgłaszany żaden wyjątek.  
  
 Domyślnie, klikając węzeł, który jest w trybie wyboru wpisów strony do serwera i zgłasza <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzeń. Opcjonalnie można określić różne zdarzenia pozyskiwania, ustawiając węzła `SelectAction` właściwości. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Aby określić, który węzeł został kliknięty w trybie wyboru, należy użyć <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia do wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji przekierowuje użytkownika do określonego adresu URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości w celu określenia okna lub ramki, w którym do wyświetlenia połączonej zawartości.  
  
 <xref:System.Web.UI.WebControls.TreeNode> Klasa zawiera kilka właściwości, które są używane do przechowywania stanu węzła. Użyj <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> właściwości w celu określenia, czy węzeł jest zaznaczone. Aby określić, czy węzeł jest rozwinięty, użyj <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Właściwość jest używana do określenia, czy węzeł jest powiązany z danymi. Gdy węzeł jest powiązany z danymi, dostęp podstawowego elementu danych przy użyciu <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A> właściwości.  
  
 Klasa oferuje kilka właściwości, które pomagają określić pozycję węzłem względem innych węzłów w drzewie. Użyj <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> właściwości w celu określenia głębokości węzła. Uzyskasz rozdzielanej listy węzłów z bieżącego węzła do węzła głównego przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. Aby określić węzła nadrzędnego węzła, użyj <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> właściwości. Węzły podrzędne są dostępne przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji.  
  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowej zawartości, która jest zależna od wprowadzenia danych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje dynamiczne węzła populacji. Węzeł można wypełnić w czasie wykonywania, gdy jest ona rozwinięta. Należy pamiętać o tym, czy możesz uzyskać nieoczekiwane zachowanie Jeśli będzie się powtarzać asynchronicznie utworzone węzły. Na przykład użycie wątku w tle procesu roboczego do asynchronicznego wypełniania węzłów, drzewie węzeł może nie można wypełnić natychmiast jednak formant będzie kontynuowane z pozostałą częścią cyklu życia strony. Na odświeżenie strony Tworzenie opóźnione węzły może powodować problemy, gdy stan wyświetlania kontrolki jest załadowane, ale drzewie węzeł nie jest w pełni wypełniona.  Aby uzyskać więcej informacji na węzeł dynamiczne wypełnianie zobacz <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości.  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.TreeNode>, zobacz <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek w następnym przykładzie kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak utworzyć za pomocą składni deklaratywnej <xref:System.Web.UI.WebControls.TreeNode> obiekty w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie jest używany w zestawie ramek poprzedniego przykładu, aby wyświetlić spis treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy bez tekstu lub wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu wartości domyślnych.  
  
> [!NOTE]
>  Gdy ten konstruktor jest używany, wszystkie właściwości w <xref:System.Web.UI.WebControls.TreeNode> obiektu są ustawione na wartości domyślne. Pamiętaj ustawić właściwości, zgodnie z potrzebami, po utworzeniu obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dynamicznie dodać węzeł, aby za pomocą tego konstruktora <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który jest wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli dla węzła.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> przy użyciu podanego tekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> przy użyciu tekstu określonego przez `text` parametru.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dynamicznie dodać węzeł, aby za pomocą tego konstruktora <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który jest wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takich jak dane używane do obsługi zdarzenia odświeżania strony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> przy użyciu określonego tekstu i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> klasy za pomocą tekstu i wartość określoną przez `text` i `value` parametrów, odpowiednio.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dynamicznie dodać węzeł, aby za pomocą tego konstruktora <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Web.UI.WebControls.TreeView" /> Który będzie zawierał nową <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="isRoot">
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.TreeNode" /> jest węzłem głównym; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> przy użyciu określonego właściciela.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który jest wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takich jak dane używane do obsługi zdarzenia odświeżania strony.</param>
        <param name="imageUrl">Adres URL obrazu, który jest wyświetlany obok węzła.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> przy użyciu określonego tekstu, wartość i adres URL obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu tekstu, wartość i adres URL określony przez `text`, `value`, i `imageUrl` parametrów, odpowiednio.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Wartość `imageUrl` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dynamicznie dodać węzeł, aby za pomocą tego konstruktora <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który jest wyświetlany w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli dla węzła.</param>
        <param name="value">Dodatkowe dane skojarzone z węzłem, takich jak dane używane do obsługi zdarzenia odświeżania strony.</param>
        <param name="imageUrl">Adres URL obrazu, który jest wyświetlany obok węzła.</param>
        <param name="navigateUrl">Adres URL, aby połączyć się po kliknięciu węzła.</param>
        <param name="target">Docelowego okna lub ramki, w którym ma zostać wyświetlona zawartość strony sieci Web połączone z po kliknięciu węzła.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> przy użyciu określonego tekstu, wartość, adres URL obrazu, adres URL nawigacji i obiekt docelowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> klasy przy użyciu adresów URL tekstu, wartość, obrazów i nawigacji, a następnie Wyświetl docelowej, określone przez `text`, `value`, `imageUrl`, `navigateUrl`, i `target` Parametry, odpowiednio.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Wartość `text` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Wartość `value` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Wartość `imageUrl` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Wartość `navigateUrl` parametru.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Wartość `target` parametru.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dynamicznie dodać węzeł, aby za pomocą tego konstruktora <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zaznaczono pole wyboru węzła.</summary>
        <value>
          <see langword="true" /> Jeśli jest zaznaczone pole wyboru węzła; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy węzeł zostanie wyświetlona pole wyboru, <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> jest często używana do określenia, czy pole wyboru jest zaznaczone. Gdy zaznaczone jest pole wyboru skojarzonych z węzłem, węzeł jest automatycznie dodawany do <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> zbiór <xref:System.Web.UI.WebControls.TreeView> kontroli. <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> Właściwości można również określić, czy pole wyboru jest zaznaczone.  
  
> [!NOTE]
>  Jest to bardziej powszechne, aby określić węzły, które w <xref:System.Web.UI.WebControls.TreeView> kontrolka ma ich wybrane pola wyboru przez iterację <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> właściwości w celu określenia, czy zaznaczono pole wyboru węzła. Inicjuje wyboru węzłów z głębokością jednego wybranego stanu. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Newsgroup.xml.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> kolekcji, która zawiera węzły podrzędne pierwszego poziomu bieżącego węzła.</summary>
        <value>Element <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> zawierający węzły podrzędne pierwszego poziomu bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości do pobrania <xref:System.Web.UI.WebControls.TreeNodeCollection> kolekcji, która zawiera węzły podrzędne pierwszego poziomu bieżącego węzła. Ta kolekcja jest często używane do iteracji przez wszystkie węzły podrzędne pierwszego poziomu lub dostęp do określonych pierwszego poziomu podrzędnym bieżącego węzła.  
  
 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Właściwość może służyć także do programowego zarządzania węzłów podrzędnych pierwszego poziomu bieżącego węzła. Można dodać, Wstaw, Usuń i pobrać <xref:System.Web.UI.WebControls.TreeNode> obiektów z kolekcji. Wszelkie aktualizacje do kolekcji zostaną automatycznie odzwierciedlone w <xref:System.Web.UI.WebControls.TreeView> kontrolować przy następnym odświeżeniu strony.  
  
 Aby uzyskać dostęp do węzłów podrzędnych dalsze niżej na drzewie, należy użyć <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości węzła podrzędnego następnego poziomu przechodzenia z poziomu węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwość przechodzenia drzewa.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy przy użyciu właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TreeNode" /> wystąpienia.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> za pomocą właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TreeNode" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest metodą pomocnika, która obsługuje <xref:System.ICloneable> interfejs implementowany przez <xref:System.Web.UI.WebControls.TreeNode>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija bieżącego węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metodę, aby zwinąć wygodnie bieżącego węzła.  
  
> [!NOTE]
>  Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość `false`.  
  
 Aby zwinąć bieżącego węzła i wszystkich jego węzłów podrzędnych, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> zwijane wszystkich węzłów w drzewie całej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metody programowe Zwijanie węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija bieżącego węzła i wszystkich jego węzłów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodę, aby można było wygodnie Zwiń bieżącego węzła i wszystkich jego węzłów podrzędnych.  
  
> [!NOTE]
>  Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość bieżącego węzła i wszystkich jego węzłów podrzędnych, aby `false`.  
  
 Aby zwinąć tylko bieżącego węzła, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> zwijane wszystkich węzłów w drzewie całej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metodę, aby programowo Zwiń węzeł i jego węzły podrzędne w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł został utworzony za pomocą powiązania danych.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł został utworzony za pomocą powiązania danych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Właściwość jest używana do programowo określić, czy węzeł został utworzony za pomocą powiązania danych. Ponieważ statycznych i dynamicznych zawartości nie mogą być mieszane w tym samym węźle, ta właściwość jest często stosowany podczas wypełniania <xref:System.Web.UI.WebControls.TreeView> kontroli dynamicznie, aby określić, czy węzeł zawiera zawartość statyczną.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element danych, który jest powiązany z formantu.</summary>
        <value>A <see cref="T:System.Object" /> reprezentujący element danych, który jest powiązany z formantu. Wartość domyślna to <see langword="null" />, co oznacza, że węzeł nie jest powiązany z dowolnego elementu danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, takich jak <xref:System.Web.UI.WebControls.XmlDataSource> obiekt i ta właściwość ma wartość elementu danych, który jest powiązany z tym określonego węzła. Ta właściwość jest często używana, aby uzyskać dostęp do wartości elementu danych.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko wtedy, gdy wystąpił powiązanie danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę do danych powiązane z węzłem.</summary>
        <value>Ścieżka do danych powiązane z węzłem. Ta wartość pochodzi z kontroli źródła danych hierarchicznych, do którego <see cref="T:System.Web.UI.WebControls.TreeView" /> formantem. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> Wartość właściwości jest często stosowany podczas wywoływania <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> metodę, aby podać ścieżkę do danych powiązany z bieżącego węzła. Ta metoda zwraca <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> obiekt zawierający dane w określonej ścieżce.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera głębokość węzła.</summary>
        <value>Długość węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> właściwości w celu określenia głębokości węzła. Głębokość reprezentuje liczbę poziomów hierarchii między węzłem i węzeł główny. Na przykład węzła głównego ma głębokość równą zero. Element podrzędny węzła głównego ma głębokość 1 i tak dalej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje jak używać <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> właściwości w celu określenia głębokość węzła. Inicjuje wszystkie węzły z głębokością jednego wybranego stanu. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Newsgroup.xml.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija bieżącego węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metodę, aby łatwo rozszerzyć bieżącego węzła.  
  
> [!NOTE]
>  Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość `true`.  
  
 Aby rozwinąć bieżącego węzła i wszystkich jego węzłów podrzędnych, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> rozwinie wszystkich węzłów w drzewie całej.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metodę, aby programowo rozwiń węzeł w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija bieżącego węzła i wszystkich jego węzłów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metodę, aby łatwo rozszerzyć bieżącego węzła i wszystkich jego węzłów podrzędnych.  
  
> [!NOTE]
>  Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość bieżącego węzła i wszystkich jego węzłów podrzędnych, aby `true`.  
  
 Aby rozwinąć tylko bieżącego węzła, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> metody.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> rozwinie wszystkich węzłów w drzewie całej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> metodę, aby programowo rozwiń węzeł i jego węzły podrzędne w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest rozwinięty.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł jest rozwinięta, <see langword="false" /> Jeśli węzeł nie jest rozwinięta, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości do określania lub ustalania, czy węzeł jest rozwinięty.  
  
 Możesz można rozwijać i zwijać węzła przez wywołanie metody <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> i <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> metod, odpowiednio. Można również rozwijać i zwinąć węzeł i wszystkie jego węzły podrzędne, wywołując <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> i <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> metod, odpowiednio.  
  
 Ponieważ <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> poniższy fragment kodu języka C# powoduje błąd kompilacji, właściwość jest właściwością-stanowy:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Gdy VB.Net niejawnie rzutuje `Boolean` wartość `NullableBoolean`, C# nie obsługuje. Dlatego jest najlepszym rozwiązaniem, aby jawnie sprawdziła stanu właściwości. Na przykład, poniższe przykłady kodu w języku Visual Basic i C# jawnie sprawdzania wartości <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości.  
  
 Poniższy przykład kodu w języku Visual Basic jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. W tym przykładzie sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w związku z tym `Nothing` i `False` przechodzić `If` instrukcji.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Ten przykładowy kod języka C# jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. W tym przykładzie sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w związku z tym `Null` i `False` przechodzić `If` instrukcji.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości, aby programowo rozwinąć węzeł. Inicjuje wszystkie węzły z głębokością równą jeden, aby stanie rozwiniętym. Należy zauważyć, że po rozwinięciu węzła głównego węzły podrzędne są już rozwinięte. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia obraz wyświetlany obok węzła.</summary>
        <value>Tekst etykietki narzędzia obraz wyświetlany obok węzła. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obraz jest wyświetlany obok węzła (po <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> zostaje ustalona), użyj <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwości w celu określenia etykietki narzędzia wyświetlany, gdy użytkownik umieszcza wskaźnik myszy na obrazie. Tekst, który określisz udostępnia urządzeń ułatwianiem opis obrazu, który może służyć do udostępnienie formantu.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia wyświetlany obok węzła obrazu. W tym przykładzie działała prawidłowo należy podać własne obrazy.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który jest wyświetlany obok węzła.</summary>
        <value>Adres URL niestandardowego obrazu, który jest wyświetlany obok węzła. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości w celu określenia niestandardowego obrazu dla bieżącego węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli. Ten obraz jest wyświetlany obok węzła i może być w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje ten format.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość, aby podać niestandardowy obraz dla węzła. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł jest zapisywanie zmian stanu widoku.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolka jest oznaczona zapisanie swojego stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <related type="Article" href="http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> Reprezentujący stan węzła.</param>
        <summary>Ładuje wcześniej zapisany wyświetlanie stanu węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> metoda pomocnika służy do ładowania stanu wcześniej zapisany widok węzła  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
        <related type="Article" href="http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL do nawigacji po kliknięciu węzła.</summary>
        <value>Adres URL do nawigacji po kliknięciu węzła. Wartość domyślna to ciąg pusty (""), co oznacza, że ta właściwość nie jest ustawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst w węźle może mieć jeden z dwóch trybów: trybu wyboru lub nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby przełączyć węzeł w tryb nawigacji, należy ustawić węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości na wartość inną niż pustym ciągiem.  
  
 Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia do wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji użytkownik łączy się z określonym adresem URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości w celu określenia okna lub ramki, w którym do wyświetlenia połączonej zawartości.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek w następnym przykładzie kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości w celu określenia adresu URL, aby połączyć się po kliknięciu węzła. W tym przykładzie jest używany w zestawie ramek poprzedniego przykładu, aby wyświetlić spis treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł nadrzędny bieżącego węzła.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> reprezentujący węzła nadrzędnego bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Właściwość zwraca <xref:System.Web.UI.WebControls.TreeNode> obiekt, który reprezentuje węzła nadrzędnego bieżącego węzła. Często są one wykorzystywane w celu ustalenia węzła nadrzędnego lub uzyskiwania dostępu do właściwości węzła nadrzędnego.  
  
> [!NOTE]
>  Węzeł główny nie ma węzła nadrzędnego.  
  
 Aby uzyskać dostęp do węzły podrzędne bieżącego węzła, należy użyć <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> właściwości w celu uzyskania dostępu do <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość węzła nadrzędnego bieżącego węzła.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest wypełniana dynamicznie.</summary>
        <value>
          <see langword="true" /> Aby wypełnić węzeł dynamicznie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowej zawartości, która jest zależna od wprowadzenia danych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje dynamiczne węzła populacji. Gdy węzeł <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość jest ustawiona na `true`, ten węzeł jest wypełniana w czasie wykonywania za pomocą zdarzeń zwrotu, po rozwinięciu węzła. Aby wypełnić węzła dynamicznie, metoda obsługi zdarzeń, która wypełnia węzeł muszą być zdefiniowane dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzeń.  
  
 Obsługiwane przeglądarki również korzystać z zalet populacji węzła po stronie klienta. Po włączeniu dzięki temu <xref:System.Web.UI.WebControls.TreeView> kontroli dynamicznie zapełnić węzła na komputerze klienckim po rozwinięciu danego węzła, która eliminuje konieczność wpis z powrotem do serwera. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości, aby wskazać, że węzeł jest wypełniana dynamicznie.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący dane ze strumienia wyjściowego umożliwia zapisanie zawartości do strony sieci Web.</param>
        <summary>Umożliwia deweloperom formantu, Dodaj dodatkowe renderowania do węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może zostać zastąpiona przez deweloperów kontroli, aby dodać dodatkowe renderowania po węzła jest renderowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący dane ze strumienia wyjściowego umożliwia zapisanie zawartości do strony sieci Web.</param>
        <summary>Umożliwia deweloperom formantu, Dodaj dodatkowe renderowania do węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może zostać zastąpiona przez deweloperów kontroli, aby dodać dodatkowe renderowania, przed wyświetleniem węzła.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku węzła.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający zapisanego stanu węzła.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> Metoda jest wywoływana przez węzeł, aby zapisać swój stan metody pomocnika.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wybiera bieżącego węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metodę, aby wybrać bieżącego węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 **Uwaga** jako alternatywę, można wybrać bieżącego węzła, ustawiając <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> właściwość `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metody, aby wybrać węzeł w <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdarzeń lub zdarzeń, aby wywołać po wybraniu węzła.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> wartości. Wartość domyślna to <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli może mieć jeden z dwóch trybów: trybu wyboru lub nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby przełączyć węzeł w tryb nawigacji, należy ustawić węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości na wartość inną niż ciąg pusty (""). Aby przełączyć węzeł do trybu zaznaczania, należy ustawić węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości na pusty ciąg.  
  
> [!NOTE]
>  Gdy węzeł jest w trybie nawigacji, wybór zdarzeń są wyłączone dla tego węzła. Klikając węzeł przekieruje użytkownika do określonego adresu URL, a nie umieszczanie strony na serwerze i podnoszenie zdarzenia.  
  
 Gdy węzeł jest w trybie wyboru, przy użyciu <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości w celu określenia, które zdarzenia lub zdarzenia są wywoływane, gdy zaznaczony jest węzeł. Poniższa tabela zawiera listę dostępnych opcji.  
  
|Wybór akcji|Opis|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Przełącza węzeł między rozwinięty i zwinięty. Wywołuje <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzeń lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzeń zgodnie z potrzebami.|  
|`TreeNodeSelectAction.None`|Wywołuje nie zdarzenia po wybraniu węzła.|  
|`TreeNodeSelectAction.Select`|Wywołuje <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzenie, gdy zaznaczony jest węzeł.|  
|`TreeNodeSelectAction.SelectExpand`|Wywołuje zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenia po wybraniu węzła. Węzły są tylko rozwinięte, nigdy nie jest zwinięte.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Właściwości nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwością `TreeNodeSelectAction.None`.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości w celu określenia, które zdarzenie jest wywoływane po kliknięciu węzła.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł jest zaznaczone.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł jest zaznaczone. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> właściwości do określania lub ustalania, czy węzeł jest zaznaczone.  
  
> [!NOTE]
>  Mimo, że właściwość może służyć do określenia, czy węzeł jest zaznaczone, jest bardziej powszechne, aby użyć <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości.  
  
 Można wybrać tylko jeden węzeł w danym momencie <xref:System.Web.UI.WebControls.TreeView> kontrolować przy użyciu tej właściwości.  
  
> [!NOTE]
>  Alternatywnie, można wybrać węzła przy użyciu <xref:System.Web.UI.WebControls.TreeNode.Select%2A> metody.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> właściwości, aby wybrać węzeł w <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru jest wyświetlane obok węzła.</summary>
        <value>
          <see langword="true" /> Aby wyświetlić pole wyboru. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Sterowanie umożliwia wyświetlanie pola wyboru obok obrazu węzła. Użyj <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości, aby pokazać lub ukryć pole wyboru dla bieżącego węzła.  
  
 Mimo że <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwość może służyć do wyświetlania pól wyboru, jest to bardziej powszechne, aby użyć <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.WebControls.TreeView> kontroli. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> Właściwości wpływa jednak na każdy typ węzła, określony przez właściwość; w związku z tym, <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> jest często używana do zastępowania tego ustawienia dla oddzielnego węzła.  
  
 Ponieważ <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> poniższy fragment kodu języka C# powoduje błąd kompilacji, właściwość jest właściwością-stanowy:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Gdy VB.Net niejawnie rzutuje `Boolean` wartość `NullableBoolean`, C# nie obsługuje. Dlatego jest najlepszym rozwiązaniem, aby jawnie sprawdziła stanu właściwości. Na przykład, poniższe przykłady kodu w języku Visual Basic i C# jawnie sprawdzania wartości <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości.  
  
 Poniższy przykład kodu w języku Visual Basic jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. W tym przykładzie sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w związku z tym `Nothing` i `False` przechodzić `If` instrukcji.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Ten przykładowy kod języka C# jawnie testuje wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwości. W tym przykładzie sprawdza, czy <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość jest ustawiona na `True`; w związku z tym `Null` i `False` przechodzić `If` instrukcji.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwość programowo pokazać lub ukryć pole wyboru dla węzła w <xref:System.Web.UI.WebControls.TreeView> kontroli. W tym przykładzie działała prawidłowo należy skopiować dane XML przykładowe poniżej do pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Poniższy kod jest przykładowych danych XML w poprzednim przykładzie.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący kopię <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A> Metoda jest używana przez <xref:System.Web.UI.WebControls.TreeNode> klasy, aby utworzyć kopię sam.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>Wartość, która wskazuje, czy węzeł jest zapisywanie zmian stanu widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNode> wystąpienia jest rzutowany na <xref:System.Web.UI.IStateManager> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Object" /> zawierający wartości stanu zapisanego widoku.</param>
        <summary>Obciążenia węzła uprzednio zapisanego stanu widoku.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanu programu ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany stanu widoku <see cref="T:System.Object" />.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający zmian stanu widoku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanu programu ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektów do śledzenia zmian stanu widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody w kontrolce serwera <xref:System.Web.UI.Control.IsTrackingViewState%2A> właściwość zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanu programu ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia docelowego okna lub ramki, w którym ma zostać wyświetlona zawartość strony sieci Web skojarzony z węzłem.</summary>
        <value>Docelowego okna lub ramki, w której do wyświetlania zawartości połączonej strony sieci Web. Wartości muszą zaczynać się od litery z zakresu A do Z (bez uwzględniania wielkości liter), z wyjątkiem określonych specjalnych wartości, które zaczynają się od znaku podkreślenia, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość docelowa 
 </term><description> Opis 
 </description></listheader><item><term><see langword="_blank" /></term><description> Renderuje zawartość w nowym oknie bez ramek.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Renderuje zawartość w obiekcie nadrzędnym natychmiastowe ramek.  
  
 </description></item><item><term><see langword="_search" /></term><description> Renderuje zawartość w okienku wyszukiwania.  
  
 </description></item><item><term><see langword="_self" /></term><description> Renderuje zawartość w ramce z fokusem.  
  
 </description></item><item><term><see langword="_top" /></term><description> Renderuje zawartość w oknie pełnej bez ramek.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Zajrzyj do dokumentacji przeglądarki, aby określić, czy <see langword="_search" /> wartość jest obsługiwana. Na przykład Microsoft Internet Explorer 5.0 i nowszej obsługują <see langword="_search" /> wartość docelowa.  
  
</para></block>  
  
Wartość domyślna to ciąg pusty (""), który odświeża okna lub ramki, z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości w celu określenia okna lub ramki, w którym do wyświetlania zawartości sieci Web połączone z węzłem, po kliknięciu tego węzła.  
  
> [!NOTE]
>  Ta właściwość zastępuje ustawienie <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNode.Target%2A> Właściwość renderowany jako `target` atrybutu. `target` Atrybutu na `anchor` elementów nie jest dozwolone w definicji typu dokumentu XHTML 1.1. Nie należy ustawiać <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości przypadku wyniku renderowania dla <xref:System.Web.UI.WebControls.TreeNode> obiekt musi być XHTML 1.1 zgodne. Aby uzyskać więcej informacji, zobacz [XHTML standardów w programie Visual Studio i platformy ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Podczas tworzenia stron sieci Web z ułatwieniami dostępu, zdecydowanie zaleca się unika się używania <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości na inne okno. Aby uzyskać więcej informacji, zobacz [NIB: ułatwień dostępu programu ASP.NET](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek w następnym przykładzie.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości w celu określenia ramki, w której do wyświetlenia połączonej zawartości. W tym przykładzie jest używany w zestawie ramek poprzedniego przykładu, aby wyświetlić spis treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w węźle <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli.</summary>
        <value>Tekst wyświetlany dla węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości do określania lub ustalania tekst, który nie będą wyświetlane w węźle <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość zawiera `null`, `get` akcesor zwraca wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość, z kolei zawiera `null`, <xref:System.String.Empty> jest zwracana.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości w celu określenia tekstu dla węzła.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przełącza między rozwiniętymi i zwiniętymi stan węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metody na przemian z rozwiniętymi i stanie zwiniętym dla węzła. Na przykład, jeśli węzeł jest zwinięte, wywołanie <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metoda rozwija węzeł i na odwrót.  
  
> [!NOTE]
>  Alternatywnie, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> właściwość bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> metodę na przemian z rozwiniętymi i stanie zwiniętym węzeł główny <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia dla węzła.</summary>
        <value>Tekst etykietki narzędzia dla węzła. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia dla węzła. Tekst etykietki narzędzia jest wyświetlana po umieszczeniu wskaźnika myszy nad węzłem.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwości, aby zapewnić etykietki narzędzi dla węzłów w <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza punkt początkowy, od którego należy rozpocząć śledzenie i Zapisywanie stanu widoku zmieni się z węzłem.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Przegląd stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartości niewyświetlanej używany do przechowywania dodatkowych danych o węźle, takich jak dane używane do obsługi zdarzenia odświeżania strony.</summary>
        <value>Dane dodatkowe informacje o węźle, które nie są wyświetlane. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Właściwość jest używana w celu uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość dzięki przechowywaniu wszelkie dodatkowe dane skojarzone z tym węzłem. Ta wartość nie jest wyświetlany w kontrolce i jest najczęściej używany do przechowywania danych do obsługi zdarzenia odświeżania strony.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość zawiera `null`, `get` akcesor zwraca wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości. Jeśli <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość, z kolei zawiera `null`, <xref:System.String.Empty> jest zwracana.  
  
> [!NOTE]
>  Węzły na tym samym poziomie musi mieć unikatową wartość dla <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości; <xref:System.Web.UI.WebControls.TreeView> formantu nie rozróżnia w różnych węzłach na tym samym poziomie, które mają taką samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła, znajduje się w <xref:System.Web.UI.WebControls.TreeView> formant jest zaznaczony.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość do przechowywania pola klucza.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę od węzła głównego do bieżącego węzła.</summary>
        <value>Lista rozdzielonych ogranicznikami wartości węzła, które tworzą ścieżki od węzła głównego do bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość zawiera listę rozdzielonych ogranicznikami wartości węzła, które tworzą ścieżki od węzła głównego do bieżącego węzła. Użyj <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> właściwości w celu określenia znaku ogranicznika używany do oddzielania wartości węzła. Ta wartość jest często stosowany podczas analizowania listy, aby uzyskać poszczególne wartości lub przekazać jako argument do <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metody <xref:System.Web.UI.WebControls.TreeView> klasy.  
  
 W zależności od wartości wyświetlanej w <xref:System.Web.UI.WebControls.TreeView> kontrolki, znak ograniczający może być konieczne zmiany, aby uniknąć konfliktów. Na przykład jeśli ustawisz znak ograniczający przecinka wyświetlaną wartość nie może zawierać żadnych przecinki; w przeciwnym razie nie można dokładnie przeanalizować <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości.  
  
> [!NOTE]
>  Węzły na tym samym poziomie musi mieć unikatową wartość dla <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości; <xref:System.Web.UI.WebControls.TreeView> formantu nie rozróżnia w różnych węzłach na tym samym poziomie, które mają taką samą wartość. W tym scenariuszu, jeśli użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła, znajduje się w <xref:System.Web.UI.WebControls.TreeView> formant jest zaznaczony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak analizować <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>