<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8a9da64f7c3e69d521d4a0a5bcb5de08b078390" /><Meta Name="ms.sourcegitcommit" Value="44248681576d2d3e55999de22512082227ce367c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/16/2019" /><Meta Name="ms.locfileid" Value="68238762" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla kontrolkę pola tekstowego i przycisk przeglądania, które umożliwiają użytkownikom wybrać plik do przekazania na serwer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Zapisywanie przekazywanych plików](#saving_uploaded_files)  
  
-   [Zagadnienia dotyczące bezpieczeństwa](#security_considerations)  
  
-   [Ograniczenia pamięci](#memory_limitations)  
  
-   [Używanie formantu FileUpload przy użyciu kontrolki UpdatePanel](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [Składni deklaratywnej](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.FileUpload> Klasa Wyświetla kontrolkę pola tekstowego i przycisk przeglądania, umożliwiające użytkownikom wybrać plik na komputerze klienckim i przekaż go do serwera sieci Web. Użytkownik określa plik do przekazania, wprowadzając pełną ścieżkę pliku na komputerze lokalnym (na przykład **C:\MyFiles\TestFile.txt**) w polu tekstowym formantu. Alternatywnie użytkownik może wybrać plik, klikając pozycję **Przeglądaj** przycisk, a następnie go w lokalizacji **wybierz plik** okno dialogowe.  
  
 Użyj <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości można odczytać nazwy pliku na komputerze klienckim, aby przekazać za pomocą <xref:System.Web.UI.WebControls.FileUpload> kontroli. Nazwy pliku, który zwraca ta właściwość nie ma ścieżkę pliku na komputerze klienckim.  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Pobiera właściwość <xref:System.IO.Stream> obiektu, który wskazuje plik do przekazania. Ta właściwość umożliwia dostęp do zawartości pliku jako bajtów. Na przykład, można użyć <xref:System.IO.Stream> obiektu, który jest zwracany przez <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwość, aby odczytać zawartość pliku jako bajtów i przechowywać je w tablicy bajtów. Alternatywnie, można użyć <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość służąca do pobierania wszystkich bajtów w pliku.  
  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Właściwości pobiera bazowego <xref:System.Web.HttpPostedFile> obiektu dla pliku do przekazania. Ta właściwość umożliwia dostęp do dodatkowych właściwości w pliku. <xref:System.Web.HttpPostedFile.ContentLength%2A> Właściwości pobiera długość pliku. <xref:System.Web.HttpPostedFile.ContentType%2A> Właściwości pobiera typ zawartości MIME pliku. Ponadto można użyć <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości w celu uzyskania dostępu do <xref:System.Web.HttpPostedFile.FileName%2A> właściwości <xref:System.Web.HttpPostedFile.InputStream%2A> właściwości i <xref:System.Web.HttpPostedFile.SaveAs%2A> metody. Jednak te same funkcje odbywa się przy <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwości i <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody.  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>Zapisywanie przekazywanych plików  
 <xref:System.Web.UI.WebControls.FileUpload> Kontrolki nie jest automatycznie zapisywany plik do serwera po użytkownik wybierze plik do przekazania. Należy jawnie określić formant lub mechanizmu, aby zezwolić użytkownikowi na przesłanie określonego pliku. Na przykład można dostarczyć przycisk, który użytkownik kliknie przycisk, aby przekazać plik. Kod, który można zapisać do określonego pliku Zapisz powinny wywoływać <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, która zapisuje zawartość pliku do określonej ścieżki na serwerze. Zazwyczaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana w metodzie obsługi zdarzeń dla zdarzenia, które wywołuje post do serwera. Na przykład jeśli podasz przycisku, aby przesłać pliku, mogą obejmować kod, aby zapisać plik wewnątrz metody obsługi zdarzeń dla zdarzenia click.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, aby zapisać plik na serwerze, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwości, aby sprawdzić, czy <xref:System.Web.UI.WebControls.FileUpload> kontrolka zawiera plik. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zostanie zwrócona `false`, wyświetlenie komunikatu, komunikat użytkownika z informacją o tym, że kontrolka nie zawiera pliku. Nie sprawdzaj <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> istnieje właściwość, aby określić, czy plik do przekazania, ponieważ ta właściwość zawiera domyślnie 0 bajtów. W rezultacie, nawet wtedy, gdy <xref:System.Web.UI.WebControls.FileUpload> formant jest pusta, <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwość zwraca wartość inną niż null.  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>Zagadnienia dotyczące zabezpieczeń  
 Gdy wywołujesz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy określić pełną ścieżkę katalogu, w której chcesz zapisać przekazanego pliku. Jeśli nie jawnie określić ścieżkę w kodzie aplikacji, wyjątek jest generowany, gdy użytkownik próbuje do przekazania pliku. To zachowanie pomaga bezpieczeństwo poprzez uniemożliwienie użytkownikom możliwość zapisu do dowolnego miejsca w strukturze katalogów o swojej aplikacji, a także blokowanie dostępu do katalogów głównych poufnych plików na serwerze.  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda zapisuje przekazany plik do określonego katalogu. W związku z tym aplikacja ASP.NET musi mieć dostęp do zapisu do katalogu na serwerze. Istnieją dwa sposoby, że aplikacja może uzyskać dostęp do zapisu. Można jawnie przyznać dostęp do zapisu do konta, w którym aplikacja jest uruchomiona w katalogu, w którym zostaną zapisane przekazywanych plików. Alternatywnie możesz zwiększyć poziom zaufania, której przyznano do aplikacji ASP.NET. Aby uzyskać dostęp do zapisu w katalogu wykonywania dla aplikacji, aplikacja musi mieć przyznane <xref:System.Web.AspNetHostingPermission> obiektu z ustawioną poziom zaufania <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> wartość. Zwiększenie poziomu zaufania zwiększa aplikacji dostęp do zasobów na serwerze. Należy pamiętać, że nie jest bezpieczną metodą, ponieważ złośliwy użytkownik, który przejmie kontrolę nad aplikacji również będzie uruchamiany w kontekście tego wyższego poziomu zaufania. Jest najlepszym rozwiązaniem, aby uruchomić aplikację ASP.NET w kontekście użytkownika z minimalnymi uprawnieniami, które są wymagane przez aplikację do uruchamiania. Aby uzyskać więcej informacji na temat zabezpieczeń w aplikacji ASP.NET, zobacz [podstawowe wskazówki dotyczące zabezpieczeń dla aplikacji sieci Web](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) i [poziomy zaufania platformy ASP.NET i pliki zasad](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>Ograniczenia pamięci  
 Jednym ze sposobów, aby zabezpieczyć się przed "odmowa usługi" ataków jest konieczność ograniczenia rozmiaru plików, które można przekazać za pomocą <xref:System.Web.UI.WebControls.FileUpload> kontroli. Należy ustawić limit rozmiaru, który jest odpowiedni dla typów plików, które oczekują do przekazania. Domyślny limit rozmiaru to 4096 kilobajtów (KB) lub 4 megabajtów (MB). Możesz zezwolić większe pliki do przekazania, ustawiając `maxRequestLength` atrybutu [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elementu. Aby zwiększyć maksymalny dozwolony rozmiar pliku dla całej aplikacji, należy ustawić `maxRequestLength` atrybutu w pliku Web.config. Aby zwiększyć maksymalny dozwolony rozmiar pliku dla określonej strony, należy ustawić `maxRequestLength` atrybutu wewnątrz `location` elementu w pliku Web.config. Aby uzyskać przykład, zobacz [lokalizacji elementu (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).  
  
 Podczas przekazywania dużych plików, użytkownik może również wyświetlony następujący komunikat o błędzie:  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 Jeśli użytkownicy wystąpi ten komunikat o błędzie, należy zwiększyć wartość `memoryLimit` atrybutu w [processModel](https://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) elementu pliku Web.config plików dla aplikacji. `memoryLimit` Atrybut określa maksymalną ilość pamięci, można użyć procesu roboczego. Jeśli proces roboczy przekroczy `memoryLimit` kwota, nowy proces utworzono go zastąpić i wszystkie bieżące żądania są przypisane do nowego procesu.  
  
 Do kontrolowania tego, czy plik do przekazania tymczasowo przechowywane w pamięci lub na serwerze podczas przetwarzania żądania ustawiono `requestLengthDiskThreshold` atrybutu [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elementu. Ten atrybut umożliwia zarządzanie rozmiar bufora strumienia wejściowego. Wartość domyślna to 256 bajtów. Należy określić wartość nie może przekraczać wartości określonej dla `maxRequestLength` atrybutu.  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>Używanie formantu FileUpload przy użyciu kontrolki UpdatePanel  
 <xref:System.Web.UI.WebControls.FileUpload> Kontroli jest przeznaczony do użycia tylko w scenariuszach ogłaszania wstecznego i nie asynchronicznego zwrotu scenariuszy podczas częściowe renderowanie strony. Kiedy używasz <xref:System.Web.UI.WebControls.FileUpload> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> kontrolki, można przekazać pliku, za pomocą formantu, który jest <xref:System.Web.UI.PostBackTrigger> obiektu w panelu. <xref:System.Web.UI.UpdatePanel> Formanty są używane do aktualizacji strony zamiast aktualizowania całej strony, o zwrot do wybranych regionów. Aby uzyskać więcej informacji, zobacz [UpdatePanel informacje o formancie](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowanie części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Projekt witryny internetowego programu Visual Studio z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](https://go.microsoft.com/fwlink/?LinkId=191897).  
  
 Ta sekcja zawiera cztery następujące przykłady:  
  
-   Pierwszy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki do ścieżki, która jest określona w kodzie.  
  
-   Drugi przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonym katalogu w systemie plików dla aplikacji.  
  
-   Trzeci przykład pokazuje, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonej ścieżce i ogranicza rozmiar plików, które mogą być przekazywane.  
  
-   Czwarty przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonej ścieżce i zezwala na tylko pliki, które mają rozszerzenia nazwy pliku .doc lub xls do przekazania.  
  
> [!CAUTION]
>  Przykłady te pokazują podstawową składnię <xref:System.Web.UI.WebControls.FileUpload> kontroli, ale ich nie wskazują wszystkie niezbędne sprawdzanie błędów, należy wykonać przed do zapisywania pliku. Aby uzyskać pełniejszy przykład, zobacz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki do ścieżki, która jest określona w kodzie. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonym katalogu w systemie plików dla aplikacji. <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> Właściwość jest używana do uzyskania pliku fizycznego systemu ścieżki katalogu głównego aktualnie realizowanej aplikacji serwera. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki do ścieżki, która jest określona w kodzie. Kontrolka ogranicza rozmiar pliku, które mogą być przekazywane do 2 MB. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Właściwość jest używana do dostępu do podstawowych <xref:System.Web.HttpPostedFile.ContentLength%2A> właściwości i zwrócenie rozmiaru pliku. Jeśli rozmiar pliku do przekazania jest mniejsza niż 2 MB, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze. Oprócz sprawdzania, czy ustawienie rozmiar maksymalny w kodzie aplikacji, można ustawić `maxRequestLength` atrybutu [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elementu maksymalny dozwolony rozmiar w pliku konfiguracyjnym aplikacji.  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki do ścieżki, która jest określona w kodzie. Ten przykład umożliwia tylko pliki, które mają rozszerzenia nazwy pliku .doc lub xls do przekazania. <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> Metoda jest wywoływana w celu zwrócenia rozszerzenie pliku do przekazania. Jeśli plik ma .doc lub xls rozszerzenie nazwy pliku, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FileUpload" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> Konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FileUpload> klasy. <xref:System.Web.UI.WebControls.FileUpload> Kontrolki nie jest automatycznie zapisywany plik do serwera po użytkownik wybierze plik do przekazania. Należy jawnie określić formant lub mechanizmu, aby zezwolić użytkownikowi na przesłanie określonego pliku. Na przykład można dostarczyć przycisk, który użytkownik kliknie przycisk, aby przekazać plik.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FileUpload> klasy. Należy pamiętać, że w tym przykładzie pokazano składni konstruktora, ale nie dodaje funkcji obsługi do formantu po jego utworzeniu.  
  
 W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.WebControls.FileUpload> klasy.  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na komputerze klienckim.</param>
        <summary>Dodaje atrybuty kodu HTML i style <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu do renderowania do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Metoda jest używany głównie przez programistów sterowania do wstawienia odpowiednich atrybutów i style do <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> strumień wyjściowy dla <xref:System.Web.UI.WebControls.FileUpload> kontroli. <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Zastąpienia metody <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy można wybrać wiele plików do przekazania.</summary>
        <value><see langword="true" /> Jeżeli można wybrać wiele plików; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę bajtów w pliku, który jest określony za pomocą <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli.</summary>
        <value>A <see cref="T:System.Byte" /> tablicę, która zawiera zawartość określonego pliku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload> Formantu nie automatycznie odczytuje plik z klienta. Należy jawnie określić formant lub mechanizmu, aby zezwolić użytkownikowi na przesłanie określonego pliku. Na przykład można dostarczyć przycisk, który użytkownik może kliknąć, aby przekazać plik. Można wywołać kod, który można zapisać do określonego pliku Zapisz <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość, która zwraca zawartość pliku.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwości, aby sprawdzić, czy <xref:System.Web.UI.WebControls.FileUpload> kontrolka zawiera plik do przekazania. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwości. Jeśli zostanie zwrócona `false`, wyświetlenie komunikatu, komunikat użytkownika z informacją o tym, że kontrolka nie zawiera pliku. Jeśli nie podasz kod obsługi błędów, aby sprawdzić, czy plik istnieje, próba zapisania pliku nieistniejącej zgłasza <xref:System.Web.HttpException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> kontroli. Kiedy użytkownik kliknie **przekazywanie pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na tej stronie. W tym przykładzie użyto <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwości, aby przekazać cały plik.  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie odczytano całego pliku.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.IO.Stream" /> obiektu, który wskazuje plik do przekazania, za pomocą <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli.</summary>
        <value>A <see cref="T:System.IO.Stream" /> wskazującego na plik do przekazania, za pomocą <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Pobiera właściwość <xref:System.IO.Stream> obiektu, który wskazuje plik do przesłania za pomocą <xref:System.Web.UI.WebControls.FileUpload> kontroli. Użyj <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwość, aby uzyskać dostęp do zawartości pliku. Na przykład, można użyć <xref:System.IO.Stream> obiektu, który jest zwracany przez tę właściwość, aby odczytać zawartość pliku jako bajtów i przechowywać je w tablicy bajtów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> kontroli. <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Właściwość jest używana do odczytu zawartości pliku do tablicy typu byte. Kiedy użytkownik kliknie **przekazywanie pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na tej stronie.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę pliku na komputerze klienckim, przekazywanie przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli.</summary>
        <value>Ciąg określający nazwę pliku na komputerze klienckim, przekazywanie przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera nazwę pliku na komputerze klienckim, przekazywanie przy użyciu <xref:System.Web.UI.WebControls.FileUpload> kontroli. Nazwa pliku <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> zwraca wartość właściwości nie ma ścieżkę pliku na komputerze klienckim.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki do ścieżki, która jest określona w kodzie. <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> Właściwość jest używana w celu otrzymania nazwy pliku do przekazania. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze, przy użyciu tej samej nazwie plik ma na komputerze klienckim. Należy pamiętać, że w tym przykładzie przedstawiono podstawową składnię dla tego formantu, ale nie przedstawiono tu wszystkich niezbędnych sprawdzanie błędów czy ma być przeprowadzane przed zapisaniem pliku. Aby uzyskać pełniejszy przykład, zobacz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontrolka zawiera plik.</summary>
        <value><see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.FileUpload" /> zawiera plik; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Właściwości pobiera wartość wskazującą czy <xref:System.Web.UI.WebControls.FileUpload> kontrolka zawiera plik do przekazania. Ta właściwość służy do Sprawdź, czy plik do przekazania istnieje przed przystąpieniem do wykonywania operacji na pliku. Na przykład przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, aby zapisać plik na dysku, użyj <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwości, aby sprawdzić, czy plik istnieje. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zostanie zwrócona `false`, wyświetlenie komunikatu, komunikat użytkownika z informacją o tym, że kontrolka nie zawiera pliku.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który wykonuje sprawdzanie błędów. Przed zapisaniem pliku <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> metoda jest wywoływana, aby sprawdzić, czy kontrolka zawiera plik do przekazania. Ponadto <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metoda jest wywoływana w celu sprawdzenia, czy plik o takiej samej nazwie już występuje w ścieżce. Jeśli tak jest, nazwa pliku do przekazania jest poprzedzony znakiem podkreślenia przed <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana. Zapobiega to zastąpieniu istniejącego pliku.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy pliki zostały przekazane.</summary>
        <value><see langword="true" /> Jeśli wcześniej przekazano pliki w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca też wartość `false` jeśli przekazany pusty plik (zero bajtów).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenie <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> Metoda powiadamia <xref:System.Web.UI.WebControls.FileUpload> formantu, aby wykonać niezbędne czynności przed renderowaniem przed zapisaniem stanu widoku i renderowania zawartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podstawowe <see cref="T:System.Web.HttpPostedFile" /> obiektu dla pliku, który jest przekazywany przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli.</summary>
        <value><see cref="T:System.Web.HttpPostedFile" /> Dla pliku, który został przekazany przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Właściwości pobiera bazowego <xref:System.Web.HttpPostedFile> obiektu dla pliku, który jest przekazywany przy użyciu <xref:System.Web.UI.WebControls.FileUpload> kontroli. Ta właściwość umożliwia dostęp do dodatkowych właściwości przekazanego pliku.  
  
 Możesz użyć <xref:System.Web.HttpPostedFile.ContentLength%2A> właściwości do pobrania długość pliku. Możesz użyć <xref:System.Web.HttpPostedFile.ContentType%2A> właściwości do pobrania MIME zawartości typu pliku. Ponadto można użyć <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości w celu uzyskania dostępu do <xref:System.Web.HttpPostedFile.FileName%2A> właściwości <xref:System.Web.HttpPostedFile.InputStream%2A> właściwości i <xref:System.Web.HttpPostedFile.SaveAs%2A> metody. Jednak te same funkcje odbywa się przy <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwości i <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> kontroli. Kiedy użytkownik kliknie **przekazywanie pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na tej stronie. W tym przykładzie użyto <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości w celu uzyskania dostępu do <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> właściwości. <xref:System.Web.HttpPostedFile.ContentLength%2A> Właściwość jest używana do określania długości pliku przed skopiowaniem zawartość pliku do tablicy typu byte.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję przekazywanych plików.</summary>
        <value>Kolekcja przekazywanych plików.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontrolować zawartość.</param>
        <summary>Wysyła <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontrolować zawartość określonej <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość do renderowania na komputerze klienckim.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.Render%2A> Metoda wysyła <xref:System.Web.UI.WebControls.FileUpload> kontrolować zawartość określonej <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> obiektu, który zapisuje zawartość do renderowania na komputerze klienckim.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg, który określa pełną ścieżkę do lokalizacji serwera, na którym ma zostać zapisany przekazanego pliku.</param>
        <summary>Zapisuje zawartość przekazany plik do określonej ścieżki na serwerze sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda zapisuje zawartość przekazany plik do określonej ścieżki na serwerze sieci Web.  
  
 <xref:System.Web.UI.WebControls.FileUpload> Kontrolki nie jest automatycznie zapisywany plik do serwera po użytkownik wybierze plik do przekazania. Należy jawnie określić formant lub mechanizmu, aby zezwolić użytkownikowi na przesłanie określonego pliku. Na przykład można dostarczyć przycisk, który użytkownik kliknie przycisk, aby przekazać plik. Kod, który można zapisać do określonego pliku Zapisz powinny wywoływać <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, która zapisuje zawartość pliku do określonej ścieżki na serwerze. Zazwyczaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana w metodzie obsługi zdarzeń dla zdarzenia, które wywołuje post do serwera. Na przykład jeśli podasz przycisku, aby przesłać pliku, kod, aby zapisać plik na serwerze można następnie zawarty wewnątrz metody obsługi zdarzeń dla zdarzenia, kliknij przycisk.  
  
 Gdy wywołujesz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy określić pełną ścieżkę katalogu na serwerze, w której chcesz zapisać przekazanego pliku. Jeśli użytkownik nie są określone jawnie ścieżki w kodzie aplikacji <xref:System.Web.HttpException> wyjątek jest zgłaszany, gdy użytkownik próbuje się przekazać plik. To zachowanie pomaga chronić pliki na serwerze, uniemożliwiając użytkownikom określić ścieżkę, w której chcesz zapisać pliki, które przekazują.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwości, aby sprawdzić, czy <xref:System.Web.UI.WebControls.FileUpload> kontrolka zawiera plik do przekazania. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zostanie zwrócona `false`, wyświetlenie komunikatu, komunikat użytkownika z informacją o tym, że kontrolka nie zawiera pliku. Jeśli nie podasz kod obsługi błędów, aby sprawdzić, czy plik istnieje, próba zapisania pliku nieistniejącej zgłasza <xref:System.Web.HttpException> wyjątku.  
  
 Wywołania <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> działała, aplikacja ASP.NET musi mieć dostęp do zapisu do katalogu na serwerze. Istnieją dwa sposoby, że aplikacja może uzyskać dostęp do zapisu. Można jawnie przyznać dostęp do zapisu do konta, w którym aplikacja jest uruchomiona w katalogu, w którym zostaną zapisane przekazywanych plików. Alternatywnie możesz zwiększyć poziom zaufania, której przyznano do aplikacji ASP.NET. Aby uzyskać dostęp do zapisu w katalogu wykonywania dla aplikacji, aplikacja musi mieć przyznane <xref:System.Web.AspNetHostingPermission> obiektu z ustawioną poziom zaufania <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> wartość. Zwiększenie poziomu zaufania zwiększa aplikacji dostęp do zasobów na serwerze. Należy pamiętać, że nie jest bezpieczną metodą, ponieważ złośliwy użytkownik, który przejmie kontrolę nad aplikacji również będzie uruchamiany w kontekście tego wyższego poziomu zaufania. Jest najlepszym rozwiązaniem, aby uruchomić aplikację ASP.NET w kontekście użytkownika, która ma minimalne uprawnienia, które są wymagane przez aplikację do uruchamiania. Aby uzyskać więcej informacji na temat zabezpieczeń w aplikacji ASP.NET, zobacz [podstawowe wskazówki dotyczące zabezpieczeń dla aplikacji sieci Web](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) i [poziomy zaufania platformy ASP.NET i pliki zasad](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który wykonuje sprawdzanie błędów. Przed zapisaniem pliku <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> metoda jest wywoływana, aby sprawdzić, czy istnieje plik do przekazania. Ponadto <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metoda jest wywoływana w celu sprawdzenia, czy plik o takiej samej nazwie już istnieje w ścieżce. Jeśli tak jest, nazwa pliku do przekazania jest poprzedzony znakiem numeru przed <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana. Zapobiega to zastąpieniu istniejącego pliku.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="filename" /> nie jest pełną ścieżką.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Wskazówki dotyczące podstawowych zabezpieczeń dla aplikacji sieci Web</related>
      </Docs>
    </Member>
  </Members>
</Type>
