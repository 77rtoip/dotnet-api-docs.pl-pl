<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ae1c1893505f0b902e3900dacd54a3b502b32bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36382631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla formant pola tekstowego i przycisk przeglądania, które umożliwiają użytkownikom wybrać plik do przekazania na serwer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Zapisywanie przekazane pliki](#saving_uploaded_files)  
  
-   [Zagadnienia dotyczące bezpieczeństwa](#security_considerations)  
  
-   [Ograniczenia pamięci](#memory_limitations)  
  
-   [Używanie formantu przekazywaniem plików za pomocą formantu UpdatePanel](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [Składni deklaratywnej](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.FileUpload> Klasa wyświetla w polu tekstowym i przycisk przeglądania, które umożliwiają użytkownikom wybrać plik na komputerze klienckim i przekaż go do serwera sieci Web. Użytkownik określa plik do przekazania, wprowadzając pełną ścieżkę pliku na komputerze lokalnym (na przykład **C:\MyFiles\TestFile.txt**) w polu tekstowym formantu. Alternatywnie użytkownik może wybrać plik klikając **Przeglądaj** przycisk, a następnie go w lokalizacji **wybierz plik** okno dialogowe.  
  
 Użyj <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości można pobrać nazwy pliku na komputerze klienckim, aby przekazać przy użyciu <xref:System.Web.UI.WebControls.FileUpload> formantu. Nazwa pliku, który zwraca ta właściwość nie ma ścieżki pliku na kliencie.  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Pobiera właściwość <xref:System.IO.Stream> obiektu, który wskazuje plik do przekazania. Ta właściwość służy do dostępu do zawartości pliku bajtów. Na przykład można użyć <xref:System.IO.Stream> obiektu, który jest zwracany przez <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwości do odczytu zawartości pliku bajtów i zapisanie ich w tablicy bajtów. Alternatywnie można użyć <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość, aby pobrać wszystkie bajty w pliku.  
  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Pobiera właściwości podstawowych <xref:System.Web.HttpPostedFile> obiektu pliku do przekazania. Ta właściwość umożliwia dostęp do dodatkowych właściwości do pliku. <xref:System.Web.HttpPostedFile.ContentLength%2A> Właściwość pobiera długość pliku. <xref:System.Web.HttpPostedFile.ContentType%2A> Właściwość pobiera typ zawartości MIME pliku. Ponadto można użyć <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości, aby uzyskać dostęp do <xref:System.Web.HttpPostedFile.FileName%2A> właściwość <xref:System.Web.HttpPostedFile.InputStream%2A> właściwości oraz <xref:System.Web.HttpPostedFile.SaveAs%2A> — metoda. Jednak te same funkcje odbywa się przy <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości, <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwości oraz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody.  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>Zapisywanie przekazane pliki  
 <xref:System.Web.UI.WebControls.FileUpload> Formantu nie automatycznie zapisuje plik na serwerze po wybraniu plik do przekazania. Należy podać jawnie formant lub mechanizmu, aby zezwolić na przesłanie pliku określonego przez użytkownika. Na przykład można podać przycisku, który użytkownik klika, aby przekazać plik. Kod, który zapisu można zapisać określony plik powinny wywoływać <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, która zapisuje zawartość pliku do określonej ścieżki na serwerze. Zazwyczaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana w metodzie obsługi zdarzeń dla zdarzenia, który wywołuje post do serwera. Na przykład jeśli podasz przycisk, aby przesłać plik mogą obejmować kod, aby zapisać plik wewnątrz metody obsługi zdarzeń dla zdarzenia kliknięcia.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, aby zapisać plik na serwerze, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwość do sprawdzenia, czy <xref:System.Web.UI.WebControls.FileUpload> formant zawiera plik. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zmienna zwraca `false`, wyświetli komunikat użytkownika informacją, że kontrolka nie zawiera pliku. Nie sprawdzaj <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości, aby określić, czy plik do przekazania nie istnieje, ponieważ ta właściwość zawiera domyślnie 0 bajtów. W związku z tym nawet wtedy, gdy <xref:System.Web.UI.WebControls.FileUpload> formantu jest pusty, <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> zwraca wartość inną niż null.  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>Zagadnienia dotyczące zabezpieczeń  
 Podczas wywoływania <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy określić pełną ścieżkę katalogu, w którym można zapisać przekazanego pliku. Jeśli ścieżka nie jest jawnie zostanie w kodzie aplikacji, jest wyjątek przy próbie przekazania pliku. To zachowanie pomaga chronić uniemożliwiając użytkownikom możliwość zapisu do dowolnej lokalizacji w strukturze katalogu aplikacji, a także uniemożliwienia dostępu do katalogów głównych poufnych plików na serwerze.  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda zapisuje przekazanego pliku do określonego katalogu. W związku z tym aplikacji ASP.NET musi mieć uprawnienia do zapisu w katalogu na serwerze. Istnieją dwa sposoby, że aplikacja może uzyskać dostęp do zapisu. Należy jawnie udzielić uprawnień konta, pod którą jest uruchomiona aplikacji, w katalogu, w którym będą zapisywane pliki przekazane do zapisu. Alternatywnie można zwiększyć poziom zaufania, który został udzielony do aplikacji ASP.NET. Aby uzyskać dostęp do zapisu do katalogu wykonywania dla aplikacji, aplikacja musi otrzymać <xref:System.Web.AspNetHostingPermission> obiektu o ustawienie poziomu zaufania <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> wartość. Po zwiększeniu poziom zaufania aplikacji dostęp do zasobów na serwerze. Należy pamiętać, że nie jest bezpieczną metodą, ponieważ złośliwy użytkownik uzyska kontrolę nad aplikacji będą również mogą być uruchamiane wyższy poziom zaufania. Jest najlepszym rozwiązaniem do uruchamiania aplikacji ASP.NET w kontekście użytkownika z minimalnymi uprawnieniami, które są wymagane do uruchomienia aplikacji. Aby uzyskać więcej informacji o zabezpieczeniach w aplikacjach ASP.NET, zobacz [podstawowe wskazówki dotyczące zabezpieczeń dla aplikacji sieci Web](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) i [poziomy zaufania platformy ASP.NET i pliki zasad](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>Ograniczenia pamięci  
 Jednym ze sposobów w celu ochrony przed "odmowa usługi" ataków ma limit rozmiaru plików, które mogą być przekazywane przy użyciu <xref:System.Web.UI.WebControls.FileUpload> formantu. Należy ustawić limit rozmiaru, który jest odpowiedni dla typów plików, które mają być przekazane. Domyślny maksymalny limit rozmiaru jest 4096 kilobajtów (KB) lub 4 megabajtów (MB). Można zezwolić na większych plików do przekazania przez ustawienie `maxRequestLength` atrybut elementu. Aby zwiększyć maksymalny dozwolony rozmiar pliku dla całej aplikacji, ustaw `maxRequestLength` atrybutu w pliku Web.config. Aby zwiększyć maksymalny dozwolony rozmiar pliku dla określonej strony, należy ustawić `maxRequestLength` atrybutu wewnątrz `location` elementu w pliku Web.config. Na przykład zobacz [lokalizacji — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).  
  
 Podczas przekazywania duże pliki, użytkownik może również wyświetlony następujący komunikat o błędzie:  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 Użytkownicy napotkania ten komunikat o błędzie, należy zwiększyć wartość `memoryLimit` atrybutu w pliku Web.config elementu plików dla aplikacji. `memoryLimit` Atrybut określa maksymalną ilość pamięci, używaną przez proces roboczy. Jeśli proces roboczy przekroczy `memoryLimit` kwota, tworzenie nowego procesu go zastąpić i wszystkie bieżące żądania są przypisane do nowego procesu.  
  
 Do kontrolowania tego, czy plik do przekazania tymczasowo przechowywane w pamięci lub na serwerze podczas przetwarzania żądania ustawiono `requestLengthDiskThreshold` atrybut elementu. Ten atrybut umożliwia zarządzanie rozmiar buforu strumienia wejściowego. Wartość domyślna to 256 bajtów. Należy określić wartość nie może przekraczać wartości określonej dla `maxRequestLength` atrybutu.  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>Używanie formantu przekazywaniem plików za pomocą formantu UpdatePanel  
 <xref:System.Web.UI.WebControls.FileUpload> Kontroli jest przeznaczony do użycia tylko w scenariuszach odświeżania strony, a nie w scenariuszach odświeżania strony asynchroniczne podczas renderowania stron częściowych. Jeśli używasz <xref:System.Web.UI.WebControls.FileUpload> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> sterowania, można przekazać pliku, za pomocą formantu, który jest <xref:System.Web.UI.PostBackTrigger> obiektu panelu. <xref:System.Web.UI.UpdatePanel> Formanty są używane do aktualizacji wybranych regionach strony zamiast aktualizowania całej strony odświeżania strony. Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [omówienie renderowania stron częściowych](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Projekt programu Visual Studio Web lokacji z kodem źródłowym jest dostępna powiązany z tym tematem: [Pobierz](http://go.microsoft.com/fwlink/?LinkId=191897).  
  
 Ta sekcja zawiera następujące cztery przykłady:  
  
-   Pierwszym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w ścieżce określonej w kodzie.  
  
-   Drugi przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonym katalogu w systemie plików dla aplikacji.  
  
-   Trzeci przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant zapisuje pliki do określonej ścieżki, który ogranicza rozmiar pliku, które mogą być przekazywane.  
  
-   Czwarty przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant zapisuje pliki do określonej ścieżki, który umożliwia tylko pliki mające doc lub xls rozszerzeń nazw plików do przekazania.  
  
> [!CAUTION]
>  Podstawowa składnia dowodzą te przykłady <xref:System.Web.UI.WebControls.FileUpload> sterowania, ale nie wskazują wszystkie niezbędne błąd sprawdzenie, czy powinna zostać ukończona przed do zapisywania pliku. Aby uzyskać bardziej szczegółowy przykład, zobacz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w ścieżce określonej w kodzie. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w określonym katalogu w systemie plików dla aplikacji. <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> Właściwość jest używana do uzyskania pliku fizycznego systemu ścieżki katalogu głównego aktualnie realizowanej aplikacji serwera. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w ścieżce określonej w kodzie. Formant ogranicza rozmiar pliku, które mogą być przekazywane do 5 MB. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Właściwość jest używana do dostępu do podstawowych <xref:System.Web.HttpPostedFile.ContentLength%2A> właściwości i przywrócenie rozmiaru pliku. Jeśli rozmiar plików do przekazania jest mniejszy niż 2 MB <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze. Oprócz sprawdzania, czy ustawienie rozmiar maksymalny w kodzie aplikacji, można ustawić `maxRequestLength` atrybutu elementu maksymalny dozwolony rozmiar w pliku konfiguracyjnym aplikacji.  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w ścieżce określonej w kodzie. W tym przykładzie umożliwia tylko pliki mające doc lub xls rozszerzeń nazw plików do przekazania. <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> Wywoływana jest metoda zwraca rozszerzenie pliku do przekazania. Jeśli plik ma doc lub xls rozszerzenie nazwy pliku, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze.  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FileUpload" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> konstruktora, aby zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FileUpload> klasy. <xref:System.Web.UI.WebControls.FileUpload> Formantu nie automatycznie zapisuje plik na serwerze po wybraniu plik do przekazania. Należy podać jawnie formant lub mechanizmu, aby zezwolić na przesłanie pliku określonego przez użytkownika. Na przykład można podać przycisku, który użytkownik klika, aby przekazać plik.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FileUpload> klasy. Należy pamiętać, że w tym przykładzie pokazano składni konstruktora, ale nie dodaje funkcji do formantu po jego utworzeniu.  
  
 Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.FileUpload> klasy.  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Dodaje atrybuty HTML i style <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu do renderowania do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Metoda jest głównie używana przez formant deweloperów do wstawienia odpowiednie atrybuty i style do <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> strumień wyjściowy dla <xref:System.Web.UI.WebControls.FileUpload> formantu. <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Przesłonięcia metody <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy można wybierać wielu plików do przekazania.</summary>
        <value>
          <see langword="true" /> Jeżeli można wybrać wiele plików; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę bajtów w pliku, który jest określana za pomocą <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu.</summary>
        <value>A <see cref="T:System.Byte" /> tablicy, której zawartość określonego pliku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload> Formantu nie automatycznie odczytuje plik z klienta. Należy podać jawnie formant lub mechanizmu, aby zezwolić na przesłanie pliku określonego przez użytkownika. Na przykład można podać przycisku, który użytkownik może kliknąć, aby przekazać plik. Kod, który zapisu można zapisać określony plik można wywołać <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość, która zwraca zawartość pliku.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwość, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwość do sprawdzenia, czy <xref:System.Web.UI.WebControls.FileUpload> formant zawiera plik do przekazania. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwości. Jeśli zmienna zwraca `false`, wyświetli komunikat użytkownika informacją, że kontrolka nie zawiera pliku. Jeśli nie podasz kodu obsługi błędu, aby sprawdzić, czy plik istnieje, próba zapisania nieistniejący plik zgłasza <xref:System.Web.HttpException> wyjątku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formantu. Po kliknięciu przez użytkownika **przekazywanego pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na stronie. W tym przykładzie użyto <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> właściwości można przekazać całego pliku.  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie odczytano całego pliku.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.IO.Stream" /> obiektu, który wskazuje plik do przekazania, przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu.</summary>
        <value>A <see cref="T:System.IO.Stream" /> który wskazuje plik do przekazania, przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Pobiera właściwość <xref:System.IO.Stream> obiektu, który wskazuje plik do przekazania za pomocą <xref:System.Web.UI.WebControls.FileUpload> formantu. Użyj <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwość, aby uzyskać dostęp do zawartości pliku. Na przykład można użyć <xref:System.IO.Stream> obiekt, który jest zwracany przez tę właściwość, aby odczytać zawartości pliku bajtów i zapisanie ich w tablicy bajtów.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formantu. <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Właściwość jest używana do odczytu zawartość pliku do tablicy typu byte. Po kliknięciu przez użytkownika **przekazywanego pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na stronie.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę pliku na komputerze klienckim, aby przekazać przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu.</summary>
        <value>Ciąg określający nazwę pliku na komputerze klienckim, aby przekazać przy użyciu <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera nazwę pliku na komputerze klienckim, aby przekazać przy użyciu <xref:System.Web.UI.WebControls.FileUpload> formantu. Nazwa pliku <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwość zwraca nie ma ścieżki pliku na kliencie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który zapisuje pliki w ścieżce określonej w kodzie. <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> Właściwość jest używana, można pobrać nazwy pliku do przekazania. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metoda jest wywoływana, aby zapisać plik w określonej ścieżce na serwerze, przy użyciu tej samej nazwy pliku ma na kliencie. Należy pamiętać, w tym przykładzie pokazano podstawowa składnia dla tego formantu, ale nie wykazują wszystkie niezbędne sprawdzanie błędów, które należy wykonać przed zapisaniem pliku. Aby uzyskać bardziej szczegółowy przykład, zobacz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.FileUpload" /> formant zawiera plik.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.FileUpload" /> zawiera plik; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Właściwości pobiera wartość wskazującą czy <xref:System.Web.UI.WebControls.FileUpload> formant zawiera plik do przekazania. Ta właściwość służy do Sprawdź, czy plik do przekazania istnieje przed wykonaniem operacji na pliku. Na przykład przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, aby zapisać plik na dysku, użyj <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwości, aby sprawdzić, czy plik istnieje. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zmienna zwraca `false`, wyświetli komunikat użytkownika informacją, że kontrolka nie zawiera pliku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który wykonuje sprawdzanie błędów. Przed zapisaniem pliku <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> metoda jest wywoływana, aby sprawdzić, czy formant zawiera plik do przekazania. Ponadto <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metoda jest wywoływana w celu sprawdzenia, czy plik o tej samej nazwie już występuje w ścieżce. Jeśli tak, nazwa pliku do przekazania jest poprzedzona znakiem podkreślenia przed <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana. Zapobiega to istniejącego pliku przed zastąpieniem.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wszystkie pliki zostały przekazane.</summary>
        <value>
          <see langword="true" /> Jeśli wcześniej przekazano pliki w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca również wartość `false` Jeśli przekazaniu pusty plik (zero bajtów).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenia dla <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> Powiadamia metody <xref:System.Web.UI.WebControls.FileUpload> wykonaj wszystkie niezbędne kroki renderowania wstępnego przed zapisaniem stanu widoku i renderowania zawartości formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odpowiadającego <see cref="T:System.Web.HttpPostedFile" /> obiektu dla pliku, który jest przekazywany za pomocą <see cref="T:System.Web.UI.WebControls.FileUpload" /> formantu.</summary>
        <value>
          <see cref="T:System.Web.HttpPostedFile" /> Przekazane za pomocą pliku <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Pobiera właściwość odpowiadającego <xref:System.Web.HttpPostedFile> obiektu dla pliku, który jest przekazywany za pomocą <xref:System.Web.UI.WebControls.FileUpload> formantu. Ta właściwość umożliwia dostęp do dodatkowych właściwości przekazanego pliku.  
  
 Można użyć <xref:System.Web.HttpPostedFile.ContentLength%2A> właściwości do pobrania długość pliku. Można użyć <xref:System.Web.HttpPostedFile.ContentType%2A> właściwości do pobrania MIME Typ pliku zawartości. Ponadto można użyć <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości, aby uzyskać dostęp do <xref:System.Web.HttpPostedFile.FileName%2A> właściwość <xref:System.Web.HttpPostedFile.InputStream%2A> właściwości oraz <xref:System.Web.HttpPostedFile.SaveAs%2A> — metoda. Jednak te same funkcje odbywa się przy <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> właściwości, <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> właściwości oraz <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formantu. Po kliknięciu przez użytkownika **przekazywanego pliku** przycisku, zawartość pliku są wyświetlane jako bajtów w polu tekstowym na stronie. W tym przykładzie użyto <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> właściwości, aby uzyskać dostęp do <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> właściwości. <xref:System.Web.HttpPostedFile.ContentLength%2A> Właściwość jest używana do określania długości pliku przed skopiowaniem zawartość pliku do tablicy typu byte.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję przekazywanych plików.</summary>
        <value>Kolekcja przekazanych plików.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli zawartości.</param>
        <summary>Wysyła <see cref="T:System.Web.UI.WebControls.FileUpload" /> kontroli zawartości do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość do renderowania na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.Render%2A> Wysyła metody <xref:System.Web.UI.WebControls.FileUpload> kontroli zawartości do określonego <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> obiektu, który zapisuje zawartość do renderowania na kliencie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg, który określa pełną ścieżkę do lokalizacji serwera, na którym można zapisać przekazanego pliku.</param>
        <summary>Zapisuje zawartość przekazanego pliku do określonej ścieżki na serwerze sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Metody zapisuje zawartość przekazanego pliku do określonej ścieżki na serwerze sieci Web.  
  
 <xref:System.Web.UI.WebControls.FileUpload> Formantu nie automatycznie zapisuje plik na serwerze po wybraniu plik do przekazania. Należy podać jawnie formant lub mechanizmu, aby zezwolić na przesłanie pliku określonego przez użytkownika. Na przykład można podać przycisku, który użytkownik klika, aby przekazać plik. Kod, który zapisu można zapisać określony plik powinny wywoływać <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metodę, która zapisuje zawartość pliku do określonej ścieżki na serwerze. Zazwyczaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana w metodzie obsługi zdarzeń dla zdarzenia, który wywołuje post do serwera. Na przykład jeśli podasz przycisk służący do przesyłania pliku, kod, aby zapisać plik na serwerze można następnie się wewnątrz metody obsługi zdarzeń dla zdarzenia, kliknij przycisk.  
  
 Podczas wywoływania <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy podać pełną ścieżkę katalogu na serwerze, w której chcesz zapisać przekazanego pliku. Jeśli użytkownik jawnie ścieżka nie została podana w kodzie aplikacji <xref:System.Web.HttpException> wyjątek przy próbie przekazania pliku. To zachowanie pomaga chronić pliki na serwerze, uniemożliwiając użytkownikom należy określić ścieżkę, w której chcesz zapisać pliki, które ich przekazać.  
  
 Przed wywołaniem <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody, należy użyć <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> właściwość do sprawdzenia, czy <xref:System.Web.UI.WebControls.FileUpload> formant zawiera plik do przekazania. Jeśli <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> zwraca `true`, wywołaj <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metody. Jeśli zmienna zwraca `false`, wyświetli komunikat użytkownika informacją, że kontrolka nie zawiera pliku. Jeśli nie podasz kodu obsługi błędu, aby sprawdzić, czy plik istnieje, próba zapisania nieistniejący plik zgłasza <xref:System.Web.HttpException> wyjątku.  
  
 Wywołania <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> działała, aplikacja ASP.NET musi mieć uprawnienia do zapisu w katalogu na serwerze. Istnieją dwa sposoby, że aplikacja może uzyskać dostęp do zapisu. Należy jawnie udzielić uprawnień konta, pod którą jest uruchomiona aplikacji, w katalogu, w którym będą zapisywane pliki przekazane do zapisu. Alternatywnie można zwiększyć poziom zaufania, który został udzielony do aplikacji ASP.NET. Aby uzyskać dostęp do zapisu do katalogu wykonywania dla aplikacji, aplikacja musi otrzymać <xref:System.Web.AspNetHostingPermission> obiektu o ustawienie poziomu zaufania <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> wartość. Po zwiększeniu poziom zaufania aplikacji dostęp do zasobów na serwerze. Należy pamiętać, że nie jest bezpieczną metodą, ponieważ złośliwy użytkownik uzyska kontrolę nad aplikacji będą również mogą być uruchamiane wyższy poziom zaufania. Jest najlepszym rozwiązaniem do uruchamiania aplikacji ASP.NET w kontekście użytkownika, który ma minimalne uprawnienia, które są wymagane do uruchomienia aplikacji. Aby uzyskać więcej informacji o zabezpieczeniach w aplikacjach ASP.NET, zobacz [podstawowe wskazówki dotyczące zabezpieczeń dla aplikacji sieci Web](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) i [poziomy zaufania platformy ASP.NET i pliki zasad](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć <xref:System.Web.UI.WebControls.FileUpload> formant, który wykonuje sprawdzanie błędów. Przed zapisaniem pliku <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> metoda jest wywoływana, aby sprawdzić, czy istnieje plik do przekazania. Ponadto <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metoda jest wywoływana w celu sprawdzenia, czy plik o tej samej nazwie już istnieje w ścieżce. Jeśli tak, nazwa pliku do przekazania jest prefiksem przed <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> metoda jest wywoływana. Zapobiega to istniejącego pliku przed zastąpieniem.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="filename" /> nie jest pełną ścieżką.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
  </Members>
</Type>