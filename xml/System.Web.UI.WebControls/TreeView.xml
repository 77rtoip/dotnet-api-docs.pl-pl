<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f90f7b29eb010b5251f3890771308c516407037" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla hierarchiczne dane, takie jak spis treści, w strukturze drzewa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Węzły](#nodes)  
  
-   [Dane statyczne](#static_data)  
  
-   [Powiązanie danych](#binding_to_data)  
  
-   [Wypełnianie dynamiczne węzła](#dynamic_node_population)  
  
-   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)  
  
-   [Zdarzenia](#events)  
  
-   [Przewijanie](#scrolling)  
  
-   [Ułatwienia dostępu](#accessibility)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.TreeView> Kontroli służy do wyświetlania hierarchiczne dane, takie jak spis treści lub katalog pliku w strukturze drzewa i obsługuje następujące funkcje:  
  
-   Powiązanie danych umożliwia węzłom formantu może być powiązane z danych XML, tabelarycznym lub relacyjne.  
  
-   Lokacji nawigacji dzięki integracji z <xref:System.Web.UI.WebControls.SiteMapDataSource> formantu.  
  
-   Tekst węzła, który może być wyświetlana jako zwykłego tekstu lub hiperłącza.  
  
-   Programowy dostęp do <xref:System.Web.UI.WebControls.TreeView> model obiektów do tworzenia drzewa, zapełniać węzły, ustaw właściwości, i tak dalej dynamicznie.  
  
-   Wypełnianie węzła po stronie klienta (w nieobsługiwanych przeglądarkach).  
  
-   Możliwość wyświetlania pola wyboru obok każdego węzła.  
  
-   Można dostosować wygląd za pośrednictwem kompozycje, zdefiniowane przez użytkownika obrazów i style.  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView> Formant jest przeznaczony do użycia w <xref:System.Web.UI.UpdatePanel> kontroli tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> ma ustawioną wartość `true`. <xref:System.Web.UI.UpdatePanel> Formanty są używane do aktualizacji wybranych regionach strony zamiast aktualizowania całej strony odświeżania strony. Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [omówienie renderowania stron częściowych](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Węzły  
 <xref:System.Web.UI.WebControls.TreeView> Kontroli składa się z węzłów. Każdy wpis w drzewie węzeł i jest reprezentowana przez <xref:System.Web.UI.WebControls.TreeNode> obiektu. Typy węzłów są zdefiniowane w następujący sposób:  
  
-   Węzeł, który zawiera inne węzły jest nazywany *węzła nadrzędnego*.  
  
-   Węzeł, który jest zawarty w innym węźle jest nazywany *podrzędnym*.  
  
-   Węzeł, który nie ma elementów podrzędnych jest nazywany *węzeł liścia*.  
  
-   Węzeł, który nie jest zawarty w innym węźle, ale jest elementem nadrzędnym dla wszystkich innych węzłów jest *węzła głównego*.  
  
 Węzeł może być nadrzędną podrzędny, ale głównego i nadrzędnym, a węzłów liści wzajemnie się wykluczają. Kilka właściwości visual i behawioralnych węzłów zależą od tego, czy węzeł jest główny, podrzędny lub węzeł liścia.  
  
 Chociaż w strukturze drzewa typowe jest tylko jeden węzeł główny, <xref:System.Web.UI.WebControls.TreeView> formantu można dodawać wiele węzłów głównych do struktury drzewa. Jest to przydatne, jeśli chcesz wyświetlić listy elementów bez wyświetlania na jednym węźle głównym, tak jak listę kategorii produktów.  
  
 Każdy węzeł ma <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości. Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość jest wyświetlana w <xref:System.Web.UI.WebControls.TreeView>, podczas gdy <xref:System.Web.UI.WebControls.TreeNode.Value%2A> jest używana do przechowywania wszelkich dodatkowych danych dotyczących tego węzła, takich jak dane są przekazywane do zdarzenia odświeżania strony, który jest skojarzony z węzłem.  
  
 Węzeł może być w jednym z dwóch trybów: trybu wyboru ani nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości dla węzła na wartość inną niż ciąg pusty (""). Aby przełączyć węzła do trybu wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości dla węzła na ciąg pusty ("").  
  
> [!NOTE]
>  Niektóre przeglądarki internetowe ma ograniczenie, które mogą wpłynąć na wydajność <xref:System.Web.UI.WebControls.TreeView> formantu. Na przykład program Microsoft Internet Explorer 6.0 ma limit znaków adresu URL 2067 znaki, które go zapisuje. Jeśli liczba znaków w adresie URL węzła jest większy niż ten numer, rozwinięcie tego węzła zakończy się niepowodzeniem i nie jest wyjątek.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Dane statyczne  
 Najprostsza modelu danych <xref:System.Web.UI.WebControls.TreeView> formant jest danych statycznych. Aby wyświetlić dane statyczne, za pomocą składni deklaratywnej, najpierw zagnieździć otwierające i zamykające `<Nodes>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.TreeView> formantu. Następnie należy utworzyć struktury drzewa przez zagnieżdżanie `<asp:TreeNode>` elementy między otwarcia i zamknięcia `<Nodes>` tagów. Każdy `<asp:TreeNode>` — element reprezentuje węzeł drzewa i mapowanym na <xref:System.Web.UI.WebControls.TreeNode> obiektu. Można ustawić właściwości każdego węzła przez ustawienie atrybuty jego `<asp:TreeNode>` elementu. Aby utworzyć podrzędnych węzłów, zagnieżdżać dodatkowe `<asp:TreeNode>` elementy między otwarcia i zamknięcia `<asp:TreeNode>` tagi węzła nadrzędnego.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Wiązanie z danymi  
 <xref:System.Web.UI.WebControls.TreeView> Formant można powiązać z danymi. Można użyć jednej z dwóch metod można powiązać <xref:System.Web.UI.WebControls.TreeView> kontroli typowi źródła danych:  
  
-   <xref:System.Web.UI.WebControls.TreeView> Formantu można używać do formantu źródła danych, który implementuje <xref:System.Web.UI.IHierarchicalDataSource> interfejsu, takich jak <xref:System.Web.UI.WebControls.XmlDataSource> kontroli lub <xref:System.Web.UI.WebControls.SiteMapDataSource> formantu. Aby powiązać z kontroli źródła danych, ustaw <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> formant <xref:System.Web.UI.Control.ID%2A> wartość formantu źródła danych. <xref:System.Web.UI.WebControls.TreeView> Formant automatycznie wiąże określone dane kontroli źródła. Jest to preferowana metoda można powiązać z danymi.  
  
-   <xref:System.Web.UI.WebControls.TreeView> Formant może również być powiązany <xref:System.Xml.XmlDocument> obiektu lub <xref:System.Data.DataSet> obiektu z relacjami. Aby powiązać z jednego z tych źródeł danych, ustaw <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> kontroli w źródle danych, a następnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> — metoda.  
  
 Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), węzeł Wyświetla wartość, która jest zwracana przez `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Węzeł można powiązać właściwość elementu danych z konkretnych określając przy użyciu powiązań węzła drzewa <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji. <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja zawiera `TreeNodeBinding` obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany. Możesz określić kryteria dla powiązania i właściwości elementu danych, które mają być wyświetlane w węźle. Aby uzyskać więcej informacji o powiązaniach węzła drzewa, zobacz <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
> [!IMPORTANT]
>  Złośliwy użytkownik może utworzyć żądania wywołania zwrotnego i pobieranie danych dla węzłów <xref:System.Web.UI.WebControls.TreeView> formant, który developer strony nie jest wyświetlana. W związku z tym bezpieczeństwo danych musi być implementowana przez źródło danych. Nie używaj <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości, aby ukryć dane.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Wypełnianie dynamiczne węzła  
 Czasami nie jest praktyczne statycznie definiowania struktury drzewa, ponieważ źródło danych zwraca za dużo danych lub danych do wyświetlenia zależy od informacji, które otrzymujesz w czasie wykonywania. W związku z tym <xref:System.Web.UI.WebControls.TreeView> sterowanie obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty. Aby wypełnić węzła dynamicznie, musi definiować metodę obsługi zdarzeń, która zawiera logikę do wypełnienia węzła dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzeń.  
  
 Przeglądarek, które obsługują skrypty wywołania zwrotnego można również korzystać z populacji węzła po stronie klienta. (W tym program Internet Explorer 5.5 i nowsze oraz innych przeglądarek.) Włącza populacji węzła po stronie klienta <xref:System.Web.UI.WebControls.TreeView> formantu, aby wypełnić węzła przy użyciu skryptu klienta, gdy użytkownicy rozwiń węzeł, bez konieczności obiegu do serwera. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizowanie interfejsu użytkownika  
 Istnieje wiele sposobów, aby dostosować wygląd <xref:System.Web.UI.WebControls.TreeView> formantu. Po pierwsze możesz określić inny styl (na przykład rozmiar i kolor czcionki) dla każdego typu węzła.  
  
 Jeśli używasz kaskadowych arkuszy stylów (CSS), aby dostosować wygląd formantu, użyj style wbudowane lub pliku CSS, ale nie oba. Używając style wbudowane i osobnego pliku CSS może spowodować nieoczekiwane wyniki. Aby uzyskać więcej informacji o użyciu arkuszy stylów z formantami, zobacz [kontrolki serwera sieci Web i style CSS](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 W poniższej tabeli wymieniono style dostępnego węzła.  
  
|Właściwość stylu węzła|Opis|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|Ustawienia stylu dla węzła, gdy wskaźnik myszy znajduje się nad nim.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|Ustawienia stylu dla węzłów liści.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|Style domyślne ustawienia dla węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|Ustawienia stylu dla węzłów nadrzędnych.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|Ustawienia stylu dla węzła głównego.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|Ustawienia stylu dla wybranego węzła.|  
  
 Styl węzłów w określonych głębokości w drzewie można również sterować przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> kolekcji. Styl pierwszy w kolekcji odpowiada styl węzłów na pierwszy poziom w drzewie. Drugi styl w kolekcji odpowiada styl węzłów na drugim poziomie drzewa i tak dalej. To najczęściej służy do generowania spisu treści — styl menu nawigacji gdzie węzły na niektórych głębokości powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych.  
  
> [!NOTE]
>  Jeżeli styl jest zdefiniowany dla niektórych głębokość poziomie przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> kolekcji, przesłonięcia stylu dowolnego katalogu głównego, nadrzędny lub ustawienia stylu węzeł liścia dla węzłów na tym poziomie.  
  
 Innym sposobem zmienić wygląd formantu jest dostosowanie obrazów, które są wyświetlane w <xref:System.Web.UI.WebControls.TreeView> formantu. Własny niestandardowy zestaw obrazów dla różnych części formantu można określić przez ustawienie właściwości przedstawione w poniższej tabeli.  
  
|Właściwości obrazu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Adres URL obraz wyświetlany dla wskaźnika zwijanej węzła. Ten obraz jest zwykle znak minus (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Adres URL obraz wyświetlany dla wskaźnika rozwijanego węzła. Ten obraz jest zwykle znak plus (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Adres URL do folderu zawierającego obrazy liniowe używanego do łączenia węzłów nadrzędnych do podrzędnych węzłów. <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Również musi być ustawiona właściwość `true` dla tej właściwości, które mają wpływ.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Adres URL obraz wyświetlany dla wskaźnika węzła nie można rozwijać.|  
  
> [!NOTE]
>  Nie musisz dostosować dla każdej właściwości obrazu. Jeśli właściwości obrazu nie jest jawnie ustawiona, zostanie użyta wbudowanego domyślnego obrazu.  
  
 <xref:System.Web.UI.WebControls.TreeView> Sterowanie umożliwia również wyświetlane pole wyboru obok węzła. Gdy <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> wartość właściwości jest równa wartości innych niż `TreeNodeTypes.None`, są wyświetlane pola wyboru obok typów określonego węzła.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Właściwości można ustawić bitowe połączenie <xref:System.Web.UI.WebControls.TreeNodeTypes> wartości elementu członkowskiego wyliczenia.  
  
 Zawsze strona jest przesyłana do serwera, <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji jest automatycznie wypełniane przy użyciu wybranych węzłów. Jeśli są wyświetlane pola wyboru, możesz użyć <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> zdarzenia umożliwia uruchamianie procedury niestandardowe przy każdej zmianie stanu pola wyboru między ogłoszenia na serwerze.  
  
<a name="events"></a>   
## <a name="events"></a>Zdarzenia  
 <xref:System.Web.UI.WebControls.TreeView> Kontrola zapewnia kilka zdarzeń, które można zaprogramować przed. Pozwala na uruchamianie procedury niestandardowe, przy każdym wystąpieniu zdarzenia. W poniższej tabeli wymieniono zdarzenia, które są obsługiwane przez <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Występuje, gdy pola wyboru <xref:System.Web.UI.WebControls.TreeView> kontroli zmiany stanu między ogłoszenia na serwerze.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Występuje, gdy węzeł wybrano w <xref:System.Web.UI.WebControls.TreeView> formantu.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Występuje, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Występuje, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Występuje, gdy węzeł z jego <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ustawioną właściwość `true` jest rozwinięta w <xref:System.Web.UI.WebControls.TreeView> formantu.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Występuje, gdy element danych jest powiązany z węzła w <xref:System.Web.UI.WebControls.TreeView> formantu.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Przewijanie  
 <xref:System.Web.UI.WebControls.TreeView> Formant nie ma wbudowanej przewijania. Aby dodać przewijania, umieść <xref:System.Web.UI.WebControls.TreeView> kontroli w <xref:System.Web.UI.WebControls.Panel> sterować i Dodaj pasków przewijania do <xref:System.Web.UI.WebControls.Panel> formantu. Aby uzyskać więcej informacji, zobacz [informacje o formancie serwera sieci Web Panel](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślnie dla tego formantu nie mogą być zgodne ze standardami ułatwień dostępu. Aby uzyskać szczegółowe informacje dotyczące obsługi ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Ta sekcja zawiera przykłady kodu siedem:  
  
-   W pierwszym przykładzie kodu pokazano, jak skonfigurować ramek na drugi przykład kodu.  
  
-   W drugim przykładzie kodu pokazano, jak używać składni deklaratywnej do wyświetlania danych statycznych w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
-   Trzeci przykładowy kod przedstawia sposób powiązania <xref:System.Web.UI.WebControls.TreeView> formantu źródła danych XML.  
  
-   Czwarty przykładzie kodu przedstawiono przykładowe dane XML na trzeci przykład kodu.  
  
-   Piąty przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView> kontroli dla nawigacji w witrynie przez to powiązanie <xref:System.Web.UI.WebControls.SiteMapDataSource> formantu.  
  
-   Szóstego przykładzie kodu przedstawiono przykładowe dane mapy witryny dla piątego przykładów kodu.  
  
-   Siódmego przykładowy kod przedstawia sposób zapełniać węzły w <xref:System.Web.UI.WebControls.TreeView> sterowania od klienta.  
  
 Poniższy przykład kodu pokazuje, jak skonfigurować ramki w następującym przykładzie kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak używać składni deklaratywnej do wyświetlania danych statycznych w <xref:System.Web.UI.WebControls.TreeView> formantu. W tym przykładzie jest używana w zestawie ramek poprzedniego przykładu do wyświetlania spisu treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak można powiązać <xref:System.Web.UI.WebControls.TreeView> formantu źródła danych XML. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView> kontroli dla nawigacji w witrynie przez to powiązanie <xref:System.Web.UI.WebControls.SiteMapDataSource> formantu. W tym przykładzie działał prawidłowo należy skopiować dane mapy przykładowych lokacji, po tym przykładzie kodu w pliku o nazwie Web.sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowe dane mapy witryny dla poprzedniego przykładu kodu.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 W poniższym przykładzie pokazano, jak zapełniać węzły w <xref:System.Web.UI.WebControls.TreeView> sterowania od klienta. Wypełnianie węzła po stronie klienta jest włączone, węzły są wypełniane dynamicznie na kliencie, bez potrzeby publikowania na serwer.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Konstruktor do tworzenia i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeView> klasy. Aby dodać <xref:System.Web.UI.WebControls.TreeView> sterowania na stronę dynamicznie, Utwórz nową <xref:System.Web.UI.WebControls.TreeView> obiekt, ustaw jej właściwości, a następnie dodaj go do <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> kolekcji kontenera kontrolować, takich jak <xref:System.Web.UI.WebControls.PlaceHolder> kontroli.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> konstruktora, aby dodać <xref:System.Web.UI.WebControls.TreeView> kontrolować stronę dynamicznie. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> konstruktora, aby dodać <xref:System.Web.UI.WebControls.TreeView> kontrolować stronę dynamicznie. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Dodaje atrybuty HTML i style, które muszą być renderowana na określony <see cref="T:System.Web.UI.HtmlTextWriter" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.TreeView" /> formant automatycznie generuje powiązania węzła drzewa.</summary>
        <value>
          <see langword="true" /> Aby <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli automatycznego generowania powiązania węzła drzewa; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiązania węzła drzewa zdefiniować relacji między elementem danych i węzeł, który jest wiązany. Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), <xref:System.Web.UI.WebControls.TreeView> kontroli musi wiedzieć, których właściwość elementu danych do powiązania, do którego <xref:System.Web.UI.WebControls.TreeNode> właściwości. Jeśli <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView> formant automatycznie generuje domyślne powiązań węzła drzewa, które ustawić <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który jest skojarzony z powiązaniem, które wartość zwrócony przez `ToString` metody elementu danych.  
  
> [!NOTE]
>  Powiązania węzła drzewa automatycznie generowanych nie są dodawane do <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji.  
  
 W przypadku elementu XML, wartość, która jest zwracana w wyniku `ToString` metoda jest nazwa elementu zawiera wewnętrzna struktura pliku XML, ale nie jest przydatne w przeciwnym razie wartość. Aby utworzyć drzewo bardziej użyteczna, musi definiować własne powiązania węzła drzewa przy wprowadzaniu <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji.  
  
> [!NOTE]
>  W przypadku definiowania <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji, <xref:System.Web.UI.WebControls.TreeView> kontroli wykorzystuje te wartości zamiast powiązania węzła drzewa wygenerowanej automatycznie.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak wyłączyć generowanie powiązanie węzła drzewa automatyczne przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwości `false`. Drugim przykładzie kodu przedstawiono przykładowe dane mapy witryny dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu pokazuje, jak wyłączyć generowanie powiązanie węzła drzewa automatyczne przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwości `false`. A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> następnie zdefiniowano kolekcji do ustanawiania relacji między elementami danych w <xref:System.Web.UI.WebControls.SiteMapDataSource> kontroli i węzły <xref:System.Web.UI.WebControls.TreeView> formantu. W tym przykładzie działał prawidłowo należy skopiować dane mapy przykładowych lokacji, po tym przykładzie kodu w pliku o nazwie Web.sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowe dane mapy witryny dla poprzedniego przykładu.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiekty reprezentujące węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli wyświetlające zaznaczone pole wyboru.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> zawierający węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> wyświetlający zaznaczone pole wyboru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy są wyświetlane pola wyboru w <xref:System.Web.UI.WebControls.TreeView> kontroli (przez ustawienie <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwości na wartość inną niż `TreeNodeType.None`), użyj <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> właściwości, aby określić węzły, które są wyświetlane pola wyboru. Ta kolekcja jest najczęściej używany do Iterowanie wszystkich węzłów, które mają zaznaczone pole wyboru w drzewie.  
  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Zdarzenie jest zgłaszane, gdy pola wyboru <xref:System.Web.UI.WebControls.TreeView> kontroli zmiany stanu między ogłoszenia na serwerze. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Kolekcji jest wypełniana przy użyciu pierwszej głębokość przechodzenia struktury drzewa: każdego węzła nadrzędnego jest przetwarzany dół węzły podrzędne przed jest wypełniana następnego węzła nadrzędnego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> właściwości, aby określić węzły, które mają zaznaczone pole wyboru w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka każdy węzeł w drzewie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> Metoda zapewnia wygodny sposób, aby zamknąć każdy węzeł w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> metodę Zwiń wszystkie węzły w <xref:System.Web.UI.WebControls.TreeView> formantu w tym samym czasie.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia etykietkę narzędzia dla obrazu, który jest wyświetlany wskaźnik zwijanej węzła.</summary>
        <value>Etykietka narzędzia obrazu wyświetlanego dla wskaźnika zwijanej węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> właściwości w celu określenia ToolTip zwijanej obrazu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> właściwości w celu określenia etykietki narzędzia w przypadku obrazu, który jest wyświetlany dla wskaźnika zwijanej węzła.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika zwijanej węzła.</summary>
        <value>Adres URL niestandardowego obrazu do wyświetlenia dla zwijanej węzłów. Wartość domyślna to ciąg pusty (""), który zawiera domyślne minus obrazu znaku (-).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika zwijanej węzła. Ten obraz jest wyświetlany obok zwijanej węzła i zazwyczaj jest to znak minus (-).  
  
 Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub minus sign(-) lub znak plus (+). Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości do adresów URL dla niestandardowych obrazów. Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwości `false`.  
  
> [!NOTE]
>  Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView> kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają takie same wymiary.  
  
 W przypadku używania niestandardowego obrazu dla wskaźnika zwijanej węzła, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> właściwości w celu określenia etykietka narzędzia obrazu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika zwijanej węzła. Na przykład kodu do wyświetlenia i obraz do wyświetlenia w formancie, musisz podać własne obrazu i <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> musi mieć ustawioną właściwość `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kolekcję do przechowywania formantów podrzędnych.</summary>
        <returns>Zawsze zwraca <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Formant nie obsługuje osadzania formantów podrzędnych. Ta metoda została zastąpiona, aby uniemożliwić dodawanie formantów podrzędnych i zawsze zwraca <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy. <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> Metodę pomocnika.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> Metoda jest metodą pomocnika, która zwraca nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode> klasy.  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> Metoda jest używana głównie przez deweloperów formantu. Kontrolowanie deweloperów, którzy chcą rozszerzyć <xref:System.Web.UI.WebControls.TreeView> klasy rozszerzając <xref:System.Web.UI.WebControls.TreeNode> klasy powinny przesłaniać tę metodę, aby zwrócić obiekt pochodzący z <xref:System.Web.UI.WebControls.TreeNode>. Typową przyczyną rozszerzenie <xref:System.Web.UI.WebControls.TreeNode> klasy jest zastąpienie <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> i <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołania <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> metody klasy podstawowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki powiązane dane powinny zastępować <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> zamiast metody <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> reprezentujący relacja między elementem danych i węzeł, który jest wiązany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja zawiera <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany. Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), węzeł Wyświetla wartość, która jest zwracana przez `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Węzeł właściwość elementu danych z konkretnych można powiązać, określając powiązania węzła drzewa.  
  
 Podczas definiowania relacji między elementem danych i węzłem, należy określić kryteria dla powiązania i wartości, które można powiązać właściwości <xref:System.Web.UI.WebControls.TreeNode> obiektu. Kryteria wskazują, gdy element danych powinny być powiązane z węzłem. Głębokość węzła i/lub element członkowski danych można określić kryteria. Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład jeśli określisz głębokości węzła 0, wszystkie węzły w strukturze drzewa na poziomie 0 są powiązane za pomocą tego powiązania węzła drzewa. Element członkowski danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Na przykład element członkowski danych elementu XML określa nazwę elementu.  
  
 Jeśli wiele <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów zdefiniowanych powodujące konflikt ze sobą, <xref:System.Web.UI.WebControls.TreeView> kontroli stosuje powiązań węzła drzewa w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektu, który definiuje zarówno głębokości, jak i element członkowski danych.  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektu, który definiuje tylko głębokość.  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektu, który definiuje element członkowski danych.  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektu, który definiuje element członkowski danych ani głębokość.  
  
 Jeśli określono wiele powiązań spełniające te same kryteria pierwszeństwa, pierwszy powiązania w kolekcji jest stosowany.  
  
 Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który może być powiązana wartość. Możesz powiązać pole elementu danych lub atrybutu lub wyświetlić wartość statyczną. Aby uzyskać więcej informacji na powiązanie właściwości <xref:System.Web.UI.WebControls.TreeNode> obiekt do wartości, zobacz <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
 Mimo że <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji można wypełniać programowo, jest zwykle ustawiana deklaratywnie. Aby określić powiązania węzła drzewa, najpierw zagnieździć otwierające i zamykające `<DataBindings>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.TreeView> formantu. Następnie należy umieścić `<asp:TreeNodeBinding>` elementy między otwarcia i zamknięcia `<DataBindings>` znaczniki dla każdego węzła drzewa, możesz powiązanie chcesz określić.  
  
 Podczas wiązania danych są tworzone przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> formant `true`, powiązania, które są tworzone mieć <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> ustawioną właściwość `true`. Mieć powiązań danych, które są tworzone deklaratywnie <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> ustawioną właściwość `false`. Za pomocą składni deklaratywnej pozwala na kontrolowanie zachowania wiązania danych indywidualnych.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak użyć <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do zdefiniowania relacji między elementem danych i węzeł, który jest wiązany. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do zdefiniowania relacji między elementem danych i węzeł, który jest wiązany. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml. W tym przykładzie określa tylko <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości powiązania. Bardziej wydajne nieznaczne mogą zostać dodane również określenie <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> właściwości.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli renderuje skryptu po stronie klienta do obsługi rozwijanie i zwijanie zdarzenia.</summary>
        <value>
          <see langword="true" /> do renderowania skryptu po stronie klienta w przeglądarkach zgodne; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.TreeView> kontroli renderuje skryptu po stronie klienta w przeglądarkach zgodne do obsługi rozwijanie i zwijanie zdarzenia. Jeśli ta właściwość jest równa `true`, przeglądarek zgodne wykonanie kodu do rozwijanie i zwijanie węzłów na kliencie. Dane węzła drzewa musi być znane z wyprzedzeniem dla skryptu po stronie klienta do pracy. Przy użyciu skryptu klienta zapobiega ogłoszenie (post) na serwer zawsze węzła jest rozwinięte lub zwinięte.  
  
 Gdy dane węzła drzewa nie jest znany wcześniej, węzłów można wypełniać od klienta, jeśli `PopulateNodesFromClient` również ustawioną właściwość `true`. W tym scenariuszu, należy również podać metodę obsługi zdarzeń <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzeń, aby wypełnić węzłów. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwość jest ustawiona na `false`, <xref:System.Web.UI.WebControls.TreeView> kontroli dokonuje ogłoszenia serwer zawsze węzła jest rozwinięte lub zwinięte.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwości do renderowania skryptu po stronie klienta, który umożliwia rozwijanie i zwijanie węzłów w przeglądarkach zgodne. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwości do renderowania skryptu po stronie klienta, który umożliwia rozwijanie i zwijanie węzłów w przeglądarkach zgodne. Zwróć uwagę, że post do serwera nie jest wymagana do rozwijanie i zwijanie węzła podczas <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwość jest ustawiona na `false`. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zostanie otwarty każdy węzeł w drzewie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> Metoda zapewnia wygodny sposób Otwórz każdy węzeł w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> metody, aby rozwinąć wszystkie węzły w <xref:System.Web.UI.WebControls.TreeView> formantu w tym samym czasie.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę poziomów, które zostaną rozwinięte podczas obliczania <see cref="T:System.Web.UI.WebControls.TreeView" /> formant jest wyświetlany po raz pierwszy.</summary>
        <value>Głębokość do wyświetlenia, gdy <see cref="T:System.Web.UI.WebControls.TreeView" /> początkowo wyświetlana jest. Wartość domyślna to -1, która wyświetla wszystkie węzły.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> właściwości do kontrolowania renderowanie <xref:System.Web.UI.WebControls.TreeView> kontrolować pojawi się po raz pierwszy. W kolejnych ogłaszania zwrotnego węzły zachować ich bieżący stan rozwinięte.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia etykietkę narzędzia dla obrazu, który jest wyświetlany wskaźnik rozwijania węzła.</summary>
        <value>Etykietka narzędzia obrazu wyświetlanego dla wskaźnika rozwijanego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> właściwości w celu określenia etykietka narzędzia obrazu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> właściwości w celu określenia etykietki narzędzia w przypadku obrazu, który jest wyświetlany dla wskaźnika rozwijanego węzła.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika rozwijanego węzła.</summary>
        <value>Adres URL niestandardowego obrazu do wyświetlania węzłów można rozwijać. Wartość domyślna to ciąg pusty (""), który zawiera domyślne obrazu znak plus (+).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika rozwijanego węzła. Ten obraz jest wyświetlany obok rozwijanego węzła i zazwyczaj jest to znak plus (+).  
  
 Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-). Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości do adresów URL dla niestandardowych obrazów. Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwości `false`.  
  
> [!NOTE]
>  Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView> kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają takie same wymiary.  
  
 Do poprawnego wyświetlania obrazu niestandardowego, konieczne może być ustawiona <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> do `false`.  
  
 W przypadku używania niestandardowego obrazu dla wskaźnika rozwijanego węzła, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> właściwości w celu określenia etykietka narzędzia obrazu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika rozwijanego węzła. Na przykład kodu do wyświetlenia i obraz do wyświetlenia w formancie, musisz podać własne obrazu i <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> musi mieć ustawioną właściwość `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Ścieżka wartość węzła.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli w ścieżce określonej wartości.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> w ścieżce określonej wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metodę, aby pobrać węzeł z <xref:System.Web.UI.WebControls.TreeView> kontroli w ścieżce określonej wartości. Ścieżka wartość zawiera listę rozdzielonych ogranicznikami wartości węzła, które tworzą ścieżkę od węzła głównego do bieżącego węzła. Każdy węzeł przechowuje ścieżki wartość w <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Właściwość określa znak ogranicznika, który służy do rozdzielania wartości węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metoda pobierania węzła z <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wynik zdarzeń wywołania zwrotnego, przeznaczonego dla formantu.</summary>
        <returns>Wyniki wywołania zwrotnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolować implementuje <xref:System.Web.UI.ICallbackEventHandler> interfejsu i używa <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> do pobierania danych i <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> metody, aby zwrócić dane pobrane z formantem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który pozwala na ustawienie wygląd węzła, gdy wskaźnik myszy znajduje się nad nim.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący styl węzła, gdy wskaźnik myszy znajduje się nad nim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwości, aby sterować wyglądem węzła, gdy wskaźnik myszy znajduje się nad nim. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt, który zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `HoverNodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `HoverNodeStyle.ForeColor`). Ta funkcja jest obsługiwana tylko dla klientów obsługujących skryptu.  
  
> [!NOTE]
>  Aby użyć <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwość, należy uwzględnić `<head>` element z `runat="server"` atrybutu.  
  
 Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Ustawienia stylu dla <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwości zastąpić wszystkie odpowiednie ustawienia styl węzła, które znajdują się w <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Właściwości nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ustawioną właściwość `TreeNodeSelectAction.None`.  
  
 W odróżnieniu od <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> i <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości, które są <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektów, <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> jest właściwość <xref:System.Web.UI.WebControls.Style> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwości, aby sterować wyglądem węzła, gdy wskaźnik myszy znajduje się nad nim. W tym przykładzie do pracy, należy uwzględnić `<head>` element z `runat="server"` atrybutu.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupy obrazów do użycia na potrzeby <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> wartości. Wartość domyślna to <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości w celu określenia grupy obrazów do użycia na potrzeby <xref:System.Web.UI.WebControls.TreeView> formantu. Można wybrać zestaw wstępnie zdefiniowanych obrazów w formancie wygląd normalny lub zdefiniuj własny niestandardowy zestaw.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Właściwość nie ma wpływu na ustawienia stylu dowolnego węzła. Ustaw właściwość odpowiedni styl, takich jak <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości, jeśli chcesz dodać kolory niestandardowe i odstępy.  
  
 W poniższej tabeli przedstawiono prawidłowe wartości dla <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości.  
  
|Zestaw obrazu|Opis|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu obrazów strzałkę.|  
|`TreeViewImageSet.BulletedList`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu obrazów w kształcie romb punktor.|  
|`TreeViewImageSet.BulletedList2`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu obrazów w kształcie kwadratowy punktor.|  
|`TreeViewImageSet.BulletedList3`|Zestaw wstępnie zdefiniowanych romb podzielonym, kształt punktor obrazów.|  
|`TreeViewImageSet.BulletedList4`|Zestaw wstępnie zdefiniowanych alternatywnej podzielonym, romb w kształcie punktor obrazy o rozmiarach, które zależą od poziomu.|  
|`TreeViewImageSet.Contacts`|Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów MSN Messenger.|  
|`TreeViewImageSet.Custom`|Zestaw obrazu zdefiniowane przez użytkownika.|  
|`TreeViewImageSet.Events`|Zestaw wstępnie zdefiniowanych obrazu, który używa obrazy stylem dziennika zdarzeń.|  
|`TreeViewImageSet.Faq`|Zestaw wstępnie zdefiniowanych obrazu, który używa stylem często zadawane pytania dotyczące obrazów.|  
|`TreeViewImageSet.Inbox`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu obrazów stylem poczty e-mail.|  
|`TreeViewImageSet.News`|Zestaw wstępnie zdefiniowanych obrazu, który używa stylem grup dyskusyjnych obrazów.|  
|`TreeViewImageSet.Simple`|Zestaw wstępnie zdefiniowanych obrazu, który używa przedstawiono prosty kształtu.|  
|`TreeViewImageSet.Simple2`|Zestaw wstępnie zdefiniowanych obrazu, który używa prostego wypełnione kształty.|  
|`TreeViewImageSet.Msdn`|Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów MSDN.|  
|`TreeViewImageSet.WindowsHelp`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu obrazów pomocy systemu Windows.|  
|`TreeViewImageSet.XPFileExplorer`|Zestaw wstępnie zdefiniowanych obrazu przy użyciu Eksploratora Windows obrazów dostępnych w systemie Windows XP.|  
  
 Podczas definiowania niestandardowego zestawu obrazów, należy określić obraz dla każdej właściwości w poniższej tabeli. W przeciwnym razie jest używany obraz domyślny dla tej właściwości.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Adres URL niestandardowego obrazu wskaźnika zwijanej węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Adres URL niestandardowego obrazu wskaźnika rozwijanego węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Adres URL do folderu, który zawiera niestandardowych obrazów linii łączących węzły.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Adres URL niestandardowego obrazu wskaźnika węzła nie można rozwijać.|  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości, aby wyświetlić zestaw Eksploratora Windows obrazów w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Zestaw określonego obrazu nie jest jednym z <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który umożliwia określenie wyglądu węzłów liści.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący styl węzłów liścia <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości, aby sterować wyglądem węzłów liścia <xref:System.Web.UI.WebControls.TreeView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `LeafNodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `LeafNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli chcesz wygenerować tabeli menu nawigacyjne stylu treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> zamiast poszczególne ustawienia właściwości właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości, aby sterować wyglądem węzłów liścia <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.Style" /> obiekty reprezentujące style węzła na poszczególnych poziomach drzewa.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.StyleCollection" /> reprezentujący style węzła na poszczególnych poziomach drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> kolekcji alternatywą dla właściwości stylu (takich jak <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości) do sterowania styl węzłów na poszczególne poziomy drzewa. Styl węzłów w drzewie pierwszy poziom odpowiada pierwszego stylu w kolekcji. Drugi styl w kolekcji odnosi się do stylu węzłów drugiego poziomu drzewa i tak dalej. Ta właściwość jest używana najczęściej do generowania spisu treści — styl menu nawigacji gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych.  
  
 Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> tworzenie menu nawigacji dla właściwości. Kontrolka jest zawsze w pełni rozwinięta, ze wskaźnikiem węzeł rozszerzenia i obrazy ukryte. Ponadto <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> właściwość jest używana do sterowania odstępu poziomów węzła.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do folderu, który zawiera obrazy liniowe, które są używane do połączenia z węzłów podrzędnych węzłów nadrzędnych.</summary>
        <value>Ścieżka do folderu, który zawiera obrazy liniowe używanego do łączenia węzłów. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Formant może wyświetlać linii łączących węzły podrzędne do węzłów nadrzędnych podczas <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> właściwość jest ustawiona na `true`. Gdy są wyświetlane linie, użyj <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> właściwości w celu określenia dostępnej w sieci Web folderu, który zawiera zbiór wstępnie renderowanych obrazów do użycia dla wierszy. W poniższej tabeli opisano obrazów, które są używane przez <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
|Obraz|Opis|  
|-----------|-----------------|  
|Dash.gif|Obraz wiersza wyświetlane obok węzła głównego, gdy istnieje tylko jeden główny węzeł w strukturze drzewa i węzła głównego jest obiektem typu liść.|  
|Dashminus.gif|Znak minus (-) obraz wyświetlany obok węzła głównego, jeśli istnieje tylko jeden węzeł główny w strukturze drzewa, aby wskazać, że rozwinięciu węzła głównego.|  
|Dashplus.gif|Obraz znak plus (+) obok węzła głównego wyświetlany, gdy istnieje tylko jeden węzeł główny w strukturze drzewa, aby wskazać, że węzeł główny jest zwinięty.|  
|I.GIF|Obraz wiersza wyświetlany nawiązać węzłów sąsiadujących ze sobą.|  
|L.GIF|Wiersz obraz wyświetlany obok do ostatniego węzła w gałęzi po węzeł liścia.|  
|Lminus.gif|Obraz wiersza wyświetlane obok do ostatniego węzła w gałęzi, aby wskazać, że węzeł jest rozwinięty.|  
|Lplus.gif|Obraz wiersza wyświetlane obok do ostatniego węzła w gałęzi, aby wskazać, że węzeł jest zwinięty.|  
|Minus.gif|Znak minus (-) obraz wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest rozwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy główny węzeł zostanie zwinięty raz. Po załadowaniu strony obraz Rminus.gif jest wyświetlany.|  
|Noexpand.gif|Obraz rozdzielacza puste, wyświetlana obok węzeł liścia. Ten obraz umożliwia tekst w pionie.|  
|Plus.gif|Obraz znak plus (+) obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł wyświetlany jest zwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy główny węzeł zostanie rozwinięty raz. Po załadowaniu strony obraz Rplus.gif jest wyświetlany.|  
|R.GIF|Obraz wiersza wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest węzłem liścia.|  
|Rminus.gif|Znak minus (-) obraz wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest rozwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy strona jest ładowana jako pierwsza. Po katalog główny węzeł zostanie zwinięty po wyświetleniu Minus.gif obrazu.|  
|Rplus.gif|Obraz znak plus (+) obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł wyświetlany jest zwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy strona jest ładowana jako pierwsza. Po katalog główny węzeł zostanie rozwinięty po wyświetleniu Plus.gif obrazu.|  
|T.GIF|Obraz wiersza wyświetlany obok węzła środku struktury drzewa (na przecięciu t) do wskazywania węzeł liścia.|  
|Tminus.gif|Znak minus (-) obraz wyświetlany obok węzła środku struktury drzewa (na przecięciu t), aby wskazać, że węzeł jest rozwinięty.|  
|Tplus.gif|Obraz znaku plus (+), wyświetlana obok węzła środku struktury drzewa (na przecięciu t), aby wskazać, że węzeł jest zwinięty.|  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> nie ustawiono właściwości <xref:System.Web.UI.WebControls.TreeView> kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli).  
  
 Niektóre wizualnych projektantów, takich jak Microsoft Visual Studio, zapewniają narzędzia do generowania obrazy liniowe.  
  
 Czas wykonywania nie Przerzuć niestandardowych obrazów wyświetlane od prawej do lewej. Do obsługi zarówno od lewej do prawej i lewej do prawej strony sieci Web, musisz utworzyć zestawy obrazu dla obu kierunkach.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> właściwość, aby określić folder zawierający obrazy liniowe do wyświetlenia w <xref:System.Web.UI.WebControls.TreeView> formantu. Aby pracować z tego przykładu, umożliwiają utworzenie zestaw obrazy liniowe wcześniej za pomocą narzędzia Projektant wiersza. Umieść je w folderze o nazwie LineImages w katalogu dla przykładowej aplikacji.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Procesy ogłaszanie dane <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <returns>
          <see langword="true" />, jeśli <see cref="T:System.Web.UI.WebControls.TreeView" /> zmian stanu formantu w wyniku zdarzenia odświeżania strony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura strony ASP.NET śledzi wszystkie kontrolki serwera, które zwracają `true` z <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> wywołania metody, a następnie wywołuje <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> metody tych kontrolek.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Obiekt, który zawiera wartości stanu zapisanego widoku formantu.</param>
        <summary>Ładuje wcześniej zapisany widok stanu <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę poziomów drzewa powiązać <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Maksymalna liczba poziomów drzewa powiązać <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu. Wartość domyślna to -1, która wiąże wszystkie poziomy drzewa w źródle danych formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wiązania <xref:System.Web.UI.WebControls.TreeView> formantu ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości, aby ograniczyć liczbę poziomów drzewa powiązanie z formantem. Na przykład ustawienie tej właściwości na `2` wiąże węzeł główny i węzły znajdujących się bezpośrednio w węźle głównym do <xref:System.Web.UI.WebControls.TreeView> formantu. Wszystkie pozostałe węzły w źródle danych są ignorowane.  
  
> [!IMPORTANT]
>  Złośliwy użytkownik może utworzyć żądania wywołania zwrotnego i pobieranie danych dla węzłów <xref:System.Web.UI.WebControls.TreeView> formant, który developer strony nie jest wyświetlana. W związku z tym bezpieczeństwo danych musi być implementowana przez źródło danych. Nie używaj <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości, aby ukryć dane.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwość można powiązać tylko pierwszy węzeł dwa poziomy (głębokości 0 i 1) aby <xref:System.Web.UI.WebControls.TreeView> formantu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwość można powiązać tylko pierwszy węzeł dwa poziomy (głębokości 0 i 1) aby <xref:System.Web.UI.WebControls.TreeView> formantu. Wszystkie poziomy węzła w źródle danych są ignorowane. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wielkość wcięcia (w pikselach) dla obiekt podrzędny węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Ilość miejsca (w pikselach) między elementem podrzędnym lewej krawędzi a lewą krawędzią jego węzła nadrzędnego. Wartość domyślna to 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> właściwości do kontrolowania wielkości odstępów między lewą krawędzią elementem podrzędnym a lewą krawędzią jego węzła nadrzędnego.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Właściwość ma wpływ na każdy węzeł podrzędny w <xref:System.Web.UI.WebControls.TreeView> formantu. Nie jest możliwe kontrolowanie indywidualnie ilość wcięcie każdego węzła.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> właściwości do kontrolowania wcięcia węzłów podrzędnych.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektów, które reprezentuje węzły główne w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> zawiera węzły główne w <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> właściwości do pobrania <xref:System.Web.UI.WebControls.TreeNodeCollection> obiekt, który zawiera wszystkie węzły główne w drzewie. Ta kolekcja to powszechnie używane, szybko Iterowanie wszystkich węzłów głównych lub uzyskać dostępu do określonego głównego węzła drzewa.  
  
> [!NOTE]
>  Struktura drzewa typowe z tylko jednym węzłem głównym; jednak można dodać wiele węzłów głównych do <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Właściwości mogą służyć do programowego zarządzania węzły główne w drzewie. Można dodać, wstawianie, Usuń i pobrać <xref:System.Web.UI.WebControls.TreeNode> obiektów z kolekcji. Wszystkie aktualizacje w kolekcji są automatycznie odzwierciedlane w <xref:System.Web.UI.WebControls.TreeView> kontroli po następnej obiegu do serwera.  
  
 Aby uzyskać dostęp do węzłów podrzędnych węzła głównego, należy użyć <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwość węzła. Użyj <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości każdego kolejnych poziomu nadrzędnego węzła przechodzenia z poziomu węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> właściwości przechodzenia drzewa.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który umożliwia ustawienie domyślnego wyglądu w węzłach <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący domyślny styl węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości, aby sterować wyglądem domyślnego węzła w <xref:System.Web.UI.WebControls.TreeView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `NodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `NodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Z odpowiednimi ustawieniami styl węzła w <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości zastąpienia ustawień stylu <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości.  
  
 Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> zamiast poszczególne ustawienia właściwości właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości, aby sterować wyglądem węzłów w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst będzie zawijany do węzła, gdy węzeł zabraknie miejsca.</summary>
        <value>
          <see langword="true" /> Aby zawijać tekst; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> właściwości w celu określenia, czy tekst, który jest wyświetlany w każdym węźle zawijany, gdy zabraknie mu miejsca.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> właściwość, aby zawijać tekst <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika węzła nie można rozwijać.</summary>
        <value>Adres URL niestandardowego obrazu do wyświetlania węzłów nie można rozwijać. Wartość domyślna to ciąg pusty (""), który wyświetla domyślny obraz puste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika węzła nie można rozwijać. Obraz wskaźnika-rozwijanego węzła (lub rozdzielacza) jest wyświetlany obok węzłów liści (zamiast wskaźniki rozwijanej i zwijanej węzła), aby były wyrównane węzłów liści z węzłami nadrzędny lub główny.  
  
 Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-). Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości z adresami URL, niestandardowych obrazów. Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwości `false`.  
  
> [!NOTE]
>  Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView> kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają takie same wymiary.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> właściwości w celu określenia niestandardowego obrazu wskaźnika węzła nie można rozwijać. Na przykład kodu do wyświetlenia i obraz do wyświetlenia w formancie, musisz podać własne obrazu i <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> musi mieć ustawioną właściwość `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.TreeView> formantu, aby podnieść <xref:System.Web.UI.Control.Init> zdarzeń. Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.TreeView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> Metoda zostanie przesłonięta zarejestrować ogłaszania zwrotnego. Skrypt po stronie klienta jest włączone, powoduje także, niezbędne skrypt i ukryte pola.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Zdarzenie jest wywoływane po wybraniu węzła w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizowanie wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.  
  
 Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości węzła, aby określić, które zdarzenie jest wywoływane po wybraniu tego węzła.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ustawioną właściwość `TreeNodeSelectAction.None`.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView> kontroli zmian stanu między ogłoszenia na serwerze. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> w klasie pochodnej, należy wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Zdarzenie jest zgłaszane, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Zdarzenie jest wywoływane, gdy element danych jest powiązana z węzła w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ma ustawioną wartość właściwości dla węzła <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> lub <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenie również jest wywoływane po kliknięciu w tym węźle <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> zdarzenie <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> sterowanie obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.  
  
 Aby wypełnić węzła dynamicznie, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości dla węzła do `true`. Następnie określ metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenie, które wypełnia programowo węzła. Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła jest wypełnione. Struktura węzła jest tworzony przez dodanie <xref:System.Web.UI.WebControls.TreeNode> obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie. Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.  
  
 Obsługiwane przeglądarki (Microsoft Internet Explorer 4.0 zgodnego przeglądarek i nowsze) mogą również korzystać populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView> formantu do wypełnienia węzła na kliencie dynamicznie, gdy ten węzeł jest rozwinięty, co zapobiega konieczności post do serwera. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który umożliwia określenie wyglądu węzłów nadrzędnych w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący styl węzłów nadrzędnych w <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> właściwości, aby sterować wyglądem węzłów nadrzędnych w <xref:System.Web.UI.WebControls.TreeView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `ParentNodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `ParentNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> zamiast poszczególne ustawienia właściwości właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> właściwości, aby sterować wyglądem węzłów nadrzędnych w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znak używany do ograniczania wartości węzła, które są określone przez <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> właściwości.</summary>
        <value>Znak używany do ograniczania wartości węzła określone w <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> właściwości. Wartość domyślna to znak ukośnika (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość zawiera listę rozdzielonych ogranicznikami węzeł wartości, które tworzą ścieżkę od węzła głównego do bieżącego węzła. Użyj <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> właściwości w celu określenia ogranicznik znak, który służy do rozdzielania wartości węzła. Ta wartość jest najczęściej używana podczas analizowania listy dla poszczególnych wartości.  
  
 W zależności od tekst, który jest wyświetlany w <xref:System.Web.UI.WebControls.TreeView> znak ogranicznika kontroli, może być konieczne zmiany, aby uniknąć konfliktów. Na przykład jeśli ustawisz znak ogranicznika przecinka wyświetlanego tekstu nie powinna zawierać żadnych przecinki; w przeciwnym razie <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości nie można przeanalizować dokładnie.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> właściwości w celu określenia znak ogranicznika dla <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwość węzła. Ta wartość jest następnie używany do analizy <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości dla poszczególnych wartości.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wszystkie węzły na podstawie źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> Metoda jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.TreeView> formantu można powiązać z określonego źródła danych do formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> metody jest zapieczętowany, należy zastąpić <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> metody, jeśli należy wykonać wszelkie dodatkowe zadania podczas wiązania danych.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł danych jest wypełniana na żądanie od klienta.</summary>
        <value>
          <see langword="true" /> Aby wypełnić dane węzła drzewa na żądanie od klienta; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> sterowanie obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.  
  
 Oprócz wypełnianie węzłów na żądanie, prawdopodobnie zapełniać węzły bezpośrednio w przeglądarce klienta obsługiwanych. Gdy <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> właściwość jest ustawiona na `true`, usługa jest wywoływana z klienta do wypełnienia węzły drzewa, co eliminuje konieczność post do serwera. W przeciwnym razie <xref:System.Web.UI.WebControls.TreeView> kontroli dokonuje ogłoszenia serwera do wypełnienia węzłów.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> Również musi być ustawiona właściwość `true` aby <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> można ustawić dla właściwości `true`.  
  
 Aby wypełnić węzła na kliencie, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> właściwości `true` , a następnie ustaw <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości dla węzła do `true`. Następnie określ metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenie, które wypełnia programowo węzła. Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła jest wypełnione. Utwórz strukturę węzła, dodając <xref:System.Web.UI.WebControls.TreeNode> obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie. Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.  
  
> [!NOTE]
>  Funkcja wypełniania węzła po stronie klienta jest obsługiwana w przeglądarkach, które obsługują skrypty wywołania zwrotnego. Aby sprawdzić, czy przeglądarka obsługuje dostęp skrypty wywołania zwrotnego, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwość <xref:System.Web.HttpBrowserCapabilities> klasy. Można uzyskać dostępu do wystąpienia <xref:System.Web.HttpBrowserCapabilities> klasy dla bieżącego żądania za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A> właściwość <xref:System.Web.HttpRequest> klasy.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> właściwość, aby włączyć populacji po stronie klienta w węzłach <xref:System.Web.UI.WebControls.TreeView> formantu. Zwróć uwagę, że podczas wypełniania węzła po stronie klienta jest włączone, węzły są wypełniane dynamicznie na kliencie, bez potrzeby publikowania na serwer.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Zgłasza zdarzenie wywołania zwrotnego przy użyciu określonych argumentów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> Metoda to metoda pomocnika <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Włącza <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu, aby przetworzyć zdarzenie jest wywoływane, gdy formularz jest przesyłana do serwera. <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> Metoda to metoda pomocnika <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona przekazuje wartość `eventArgument` parametr <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> metody formantu, który implementuje <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> interfejsu. To <xref:System.Web.UI.WebControls.TreeView> kontroli również renderuje element HTML, który powoduje, że zdarzenia odświeżania strony. Jeśli formant powoduje skryptu po stronie klienta można opublikować na serwerze, jest przekazany argument skryptu `eventArgument` parametru. Jeśli zdarzenie ogłaszania zwrotnego strony jest spowodowany przez prosty przesłać na serwer, `eventArgument` parametr jest `null`.  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Metody udostępnia funkcje wielu zdarzeń, które są implementowane przez formanty serwera sieci Web i HTML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnały <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu, aby powiadomić aplikację ASP.NET, który zmienił się stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia dla zmian <xref:System.Web.UI.WebControls.TreeView> formantu są wywoływane z <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Renderuje HTML tagu formantu w określonym składniku zapisywania początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego używana podczas zapisu zawartości strony sieci Web.</param>
        <summary>Renderuje węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> metody do renderowania w węzłach <xref:System.Web.UI.WebControls.TreeView> formantu do klienta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Renderuje HTML tag kontroli w określonym składniku zapisywania zamykający.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który umożliwia określenie wyglądu węzła głównego w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący styl węzła głównego w <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> właściwości, aby sterować wyglądem węzła głównego w <xref:System.Web.UI.WebControls.TreeView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `RootNodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `RootNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> zamiast poszczególne ustawienia właściwości właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> właściwości, aby sterować wyglądem węzła głównego w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <returns>Bieżący stan widoku formantu serwera; w przeciwnym razie <see langword="null" />, jeśli stan jest niedostępny widok skojarzony z formantem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiekt, który reprezentuje wybrany węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> reprezentujący wybrany węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> formant może być w jednym z dwóch trybów: trybu wyboru ani nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości dla węzła na wartość inną niż ciąg pusty (""). Aby przełączyć węzła do trybu wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości dla węzła do ciągu pustego ("").  
  
 Gdy węzeł jest w trybie wyboru, użytkownik może wybrać węzła, klikając na tekst w węźle. Użyj <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości w celu określenia, który węzeł wybrano w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
> [!NOTE]
>  Węzeł nie może być zaznaczone, gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać hiperłącza. Po wyświetleniu hiperłącza <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwość zawsze zwraca `null`.  
  
 Gdy użytkownik wybierze inny węzeł w <xref:System.Web.UI.WebControls.TreeView> sterowania, klikając go w nowym węźle <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzenie jest zgłaszane, domyślnie. Zdarzenia można określić przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości dla właściwości. W poniższej tabeli wymieniono dostępne opcje.  
  
|Wybór działania|Opis|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Przełącza węzeł między rozwinięty i zwinięty. Zgłasza <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzeń, zależnie od potrzeb.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Zgłasza brak zdarzeń po wybraniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Zgłasza <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzeń po wybraniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzeń po wybraniu węzła. Węzły są tylko rozwinięte, nigdy nie jest zwinięty.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ustawioną właściwość `TreeNodeSelectAction.None`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości w celu określenia wartości wybrany węzeł w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł wybrano w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Zdarzenie jest wywoływane po wybraniu węzła w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizowanie wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.  
  
 Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości dla węzła określić, które zdarzenie jest wywoływane po wybraniu tego węzła. W poniższej tabeli wymieniono dostępne opcje.  
  
|Wybór działania|Opis|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Przełącza węzeł między rozwinięty i zwinięty. Zgłasza <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzeń, zależnie od potrzeb.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Zgłasza brak zdarzeń po wybraniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Zgłasza <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzeń po wybraniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzeń po wybraniu węzła. Węzły są tylko rozwinięte, nigdy nie jest zwinięty.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ustawioną właściwość `TreeNodeSelectAction.None`.  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Zdarzenie jest wywoływane tylko na post, po kliknięciu węzła. Zdarzenie nie jest uruchamiany, jeśli <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> programowo zmienić właściwości.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzeń, aby zaktualizować <xref:System.Web.UI.WebControls.Label> kontroli, gdy węzeł jest zaznaczone w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiekt, który określa wygląd wybrany węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> reprezentujący styl wybrany węzeł w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu. Wartość domyślna to <see langword="null" />, co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> właściwości, aby sterować wyglądem wybrany węzeł w <xref:System.Web.UI.WebControls.TreeView> formantu. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> obiekt zwraca. Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektu (na przykład `SelectedNodeStyle-ForeColor`). Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `SelectedNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> właściwości, aby sterować wyglądem wybrany węzeł w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wybranego węzła.</summary>
        <value>Wartość wybranego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> Właściwość umożliwia dogodny do określenia wartości wybranego węzła. Ta właściwość zwraca po prostu wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który odwołuje się <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości. Jeśli żaden węzeł nie jest aktualnie wybrane w <xref:System.Web.UI.WebControls.TreeView> kontrolować ciąg pusty ("") jest zwracany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> Można ustawić.</param>
        <param name="dataBound">
          <see langword="true" /> Aby ustawić węzeł jako powiązane z danymi; w przeciwnym razie <see langword="false" />.</param>
        <summary>Umożliwia klasy pochodnej ustawić Określa, czy określony <see cref="T:System.Web.UI.WebControls.TreeNode" /> formant jest powiązany z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> metody, aby wskazać, czy określony <xref:System.Web.UI.WebControls.TreeNode> jest powiązany z danymi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> Jest podać metodę, aby umożliwić kontrolkę, która jest pochodną <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu można ustawić <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> właściwość w węźle.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> Można ustawić.</param>
        <param name="dataItem">Element danych do <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Umożliwia klasy pochodnej ustawić element danych dla określonego <see cref="T:System.Web.UI.WebControls.TreeNode" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> metodę, aby określić elementu danych dla określonego <xref:System.Web.UI.WebControls.TreeNode> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> Można ustawić.</param>
        <param name="dataPath">Ścieżka danych dla <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Umożliwia klasy pochodnej ustawić ścieżkę danych dla określonego <see cref="T:System.Web.UI.WebControls.TreeNode" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> metodę, aby ustawić ścieżkę danych dla określonego <xref:System.Web.UI.WebControls.TreeNode> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, jakie typy węzła będą wyświetlane pola wyboru w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Bitowe połączenie <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> wartości. Wartość domyślna to <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapewnić obsługę wielowęzłowego zaznaczenia w <xref:System.Web.UI.WebControls.TreeView> sterowania, można wyświetlić pola wyboru obok obrazu dla węzła. Użyj <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwości w celu określenia, jakie typy węzła będą wyświetlane pola wyboru. Na przykład, jeśli ta właściwość jest ustawiona na `TreeNodeType.Parent`, są wyświetlane pola wyboru dla każdego węzła nadrzędnego w drzewie. W poniższej tabeli przedstawiono prawidłowe wartości dla tej właściwości.  
  
|Typ węzła|Opis|  
|---------------|-----------------|  
|`TreeNodeType.All`|Dla wszystkich węzłów są wyświetlane pola wyboru.|  
|`TreeNodeType.Leaf`|Dla wszystkich węzłów liścia są wyświetlane pola wyboru.|  
|`TreeNodeType.None`|Nie są wyświetlane pola wyboru.|  
|`TreeNodeType.Parent`|Dla wszystkich węzłów nadrzędnych są wyświetlane pola wyboru.|  
|`TreeNodeType.Root`|Dla wszystkich węzłów głównych są wyświetlane pola wyboru.|  
  
 Typ wyliczenia, która służy do <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwość to wyliczanie flag, dzięki czemu można połączyć wartości za pośrednictwem Operacje bitowe. Na przykład, aby wyświetlić pola wyboru dla węzłów nadrzędnych i typu liść, użyj bitowy operator OR połączyć `TreeNodeType.Parent` i `TreeNodeType.Leaf` wartości.  
  
 Aby określić węzły, które mają ich zaznaczenie zaznaczone, iterację w węzłach <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji.  
  
> [!NOTE]
>  Można zastąpić <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> ustawienie przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości dla każdego węzła.  
  
 Jeśli potrzebujesz zapewnić obsługę tylko pojedynczego wyboru, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwość, aby pokazać lub ukryć pola wyboru dla różnych typów węzłów.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Bitowe połączenie wartości jest poza zakresem <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy są wyświetlane wskaźniki węzeł rozszerzenia.</summary>
        <value>
          <see langword="true" /> Aby wyświetlić rozszerzenie węzła wskaźników; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wskaźniki węzeł Rozszerzenia są używane do wyświetlenia, czy węzeł jest rozwinięty, zwinięte lub nie można rozwijać. Użyj <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwości w celu określenia, czy wskaźniki węzeł Rozszerzenia są wyświetlane w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-). Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości z adresami URL, niestandardowych obrazów. Jeśli obrazy nie zostały określone, używane są domyślne obrazy.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość, aby pokazać lub ukryć ikony węzeł rozszerzenia.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy są wyświetlane linie łączące węzły podrzędne do węzłów nadrzędnych.</summary>
        <value>
          <see langword="true" /> Aby wyświetlić linie łączące węzły; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> właściwości w celu określenia, czy są wyświetlane linie, łączących węzły podrzędne do węzłów nadrzędnych. Jeśli ta właściwość jest skonfigurowana `true`, <xref:System.Web.UI.WebControls.TreeView> kontroli wyszukuje dostępnej w sieci Web folderu, który jest określony przez <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> właściwość obrazy liniowe.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> nie ustawiono właściwości <xref:System.Web.UI.WebControls.TreeView> kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli).  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> właściwość, aby wyświetlić linie łączące węzły w <xref:System.Web.UI.WebControls.TreeView> formantu. Należy użyć narzędzia Projektant wiersza do tworzenia zestawu obrazy liniowe i umieścić je w folderze o nazwie LineImages w katalogu dla przykładowej aplikacji.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która jest używany do renderowania tekst zastępczy dla czytników ekranu pominąć zawartości formantu.</summary>
        <value>Ciąg znaków który <see cref="T:System.Web.UI.WebControls.TreeView" /> renderuje jako tekst zastępczy z niewidocznego obrazu jako wskazówkę dla czytników ekranu. Wartość domyślna to "Pomiń łącza nawigacji".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Właściwość jest właściwością, która umożliwia bardziej lub mniej udostępnić strony sieci Web. Strony sieci Web, które mają zawartość, która jest powtarzany zapewniają mechanizm dla użytkowników czytników ekranu, aby pominąć głos odczytanie zawartości.  
  
 <xref:System.Web.UI.WebControls.TreeView> Kontrola zapewnia <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> właściwość jako sposób całego formantu można pominąć czytników ekranu. Jeśli <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> właściwość jest ustawiona, jest renderowany niewidocznego obrazu z tekst alternatywny, podając opcję, aby przejść do końca kontrolki użytkownika. Czytniki odczytywać tekst alternatywny, gdy obraz zajmuje tylko jeden piksel miejsca. Dla pikseli ścisła kontrola nad renderowania strony, należy ustawić <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> właściwości na ciąg pusty ("") i Podaj własny mechanizm pominąć drzewa.  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Właściwości ustawiono pustego ciągu domyślnie, dzięki czemu nie pominąć formant czytników ekranu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wynik zdarzeń wywołania zwrotnego, przeznaczonego dla formantu.</summary>
        <returns>Wyniki wywołania zwrotnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolować implementuje <xref:System.Web.UI.ICallbackEventHandler> interfejsu i używa <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> do pobierania danych i <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> metody, aby zwrócić dane pobrane z formantem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Zgłasza zdarzenie wywołania zwrotnego przy użyciu określonych argumentów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Procesy ogłaszanie dane <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <returns>
          <see langword="true" />, jeśli <see cref="T:System.Web.UI.WebControls.TreeView" /> zmian stanu formantu w wyniku zdarzenia odświeżania strony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnały <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu, aby powiadomić aplikację ASP.NET, który zmienił się stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Włącza <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu, aby przetworzyć zdarzenie jest wywoływane, gdy formularz jest przesyłana do serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <value>Zawsze zwraca <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> Właściwość umożliwia strumienia wyjściowego do zapisu w odpowiedniej HTML narzut na <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> właściwości, aby określić, które <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość dla formantu pochodnych.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia docelowego okna lub ramki, w którym można wyświetlić zawartości strony sieci Web, który jest skojarzony z węzłem.</summary>
        <value>Docelowego okna lub ramki, w której można wyświetlić zawartości połączonej strony sieci Web. Wartości musi rozpoczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalne, które zaczynają się od podkreślenia, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość docelowa  
  
 </term><description> Renderuje zawartość  
  
 </description></listheader><item><term><see langword="_blank" /></term><description> Nowe okno bez ramek.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Element nadrzędny natychmiastowego ramek.  
  
 </description></item><item><term><see langword="_search" /></term><description> W okienku wyszukiwania.  
  
 </description></item><item><term><see langword="_self" /></term><description> Ramka z fokusem.  
  
 </description></item><item><term><see langword="_top" /></term><description> Pełne okno bez ramek.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Sprawdź w dokumentacji przeglądarki, aby ustalić, czy <see langword="_search" /> wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowsze wersje obsługują <see langword="_search" /> wartość docelowa.  
  
</para></block>  
  
 Wartość domyślna to ciąg pusty (""), który odświeża okna lub ramki z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości w celu określenia okna lub ramki, w którym można wyświetlić treści sieci Web, która jest połączona z węzłem, po kliknięciu tego węzła.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A> Właściwości renderuje jako `target` atrybutu. `target` Atrybutu `anchor` elementów nie jest dozwolona w definicji typu dokumentu XHTML 1.1. Nie ustawiaj <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości, jeśli przetworzonych wyników dla <xref:System.Web.UI.WebControls.TreeView> XHTML 1.1 muszą być zgodne. Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Podczas tworzenia stron sieci Web z ułatwieniami dostępu, należy unikać używania <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości pod kątem inne okno. Aby uzyskać więcej informacji, zobacz [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości do wyświetlenia zawartości sieci Web, który jest połączony z węzła w nowym oknie, po kliknięciu tego węzła.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany stanu widoku <see cref="T:System.Web.UI.WebControls.TreeView" /> , aby mogą być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiekt dla formantu. To <see cref="T:System.Web.UI.StateBag" /> jest dostępna za pośrednictwem <see cref="P:System.Web.UI.Control.ViewState" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> Metoda zostanie przesłonięta w celu oznaczenia punkt początkowy, aby rozpocząć śledzenie i zapisywanie zmian do formantu jako część stan widoku formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pole wyboru <see cref="T:System.Web.UI.WebControls.TreeView" /> kontroli zmian stanu między ogłoszenia na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView> kontroli zmian stanu między ogłoszenia na serwerze. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.  
  
 Mimo że <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> zdarzenie jest wywoływane na ogłaszanie zwrotne zmiana pola wyboru nie powoduje ogłaszanie zwrotne.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> zdarzeń, aby zaktualizować <xref:System.Web.UI.WebControls.Label> decyduje o pola wyboru <xref:System.Web.UI.WebControls.TreeView> kontroli zmiany stanu między ogłoszenia na serwerze.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł jest zwinięty w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Zdarzenie jest zgłaszane, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzenia w celu zaktualizowania zawartości <xref:System.Web.UI.WebControls.Label> kontroli, gdy użytkownik zwija węzła w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element danych jest powiązany z węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Zdarzenie jest wywoływane, gdy element danych jest powiązana z węzła w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> zdarzeń, aby zmienić obraz dla węzła, gdy niektóre warunek jest spełniony. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> zdarzeń, aby zmienić obraz dla węzła, gdy niektóre warunek jest spełniony. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml. Należy także podać własne obrazy w tym przykładzie do wyświetlenia.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł jest rozwinięty w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView> formantu. Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ma ustawioną wartość właściwości dla węzła `TreeNodeSelectAction.Expand` lub `TreeNodeSelectAction.SelectExpand`, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenie również jest wywoływane po kliknięciu w tym węźle <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenia w celu zaktualizowania zawartości <xref:System.Web.UI.WebControls.Label> kontroli, gdy użytkownik rozwija węzeł w <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł z jego <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> ustawioną właściwość <see langword="true" /> jest rozwinięta w <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> sterowanie obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.  
  
 Aby wypełnić węzła dynamicznie, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwości dla węzła do `true`. Następnie określ metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenie, które wypełnia węzeł programowo. Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła jest wypełnione. Struktura węzła jest tworzony przez dodanie <xref:System.Web.UI.WebControls.TreeNode> obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie. Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.  
  
 Obsługiwane przeglądarki (Microsoft Internet Explorer 4.0 zgodnego przeglądarek i nowsze) mogą również korzystać populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView> formantu do wypełnienia węzła dynamicznie na kliencie, gdy ten węzeł jest rozwinięty, co zapobiega konieczności post do serwera. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenie, aby wypełnić w węzłach <xref:System.Web.UI.WebControls.TreeView> kontroli dynamicznie na serwerze. Zwróć uwagę, że <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwość jest ustawiona na `false` aby zapobiec rozszerzanie węzła zdarzenia obsługiwane na kliencie.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant jest renderowane jako interfejsu użytkownika na stronie.</summary>
        <value>
          <see langword="true" />, jeśli formant jest widoczny na stronie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.TreeView.Visible%2A> właściwość jest ustawiona na `false`, nie renderowania formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>