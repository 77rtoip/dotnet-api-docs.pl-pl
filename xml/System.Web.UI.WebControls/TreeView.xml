<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="644e5019335145296b521d6d60c4b71866ee67be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69410794" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla dane hierarchiczne, takie jak spis treści, w strukturze drzewa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Węzły](#nodes)  
  
-   [Dane statyczne](#static_data)  
  
-   [Powiązanie z danymi](#binding_to_data)  
  
-   [Populacja węzła dynamicznego](#dynamic_node_population)  
  
-   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)  
  
-   [Zdarzenia](#events)  
  
-   [Przewijanie](#scrolling)  
  
-   [Ułatwienia dostępu](#accessibility)  
  
-   [Składnia deklaracyjne](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka służy do wyświetlania danych hierarchicznych, takich jak spis treści lub katalog plików, w strukturze drzewa i obsługuje następujące funkcje:  
  
-   Powiązanie danych, które umożliwia powiązania węzłów formantu z danymi XML, tabelarycznymi lub relacyjnymi.  
  
-   Nawigowanie po <xref:System.Web.UI.WebControls.SiteMapDataSource> witrynie poprzez integrację z kontrolką.  
  
-   Tekst węzła, który może być wyświetlany jako zwykły tekst lub hiperłącza.  
  
-   Programistyczny dostęp do <xref:System.Web.UI.WebControls.TreeView> modelu obiektów w celu tworzenia drzew, wypełniania węzłów, ustawiania właściwości i tak dalej.  
  
-   Populacja węzła po stronie klienta (w obsługiwanych przeglądarkach).  
  
-   Możliwość wyświetlania pola wyboru obok każdego węzła.  
  
-   Dostosowywalny wygląd za poorednictwem motywów, obrazów zdefiniowanych przez użytkownika i stylów.  
  
    > [!NOTE]
    >  Kontrolka jest przeznaczona do użycia <xref:System.Web.UI.UpdatePanel> wewnątrz kontrolki tylko wtedy, <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> gdy jest ustawiona `true`na. <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.UpdatePanel>kontrolki służą do aktualizowania wybranych regionów strony zamiast aktualizowania całej strony przy użyciu ogłaszania zwrotnego. Aby uzyskać więcej informacji, zobacz temat [formant UpdatePanel — Omówienie](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowania części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Węzły  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka składa się z węzłów. Każdy wpis w drzewie jest nazywany węzłem i jest reprezentowany przez <xref:System.Web.UI.WebControls.TreeNode> obiekt. Typy węzłów są zdefiniowane w następujący sposób:  
  
-   Węzeł, który zawiera inne węzły, jest nazywany *węzłem nadrzędnym*.  
  
-   Węzeł, który jest zawarty w innym węźle, jest nazywany *węzłem podrzędnym*.  
  
-   Węzeł, który nie ma elementu podrzędnego, ** jest nazywany węzłem liścia.  
  
-   Węzeł, który nie jest zawarty w żadnym innym węźle, ale jest elementem nadrzędnym dla wszystkich innych węzłów, jest *węzłem głównym*.  
  
 Węzeł może być zarówno nadrzędnym, jak i podrzędnym, ale węzły główne, nadrzędne i liścia wzajemnie się wykluczają. Kilka właściwości wizualizacji i behawioralnych węzłów jest określana na podstawie tego, czy węzeł jest węzłem głównym, podrzędnym lub liściem.  
  
 Chociaż typowa struktura drzewa ma tylko jeden węzeł główny, <xref:System.Web.UI.WebControls.TreeView> formant umożliwia dodanie wielu węzłów głównych do struktury drzewa. Jest to przydatne, gdy chcesz wyświetlić listy elementów bez wyświetlania jednego węzła głównego, jak na liście kategorii produktów.  
  
 Każdy węzeł ma <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Właściwość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> i właściwość. Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości jest wyświetlana <xref:System.Web.UI.WebControls.TreeView>w, podczas gdy <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość jest używana do przechowywania wszelkich dodatkowych danych dotyczących węzła, takich jak dane, które są przesyłane do zdarzenia ogłaszania zwrotnego skojarzonego z węzłem.  
  
 Węzeł może być w jednym z dwóch trybów: tryb wyboru i tryb nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby umieścić węzeł w trybie nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość dla węzła na wartość inną niż pusty ciąg (""). Aby umieścić węzeł w trybie wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość dla węzła na pusty ciąg ("").  
  
> [!NOTE]
>  Niektóre przeglądarki internetowe mają ograniczenia, które mogą mieć wpływ na wydajność <xref:System.Web.UI.WebControls.TreeView> formantu. Na przykład program Microsoft Internet Explorer 6,0 ma limit znaków adresu URL równy 2067 znaków. Jeśli liczba znaków w adresie URL węzła jest większa niż ta liczba, rozszerzanie tego węzła zakończy się niepowodzeniem i nie zostanie zgłoszony żaden wyjątek.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Dane statyczne  
 Najprostszym modelem <xref:System.Web.UI.WebControls.TreeView> danych formantu jest dane statyczne. Aby wyświetlić dane statyczne przy użyciu składni deklaratywnej, najpierw należy zagnieździć otwierające i zamykające `<Nodes>` znaczniki między otwierającym i zamykającym tagiem <xref:System.Web.UI.WebControls.TreeView> kontrolki. Następnie utwórz strukturę drzewa przez zagnieżdżanie `<asp:TreeNode>` elementów między tagiem otwierającym i zamykającym. `<Nodes>` Każdy `<asp:TreeNode>` element reprezentuje węzeł drzewa i mapuje <xref:System.Web.UI.WebControls.TreeNode> do obiektu. Można ustawić właściwości każdego węzła, ustawiając atrybuty jego `<asp:TreeNode>` elementu. Aby utworzyć węzły podrzędne, Zagnieżdżaj `<asp:TreeNode>` dodatkowe elementy między otwierającym i `<asp:TreeNode>` zamykającym tagiem węzła nadrzędnego.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Wiązanie z danymi  
 <xref:System.Web.UI.WebControls.TreeView> Formant można także powiązać z danymi. Aby powiązać <xref:System.Web.UI.WebControls.TreeView> formant z odpowiednim typem źródła danych, można użyć jednej z dwóch metod:  
  
-   Kontrolka może używać dowolnego formantu źródła danych, który <xref:System.Web.UI.IHierarchicalDataSource> implementuje <xref:System.Web.UI.WebControls.XmlDataSource> interfejs, taki <xref:System.Web.UI.WebControls.SiteMapDataSource> jak kontrolka lub kontrolka. <xref:System.Web.UI.WebControls.TreeView> Aby powiązać z kontrolką źródła danych, ustaw <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView> kontrolki na <xref:System.Web.UI.Control.ID%2A> wartość kontrolki źródła danych. <xref:System.Web.UI.WebControls.TreeView> Formant automatycznie wiąże się z określoną kontrolką źródła danych. Jest to preferowana metoda wiązania z danymi.  
  
-   Formant można także powiązać <xref:System.Xml.XmlDocument> z obiektem lub <xref:System.Data.DataSet> obiektem z relacjami. <xref:System.Web.UI.WebControls.TreeView> Aby powiązać z jednym z tych źródeł danych, ustaw <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView> kontrolki na źródło danych <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> , a następnie Wywołaj metodę.  
  
 W przypadku tworzenia powiązania ze źródłem danych, gdzie każdy element danych zawiera wiele właściwości (takich jak element XML z kilkoma atrybutami), węzeł wyświetla wartość, która jest zwracana domyślnie `ToString` przez metodę elementu danych. W przypadku elementu XML węzeł wyświetla nazwę elementu, który pokazuje podstawową strukturę drzewa, ale nie jest bardzo użyteczny w przeciwnym razie. Można powiązać węzeł z określoną właściwością elementu danych przez określenie powiązań węzłów drzewa przy użyciu <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji. <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja zawiera`TreeNodeBinding` obiekty, które definiują relację między elementem danych i węzłem, z którym jest powiązany. Możesz określić kryteria dla powiązania i właściwość elementu danych do wyświetlenia w węźle. Aby uzyskać więcej informacji na temat powiązań węzłów drzewa <xref:System.Web.UI.WebControls.TreeNodeBinding>, zobacz.  
  
> [!IMPORTANT]
>  Złośliwy użytkownik może utworzyć żądanie wywołania zwrotnego i pobrać dane dla węzłów <xref:System.Web.UI.WebControls.TreeView> kontrolki, które nie są wyświetlane dla deweloperów strony. W związku z tym zabezpieczenia danych muszą być implementowane przez źródło danych. Nie należy używać <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości do ukrywania danych.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Populacja węzła dynamicznego  
 Czasami nie jest praktyczne Definiowanie statycznie struktury drzewa, ponieważ źródło danych zwraca zbyt dużo danych lub dane do wyświetlenia są zależne od informacji uzyskanych w czasie wykonywania. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Gdy właściwość dla węzła jest ustawiona na `true`, ten węzeł jest wypełniany w czasie wykonywania, gdy węzeł jest rozwinięty. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Aby wypełnić węzeł dynamicznie, należy zdefiniować metodę obsługi zdarzeń, która zawiera logikę, aby wypełnić węzeł <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia.  
  
 Przeglądarki obsługujące skrypty wywołania zwrotnego mogą również korzystać z wypełniania węzłów po stronie klienta. (Dotyczy to programu Internet Explorer 5,5 i nowszych oraz innych przeglądarek). Wypełnianie węzłów po stronie klienta <xref:System.Web.UI.WebControls.TreeView> umożliwia formantowi wypełnienie węzła przy użyciu skryptu klienta, gdy użytkownicy rozszerzają węzeł, bez konieczności podróży do serwera. Aby uzyskać więcej informacji na temat wypełniania węzłów po <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>stronie klienta, zobacz.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizowanie interfejsu użytkownika  
 Istnieje wiele sposobów dostosowywania wyglądu <xref:System.Web.UI.WebControls.TreeView> kontrolki. Najpierw można określić inny styl (na przykład rozmiar czcionki i kolor) dla każdego typu węzła.  
  
 Jeśli używasz kaskadowych arkuszy stylów (CSS) do dostosowywania wyglądu kontrolki, Użyj wbudowanych stylów lub oddzielnego pliku CSS, ale nie obu. Użycie zarówno stylów wbudowanych, jak i oddzielnego pliku CSS może spowodować nieoczekiwane wyniki. Aby uzyskać więcej informacji na temat korzystania z arkuszy stylów z kontrolkami, zobacz [kontrolki serwera sieci Web i style CSS](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 W poniższej tabeli wymieniono dostępne style węzła.  
  
|Właściwość stylu węzła|Opis|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|Ustawienia stylu dla węzła, gdy wskaźnik myszy jest umieszczony nad nim.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|Ustawienia stylu dla węzłów liści.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|Domyślne ustawienia stylu dla węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|Ustawienia stylu dla węzłów nadrzędnych.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|Ustawienia stylu węzła głównego.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|Ustawienia stylu dla wybranego węzła.|  
  
 Można również kontrolować styl węzłów na określonych głębokości drzewa przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> kolekcji. Pierwszy styl w kolekcji odnosi się do stylu węzłów na pierwszym poziomie drzewa. Drugi styl w kolekcji odnosi się do stylu węzłów na drugim poziomie drzewa i tak dalej. Jest to najczęściej używane do generowania spisu menu nawigacji w stylu spisu, gdzie węzły na określonej głębokości powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne.  
  
> [!NOTE]
>  Jeśli styl jest zdefiniowany dla określonego poziomu głębokości przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> kolekcji, ten styl zastępuje wszystkie ustawienia stylu węzła głównego, nadrzędnego lub liścia dla węzłów na tej głębokości.  
  
 Innym sposobem zmiany wyglądu kontrolki jest dostosowanie obrazów wyświetlanych w <xref:System.Web.UI.WebControls.TreeView> kontrolce. Możesz określić własny niestandardowy zestaw obrazów dla różnych części formantu przez ustawienie właściwości przedstawionych w poniższej tabeli.  
  
|Właściwość obrazu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Adres URL obrazu wyświetlany dla wskaźnika zwijanego węzła. Ten obraz jest zwykle znakiem minus (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Adres URL obrazu wyświetlany dla wskaźnika rozwijanego węzła. Ten obraz jest zwykle znakiem plus (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Adres URL folderu zawierającego obrazy liniowe używane do łączenia węzłów nadrzędnych z węzłami podrzędnymi. Aby <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> ta właściwość działała, właściwość `true` musi również mieć ustawioną wartość.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Adres URL obrazu wyświetlany dla wskaźnika węzła, który nie może zostać rozwinięty.|  
  
> [!NOTE]
>  Nie trzeba dostosowywać każdej właściwości obrazu. Jeśli właściwość obrazu nie jest jawnie ustawiona, używany jest wbudowany obraz domyślny.  
  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka umożliwia również wyświetlenie pola wyboru obok węzła. Gdy właściwość jest ustawiona na wartość inną niż `TreeNodeTypes.None`, pola wyboru są wyświetlane obok określonych typów węzłów. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>  
  
> [!NOTE]
>  Właściwość może być ustawiona na bitową kombinację <xref:System.Web.UI.WebControls.TreeNodeTypes> wartości elementu członkowskiego wyliczenia. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>  
  
 Za każdym razem, gdy strona jest ogłaszana na serwerze <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> , kolekcja jest automatycznie wypełniana wybranymi węzłami. Gdy pola wyboru są wyświetlane, można użyć <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> zdarzenia do uruchomienia niestandardowej procedury za każdym razem, gdy stan pola wyboru zmieni się między ogłoszeniami na serwerze.  
  
<a name="events"></a>   
## <a name="events"></a>Zdarzenia  
 <xref:System.Web.UI.WebControls.TreeView> Formant zawiera kilka zdarzeń, dla których można programować. Pozwala to na uruchomienie niestandardowej procedury za każdym razem, gdy wystąpi zdarzenie. Poniższa tabela zawiera listę zdarzeń, które są obsługiwane przez <xref:System.Web.UI.WebControls.TreeView> formant.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Występuje, gdy pola <xref:System.Web.UI.WebControls.TreeView> wyboru kontrolki zmieniają stan między ogłoszeniami na serwerze.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Występuje po wybraniu węzła w <xref:System.Web.UI.WebControls.TreeView> kontrolce.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Występuje, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView> formancie.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Występuje, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView> kontrolce.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Występuje, gdy węzeł z <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> `true` ustawioną jego właściwością jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView> formancie.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Występuje, gdy element danych jest powiązany z węzłem w <xref:System.Web.UI.WebControls.TreeView> kontrolce.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Przewijanie  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolka nie ma wbudowanego przewijania. Aby dodać przewijanie, umieść <xref:System.Web.UI.WebControls.TreeView> formant <xref:System.Web.UI.WebControls.Panel> w kontrolce i <xref:System.Web.UI.WebControls.Panel> Dodaj paski przewijania do kontrolki. Aby uzyskać więcej informacji, zobacz [Panel sterowania serwera sieci Web — Omówienie](https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczniki renderowane domyślnie dla tego formantu mogą nie być zgodne ze standardami dostępności. Aby uzyskać szczegółowe informacje na temat pomocy technicznej dotyczącej ułatwień dostępu dla tego formantu, zobacz [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Ta sekcja zawiera siedem przykładów kodu:  
  
-   Pierwszy przykład kodu demonstruje, jak skonfigurować ramki dla drugiego przykładu kodu.  
  
-   Drugi przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView> jak używać składni deklaracyjnej do wyświetlania danych statycznych w formancie.  
  
-   Trzeci przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView> jak powiązać formant ze źródłem danych XML.  
  
-   Czwarty przykład kodu zawiera przykładowe dane XML dla trzeciego przykładowego kodu.  
  
-   Piąty przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView> kontrolki nawigacji w witrynie przez powiązanie jej <xref:System.Web.UI.WebControls.SiteMapDataSource> z kontrolką.  
  
-   Szósty przykład kodu zawiera przykładowe dane mapy witryny dla piątego przykładu kodu.  
  
-   Siódmy przykład kodu demonstruje, jak wypełnić węzły w <xref:System.Web.UI.WebControls.TreeView> formancie od klienta.  
  
 Poniższy przykład kodu demonstruje sposób konfigurowania ramek dla poniższego przykładu kodu.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, jak używać składni deklaracyjnej do wyświetlania danych statycznych w <xref:System.Web.UI.WebControls.TreeView> formancie. Ten przykład jest używany w zestawie ramek poprzedniego przykładu do wyświetlania spisu treści.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView> jak powiązać formant ze źródłem danych XML. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView> jak używać kontrolki nawigacji lokacji przez powiązanie jej <xref:System.Web.UI.WebControls.SiteMapDataSource> z kontrolką. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane mapy witryny dostarczone po tym przykładzie kodu do pliku o nazwie Web. sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane mapy witryny dla powyższego przykładowego kodu.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 Poniższy przykład kodu demonstruje sposób wypełniania węzłów w <xref:System.Web.UI.WebControls.TreeView> formancie od klienta. Po włączeniu wypełniania węzłów po stronie klienta węzły są wypełniane dynamicznie na kliencie, bez konieczności ogłaszania z powrotem na serwerze.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">Mapy witryn ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeView" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TreeView> klasy. <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Aby dynamicznie dodać <xref:System.Web.UI.WebControls.TreeView> formant do strony, Utwórz nowy <xref:System.Web.UI.WebControls.TreeView> obiekt, ustaw jego właściwości, a <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> następnie dodaj go do kolekcji kontrolki kontenera, takiej jak <xref:System.Web.UI.WebControls.PlaceHolder> kontrolka.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak użyć konstruktora, <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> aby dynamicznie <xref:System.Web.UI.WebControls.TreeView> dodać formant do strony. Drugi przykład kodu zawiera przykładowe dane XML dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> konstruktora do dynamicznego <xref:System.Web.UI.WebControls.TreeView> dodawania kontrolki do strony. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Reprezentuje strumień wyjściowy, aby renderować zawartość HTML na kliencie. <see cref="T:System.Web.UI.HtmlTextWriter" /></param>
        <summary>Dodaje atrybuty HTML i style, które muszą być renderowane do określonej <see cref="T:System.Web.UI.HtmlTextWriter" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> Metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.TreeView" /> formant automatycznie generuje powiązania węzłów drzewa.</summary>
        <value><see langword="true" />Aby formant automatycznie generował powiązania węzłów drzewa; <see langword="false" />w przeciwnym razie. <see cref="T:System.Web.UI.WebControls.TreeView" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiązania węzłów drzewa definiują relację między elementem danych i węzłem, do którego jest powiązanie. Podczas tworzenia powiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (takich jak element XML z kilkoma atrybutami) <xref:System.Web.UI.WebControls.TreeView> , formant musi wiedzieć, która właściwość elementu danych ma zostać powiązana <xref:System.Web.UI.WebControls.TreeNode> z tą właściwością. <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Text%2A> <xref:System.Web.UI.WebControls.TreeNode> Jeśli właściwość jest ustawiona na `true`, formant automatycznie generuje domyślne powiązania węzłów drzewa, które ustawiają właściwość obiektu, który jest skojarzony z powiązaniem z wartością, która jest <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> zwrócone przez `ToString` metodę elementu danych.  
  
> [!NOTE]
>  Automatycznie generowane powiązania węzłów drzewa nie są dodawane do <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji.  
  
 W przypadku elementu XML wartość zwracana przez `ToString` metodę to nazwa elementu, który pokazuje podstawową strukturę pliku XML, ale nie jest bardzo użyteczny w przeciwnym razie. Aby utworzyć bardziej przydatne drzewo, należy zdefiniować własne powiązania węzłów drzewa przez wypełnienie <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> W<xref:System.Web.UI.WebControls.TreeView> przypadku zdefiniowania kolekcji, kontrolka używa tych wartości zamiast automatycznie generowanych powiązań węzłów drzewa.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak wyłączyć automatyczne generowanie powiązań węzłów drzewa przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwości na. `false` Drugi przykład kodu zawiera przykładowe dane mapy witryny dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje, jak wyłączyć automatyczne generowanie powiązań węzłów drzewa przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwości na. `false` Kolekcja jest następnie definiowana w celu ustalenia relacji między elementami danych <xref:System.Web.UI.WebControls.SiteMapDataSource> w kontrolce <xref:System.Web.UI.WebControls.TreeView> a węzłami formantu. <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane mapy witryny dostarczone po tym przykładzie kodu do pliku o nazwie Web. sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane mapy witryny dla poprzedniego przykładu.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektów reprezentujących węzły <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce, które wyświetlają zaznaczone pole wyboru.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> , który zawiera węzły <see cref="T:System.Web.UI.WebControls.TreeView" /> w, które wyświetla zaznaczone pole wyboru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy pola <xref:System.Web.UI.WebControls.TreeView> wyboru są wyświetlane w kontrolce (przez <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> ustawienie właściwości na wartość inną <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> niż `TreeNodeType.None`), użyj właściwości, aby określić, które węzły będą wyświetlać zaznaczone pole wyboru. Ta kolekcja jest często używana do iterowania przez wszystkie węzły, które mają zaznaczone pole wyboru w drzewie.  
  
 Zdarzenie jest zgłaszane, gdy pola <xref:System.Web.UI.WebControls.TreeView> wyboru kontrolki zmieniają stan między ogłoszeniami na serwerze. <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak aktualizowanie bazy danych lub wyświetlanej zawartości, za każdym razem, gdy wystąpi zdarzenie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Kolekcja zostanie wypełniona przy użyciu pierwszego przechodzenia głębokości struktury drzewa: każdy węzeł nadrzędny jest przetwarzany do jego węzłów podrzędnych przed zapełnieniem następnego węzła nadrzędnego.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> aby określić, które węzły mają zaznaczone pole wyboru <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka każdy węzeł w drzewie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> Metoda zapewnia wygodny sposób zamykania każdego węzła w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> metody zwinąć wszystkie węzły <xref:System.Web.UI.WebControls.TreeView> w kontrolce w tym samym czasie.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia etykietkę narzędzia dla obrazu wyświetlanego dla wskaźnika zwijanego węzła.</summary>
        <value>Etykietka narzędzia dla obrazu wyświetlanego dla wskaźnika zwijanego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> Użyj właściwości, aby określić etykietkę narzędzia dla obrazu zwijanego. Określony tekst zawiera urządzenia z technologią pomocniczą z opisem obrazu, którego można użyć do ułatwienia dostępu do formantu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> jak użyć właściwości, aby określić etykietkę narzędzia dla obrazu wyświetlanego dla wskaźnika zwijanego węzła.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL niestandardowego obrazu dla zwijanego wskaźnika węzła.</summary>
        <value>Adres URL obrazu niestandardowego, który ma być wyświetlany dla zwijanych węzłów. Wartość domyślna to ciąg pusty (""), który powoduje wyświetlenie domyślnego obrazu minus (-).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , aby określić niestandardowy obraz wskaźnika zwijanego węzła. Ten obraz jest wyświetlany obok zwijanego węzła i zazwyczaj jest znakiem minus (-).  
  
 Gdy właściwość jest ustawiona na `true`, w <xref:System.Web.UI.WebControls.TreeView> kontrolce zostanie wyświetlony znak plus (+) lub znak minus (-) lub obraz zastępczy obok węzła, aby wskazać, czy węzeł jest odpowiednio rozszerzalny, zwijany lub nierozwijalny. <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Możesz określić niestandardowe <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> obrazy, najpierw ustawiając właściwość na `TreeViewImageSet.Custom` <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, a następnie ustawiając właściwości, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> na adresy URL obrazów niestandardowych. Jeśli nie określono żadnych obrazów, są używane obrazy domyślne. Aby ukryć wskaźniki węzła rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość na. `false`  
  
> [!NOTE]
>  Aby upewnić się, że węzły są <xref:System.Web.UI.WebControls.TreeView> wyrównane prawidłowo w kontrolce przy użyciu obrazów niestandardowych, upewnij się, że wszystkie obrazy określone <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>przez <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają te same wymiary.  
  
 W przypadku korzystania z obrazu niestandardowego dla wskaźnika zwijanego węzła należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> właściwości, aby określić etykietkę narzędzia dla obrazu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> aby określić niestandardowy obraz wskaźnika zwijanego węzła. Aby wyświetlić przykładowy kod i obraz, który ma być wyświetlany w kontrolce, należy podać własny obraz, a <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwość musi być ustawiona na. `TreeNodeImageSet.Custom`  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kolekcję do przechowywania formantów podrzędnych.</summary>
        <returns>Zawsze zwraca wartość <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Formant nie obsługuje osadzania formantów podrzędnych. Ta metoda została zastąpiona, aby zapobiec dodawaniu formantów podrzędnych i zawsze zwraca <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> obiekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" /> klasy. <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> Jest to metoda pomocnika.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika zwracającą nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNode> klasy. <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> Metoda jest używana głównie przez deweloperów kontroli. Kontroluj deweloperów, którzy chcą rozszerzyć <xref:System.Web.UI.WebControls.TreeView> klasę przez <xref:System.Web.UI.WebControls.TreeNode> rozszerzenie klasy należy zastąpić tę metodę, aby zwrócić <xref:System.Web.UI.WebControls.TreeNode>obiekt pochodzący z. Typowym powodem, <xref:System.Web.UI.WebControls.TreeNode> aby zwiększyć klasę, jest <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> zastąpienie metod <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> Wywołuje metodę klasy bazowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi powinny zastąpić <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> metodę zamiast <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektów, które definiują relację między elementem danych i węzłem, z którym jest powiązany.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> Reprezentuje relację między elementem danych i węzłem, z którym jest powiązany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja zawiera<xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty, które definiują relację między elementem danych i węzłem, z którym jest powiązany. W przypadku tworzenia powiązania ze źródłem danych, gdzie każdy element danych zawiera wiele właściwości (takich jak element XML z kilkoma atrybutami), węzeł wyświetla wartość, która jest zwracana domyślnie `ToString` przez metodę elementu danych. W przypadku elementu XML węzeł wyświetla nazwę elementu, który pokazuje podstawową strukturę drzewa, ale nie jest bardzo użyteczny w przeciwnym razie. Można powiązać węzeł z określoną właściwością elementu danych, określając powiązania węzłów drzewa.  
  
 Podczas definiowania relacji między elementem danych i węzłem należy określić kryteria dla powiązania i wartości, które mają być powiązane z właściwościami <xref:System.Web.UI.WebControls.TreeNode> obiektu. Kryteria wskazują, kiedy element danych powinien być powiązany z węzłem. Kryteria można określić przy użyciu głębokości węzła, elementu członkowskiego danych lub obu. Głębokość węzła określa poziom węzła, który jest powiązany. Na przykład jeśli określisz głębokość węzła 0, wszystkie węzły w strukturze drzewa na poziomie 0 są powiązane z użyciem powiązania węzła drzewa. Element członkowski danych określa typ elementu danych w bazowym źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Na przykład element członkowski danych dla elementu XML określa nazwę elementu.  
  
 Jeśli zdefiniowano wiele <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów, które kolidują ze sobą <xref:System.Web.UI.WebControls.TreeView> , formant stosuje powiązania węzłów drzewa w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje zarówno głębokość, jak i element członkowski danych.  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje tylko głębokość.  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje tylko element członkowski danych.  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje głębokość ani element członkowski danych.  
  
 Jeśli określono wiele powiązań, które spełniają te same kryteria pierwszeństwa, pierwsze powiązanie w kolekcji jest stosowane.  
  
 Po ustanowieniu kryteriów wiązania można powiązać Właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, który może być powiązany z wartością. Można powiązać z atrybutem lub polem elementu danych lub wyświetlać wartość statyczną. Aby uzyskać więcej informacji na temat wiązania właściwości <xref:System.Web.UI.WebControls.TreeNode> obiektu z wartością, zobacz. <xref:System.Web.UI.WebControls.TreeNodeBinding>  
  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Chociaż kolekcja może być wypełniana programowo, jest zazwyczaj ustawiana deklaratywnie. Aby określić powiązania węzłów drzewa, najpierw zagnieździ otwierające i `<DataBindings>` zamykające znaczniki między otwierającym i zamykającym <xref:System.Web.UI.WebControls.TreeView> tagiem kontrolki. Następnie umieść `<asp:TreeNodeBinding>` elementy między tagiem otwierającym i zamykającym `<DataBindings>` dla każdego powiązania węzła drzewa, które chcesz określić.  
  
 Gdy tworzone są powiązania danych przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> właściwości <xref:System.Web.UI.WebControls.TreeView> kontrolki na `true` <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> , tworzone powiązania mają ustawioną `true`właściwość. Powiązania danych, które są tworzone deklaratywnie, <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> mają `false`ustawioną właściwość. Użycie składni deklaracyjnej pozwala kontrolować zachowanie pojedynczych powiązań danych.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do definiowania relacji między elementem danych i węzłem, z którym jest powiązany. Drugi przykład kodu zawiera przykładowe dane XML dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji do definiowania relacji między elementem danych i węzłem, z którym jest powiązany. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML. Ten przykład określa tylko <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwość powiązania. Można dodać niewielki wzrost wydajności przez również określenie <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> właściwości.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.TreeView" /> formant renderuje skrypt po stronie klienta, aby obsługiwał rozszerzanie i zwijanie zdarzeń.</summary>
        <value><see langword="true" />Aby renderować skrypt po stronie klienta w zgodnych przeglądarkach; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> , aby określić, <xref:System.Web.UI.WebControls.TreeView> czy formant renderuje skrypt po stronie klienta w zgodnych przeglądarkach, aby obsługiwać rozszerzanie i zwijanie zdarzeń. Gdy ta właściwość jest ustawiona na `true`, zgodne przeglądarki wykonują kod, aby rozwijać i zwijać węzły na kliencie. Aby skrypt po stronie klienta działał, należy najpierw znać dane węzła drzewa. Skrypt klienta zapobiega wysyłaniu danych z powrotem do serwera za każdym razem, gdy węzeł jest rozwinięty lub zwinięty.  
  
 Gdy dane węzła drzewa nie są znane z wyprzedzeniem, węzły mogą być wypełniane przez klienta, jeśli `PopulateNodesFromClient` właściwość jest również ustawiona na. `true` W tym scenariuszu należy również podać metodę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia, aby wypełnić węzły. Aby uzyskać więcej informacji na temat wypełniania węzłów po <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>stronie klienta, zobacz.  
  
> [!NOTE]
>  Jeśli właściwość jest ustawiona na `false`, <xref:System.Web.UI.WebControls.TreeView> kontrola jest wysyłana z powrotem do serwera za każdym razem, gdy węzeł jest rozwinięty lub zwinięty. <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwości do renderowania skryptu po stronie klienta, który służy do rozwijania i zwijania węzłów w zgodnych przeglądarkach. Drugi przykład kodu zawiera przykładowe dane XML dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwości do renderowania skryptu po stronie klienta, który służy do rozwijania i zwijania węzłów w zgodnych przeglądarkach. Należy zauważyć, że wpis na serwerze jest wymagany, aby rozwijać i zwijać węzeł, <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> gdy właściwość jest ustawiona `false`na. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera każdy węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> Metoda zapewnia wygodny sposób otwierania każdego węzła w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> metody, aby rozwinąć wszystkie węzły <xref:System.Web.UI.WebControls.TreeView> w kontrolce w tym samym czasie.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę poziomów, które są rozwinięte, gdy <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolka jest wyświetlana po raz pierwszy.</summary>
        <value>Głębokość, która ma być wyświetlana <see cref="T:System.Web.UI.WebControls.TreeView" /> podczas pierwszego wyświetlania. Wartość domyślna to-1, która wyświetla wszystkie węzły.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować renderowanie <xref:System.Web.UI.WebControls.TreeView> formantu przy pierwszym wyświetlaniu. <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> W przypadku kolejnych ogłaszania zwrotnego węzły zachowują swój bieżący stan rozwinięty.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia etykietkę narzędzia dla obrazu wyświetlanego dla wskaźnika rozwijanego węzła.</summary>
        <value>Etykietka narzędzia dla obrazu wyświetlanego dla wskaźnika rozwijanego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> , aby określić etykietkę narzędzia dla obrazu. Określony tekst zawiera urządzenia z technologią pomocniczą z opisem obrazu, którego można użyć do ułatwienia dostępu do formantu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> jak użyć właściwości, aby określić etykietkę narzędzia dla obrazu wyświetlanego dla wskaźnika rozwijanego węzła.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika rozwijanego węzła.</summary>
        <value>Adres URL obrazu niestandardowego, który ma być wyświetlany dla rozwijalnych węzłów. Wartość domyślna to ciąg pusty (""), który wyświetla domyślny obraz ze znakiem plus (+).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> , aby określić niestandardowy obraz wskaźnika rozwijanego węzła. Ten obraz jest wyświetlany obok rozwiniętego węzła i zazwyczaj jest znakiem plus (+).  
  
 Gdy właściwość jest ustawiona na `true`, w <xref:System.Web.UI.WebControls.TreeView> kontrolce zostanie wyświetlony znak plus (+) lub znak minus (-) lub obraz zastępczy obok węzła, aby wskazać, czy węzeł jest odpowiednio rozszerzalny, zwijany lub nierozszerzalny. <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Możesz określić niestandardowe <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> obrazy, najpierw ustawiając właściwość na `TreeViewImageSet.Custom` <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, a następnie ustawiając właściwości, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> na adresy URL obrazów niestandardowych. Jeśli nie określono żadnych obrazów, są używane obrazy domyślne. Aby ukryć wskaźniki węzła rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość na. `false`  
  
> [!NOTE]
>  Aby upewnić się, że węzły są <xref:System.Web.UI.WebControls.TreeView> wyrównane prawidłowo w kontrolce przy użyciu obrazów niestandardowych, upewnij się, że wszystkie obrazy określone <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>przez <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają te same wymiary.  
  
 Aby poprawnie wyświetlić obraz niestandardowy, może być konieczne ustawienie wartości <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>. `false`  
  
 W przypadku używania niestandardowego obrazu wskaźnika rozwiń węzeł należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> właściwości, aby określić etykietkę narzędzia dla obrazu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> aby określić niestandardowy obraz wskaźnika rozwijanego węzła. Aby wyświetlić przykładowy kod i obraz, który ma być wyświetlany w kontrolce, należy podać własny obraz, a <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwość musi być ustawiona na. `TreeNodeImageSet.Custom`  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Ścieżka wartości węzła.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> Pobiera obiekt <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce pod określoną ścieżką wartości.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNode" /> Pod określoną ścieżką wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> , aby uzyskać węzeł <xref:System.Web.UI.WebControls.TreeView> z kontrolki pod określoną ścieżką wartości. Ścieżka wartości zawiera rozdzielaną ogranicznikami listę wartości węzła, które tworzą ścieżkę z węzła głównego do bieżącego węzła. Każdy węzeł przechowuje swoją ścieżkę wartości we <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości. <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Właściwość określa znak ogranicznika, który jest używany do oddzielania wartości węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> metody do pobierania węzła <xref:System.Web.UI.WebControls.TreeView> z formantu.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wynik zdarzenia wywołania zwrotnego, które jest przeznaczone dla kontrolki.</summary>
        <returns>Wyniki wywołania zwrotnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> implementuje interfejs i używa do pobierania danych i <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> metody zwracania pobranych danych do kontrolki. <xref:System.Web.UI.ICallbackEventHandler> <xref:System.Web.UI.WebControls.TreeView>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiektu, który umożliwia ustawienie wyglądu węzła, gdy wskaźnik myszy jest umieszczony nad nim.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> , które reprezentuje styl węzła, gdy wskaźnik myszy jest umieszczony nad nim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> , aby kontrolować wygląd węzła, gdy wskaźnik myszy jest umieszczony nad nim. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `HoverNodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `HoverNodeStyle.ForeColor`przykład). Ta funkcja jest obsługiwana tylko na klientach z obsługą skryptów.  
  
> [!NOTE]
>  Aby użyć <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwości, musisz `<head>` dołączyć element z `runat="server"` atrybutem.  
  
 Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Ustawienia <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> stylu właściwości zastępują wszystkie odpowiednie ustawienia <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>stylu węzła, które znajdują się we właściwości <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> .  
  
 Właściwość nie jest renderowana dla węzła, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> którego właściwość ma ustawioną `TreeNodeSelectAction.None`wartość. <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 W przeciwieństwie <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> do <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości i, <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> które są <xref:System.Web.UI.WebControls.TreeNodeStyle> obiektami, właściwość jest <xref:System.Web.UI.WebControls.Style> obiektem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> właściwości do sterowania wyglądem węzła, gdy wskaźnik myszy jest umieszczony nad nim. Aby ten przykład działał, należy dołączyć `<head>` element `runat="server"` z atrybutem.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę obrazów do użycia dla <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolki.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> wartości. Wartość domyślna to <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> , aby określić grupę obrazów do użycia <xref:System.Web.UI.WebControls.TreeView> dla kontrolki. Możesz wybrać wstępnie zdefiniowany zestaw obrazów, aby nadać formantowi standardowy wygląd lub zdefiniować własny zestaw niestandardowy.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Właściwość nie ma wpływu na ustawienia stylu dla węzła. Ustaw odpowiednią właściwość stylu, taką jak <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwość, jeśli chcesz dodać kolory niestandardowe i odstępy.  
  
 Poniższa tabela zawiera listę prawidłowych wartości <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości.  
  
|Zestaw obrazów|Opis|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów ze strzałką.|  
|`TreeViewImageSet.BulletedList`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów punktorów o kształcie rombu.|  
|`TreeViewImageSet.BulletedList2`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów punktorów z prostokątem.|  
|`TreeViewImageSet.BulletedList3`|Wstępnie zdefiniowany zestaw obrazów punktorów z działem.|  
|`TreeViewImageSet.BulletedList4`|Wstępnie zdefiniowany zestaw alternatywnych obrazów punktorów o kształcie rombu w rozmiarach, które różnią się w zależności od poziomu.|  
|`TreeViewImageSet.Contacts`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów programu MSN Messenger.|  
|`TreeViewImageSet.Custom`|Zestaw obrazów zdefiniowany przez użytkownika.|  
|`TreeViewImageSet.Events`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów w stylu dziennika zdarzeń.|  
|`TreeViewImageSet.Faq`|Wstępnie zdefiniowany zestaw obrazu, który używa często zadawanych pytań i obrazów w stylu.|  
|`TreeViewImageSet.Inbox`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów w stylu poczty e-mail.|  
|`TreeViewImageSet.News`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów z stylem grupy dyskusyjnej.|  
|`TreeViewImageSet.Simple`|Wstępnie zdefiniowany zestaw obrazu, który używa prostych konturów kształtów.|  
|`TreeViewImageSet.Simple2`|Wstępnie zdefiniowany zestaw obrazu, który używa prostych wypełnionych kształtów.|  
|`TreeViewImageSet.Msdn`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów MSDN.|  
|`TreeViewImageSet.WindowsHelp`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów pomocy systemu Microsoft Windows.|  
|`TreeViewImageSet.XPFileExplorer`|Wstępnie zdefiniowany zestaw obrazu, który używa obrazów Eksploratora Windows dostępnych w systemie Microsoft Windows XP.|  
  
 Podczas definiowania niestandardowego zestawu obrazów należy określić obraz dla każdej właściwości w poniższej tabeli. W przeciwnym razie jest używany domyślny obraz dla tej właściwości.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Adres URL niestandardowego obrazu dla wskaźnika zwijanego węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Adres URL niestandardowego obrazu wskaźnika rozwijanego węzła.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Adres URL do folderu, który zawiera niestandardowe obrazy wierszy łączących węzły.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Adres URL obrazu niestandardowego dla wskaźnika węzła, który nie może zostać rozwinięty.|  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwości do wyświetlania zestawu obrazów <xref:System.Web.UI.WebControls.TreeView> w Eksploratorze Windows w kontrolce.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony zestaw obrazów nie jest jedną z <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiektu, który umożliwia ustawienie wyglądu węzłów liścia.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> , które reprezentuje styl węzłów liścia <see cref="T:System.Web.UI.WebControls.TreeView" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , aby kontrolować wygląd węzłów liścia <xref:System.Web.UI.WebControls.TreeView> w formancie. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `LeafNodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `LeafNodeStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli musisz wygenerować tabelę z menu nawigacji w stylu zawartości, w której węzły na określonym poziomie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne, możesz rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> właściwości zamiast ustawiania indywidualnego właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości do sterowania wyglądem węzłów liścia <xref:System.Web.UI.WebControls.TreeView> w formancie.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.Style" /> obiektów reprezentujących style węzła na poszczególnych poziomach drzewa.</summary>
        <value><see cref="T:System.Web.UI.WebControls.StyleCollection" /> Reprezentuje style węzła na poszczególnych poziomach drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj kolekcji jako alternatywy dla poszczególnych właściwości stylu (takich <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> jak właściwość), aby kontrolować styl węzłów na poszczególnych poziomach drzewa. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Pierwszy styl w kolekcji odnosi się do stylu węzłów na pierwszym poziomie drzewa. Drugi styl w kolekcji odnosi się do stylu węzłów na drugim poziomie drzewa i tak dalej. Ta właściwość jest najczęściej używana do generowania spisu menu nawigacji w stylu spisu, gdzie węzły na określonym poziomie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne.  
  
 Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> jak używać właściwości do tworzenia menu nawigacji. Kontrolka jest zawsze w pełni rozwinięta, a wskaźniki węzła rozwinięcia i obrazy są ukryte. <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> Ponadto właściwość służy do kontrolowania odstępów poziomów węzła.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do folderu, który zawiera obrazy liniowe, które są używane do łączenia węzłów podrzędnych z węzłami nadrzędnymi.</summary>
        <value>Ścieżka do folderu zawierającego obrazy liniowe używane do łączenia węzłów. Wartość domyślna to ciąg pusty (""), który wskazuje, że <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka może wyświetlać linie łączące węzły podrzędne z węzłami nadrzędnymi <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> , gdy właściwość jest ustawiona na `true`. <xref:System.Web.UI.WebControls.TreeView> Gdy są wyświetlane linie, użyj <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> właściwości, aby określić folder dostępny dla sieci Web, który zawiera zestaw wstępnie wyrenderowanych obrazów do użycia w wierszach. W poniższej tabeli opisano obrazy, które są używane przez <xref:System.Web.UI.WebControls.TreeView> formant.  
  
|Obraz|Opis|  
|-----------|-----------------|  
|Dash.gif|Obraz liniowy wyświetlany obok węzła głównego, gdy w strukturze drzewa znajduje się tylko jeden węzeł główny, a węzeł główny to liść.|  
|Dashminus.gif|Obraz znaku minus (-) wyświetlany obok węzła głównego, gdy w strukturze drzewa istnieje tylko jeden węzeł główny, aby wskazać, że węzeł główny jest rozwinięty.|  
|Dashplus.gif|Obraz znaku plus (+) wyświetlany obok węzła głównego, gdy istnieje tylko jeden węzeł główny w strukturze drzewa, aby wskazać, że węzeł główny jest zwinięty.|  
|I. gif|Obraz linii wyświetlany w celu połączenia sąsiednich węzłów.|  
|L. gif|Obraz liniowy wyświetlany obok ostatniego węzła w gałęzi, gdy węzeł jest elementem liścia.|  
|Lminus.gif|Obraz linii wyświetlany obok ostatniego węzła w gałęzi, aby wskazać, że węzeł jest rozwinięty.|  
|Lplus.gif|Obraz linii wyświetlany obok ostatniego węzła w gałęzi, aby wskazać, że węzeł jest zwinięty.|  
|Minus.gif|Obraz znaku minus (-) wyświetlany obok pierwszego węzła głównego w strukturze drzewa zawierającej wiele węzłów głównych, aby wskazać, że węzeł jest rozwinięty. Ten obraz nie zawiera dodatkowego wiersza i jest wyświetlany tylko po zwinięciu węzła głównego. Po pierwszym załadowaniu strony zostanie wyświetlony obraz Rminus. gif.|  
|Noexpand.gif|Pusty obraz miejsca do wyświetlenia obok węzła liścia. Ten obraz umożliwia rozkreślenie tekstu w pionie.|  
|Plus.gif|Obraz znaku plus (+) wyświetlany obok pierwszego węzła głównego w strukturze drzewa zawierającej wiele węzłów głównych, aby wskazać, że węzeł jest zwinięty. Ten obraz nie zawiera dodatkowego wiersza i jest wyświetlany tylko po dwukrotnym rozwinięciu węzła głównego. Po pierwszym załadowaniu strony zostanie wyświetlony obraz Rplus. gif.|  
|R. gif|Obraz liniowy wyświetlany obok pierwszego węzła głównego w strukturze drzewa zawierającej wiele węzłów głównych, aby wskazać, że węzeł jest węzłem liścia.|  
|Rminus.gif|Obraz znaku minus (-) wyświetlany obok pierwszego węzła głównego w strukturze drzewa zawierającej wiele węzłów głównych, aby wskazać, że węzeł jest rozwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlany tylko podczas pierwszego ładowania strony. Gdy węzeł główny został zwinięty raz, zostanie wyświetlony obraz minus. gif.|  
|Rplus.gif|Obraz znaku plus (+) wyświetlany obok pierwszego węzła głównego w strukturze drzewa zawierającej wiele węzłów głównych, aby wskazać, że węzeł jest zwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlany tylko podczas pierwszego ładowania strony. Po dwukrotnym rozszerzeniu węzła głównego zostanie wyświetlony obraz Plus. gif.|  
|T. gif|Obraz liniowy wyświetlany obok węzła w środku struktury drzewa (w punkcie t-przekrój), aby wskazać, że węzeł jest liściem.|  
|Tminus.gif|Obraz znaku minus (-) wyświetlany obok węzła w środku struktury drzewa (w punkcie t-przekrój), aby wskazać, że węzeł jest rozwinięty.|  
|Tplus.gif|Obraz znaku plusa (+) wyświetlany obok węzła w środku struktury drzewa (w punkcie t-przekrój), aby wskazać, że węzeł jest zwinięty.|  
  
> [!NOTE]
>  Jeśli właściwość nie jest ustawiona <xref:System.Web.UI.WebControls.TreeView> , kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli). <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>  
  
 Niektóre projektanci wizualizacji, takie jak Microsoft Visual Studio, zapewniają narzędzia do generowania obrazów liniowych.  
  
 Czas wykonywania nie przerzuca obrazów niestandardowych do wyświetlania od prawej do lewej. Aby obsługiwać strony sieci Web od lewej do prawej i od prawej do lewej, należy utworzyć zestawy obrazów dla obu kierunków.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> właściwości, aby określić folder, który zawiera obrazy liniowe do wyświetlenia <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Aby można było korzystać z tego przykładu, należy wcześniej użyć narzędzia line Designer do utworzenia zestawu obrazów liniowych. Umieść je w folderze o nazwie LineImages w katalogu dla przykładowej aplikacji.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla kontrolki.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazw przychodzących.</param>
        <summary>Przetwarza dane ogłaszania zwrotnego dla <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolki.</summary>
        <returns><see langword="true" />, jeśli <see cref="T:System.Web.UI.WebControls.TreeView" /> stan formantu zmieni się w wyniku zdarzenia ogłaszania zwrotnego; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura strony ASP.NET śledzi wszystkie kontrolki serwera, które zwracają `true` <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> z wywołania metody <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> , a następnie wywołuje metodę dla tych kontrolek.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Obiekt, który zawiera wartości stanu zapisanego widoku dla kontrolki.</param>
        <summary>Ładuje stan <see cref="T:System.Web.UI.WebControls.TreeView" /> poprzednio zapisanego widoku formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę poziomów drzewa, które mają być powiązane z <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolką.</summary>
        <value>Maksymalna liczba poziomów drzewa do powiązania z <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolką. Wartość domyślna to-1, która wiąże wszystkie poziomy drzewa w źródle danych z kontrolką.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wiązania <xref:System.Web.UI.WebControls.TreeView> kontrolki ze źródłem danych <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> Użyj właściwości, aby ograniczyć liczbę poziomów drzewa do powiązania z kontrolką. Na przykład ustawienie tej właściwości w taki `2` sposób, aby powiązać tylko węzeł główny i wszystkie węzły, które znajdują się bezpośrednio w węźle <xref:System.Web.UI.WebControls.TreeView> głównym do kontrolki. Wszystkie pozostałe węzły w źródle danych zostaną zignorowane.  
  
> [!IMPORTANT]
>  Złośliwy użytkownik może utworzyć żądanie wywołania zwrotnego i pobrać dane dla węzłów <xref:System.Web.UI.WebControls.TreeView> kontrolki, które nie są wyświetlane dla deweloperów strony. W związku z tym zabezpieczenia danych muszą być implementowane przez źródło danych. Nie należy używać <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości do ukrywania danych.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości, aby powiązać tylko pierwsze dwa poziomy węzła (głębokości 0 i 1) <xref:System.Web.UI.WebControls.TreeView> do kontrolki. Drugi przykład kodu zawiera przykładowe dane XML dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> właściwości, aby powiązać tylko pierwsze dwa poziomy węzła (głębokości 0 i 1) <xref:System.Web.UI.WebControls.TreeView> do kontrolki. Wszystkie poziomy węzła w źródle danych są ignorowane. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość jest mniejsza niż <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wcięcia (w pikselach) dla węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> podrzędnych formantu.</summary>
        <value>Ilość miejsca (w pikselach) między lewą krawędzią węzła podrzędnego i jego lewej krawędzią węzła nadrzędnego. Wartość domyślna to 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> , aby kontrolować ilość odstępów między lewą krawędzią węzła podrzędnego a lewą krawędzią węzła nadrzędnego.  
  
> [!NOTE]
>  Właściwość ma wpływ na każdy węzeł podrzędny <xref:System.Web.UI.WebControls.TreeView> w formancie. <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Nie jest możliwe kontrolowanie wielkości wcięcia każdego węzła osobno.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> właściwości do sterowania wcięciem węzłów podrzędnych.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektów reprezentujących węzły główne <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> , który zawiera węzły główne <see cref="T:System.Web.UI.WebControls.TreeView" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby pobrać obiekt, który zawiera wszystkie węzły główne w drzewie. <xref:System.Web.UI.WebControls.TreeNodeCollection> <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Ta kolekcja jest często używana do szybkiego wykonywania iteracji przez wszystkie węzły główne lub dostępu do określonego węzła głównego w drzewie.  
  
> [!NOTE]
>  Typowa struktura drzewa ma tylko jeden węzeł główny; można jednak dodać wiele węzłów głównych do <xref:System.Web.UI.WebControls.TreeView> kontrolki.  
  
 Ta <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> właściwość może być również używana do programistycznego zarządzania węzłami głównymi w drzewie. Można dodawać, wstawiać, usuwać i pobierać <xref:System.Web.UI.WebControls.TreeNode> obiekty z kolekcji. Wszystkie aktualizacje kolekcji są automatycznie odzwierciedlane w <xref:System.Web.UI.WebControls.TreeView> formancie po następnej podróży z serwerem.  
  
 Aby uzyskać dostęp do węzłów podrzędnych węzła głównego, użyj <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> właściwości węzła. <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Użyj właściwości każdego kolejnego węzła poziomu nadrzędnego, aby przejść w dół poziomów węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> właściwości do przechodzenia z drzewa.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiektu, który umożliwia ustawienie domyślnego wyglądu węzłów <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> , które reprezentuje domyślny styl węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować domyślny wygląd węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `NodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `NodeStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Odpowiednie ustawienia stylu węzła <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>w, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> właściwości zastępują ustawienia <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> stylu właściwości.  
  
 Jeśli musisz wygenerować tabelę z menu nawigacji w stylu zawartości, w której węzły na określonym poziomie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne, możesz rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> właściwości zamiast ustawiania indywidualnego właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> właściwości do sterowania wyglądem węzłów <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekst jest zawijany w węźle, gdy w węźle nie ma miejsca.</summary>
        <value><see langword="true" />aby otoczyć tekst; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> Użyj właściwości, aby określić, czy tekst, który jest wyświetlany w każdym węźle, jest zawijany, gdy zabraknie miejsca.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> właściwości do zawijania tekstu <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu niestandardowego dla wskaźnika węzła, który nie może zostać rozwinięty.</summary>
        <value>Adres URL obrazu niestandardowego, który ma być wyświetlany dla węzłów nierozwijalnych. Wartość domyślna to ciąg pusty (""), który powoduje wyświetlenie domyślnego pustego obrazu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> , aby określić niestandardowy obraz wskaźnika węzła, który nie może zostać rozwinięty. Obraz wskaźnika węzła nierozwijalnego (lub miejsce) jest wyświetlany obok węzłów liści (zamiast rozwijanych i zwijanych wskaźników węzłów), aby wyrównać węzły liścia z węzłami nadrzędnymi lub głównymi.  
  
 Gdy właściwość jest ustawiona na `true`, w <xref:System.Web.UI.WebControls.TreeView> kontrolce zostanie wyświetlony znak plus (+) lub znak minus (-) lub obraz zastępczy obok węzła, aby wskazać, czy węzeł jest odpowiednio rozszerzalny, zwijany lub nierozszerzalny. <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Możesz określić niestandardowe <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> obrazy, najpierw ustawiając właściwość na `TreeViewImageSet.Custom` <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, a następnie ustawiając właściwości, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , na adresy URL obrazów niestandardowych. Jeśli nie określono żadnych obrazów, są używane obrazy domyślne. Aby ukryć wskaźniki węzła rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwość na. `false`  
  
> [!NOTE]
>  Aby upewnić się, że węzły są <xref:System.Web.UI.WebControls.TreeView> wyrównane prawidłowo w kontrolce przy użyciu obrazów niestandardowych, upewnij się, że wszystkie obrazy określone <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>przez <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> właściwości mają te same wymiary.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> aby określić niestandardowy obraz wskaźnika węzła, który nie może zostać rozwinięty. Aby wyświetlić przykładowy kod i obraz, który ma być wyświetlany w kontrolce, należy podać własny obraz, a <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> właściwość musi być ustawiona na. `TreeNodeImageSet.Custom`  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.TreeView> przez formant w celu podniesienia <xref:System.Web.UI.Control.Init> zdarzenia. <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Jest on zwykle używany przez deweloperów kontroli podczas rozszerzania <xref:System.Web.UI.WebControls.TreeView> klasy.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> została zastąpiona, aby zarejestrować się w celu odświeżenia. Jeśli skrypt klienta jest włączony, renderuje również wymagane skrypty i ukryte pola.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.TreeView> w kontrolce zostanie wybrany węzeł. <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak aktualizowanie wyświetlonej zawartości, za każdym razem, gdy wystąpi zdarzenie.  
  
 Opcjonalnie można ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwość węzła, aby określić, które zdarzenie jest zgłaszane po wybraniu tego węzła.  
  
> [!NOTE]
>  Nie jest renderowany dla węzła, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> którego właściwość ma ustawioną wartość `TreeNodeSelectAction.None`. <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView> w kontrolce zmieni stan między ogłoszeniami na serwerze. <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak aktualizowanie bazy danych lub wyświetlanej zawartości, za każdym razem, gdy wystąpi zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> klasy pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> wywołać metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy węzeł jest zwinięty <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> jest zgłaszane, gdy element danych jest powiązany z węzłem <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty <xref:System.Web.UI.WebControls.TreeView> w formancie. <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>Jeśli właściwość dla węzła jest ustawiona na <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> lub, zdarzenie jest również wywoływane, gdy ten węzeł zostanie kliknięty w formancie. <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> Podnosi zdarzenie<see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie można statycznie definiować struktury drzewa ze względu na rozmiar danych lub zawartość niestandardową, która zależy od danych wprowadzonych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Gdy właściwość dla węzła jest ustawiona na `true`, ten węzeł jest wypełniany w czasie wykonywania, gdy węzeł jest rozwinięty. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>  
  
 Aby wypełnić węzeł dynamicznie, najpierw ustaw <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość dla węzła na. `true` Następnie zdefiniuj metodę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia, które programowo wypełnia węzeł. Typowa metoda obsługi zdarzeń pobiera dane węzła ze źródła danych, umieszcza je w strukturze węzłów, a następnie dodaje strukturę węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji wypełnianego węzła. Struktura węzła jest tworzona przez dodanie <xref:System.Web.UI.WebControls.TreeNode> obiektów <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> do kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy właściwość dla węzła ma `true`ustawioną wartość, węzeł musi być wypełniany dynamicznie. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można deklaratywnie zagnieżdżać innego węzła poniżej. w przeciwnym razie na stronie wystąpi błąd.  
  
 Obsługiwane przeglądarki (przeglądarki zgodne z programem Microsoft Internet Explorer 4,0 i nowsze) mogą również korzystać z wypełniania węzłów po stronie klienta. Gdy ta funkcja jest włączona, <xref:System.Web.UI.WebControls.TreeView> pozwala formantowi na dynamiczne wypełnienie węzła na kliencie, gdy ten węzeł jest rozwinięty, co uniemożliwia załadowanie z powrotem na serwer. Aby uzyskać więcej informacji na temat wypełniania węzłów po <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>stronie klienta, zobacz.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> wywołać metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiektu, który umożliwia ustawienie wyglądu węzłów nadrzędnych <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> , które reprezentuje styl węzłów nadrzędnych <see cref="T:System.Web.UI.WebControls.TreeView" />w obiekcie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> , aby kontrolować wygląd węzłów nadrzędnych <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `ParentNodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `ParentNodeStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli musisz wygenerować tabelę z menu nawigacji w stylu zawartości, w której węzły na określonym poziomie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne, możesz rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> właściwości zamiast ustawiania indywidualnego właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> właściwości do sterowania wyglądem węzłów nadrzędnych <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znak, który jest używany do ograniczania wartości węzła, które są określone przez <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> właściwość.</summary>
        <value>Znak służący do ograniczania wartości węzła określonych we <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> właściwości. Wartość domyślna to znak ukośnika (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Właściwość zawiera rozdzielaną ogranicznikami listę wartości węzła, które tworzą ścieżkę z węzła głównego do bieżącego węzła. <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Użyj właściwości, aby określić znak ogranicznika, który jest używany do oddzielania wartości węzła. Ta wartość jest często używana podczas analizowania listy dla poszczególnych wartości.  
  
 W zależności od tekstu wyświetlanego w <xref:System.Web.UI.WebControls.TreeView> kontrolce, znak ogranicznika może wymagać zmiany, aby zapobiec konfliktom. Na przykład, jeśli ustawisz znak ogranicznika na przecinek, wyświetlany tekst nie powinien zawierać przecinków; w przeciwnym razie nie można dokładnie przeanalizować właściwości.<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> właściwości, aby określić znak <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> ogranicznika właściwości węzła. Ta wartość jest następnie używana do analizowania <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> właściwości dla poszczególnych wartości.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wszystkie węzły na podstawie źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która jest wywoływana <xref:System.Web.UI.WebControls.TreeView> przez formant w celu powiązania określonego źródła danych z kontrolką. <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ponieważ metoda jest zapieczętowana, należy <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> przesłonić metodę, jeśli konieczne jest wykonanie dodatkowych zadań podczas wiązania danych. <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane węzła są wypełniane na żądanie od klienta.</summary>
        <value><see langword="true" />Aby wypełnić dane węzła drzewa na żądanie od klienta; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie można statycznie definiować struktury drzewa ze względu na rozmiar danych lub zawartość niestandardową, która zależy od danych wprowadzonych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Gdy właściwość dla węzła jest ustawiona na `true`, ten węzeł jest wypełniany w czasie wykonywania, gdy węzeł jest rozwinięty. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>  
  
 Oprócz wypełniania węzłów na żądanie można wypełnić węzły bezpośrednio w obsługiwanej przeglądarce klienta. Gdy właściwość jest ustawiona na `true`, usługa jest wywoływana z klienta w celu wypełnienia węzłów drzewa, co eliminuje konieczność ogłaszania zwrotnego na serwerze. <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> W przeciwnym razie sterowanie zostaje przywrócone z powrotem do serwera w celu wypełnienia węzłów. <xref:System.Web.UI.WebControls.TreeView>  
  
> [!NOTE]
>  Właściwość musi również mieć `true` ustawioną wartość, <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> aby właściwość została ustawiona na `true`wartość. <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>  
  
 Aby wypełnić węzeł na kliencie <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> , najpierw ustaw właściwość na `true` , a następnie ustaw <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość dla węzła na `true`. Następnie zdefiniuj metodę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia, które programowo wypełnia węzeł. Typowa metoda obsługi zdarzeń pobiera dane węzła ze źródła danych, umieszcza je w strukturze węzłów, a następnie dodaje strukturę węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji wypełnianego węzła. Strukturę węzła można utworzyć przez dodanie <xref:System.Web.UI.WebControls.TreeNode> obiektów <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> do kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy właściwość dla węzła ma `true`ustawioną wartość, węzeł musi być wypełniany dynamicznie. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można deklaratywnie zagnieżdżać innego węzła poniżej. w przeciwnym razie na stronie wystąpi błąd.  
  
> [!NOTE]
>  Funkcja wypełniania węzłów po stronie klienta jest obsługiwana w przeglądarkach, które obsługują skrypty wywołania zwrotnego. Aby sprawdzić, czy przeglądarka obsługuje dostęp do skryptów wywołania zwrotnego <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> , należy użyć <xref:System.Web.HttpBrowserCapabilities> właściwości klasy. Można uzyskać dostęp do wystąpienia <xref:System.Web.HttpBrowserCapabilities> klasy dla bieżącego żądania <xref:System.Web.HttpRequest.Browser%2A> poprzez Właściwość <xref:System.Web.HttpRequest> klasy.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> aby włączyć wypełnianie po stronie klienta węzłów <xref:System.Web.UI.WebControls.TreeView> w formancie. Zauważ, że po włączeniu wypełniania węzłów po stronie klienta węzły są wypełniane dynamicznie na kliencie, bez konieczności ogłaszania z powrotem na serwerze.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg, który reprezentuje opcjonalny argument zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Podnosi zdarzenie wywołania zwrotnego przy użyciu określonych argumentów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> dla metody. <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg, który reprezentuje opcjonalny argument zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> Umożliwia formantowi przetworzenie zdarzenia, które jest zgłaszane podczas ogłaszania formularza na serwerze. Metoda jest metodą pomocnika <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> dla metody. <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona przekazuje wartość `eventArgument` parametru <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> do metody kontrolki implementującej <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> interfejs. Ten <xref:System.Web.UI.WebControls.TreeView> formant również renderuje element HTML, który powoduje wystąpienie zdarzenia ogłaszania zwrotnego. Jeśli formant renderuje skrypt po stronie klienta, aby ogłosić z powrotem na serwerze, argument ze skryptu jest przesyłany `eventArgument` do parametru. Jeśli zdarzenie ogłaszania zwrotnego jest spowodowane przez proste przesłanie do serwera, `eventArgument` parametr ma `null`wartość.  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Metoda zapewnia funkcjonalność dla wielu zdarzeń, które są implementowane przez kontrolki serwera HTML i sieci Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje <see cref="T:System.Web.UI.WebControls.TreeView" /> formantowi powiadomienie aplikacji ASP.NET o zmianie stanu kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia zmiany dla <xref:System.Web.UI.WebControls.TreeView> kontrolki są wywoływane <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> z metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Reprezentuje strumień wyjściowy, aby renderować zawartość HTML na kliencie. <see cref="T:System.Web.UI.HtmlTextWriter" /></param>
        <summary>Renderuje tag otwierającego HTML kontrolki do określonego składnika zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> Metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentuje strumień wyjściowy używany do zapisywania zawartości na stronie sieci Web.</param>
        <summary>Renderuje węzły w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> , aby renderować węzły <xref:System.Web.UI.WebControls.TreeView> w formancie do klienta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Reprezentuje strumień wyjściowy, aby renderować zawartość HTML na kliencie. <see cref="T:System.Web.UI.HtmlTextWriter" /></param>
        <summary>Renderuje tag zamykający HTML kontrolki do określonego składnika zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> Metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> obiektu, który umożliwia ustawienie wyglądu węzła głównego <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> , które reprezentuje styl węzła głównego <see cref="T:System.Web.UI.WebControls.TreeView" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby sterować wyglądem węzła głównego <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `RootNodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `RootNodeStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Jeśli musisz wygenerować tabelę z menu nawigacji w stylu zawartości, w której węzły na określonym poziomie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzły podrzędne, możesz rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> właściwości zamiast ustawiania indywidualnego właściwości stylu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> właściwości do sterowania wyglądem węzła głównego <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
        <returns>Bieżący stan widoku kontrolki serwera; w przeciwnym razie, jeśli nie ma stanu widoku skojarzonego z kontrolką. <see langword="null" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wybrany węzeł <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TreeNode" /></summary>
        <value>Reprezentujący wybrany węzeł <see cref="T:System.Web.UI.WebControls.TreeView" />w. <see cref="T:System.Web.UI.WebControls.TreeNode" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst węzła w <xref:System.Web.UI.WebControls.TreeView> kontrolce może być w jednym z dwóch trybów: tryb wyboru i tryb nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby umieścić węzeł w trybie nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość dla węzła na wartość inną niż pusty ciąg (""). Aby umieścić węzeł w trybie wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość dla węzła na pusty ciąg ("").  
  
 Gdy węzeł jest w trybie wyboru, użytkownik może wybrać węzeł, klikając tekst w węźle. Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> , aby określić, który węzeł jest zaznaczony <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
> [!NOTE]
>  Nie można wybrać węzła, gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka wyświetla hiperłącza. Gdy hiperłącza są wyświetlane, <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Właściwość zawsze zwraca wartość. `null`  
  
 Gdy użytkownik wybierze inny węzeł w <xref:System.Web.UI.WebControls.TreeView> kontrolce, klikając tekst w nowym węźle <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> , zdarzenie jest wywoływane domyślnie. Możesz określić inne zdarzenie, ustawiając <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Właściwość właściwości. W poniższej tabeli wymieniono dostępne opcje.  
  
|Akcja wyboru|Opis|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Przełącza węzeł między rozwiniętym i zwiniętym. Wywołuje lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzenie, zgodnie z potrzebami.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Nie wywołuje żadnych zdarzeń w przypadku wybrania węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Podnosi zdarzenie po zaznaczeniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Wywołuje zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzenie, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> jak i po wybraniu węzła. Węzły są rozwinięte, nigdy nie zwinięte.|  
  
> [!NOTE]
>  Nie jest renderowany dla węzła, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> którego właściwość ma ustawioną wartość `TreeNodeSelectAction.None`. <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości, aby określić wartość wybranego węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wybraniu węzła w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.TreeView> w kontrolce zostanie wybrany węzeł. <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak aktualizowanie wyświetlonej zawartości, za każdym razem, gdy wystąpi zdarzenie.  
  
 Opcjonalnie można ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwość dla węzła, aby określić, które zdarzenie jest zgłaszane po wybraniu tego węzła. W poniższej tabeli wymieniono dostępne opcje.  
  
|Akcja wyboru|Opis|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Przełącza węzeł między rozwiniętym i zwiniętym. Wywołuje lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzenie, zgodnie z potrzebami.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Nie wywołuje żadnych zdarzeń w przypadku wybrania węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Podnosi zdarzenie po zaznaczeniu węzła.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Wywołuje zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzenie, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> jak i po wybraniu węzła. Węzły są rozwinięte, nigdy nie zwinięte.|  
  
> [!NOTE]
>  Nie jest renderowany dla węzła, <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> którego właściwość ma ustawioną wartość `TreeNodeSelectAction.None`. <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Zdarzenie jest wywoływane tylko po kliknięciu przez użytkownika węzła. Zdarzenie nie jest wyzwalane, jeśli <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwość jest zmieniana programowo.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> jak za pomocą zdarzenia <xref:System.Web.UI.WebControls.Label> zaktualizować kontrolkę, gdy <xref:System.Web.UI.WebControls.TreeView> węzeł jest zaznaczony w kontrolce.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który kontroluje wygląd zaznaczonego węzła <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /></summary>
        <value>Reprezentujący styl wybranego węzła <see cref="T:System.Web.UI.WebControls.TreeView" /> w kontrolce. <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> Wartość domyślna to <see langword="null" />, co oznacza, <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> że właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby kontrolować wygląd zaznaczonego węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> Ta właściwość jest tylko do odczytu; można jednak ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle> zwracanego obiektu. Właściwości `Property-Subproperty`można ustawić deklaratywnie w formularzu, gdzie `Subproperty` <xref:System.Web.UI.WebControls.TreeNodeStyle> jest właściwością obiektu (na przykład `SelectedNodeStyle-ForeColor`). Właściwości można również ustawiać programowo w formularzu `Property.Subproperty` (na `SelectedNodeStyle.ForeColor`przykład). Typowe ustawienia zazwyczaj obejmują niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy między węzłami. Właściwości stylu są stosowane w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> lub<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła. <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Jeśli kolekcja jest zdefiniowana, zostanie zastosowana w tym momencie, zastępując inne właściwości stylu węzła.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> właściwości do sterowania wyglądem wybranego węzła <xref:System.Web.UI.WebControls.TreeView> w kontrolce.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wybranego węzła.</summary>
        <value>Wartość wybranego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> Właściwość zapewnia wygodny sposób określania wartości wybranego węzła. Ta właściwość po prostu zwraca wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości <xref:System.Web.UI.WebControls.TreeNode> obiektu, do <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> którego odwołuje się właściwość. Jeśli żaden węzeł nie jest obecnie zaznaczony w <xref:System.Web.UI.WebControls.TreeView> kontrolce, zwracany jest pusty ciąg ("").  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> Do ustawienia.</param>
        <param name="dataBound"><see langword="true" />Aby ustawić węzeł jako powiązany z danymi; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zezwala klasie pochodnej, aby określić, czy określony <see cref="T:System.Web.UI.WebControls.TreeNode" /> formant jest powiązany z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> , aby wskazać, czy określone <xref:System.Web.UI.WebControls.TreeNode> są powiązane z danymi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Metoda jest dostarczana, aby umożliwić kontrolce, która jest pochodną <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolki, <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> aby ustawić właściwość w węźle. <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /></para></block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> Do ustawienia.</param>
        <param name="dataItem">Element danych dla <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Umożliwia klasie pochodnej Ustawianie elementu danych dla określonej <see cref="T:System.Web.UI.WebControls.TreeNode" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby określić element danych dla określonego <xref:System.Web.UI.WebControls.TreeNode> formantu. <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> Do ustawienia.</param>
        <param name="dataPath">Ścieżka danych dla <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Umożliwia klasie pochodnej Ustawianie ścieżki danych dla określonej <see cref="T:System.Web.UI.WebControls.TreeNode" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby ustawić ścieżkę danych dla określonego <xref:System.Web.UI.WebControls.TreeNode> formantu. <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, które typy węzłów będą wyświetlać pole wyboru w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> wartości. Wartość domyślna to <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapewnić obsługę wyboru przez wiele węzłów w <xref:System.Web.UI.WebControls.TreeView> formancie, można wyświetlić pola wyboru obok obrazu dla węzła. Użyj właściwości <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> , aby określić, które typy węzłów będą wyświetlane pole wyboru. Na przykład, jeśli ta właściwość jest ustawiona na `TreeNodeType.Parent`, pola wyboru są wyświetlane dla każdego węzła nadrzędnego w drzewie. Poniższa tabela zawiera listę prawidłowych wartości dla tej właściwości.  
  
|Typ węzła|Opis|  
|---------------|-----------------|  
|`TreeNodeType.All`|Pola wyboru są wyświetlane dla wszystkich węzłów.|  
|`TreeNodeType.Leaf`|Pola wyboru są wyświetlane dla wszystkich węzłów liścia.|  
|`TreeNodeType.None`|Nie są wyświetlane pola wyboru.|  
|`TreeNodeType.Parent`|Pola wyboru są wyświetlane dla wszystkich węzłów nadrzędnych.|  
|`TreeNodeType.Root`|Pola wyboru są wyświetlane dla wszystkich węzłów głównych.|  
  
 Typ wyliczenia, który jest używany dla <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwości jest wyliczeniem flagi, które umożliwia łączenie wartości za pomocą operacji bitowych. Na przykład aby wyświetlić pola wyboru dla węzłów nadrzędnych i liściowych, użyj operatora bitowego or, aby połączyć `TreeNodeType.Parent` wartości i. `TreeNodeType.Leaf`  
  
 Aby określić, które węzły mają zaznaczone pole wyboru, wykonaj iterację w węzłach <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> kolekcji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Ustawienie można zastąpić przez <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> ustawienie właściwości dla każdego węzła.  
  
 Jeśli musisz zapewnić obsługę tylko jednego wyboru, rozważ użycie <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwości, aby pokazać i ukryć pola wyboru dla różnych typów węzłów.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość kombinacji bitowej jest spoza zakresu <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyświetlane są wskaźniki rozszerzania węzła.</summary>
        <value><see langword="true" />Aby wyświetlić wskaźniki węzła ekspansji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wskaźniki węzła rozwinięcia służą do określenia, czy węzeł jest rozwinięty, zwinięty czy nie rozwijany. Użyj właściwości, aby określić, czy <xref:System.Web.UI.WebControls.TreeView> w kontrolce mają być wyświetlane wskaźniki węzła rozwinięcia. <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>  
  
 Gdy właściwość jest ustawiona na `true`, w <xref:System.Web.UI.WebControls.TreeView> kontrolce zostanie wyświetlony znak plus (+) lub znak minus (-) lub obraz zastępczy obok węzła, aby wskazać, czy węzeł jest odpowiednio rozszerzalny, zwijany lub nierozszerzalny. <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Możesz określić niestandardowe <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> obrazy, najpierw ustawiając właściwość na `TreeViewImageSet.Custom` <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, a następnie ustawiając właściwości, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , na adresy URL obrazów niestandardowych. Jeśli nie określono żadnych obrazów, są używane obrazy domyślne.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> właściwości, aby pokazać i ukryć ikony węzła rozszerzenia.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy są wyświetlane linie łączące węzły podrzędne z węzłami nadrzędnymi.</summary>
        <value><see langword="true" />Aby wyświetlić linie łączące węzły; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Użyj właściwości, aby określić, czy są wyświetlane linie łączące węzły podrzędne z węzłami nadrzędnymi. Gdy ta właściwość jest ustawiona na `true` <xref:System.Web.UI.WebControls.TreeView> , formant przeszukuje folder dostępny w sieci Web <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> , który jest określony przez właściwość dla obrazów liniowych.  
  
> [!NOTE]
>  Jeśli właściwość nie jest ustawiona <xref:System.Web.UI.WebControls.TreeView> , kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli). <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> jak używać właściwości do wyświetlania linii łączących węzły <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Upewnij się, że używasz narzędzia line Designer do tworzenia zestawu obrazów liniowych i umieść je w folderze o nazwie LineImages w katalogu dla przykładowej aplikacji.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość używaną do renderowania tekstu alternatywnego dla czytników ekranu, aby pominąć zawartość kontrolki.</summary>
        <value>Ciąg, który <see cref="T:System.Web.UI.WebControls.TreeView" /> renderuje jako tekst alternatywny z niewidocznym obrazem jako wskazówką dla czytników ekranu. Wartość domyślna to "Pomiń linki nawigacji".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Właściwość jest właściwością, którą można ustawić, aby zwiększyć lub zmniejszyć dostęp do strony sieci Web. Strony sieci Web, które zawierają zawartość, która jest powtarzana, mogą zapewniać użytkownikowi mechanizm do pomijania odczytywania zawartości na głos przez czytniki ekranu.  
  
 Kontrolka<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> udostępnia właściwość jako sposób, w jaki cały formant zostanie pominięty przez czytniki zawartości ekranu. <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Jeśli właściwość jest ustawiona, niewidoczny obraz z tekstem alternatywnym jest renderowany, dzięki czemu użytkownik może przejść do końca formantu. Czytniki zawartości ekranu czytają tekst alternatywny na głos, podczas gdy obraz zajmuje tylko jedną przestrzeń w pikselach. W celu dokładnej kontroli nad renderowaniem strony ustaw <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> właściwość na ciąg pusty ("") i podaj własny mechanizm pomijania drzewa.  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Właściwość jest domyślnie ustawiona na pusty ciąg, co sprawia, że czytniki ekranu nie pomijają kontrolki.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wynik zdarzenia wywołania zwrotnego, które jest przeznaczone dla kontrolki.</summary>
        <returns>Wyniki wywołania zwrotnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> implementuje interfejs i używa do pobierania danych i <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> metody zwracania pobranych danych do kontrolki. <xref:System.Web.UI.ICallbackEventHandler> <xref:System.Web.UI.WebControls.TreeView>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg, który reprezentuje opcjonalny argument zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary>Podnosi zdarzenie wywołania zwrotnego przy użyciu określonych argumentów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy formantów powinni przesłaniać <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla kontrolki.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazw przychodzących.</param>
        <summary>Przetwarza dane ogłaszania zwrotnego dla <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolki.</summary>
        <returns><see langword="true" />, jeśli <see cref="T:System.Web.UI.WebControls.TreeView" /> stan formantu zmieni się w wyniku zdarzenia ogłaszania zwrotnego; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy formantów powinni przesłaniać <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje <see cref="T:System.Web.UI.WebControls.TreeView" /> formantowi powiadomienie aplikacji ASP.NET o zmianie stanu kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy formantów powinni przesłaniać <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg, który reprezentuje opcjonalny argument zdarzenia do przekazania do programu obsługi zdarzeń.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> Umożliwia formantowi przetworzenie zdarzenia, które jest zgłaszane podczas ogłaszania formularza na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy formantów powinni przesłaniać <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> Pobiera wartość <see cref="T:System.Web.UI.WebControls.TreeView" /> dla kontrolki.</summary>
        <value>Zawsze zwraca <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia strumieniu danych wyjściowych zapisanie odpowiedniego znacznika HTML <xref:System.Web.UI.WebControls.TreeView> dla formantu. <xref:System.Web.UI.WebControls.TreeView.TagKey%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> właściwość, aby określić, która <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość ma być używana w formancie pochodnym.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia okno docelowe lub ramkę, w której ma zostać wyświetlona zawartość strony sieci Web, która jest skojarzona z węzłem.</summary>
        <value>Okno docelowe lub ramka, w której ma zostać wyświetlona zawartość połączonej strony sieci Web. Wartości muszą zaczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalnych zaczynających się od znaku podkreślenia, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość docelowa 
 </term><description> Renderuje zawartość w 
 </description></listheader><item><term><see langword="_blank" /></term><description> Nowe okno bez ramek.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Element nadrzędny bezpośredniego zestawu ramek.  
  
 </description></item><item><term><see langword="_search" /></term><description> Okienko wyszukiwania.  
  
 </description></item><item><term><see langword="_self" /></term><description> Ramka z fokusem.  
  
 </description></item><item><term><see langword="_top" /></term><description> Pełne okno bez ramek.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Sprawdź dokumentację przeglądarki, aby określić, <see langword="_search" /> czy wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer 5,0 lub nowszy obsługuje <see langword="_search" /> wartość docelową.  
  
</para></block>  
  
 Wartość domyślna to ciąg pusty (""), który odświeża okno lub ramkę z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.Target%2A> Użyj właściwości, aby określić okno lub ramkę, w której ma zostać wyświetlona zawartość sieci Web, która jest połączona z węzłem po kliknięciu tego węzła.  
  
> [!NOTE]
>  Właściwość renderuje jako `target`atrybut. <xref:System.Web.UI.WebControls.TreeView.Target%2A> `target` Atrybut dla`anchor` elementów jest niedozwolony w definicji typu dokumentu XHTML 1,1. Nie ustawiaj <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości, jeśli renderowane dane wyjściowe <xref:System.Web.UI.WebControls.TreeView> dla muszą być zgodne z XHTML 1,1. Aby uzyskać więcej informacji, zobacz [standardy XHTML w programie Visual Studio i ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Podczas tworzenia dostępnych stron sieci Web należy unikać używania <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości, aby wskazać inne okno. Aby uzyskać więcej informacji, zobacz [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwości do wyświetlania zawartości sieci Web, która jest połączona z węzłem w nowym oknie po kliknięciu tego węzła.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany <see cref="T:System.Web.UI.WebControls.TreeView" /> stanu widoku w formancie, aby mogły być przechowywane <see cref="T:System.Web.UI.StateBag" /> w obiekcie dla formantu. Jest <see cref="T:System.Web.UI.StateBag" /> to dostępne <see cref="P:System.Web.UI.Control.ViewState" /> za pomocą właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> Metoda jest zastępowana, aby oznaczyć punkt początkowy do rozpoczęcia śledzenia i zapisywania zmian w formancie jako część stanu widoku dla kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pole wyboru w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce zmieni stan między ogłoszeniami na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView> w kontrolce zmieni stan między ogłoszeniami na serwerze. <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową, taką jak aktualizowanie bazy danych lub wyświetlanej zawartości, za każdym razem, gdy wystąpi zdarzenie.  
  
 Mimo że <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> zdarzenie jest wyzwalane po ponownym wystawieniu, zmiana pola wyboru nie powoduje ponownego opublikowania.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> jak użyć zdarzenia, aby <xref:System.Web.UI.WebControls.Label> zaktualizować kontrolkę <xref:System.Web.UI.WebControls.TreeView> , gdy pola wyboru kontrolki zmieniają stan między ogłoszeniami na serwerze.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł jest zwinięty w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy węzeł jest zwinięty <xref:System.Web.UI.WebControls.TreeView> w kontrolce. <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzenia zaktualizować zawartość <xref:System.Web.UI.WebControls.Label> kontrolki, gdy użytkownik zwija węzeł w <xref:System.Web.UI.WebControls.TreeView> formancie.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy element danych jest powiązany z węzłem w <see cref="T:System.Web.UI.WebControls.TreeView" /> kontrolce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> jest zgłaszane, gdy element danych jest powiązany z węzłem <xref:System.Web.UI.WebControls.TreeView> w kontrolce. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> zdarzenia, aby zmienić obraz dla węzła, gdy spełniony jest jakiś warunek. Drugi przykład kodu zawiera przykładowe dane XML dla pierwszego przykładu kodu.  
  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> zdarzenia, aby zmienić obraz dla węzła, gdy spełniony jest jakiś warunek. Aby ten przykład działał prawidłowo, należy skopiować przykładowe dane XML dostarczone po tym przykładzie kodu do pliku o nazwie Book. XML. Upewnij się również, że podano własne obrazy do wyświetlania w tym przykładzie.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Poniższy przykład kodu zawiera przykładowe dane XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł jest rozwinięty w <see cref="T:System.Web.UI.WebControls.TreeView" /> formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty <xref:System.Web.UI.WebControls.TreeView> w formancie. <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedurę niestandardową przy każdym wystąpieniu tego zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> `TreeNodeSelectAction.SelectExpand`Jeśli właściwość dla węzła jest ustawiona na `TreeNodeSelectAction.Expand` lub, zdarzenie jest również wywoływane, gdy ten węzeł zostanie kliknięty w formancie. <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenia zaktualizować zawartość <xref:System.Web.UI.WebControls.Label> kontrolki, gdy użytkownik poszerzy węzeł w <xref:System.Web.UI.WebControls.TreeView> formancie.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy węzeł z <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> <see langword="true" /> ustawioną jego właściwością jest rozwinięty w <see cref="T:System.Web.UI.WebControls.TreeView" /> formancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie można statycznie definiować struktury drzewa ze względu na rozmiar danych lub zawartość niestandardową, która zależy od danych wprowadzonych przez użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> kontrolka obsługuje populację węzłów dynamicznych. Gdy właściwość dla węzła jest ustawiona na `true`, ten węzeł jest wypełniany w czasie wykonywania, gdy węzeł jest rozwinięty. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>  
  
 Aby wypełnić węzeł dynamicznie, najpierw ustaw <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość dla węzła na. `true` Następnie zdefiniuj metodę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia, które programowo wypełnia węzeł. Typowa metoda obsługi zdarzeń pobiera dane węzła ze źródła danych, umieszcza je w strukturze węzłów, a następnie dodaje strukturę węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> kolekcji wypełnianego węzła. Struktura węzła jest tworzona przez dodanie <xref:System.Web.UI.WebControls.TreeNode> obiektów <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> do kolekcji węzła nadrzędnego.  
  
> [!NOTE]
>  Gdy właściwość dla węzła ma `true`ustawioną wartość, węzeł musi być wypełniany dynamicznie. <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można deklaratywnie zagnieżdżać innego węzła poniżej. w przeciwnym razie na stronie wystąpi błąd.  
  
 Obsługiwane przeglądarki (przeglądarki zgodne z programem Microsoft Internet Explorer 4,0 i nowsze) mogą również korzystać z wypełniania węzłów po stronie klienta. Gdy ta funkcja jest włączona, <xref:System.Web.UI.WebControls.TreeView> umożliwia kontrolowanie dynamicznego wypełniania węzła na kliencie, gdy ten węzeł jest rozwinięty, co uniemożliwia załadowanie z powrotem do serwera. Aby uzyskać więcej informacji na temat wypełniania węzłów po <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>stronie klienta, zobacz.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzenia do dynamicznego wypełniania węzłów <xref:System.Web.UI.WebControls.TreeView> kontrolki na serwerze. Zauważ, że <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> właściwość jest ustawiona na `false` tak, aby zapobiec obsłudze zdarzeń rozszerzających węzeł na kliencie.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolka jest renderowana jako interfejs użytkownika na stronie.</summary>
        <value><see langword="true" />, jeśli formant jest widoczny na stronie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na `false`, formant nie jest renderowany. <xref:System.Web.UI.WebControls.TreeView.Visible%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
