<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f2b04024d746b3766e3609fb101f96a42bb3f5c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69392216" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje element, który ma zostać osadzony w wiadomości e-mail skonstruowanej przy użyciu <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reprezentuje <xref:System.Web.UI.WebControls.EmbeddedMailObject> element, który ma zostać osadzony w wiadomości e-mail. Te elementy osadzone mogą być plikami obrazów, takimi jak logo firmy. Każdy osadzony element jest określany przez identyfikator i ścieżkę.  
  
 Aby upewnić się, że osadzony obiekt jest prawidłowo wyświetlany w pliku wiadomości e-mail, muszą zostać spełnione następujące warunki:  
  
-   Wiadomość e-mail jest w formacie HTML.  
  
-   Element jest plikiem obrazu (. jpg,. gif,. BMP itd.).  
  
-   Plik treści w formacie HTML określony we <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> właściwości zawiera odwołanie do pliku obrazu przy użyciu następującej składni:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> Jeśli zostanie dodana do wiadomości e-mail i nie spełnia wszystkich określonych wymagań, najprawdopodobniej będzie ona wyświetlana jako załącznik w wiadomości e-mail. Jeśli do elementu odwołuje się identyfikator w wiadomości e-mail, ale nie jest on dołączony jako element osadzony, zostanie on wyświetlony jako uszkodzony załącznik, gdy zostanie wyświetlona poczta e-mail.  
  
 W <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> programie są przechowywane <xref:System.Web.UI.WebControls.EmbeddedMailObject> kolekcje obiektów dla jednej wiadomości e-mail. Jest używana <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> przez Właściwość<xref:System.Web.UI.WebControls.MailDefinition> obiektu do tworzenia wiadomości e-mail. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>  
  
 Wiadomości e-mail, które zezwalają na obiekty osadzone można konfigurować w następujących kontrolkach sieci <xref:System.Web.UI.WebControls.MailDefinition> Web, ustawiając ich właściwości w sposób deklaratywny:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Wartości w <xref:System.Web.UI.WebControls.EmbeddedMailObject> i <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> obiektach nie są przechowywane w stanie widoku. Zapewnia to ochronę przed złośliwymi użytkownikami, którzy odnajdują informacje o ścieżce dla Twojego serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzeń o nazwie `SendingMail`. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Następujący przykładowy kod może służyć jako plik ChangePasswordMail. htm dla poprzedniego przykładowego kodu.  
  
> [!IMPORTANT]
>  Wysyłanie nazw kont użytkowników lub haseł w wiadomości e-mail jest potencjalnym zagrożeniem bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i mogą być odczytywane przez specjalne aplikacje sieci "wykrywanie".  Aby zwiększyć bezpieczeństwo, należy użyć środków zaradczych, które zostały opisane w temacie [Zabezpieczanie formantów logowania](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać lub ustawić identyfikator elementu osadzonego, należy użyć <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> właściwości. Aby uzyskać lub ustawić ścieżkę do osadzonego elementu, użyj <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> właściwości. Obie właściwości muszą być ustawione, aby pomyślnie osadzić element w wiadomości e-mail.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa używana jako identyfikator elementu do osadzenia w wiadomości e-mail. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Ścieżka używana do pobierania elementu do osadzenia w wiadomości e-mail. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy, używając określonej nazwy identyfikatora i ścieżki do wypełniania obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przedstawia przykładowy kod strony ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzeń o nazwie `SendingMail`. W tym przykładzie kodu przyjęto założenie, że witryna sieci Web ASP.NET została skonfigurowana do korzystania z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 Poniższy przykład kodu demonstruje użycie strony. aspx.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje użycie pliku związanego z kodem.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Następujący przykładowy kod może służyć jako plik ChangePasswordMail. htm dla poprzedniego przykładowego kodu.  
  
> [!IMPORTANT]
>  Wysyłanie nazw kont użytkowników lub haseł w wiadomości e-mail jest potencjalnym zagrożeniem bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i mogą być odczytywane przez specjalne aplikacje sieci "wykrywanie".  Aby zwiększyć bezpieczeństwo, należy użyć środków zaradczych, które zostały opisane w temacie [Zabezpieczanie formantów logowania](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę, która jest używana jako identyfikator elementu, który ma zostać osadzony w wiadomości e-mail skonstruowanej z <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasą.</summary>
        <value>Zwraca identyfikator elementu, który ma zostać osadzony w wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa identyfikator elementu, który ma zostać osadzony w wiadomości e-mail zbudowanej deklaratywnie <xref:System.Web.UI.WebControls.MailDefinition> z klasą. <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> Identyfikator jest używany do mapowania elementu zawartego we <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> właściwości do odpowiedniej lokalizacji w treści pliku określonego <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> we właściwości, przy użyciu następującej składni:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 Zazwyczaj element jest plikiem obrazu. Wartość domyślna <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> właściwości jest ciągiem pustym.  
  
 Najlepszym rozwiązaniem dla projektowania ułatwień dostępu jest ustawienie właściwości tekst alternatywny w wiadomości e-mail dla obrazów osadzonych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzeń o nazwie `SendingMail`. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Następujący przykładowy kod może służyć jako plik ChangePasswordMail. htm dla poprzedniego przykładowego kodu.  
  
> [!IMPORTANT]
>  Wysyłanie nazw kont użytkowników lub haseł w wiadomości e-mail jest potencjalnym zagrożeniem bezpieczeństwa. Wiadomości e-mail są wysyłane w postaci zwykłego tekstu i mogą być odczytywane przez specjalne aplikacje sieci "wykrywanie".  Aby zwiększyć bezpieczeństwo, należy użyć środków zaradczych, które zostały opisane w temacie [Zabezpieczanie formantów logowania](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę, która jest używana do pobierania elementu do osadzenia w wiadomości e-mail skonstruowanej z <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasą.</summary>
        <value>Zwraca ścieżkę do elementu, który ma zostać osadzony w wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa ścieżkę do elementu, który ma zostać osadzony w wiadomości pocztowej zbudowanej deklaratywnie <xref:System.Web.UI.WebControls.MailDefinition> z obiektem. <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> Ścieżka pliku w programie <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> musi być ścieżką, taką jak C:\MyServer\Banner.gif. Zwykle element osadzony jest plikiem obrazu. Jeśli do pliku obrazu odwołuje się jego identyfikator w wiadomości e-mail, ale nie jest on uwzględniony w wiadomości, obraz pojawia się jako uszkodzony załącznik, gdy zostanie wyświetlona wiadomość.  
  
 Najlepszym rozwiązaniem dla projektowania ułatwień dostępu jest ustawienie właściwości tekst alternatywny w wiadomości e-mail dla obrazów osadzonych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzeń o nazwie `SendingMail`. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Następujący przykładowy kod może służyć jako plik ChangePasswordMail. htm dla poprzedniego przykładowego kodu.  
  
> [!IMPORTANT]
>  Wysyłanie nazw kont użytkowników lub haseł w wiadomości e-mail jest potencjalnym zagrożeniem bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i mogą być odczytywane przez specjalne aplikacje sieci "wykrywanie".  Aby zwiększyć bezpieczeństwo, należy użyć środków zaradczych, które zostały opisane w temacie [Zabezpieczanie formantów logowania](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
  </Members>
</Type>
