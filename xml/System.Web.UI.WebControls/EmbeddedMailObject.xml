<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b077e7c55c44c8d33f2106e3a930e01a4d73e389" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39880929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje element, aby osadzić w wiadomościach e-mail, który jest tworzony przy użyciu <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> Reprezentuje element, aby osadzić w wiadomości e-mail. Osadzone elementy mogą pochodzić pliki obrazów, takich jak logo firmy. Każdy element osadzony jest określony przez identyfikator i ścieżkę.  
  
 Aby upewnić się, że obiekt osadzony jest wyświetlany poprawnie w pliku wiadomości e-mail, muszą być spełnione następujące warunki:  
  
-   Wiadomość e-mail jest w formacie HTML.  
  
-   Element jest plikiem obrazu (jpg, GIF, BMP itd.).  
  
-   Określona w pliku treści w formacie HTML <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> właściwość zawiera odwołanie do pliku obrazu, używając następującej składni:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Jeśli <xref:System.Web.UI.WebControls.EmbeddedMailObject> zostanie dodany do wiadomości e-mail, a nie spełnia wszystkich wymagań, określony wcześniej, najprawdopodobniej wyświetlane są jako załącznik wiadomości e-mail. Jeśli element jest przywoływany przez identyfikator w wiadomości e-mail, ale nie są dołączone jako element osadzony, pojawi się jako załącznik przerwany podczas wyświetlania wiadomości e-mail.  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> Przechowuje kolekcję <xref:System.Web.UI.WebControls.EmbeddedMailObject> obiektów dla pojedynczej wiadomości. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> Jest używany przez <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> właściwość <xref:System.Web.UI.WebControls.MailDefinition> obiekt, aby utworzyć wiadomość e-mail.  
  
 Wiadomości e-mail, które dopuszcza się użycia obiektów osadzonych są konfigurowane w następujących kontrolkach internetowych, ustawiając ich <xref:System.Web.UI.WebControls.MailDefinition> właściwości deklaratywne:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Wartości w <xref:System.Web.UI.WebControls.EmbeddedMailObject> i <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> obiekty nie są przechowywane w stanie widoku. Chroni to przed złośliwymi użytkownikami odnajdywanie informacji o ścieżce dla Twojego serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i zawiera program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzenie o nazwie `SendingMail`. Przykład kodu zakłada, czy skonfigurowano witryny sieci Web ASP.NET do korzystania z członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownika została utworzona z którego nazwa i hasło, które są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie proste uwierzytelnianie formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` programu obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o tym, jak skonfigurować serwer SMTP, zobacz [NIB: instrukcje: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dla celów tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykład jest konstruowany do testowania błąd podczas wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowana lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat dla użytkownika. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zobacz przykład kodu poniżej, aby utworzyć źródła określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródła zdarzeń, zobacz [serwera zdarzenie obsługi we wzorcu ASP.NET Web Forms Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiekt jest ustawiony na `true` do wskazania, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 W poniższym przykładzie kodu należy użyć, jeśli potrzebujesz programowo dodać źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w kolejności, w pierwszym przykładzie kodu do prawidłowego działania. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Poniższy przykład kodu może służyć jako pliku ChangePasswordMail.htm poprzedni przykładowy kod.  
  
> [!IMPORTANT]
>  Wysyłanie konta użytkownika nazwy i hasła w wiadomości e-mail jest potencjalnym zagrożeniem dla bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i może zostać odczytany przez "Wykrywanie" aplikacji sieciowych.  Aby zwiększyć bezpieczeństwo, należy użyć środki zaradcze, które są opisane w [zabezpieczanie kontrolek logowania](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać lub ustawić identyfikator osadzonego elementu, należy użyć <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> właściwości. Aby pobrać lub ustawić ścieżkę do osadzonego elementu, należy użyć <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> właściwości. Obie te właściwości musi być równa pomyślnie osadzanie elementu w wiadomości e-mail.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa używana jako identyfikator elementu do osadzenia w wiadomości e-mail. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Ścieżka używana do pobierania elementu w celu osadzenia w wiadomości e-mail. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> klasy przy użyciu określonego identyfikatora nazwę i ścieżkę do wypełnienia obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje przykład związanym z kodem, strony ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontroli i zawiera program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzenie o nazwie `SendingMail`. Ten przykład kodu zakłada, czy skonfigurowano witryny sieci Web ASP.NET do korzystania z członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownika została utworzona z którego nazwa i hasło, które są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie proste uwierzytelnianie formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` programu obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o tym, jak skonfigurować serwer SMTP, zobacz [NIB: instrukcje: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dla celów tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykład jest konstruowany do testowania błąd podczas wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowana lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat dla użytkownika. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zobacz przykład kodu poniżej, aby utworzyć źródła określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródła zdarzeń, zobacz [serwera zdarzenie obsługi we wzorcu ASP.NET Web Forms Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiekt jest ustawiony na `true` do wskazania, że błąd został obsłużony.  
  
 Poniższy przykład kodu demonstruje, użycie strony .aspx.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje, użycie pliku CodeBehind.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 W poniższym przykładzie kodu należy użyć, jeśli potrzebujesz programowo dodać źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w kolejności, w pierwszym przykładzie kodu do prawidłowego działania. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Poniższy przykład kodu może służyć jako pliku ChangePasswordMail.htm poprzedni przykładowy kod.  
  
> [!IMPORTANT]
>  Wysyłanie konta użytkownika nazwy i hasła w wiadomości e-mail jest potencjalnym zagrożeniem dla bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i może zostać odczytany przez "Wykrywanie" aplikacji sieciowych.  Aby zwiększyć bezpieczeństwo, należy użyć środki zaradcze, które są opisane w [zabezpieczanie kontrolek logowania](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę, która jest używana jako identyfikator elementu do osadzenia w wiadomości e-mail, skonstruowany przy użyciu <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasy.</summary>
        <value>Zwraca identyfikator elementu do osadzenia w wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> Właściwość określa identyfikator elementu do osadzenia w wiadomości e-mail, w sposób deklaratywny skonstruowany przy użyciu <xref:System.Web.UI.WebControls.MailDefinition> klasy. Identyfikator jest używany do mapowania element zawarty w <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> właściwość do odpowiedniej lokalizacji w treści pliku określonego w <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> właściwości, używając następującej składni:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 Zazwyczaj element jest plikiem obrazu. Wartość domyślna dla <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> właściwości jest ciągiem pustym.  
  
 Jest najlepszym rozwiązaniem dla projektowania ułatwień dostępu można ustawić właściwości alternatywny tekst w Twojej wiadomości e-mail w przypadku żadnych obrazów osadzonych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i zawiera program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzenie o nazwie `SendingMail`. Przykład kodu zakłada, czy skonfigurowano witryny sieci Web ASP.NET do korzystania z członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownika została utworzona z którego nazwa i hasło, które są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie proste uwierzytelnianie formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` programu obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o tym, jak skonfigurować serwer SMTP, zobacz [NIB: instrukcje: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dla celów tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykład jest konstruowany do testowania błąd podczas wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowana lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat dla użytkownika. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zobacz przykład kodu poniżej, aby utworzyć źródła określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródła zdarzeń, zobacz [serwera zdarzenie obsługi we wzorcu ASP.NET Web Forms Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiekt jest ustawiony na `true` do wskazania, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 W poniższym przykładzie kodu należy użyć, jeśli potrzebujesz programowo dodać źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w kolejności, w pierwszym przykładzie kodu do prawidłowego działania. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Poniższy przykład kodu może służyć jako pliku ChangePasswordMail.htm poprzedni przykładowy kod.  
  
> [!IMPORTANT]
>  Wysyłanie konta użytkownika nazwy i hasła w wiadomości e-mail jest potencjalnym zagrożeniem dla bezpieczeństwa. Wiadomości e-mail są wysyłane w postaci zwykłego tekstu i może zostać odczytany przez "Wykrywanie" aplikacji sieciowych.  Aby zwiększyć bezpieczeństwo, należy użyć środki zaradcze, które są opisane w [zabezpieczanie kontrolek logowania](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę, która służy do pobierania elementu w celu osadzenia w wiadomości e-mail, skonstruowany przy użyciu <see cref="T:System.Web.UI.WebControls.MailDefinition" /> klasy.</summary>
        <value>Zwraca ścieżkę do elementu, aby osadzić w wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> Właściwość określa ścieżkę do elementu, którą chcesz osadzić w wiadomości e-mail, w sposób deklaratywny skonstruowany przy użyciu <xref:System.Web.UI.WebControls.MailDefinition> obiektu. Ścieżka pliku w <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> musi być ścieżką, takich jak C:\MyServer\Banner.gif. Zazwyczaj osadzonego elementu jest plikiem obrazu. Jeśli plik obrazu jest przywoływany przez jego identyfikator w wiadomości e-mail, ale nie są uwzględnione w wiadomości, obraz jest wyświetlany jako załącznik przerwany podczas wyświetlania wiadomości e-mail.  
  
 Jest najlepszym rozwiązaniem dla projektowania ułatwień dostępu można ustawić właściwości alternatywny tekst w Twojej wiadomości e-mail w przypadku żadnych obrazów osadzonych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i zawiera program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> zdarzenie o nazwie `SendingMail`. Przykład kodu zakłada, czy skonfigurowano witryny sieci Web ASP.NET do korzystania z członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownika została utworzona z którego nazwa i hasło, które są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie proste uwierzytelnianie formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` programu obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o tym, jak skonfigurować serwer SMTP, zobacz [NIB: instrukcje: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dla celów tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykład jest konstruowany do testowania błąd podczas wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowana lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat dla użytkownika. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zobacz przykład kodu poniżej, aby utworzyć źródła określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródła zdarzeń, zobacz [serwera zdarzenie obsługi we wzorcu ASP.NET Web Forms Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiekt jest ustawiony na `true` do wskazania, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 W poniższym przykładzie kodu należy użyć, jeśli potrzebujesz programowo dodać źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w kolejności, w pierwszym przykładzie kodu do prawidłowego działania. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Poniższy przykład kodu może służyć jako pliku ChangePasswordMail.htm poprzedni przykładowy kod.  
  
> [!IMPORTANT]
>  Wysyłanie konta użytkownika nazwy i hasła w wiadomości e-mail jest potencjalnym zagrożeniem dla bezpieczeństwa. Wiadomości e-mail są zwykle wysyłane w postaci zwykłego tekstu i może zostać odczytany przez "Wykrywanie" aplikacji sieciowych.  Aby zwiększyć bezpieczeństwo, należy użyć środki zaradcze, które są opisane w [zabezpieczanie kontrolek logowania](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
  </Members>
</Type>