<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f571cffb057b157a8295c4e27a6fc568e7ae0fe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399717" /></Metadata><TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type TemplateField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przedstawia pole, które wyświetla zawartość niestandardową w formancie powiązanym z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana przez formanty powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania zawartości niestandardowej dla każdego wyświetlonego rekordu. <xref:System.Web.UI.WebControls.TemplateField> Gdy zachodzi potrzeba wyświetlenia zawartości w kontrolce powiązanej z danymi, która nie jest dostarczana przez jedno ze wstępnie zdefiniowanych pól kontroli danych <xref:System.Web.UI.WebControls.BoundField>(na przykład) <xref:System.Web.UI.WebControls.TemplateField> , użyj klasy, aby utworzyć niestandardowy interfejs użytkownika. <xref:System.Web.UI.WebControls.TemplateField> Obiekt jest wyświetlany inaczej w zależności od kontrolki powiązanej z danymi, w której jest używany. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolka <xref:System.Web.UI.WebControls.TemplateField> wyświetla obiekt jako kolumnę, a <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla go jako wiersz.  
  
 Można zdefiniować szablon niestandardowy dla różnych części <xref:System.Web.UI.WebControls.TemplateField> obiektu za pomocą szablonów wymienionych w poniższej tabeli.  
  
|Szablon|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|Określa zawartość, która ma być wyświetlana dla elementów naprzemiennych w <xref:System.Web.UI.WebControls.TemplateField> obiekcie.|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|Określa zawartość do wyświetlenia dla elementu w trybie edycji w <xref:System.Web.UI.WebControls.TemplateField> obiekcie.|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|Określa zawartość do wyświetlenia dla sekcji <xref:System.Web.UI.WebControls.TemplateField> stopki obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|Określa zawartość do wyświetlenia dla sekcji <xref:System.Web.UI.WebControls.TemplateField> nagłówka obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|Określa zawartość do wyświetlenia dla elementu w trybie wstawiania w <xref:System.Web.UI.WebControls.TemplateField> obiekcie. Ten szablon jest obsługiwany tylko przez <xref:System.Web.UI.WebControls.DetailsView> formant.|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|Określa zawartość do wyświetlenia dla elementów w <xref:System.Web.UI.WebControls.TemplateField> obiekcie.|  
  
 Można ukryć <xref:System.Web.UI.WebControls.TemplateField> obiekt w kontrolce powiązanej z danymi, <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> ustawiając właściwość na `false`.  
  
 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Jako alternatywę dla definiowania niestandardowego lub <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> szablonu można dostosować sekcje nagłówka <xref:System.Web.UI.WebControls.TemplateField> i stopki obiektu, ustawiając inne właściwości <xref:System.Web.UI.WebControls.TemplateField> obiektu. Aby wyświetlić podpis w sekcjach nagłówka lub stopki, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> odpowiednio <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> właściwość lub. Zamiast wyświetlania tekstu w sekcji nagłówka, można wyświetlić obraz przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Sekcja nagłówka może być ukryta w <xref:System.Web.UI.WebControls.TemplateField> obiekcie przez <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> ustawienie właściwości na `false`.  
  
> [!NOTE]
>  Niektóre kontrolki powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> kontrolka) mogą pokazać lub ukryć tylko całą sekcję nagłówka kontrolki. Te kontrolki powiązane z danymi nie obsługują <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości dla pojedynczego pola powiązanego. Aby pokazać lub ukryć całą sekcję nagłówka kontrolki powiązanej z danymi, użyj `ShowHeader` właściwości kontrolki (jeśli jest dostępna).  
  
 Można również dostosować wygląd <xref:System.Web.UI.WebControls.TemplateField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono różne właściwości stylu.  
  
|Style — właściwość|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Ustawienia stylu dla formantów <xref:System.Web.UI.WebControls.TemplateField> podrzędnego serwera sieci Web obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Ustawienia stylu sekcji <xref:System.Web.UI.WebControls.TemplateField> stopki obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Ustawienia stylu sekcji <xref:System.Web.UI.WebControls.TemplateField> nagłówka obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Ustawienia stylu dla elementów danych w <xref:System.Web.UI.WebControls.TemplateField> obiekcie.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć niestandardowy <xref:System.Web.UI.WebControls.TemplateField> obiekt, który wyświetla dwa pola w tej samej komórce. Pola First Name i nazwisko są łączone do tego samego <xref:System.Web.UI.WebControls.TemplateField> obiektu.  
  
 [!code-aspx-csharp[TemplateField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-aspx-vb[TemplateField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TemplateField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TemplateField> klasy. Ten konstruktor jest często używany podczas dodawania pól do dynamicznie utworzonego formantu powiązanego z danymi.  
  
 Aby dynamicznie dodać <xref:System.Web.UI.WebControls.TemplateField> obiekt do kontrolki powiązanej z danymi, Utwórz nowy <xref:System.Web.UI.WebControls.TemplateField> obiekt, zdefiniuj odpowiednie szablony, a następnie dodaj je do kolekcji pól formantu powiązanego z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolki, <xref:System.Web.UI.WebControls.TemplateField> Dodaj obiekt do <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dynamicznie dodawać pola do formantu powiązanego z danymi, zdecydowanie zaleca się, aby pola były statycznie deklarowane, a następnie pokazane lub ukryte, zgodnie z potrzebami. Statycznie deklarując wszystkie pola zmniejsza rozmiar stanu widoku dla formantu powiązanego z danymi nadrzędnymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia konstruktora do dynamicznego dodawania <xref:System.Web.UI.WebControls.TemplateField> kolumny pola <xref:System.Web.UI.WebControls.GridView> do kontrolki.  
  
 [!code-aspx-csharp[TemplateFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-aspx-vb[TemplateFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania elementów naprzemiennych w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekcie.</summary>
        <value>Zaimplementowany obiekt, który zawiera szablon do wyświetlania elementów naprzemiennych <see cref="T:System.Web.UI.WebControls.TemplateField" />w obiekcie. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną dla elementów naprzemiennych <xref:System.Web.UI.WebControls.TemplateField> w obiekcie. <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Zdefiniuj zawartość, tworząc szablon określający sposób renderowania elementów przemiennych.  
  
> [!NOTE]
>  Właściwość jest często używana w połączeniu <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> z właściwością w celu utworzenia innego wyglądu dla każdego innego elementu w formancie powiązanym z danymi. <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<AlternatingItemTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<AlternatingItemTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> aby utworzyć niestandardowy szablon dla elementów naprzemiennych <xref:System.Web.UI.WebControls.TemplateField> w kolumnie <xref:System.Web.UI.WebControls.GridView> pole formantu. Szablon jest odmianą szablonu określonego przez <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwość, gdzie obraz jest wyświetlany na przeciwległej stronie komórki.  
  
 [!code-aspx-csharp[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość, z którą <see cref="T:System.Web.UI.WebControls.TemplateField" /> jest powiązany obiekt, powinna być konwertowana na <see langword="null" /> , jeśli jest <see cref="F:System.String.Empty" />.</summary>
        <value><see langword="true" />Jeśli wartość, z którą <see cref="T:System.Web.UI.WebControls.TemplateField" /> jest powiązany, powinna być konwertowana na <see langword="null" /> , gdy jest <see cref="F:System.String.Empty" />; w przeciwnym <see langword="false" />razie,. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie do dwukierunkowych instrukcji powiązań danych wykonanych w szablonie. Konwersja jest wykonywana po wyodrębnieniu wartości z dwukierunkowego szablonu powiązanego i przed przekazaniem wartości do źródła danych dla operacji aktualizacji lub wstawiania.  
  
 Na przykład użytkownik może wprowadzić pusty ciąg ("") dla wartości pola podczas aktualizowania lub wstawiania rekordów. Użyj właściwości <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> , aby określić, czy wartość pustego ciągu jest automatycznie konwertowana `null` do momentu zaktualizowania pola danych w źródle danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="templateField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Aby skopiować właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TemplateField" /> do. <see cref="T:System.Web.UI.WebControls.DataControlField" /></param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TemplateField" />obiektu pochodnego do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika służącą do kopiowania właściwości bieżącego <xref:System.Web.UI.WebControls.TemplateField>obiektu pochodnego do <xref:System.Web.UI.WebControls.DataControlField> obiektu utworzonego przez metodę. <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodę klasy bazowej.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="templateField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekt.</summary>
        <returns>Zawsze zwraca nowy <see cref="T:System.Web.UI.WebControls.TemplateField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przesłania metodę bazową w celu <xref:System.Web.UI.WebControls.TemplateField> zwrócenia obiektu. <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> klasy pochodnej należy utworzyć nowe wystąpienie typu i nie wywołać metody podstawowej.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon służący do wyświetlania elementu w trybie edycji w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekcie.</summary>
        <value>Zaimplementowany obiekt zawierający szablon służący do wyświetlania elementu w trybie edycji <see cref="T:System.Web.UI.WebControls.TemplateField" />w elemencie. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną dla elementu, który jest w trybie edycji <xref:System.Web.UI.WebControls.TemplateField> w obiekcie. <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementu w trybie edycji. <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Właściwość zwykle zawiera kontrolki wprowadzania dla użytkownika w celu zmodyfikowania wartości w źródle danych.  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<EditItemTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<EditItemTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> aby utworzyć szablon niestandardowy dla elementu w trybie edycji <xref:System.Web.UI.WebControls.TemplateField> w kolumnie <xref:System.Web.UI.WebControls.GridView> pole formantu. Szablon zawiera kontrolki serwera weryfikacji, aby uniemożliwić użytkownikowi pozostawienie pustego pola wartości.  
  
 [!code-aspx-csharp[TemplateFieldEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="templateField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">A <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</param>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> , który zawiera tekst lub kontrolki <see cref="T:System.Web.UI.WebControls.TemplateField" />.</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="includeReadOnly"><see langword="true" />Aby wskazać, że wartości pól tylko do odczytu są uwzględniane w <paramref name="dictionary" /> kolekcji; <see langword="false" />w przeciwnym razie.</param>
        <summary>Wyodrębnia wartości pól kontroli danych zgodnie z co najmniej jedną dwukierunkową instrukcją Binding (<see langword="DataBind" />) z bieżącej komórki tabeli i dodaje wartości do określonej <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest implementowana przez typy pochodne od <xref:System.Web.UI.WebControls.DataControlField>, takich jak <xref:System.Web.UI.WebControls.TemplateField>. <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> Ta metoda jest wywoływana w celu wyodrębnienia wartości pól dwukierunkowych powiązanych z danymi w szablonie w celu wypełnienia słowników, które mają zostać przesłane do źródła danych w celu wykonania operacji Update, INSERT lub DELETE. Para pole/wartość jest przechowywana w kolekcji słowników, która jest przenoszona do metody. Metoda jest wywoływana `ExtractRowValues` przez metodę kontrolek danych, takich jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView>. <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania sekcji <see cref="T:System.Web.UI.WebControls.TemplateField" /> stopki obiektu.</summary>
        <value>Zaimplementowany obiekt, który zawiera szablon do wyświetlania stopki sekcji elementu <see cref="T:System.Web.UI.WebControls.TemplateField" />. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną w sekcji <xref:System.Web.UI.WebControls.TemplateField> Stopka obiektu. <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> Zdefiniuj zawartość, tworząc szablon określający sposób renderowania sekcji stopki.  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<FooterTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<FooterTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> aby utworzyć niestandardowy szablon dla sekcji <xref:System.Web.UI.WebControls.TemplateField> stopki w kolumnie pole w <xref:System.Web.UI.WebControls.GridView> kontrolce. Szablon wyświetla sumę wartości w <xref:System.Web.UI.WebControls.TemplateField> kolumnie pole.  
  
 [!code-aspx-csharp[TemplateFieldFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon służący do wyświetlania sekcji <see cref="T:System.Web.UI.WebControls.TemplateField" /> nagłówka obiektu.</summary>
        <value>Zaimplementowany obiekt zawierający szablon służący do wyświetlania sekcji <see cref="T:System.Web.UI.WebControls.TemplateField" /> nagłówka w kontrolce powiązanej z danymi. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną dla sekcji <xref:System.Web.UI.WebControls.TemplateField> nagłówka obiektu. <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Zdefiniuj zawartość, tworząc szablon określający sposób renderowania sekcji nagłówka.  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<HeaderTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<HeaderTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> jak używać właściwości do tworzenia szablonu niestandardowego dla sekcji <xref:System.Web.UI.WebControls.TemplateField> nagłówka w kolumnie pole w <xref:System.Web.UI.WebControls.GridView> kontrolce. Szablon Wyświetla pole wyboru, które umożliwia użytkownikowi wyświetlanie lub ukrywanie wierszy <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[TemplateFieldHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="templateField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> , który zawiera tekst lub kontrolki <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <param name="cellType">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> wartości.</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości określająca stan wiersza, który <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />zawiera.</param>
        <param name="rowIndex">Indeks wiersza, w którym <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> znajduje się zawiera.</param>
        <summary>Dodaje tekst lub kontrolki do kolekcji formantów komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę podczas tworzenia niestandardowej kontrolki powiązanej z danymi, która <xref:System.Web.UI.WebControls.DataControlFieldCell> używa obiektów do inicjowania komórek struktury tabeli z danymi lub kontrolkami.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon służący do wyświetlania elementu w trybie wstawiania w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekcie.</summary>
        <value>Zaimplementowany obiekt zawierający szablon służący do wyświetlania elementu w trybie wstawiania <see cref="T:System.Web.UI.WebControls.TemplateField" />w obiekcie. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną dla elementu w trybie wstawiania <xref:System.Web.UI.WebControls.TemplateField> w obiekcie. <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementu w trybie wstawiania.  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<InsertItemTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<InsertItemTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
> [!NOTE]
>  Nie wszystkie formanty powiązane z danymi obsługują ten szablon ten szablon jest obsługiwany tylko przez kontrolki powiązane z danymi, które umożliwiają Wstawianie rekordu, takiego jak <xref:System.Web.UI.WebControls.DetailsView> kontrolka.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> jak używać właściwości do tworzenia szablonu niestandardowego dla elementu w trybie wstawiania <xref:System.Web.UI.WebControls.TemplateField> w wierszu pola w <xref:System.Web.UI.WebControls.DetailsView> kontrolce. Szablon wyświetla <xref:System.Web.UI.WebControls.DropDownList> kontrolkę umożliwiającą użytkownikowi wybranie wartości ze wstępnie zdefiniowanej listy.  
  
 [!code-aspx-csharp[TemplateFieldInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon służący do wyświetlania elementu w formancie powiązanym z danymi.</summary>
        <value>Zaimplementowany obiekt, który zawiera szablon do wyświetlania elementu <see cref="T:System.Web.UI.WebControls.TemplateField" />w. <see cref="T:System.Web.UI.ITemplate" /> Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardową zawartość wyświetlaną dla elementów <xref:System.Web.UI.WebControls.TemplateField> w obiekcie. <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów.  
  
> [!NOTE]
>  Opcjonalnie można zdefiniować <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> właściwość w połączeniu <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> z właściwością, aby utworzyć inny wygląd dla każdego innego elementu w formancie związanym z danymi.  
  
 Aby określić szablon, należy najpierw umieścić tag otwierający `<ItemTemplate>` i zamykający między tagiem `<TemplateField>` otwierającym i zamykającym elementu. Następnie Dodaj niestandardową zawartość między tagiem otwierającym i `<ItemTemplate>` zamykającym. Zawartość może być prosta jako zwykły tekst lub bardziej złożona (na przykład osadzenie innych kontrolek w szablonie).  
  
 Aby programowo uzyskać dostęp do kontrolki zdefiniowanej w szablonie, należy <xref:System.Web.UI.WebControls.TableCell> najpierw określić, który obiekt w kontrolce powiązanej z danymi zawiera formant. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> kolekcji <xref:System.Web.UI.WebControls.TableCell> obiektów, aby uzyskać dostęp do kontrolki. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu, aby znaleźć formant, <xref:System.Web.UI.Control.ID%2A> Jeśli kontrolka ma określoną właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> aby utworzyć niestandardowy szablon dla elementów <xref:System.Web.UI.WebControls.TemplateField> pola w <xref:System.Web.UI.WebControls.GridView> kontrolce. Szablon wyświetla wartość pola w <xref:System.Web.UI.WebControls.RadioButtonList> kontrolce.  
  
 [!code-aspx-csharp[TemplateFieldItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta.</summary>
        <value><see langword="true" />Jeśli formant sprawdza poprawność danych wejściowych klienta; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="templateField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy kontrolki zawarte w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekcie obsługują wywołania zwrotne stron.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda nie jest obsługiwana dla tej klasy i zawsze <xref:System.NotSupportedException> zgłasza wyjątek. <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Domyślna implementacja tej metody jest wywoływana.</exception>
        <block subset="none" type="overrides"><para>Klasy pochodne od <see cref="T:System.Web.UI.WebControls.TemplateField" /> klasy mogą przesłaniać tę metodę w celu wskazania, czy kontrolki zawarte w polu obsługują wywołania zwrotne. Aby wskazać, że wywołania zwrotne są obsługiwane, należy zaimplementować tę metodę jako pustą metodę, która nie zgłasza wyjątku; w przeciwnym razie Zgłoś wyjątek z przydatnym komunikatem opisującym, dlaczego wywołania zwrotne nie są obsługiwane.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>
