<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65d28d0ea150d0cecff2112983500a9817de5d4b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateField : System::Web::UI::WebControls::DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje pole, które wyświetla zawartość niestandardowe w formancie powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField> Klasy jest używany przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlenia niestandardowej zawartości dla każdego rekordu wyświetlane. Gdy są potrzebne do wyświetlania zawartości w formancie powiązane z danymi, który nie został dostarczony przez jedną ze wstępnie zdefiniowanych danych pola formantu (takich jak <xref:System.Web.UI.WebControls.BoundField>), użyj <xref:System.Web.UI.WebControls.TemplateField> klasy w celu utworzenia użytkownika niestandardowego interfejsu użytkownika (UI). <xref:System.Web.UI.WebControls.TemplateField> Obiektu są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolować Wyświetla <xref:System.Web.UI.WebControls.TemplateField> obiektu jako kolumny oraz <xref:System.Web.UI.WebControls.DetailsView> kontroli wyświetla go jako wiersz.  
  
 Możesz zdefiniować niestandardowy szablon dla różnych części <xref:System.Web.UI.WebControls.TemplateField> przy użyciu szablonów wymienionych w poniższej tabeli.  
  
|Szablon|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|Określa zawartość do wyświetlenia elementów przemiennych <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|Określa zawartość ma być wyświetlany dla elementu w trybie edycji w <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|Określa zawartość ma być wyświetlany dla sekcji stopki <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|Określa zawartość ma być wyświetlany dla sekcji nagłówka <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|Określa zawartość ma być wyświetlany dla elementu w trybie wstawiania w <xref:System.Web.UI.WebControls.TemplateField> obiektu. Ten szablon jest obsługiwane tylko w programie <xref:System.Web.UI.WebControls.DetailsView> formantu.|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|Określa zawartość do wyświetlania elementów w <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
  
 Można ukryć <xref:System.Web.UI.WebControls.TemplateField> obiektu w formancie powiązane z danymi, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> właściwości `false`.  
  
 Jako alternatywę do określenia niestandardowego <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> lub <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> szablonu, można dostosować sekcji nagłówku i stopce <xref:System.Web.UI.WebControls.TemplateField> obiektu przez ustawienie inne właściwości <xref:System.Web.UI.WebControls.TemplateField> obiektu. Aby wyświetlić podpisu w nagłówku lub stopce strony sekcjach, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> właściwości, odpowiednio. Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Sekcja nagłówka mogą być ukryte w <xref:System.Web.UI.WebControls.TemplateField> obiektu przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości `false`.  
  
> [!NOTE]
>  Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu. Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> właściwości dla poszczególnych pól powiązania. Aby wyświetlić lub ukryć sekcji całego nagłówka formantu powiązanego z danymi, użyj formantu `ShowHeader` właściwości (jeśli jest dostępna).  
  
 Ponadto można dostosować wygląd <xref:System.Web.UI.WebControls.TemplateField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.  
  
|Właściwości stylu|Opis|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Ustawienia stylu dla kontrolki serwera sieci Web podrzędnego z <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Ustawienia stylu stopce <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Ustawienia stylu dla sekcji nagłówka <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Ustawienia stylu dla elementów danych w <xref:System.Web.UI.WebControls.TemplateField> obiektu.|  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia niestandardowego <xref:System.Web.UI.WebControls.TemplateField> obiekt, który zawiera dwa pola w tej samej komórki. Imię pola imienia i nazwiska są łączone w taki sam <xref:System.Web.UI.WebControls.TemplateField> obiektu.  
  
 [!code-aspx-csharp[TemplateField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-aspx-vb[TemplateField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TemplateField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TemplateField> klasy. Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.  
  
 Dynamiczne dodawanie <xref:System.Web.UI.WebControls.TemplateField> obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.TemplateField> obiekt, zdefiniuj odpowiednie szablony, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolować, Dodaj <xref:System.Web.UI.WebControls.TemplateField> do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dynamicznie dodawać pola do formantu powiązanego z danymi, zdecydowanie zaleca się czy pola można statycznie zadeklarowany i pokazywane lub ukryte, odpowiednio. Deklarowanie statycznie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak użyć konstruktora dynamiczne dodawanie <xref:System.Web.UI.WebControls.TemplateField> kolumny pola <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[TemplateFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-aspx-vb[TemplateFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon dla wyświetlanie naprzemiennych elementów w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon dla wyświetlanie naprzemiennych elementów w <see cref="T:System.Web.UI.WebControls.TemplateField" />. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> właściwość umożliwia określenie niestandardowych zawartości wyświetlane dla elementów przemiennych <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów przemiennych.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Jest zwykle używana w połączeniu z <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwość, aby utworzyć inny wygląd dla każdego innego elementu w formancie powiązane z danymi.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<AlternatingItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<AlternatingItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> właściwość, aby utworzyć szablon niestandardowy do naprzemiennych elementów w <xref:System.Web.UI.WebControls.TemplateField> kolumnie pole <xref:System.Web.UI.WebControls.GridView> formantu. Szablon jest odmianą szablon określony w <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwości, gdy obraz jest wyświetlany w przeciwną stronę komórki.  
  
 [!code-aspx-csharp[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy wartość która <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekt jest powiązany do powinny być konwertowane na <see langword="null" /> przypadku <see cref="F:System.String.Empty" />.</summary>
        <value>
          <see langword="true" /> Jeśli wartość która <see cref="T:System.Web.UI.WebControls.TemplateField" /> jest powiązany z powinny być konwertowane na <see langword="null" /> gdy jest <see cref="F:System.String.Empty" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość dotyczy oświadczeń dwukierunkowego powiązania danych w szablonie. Konwersja odbywa się po wyodrębnieniu wartości z dwukierunkowe powiązanego szablonu, a przed przekazaniem wartości do źródła danych dla operacji wstawiania lub aktualizacji.  
  
 Na przykład użytkownik może wprowadzić ciąg pusty ("") dla wartości pola podczas aktualizowania i wstawiania rekordów. Użyj <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> właściwości w celu określenia, czy wartość pustego ciągu jest automatycznie konwertowany do `null` gdy zaktualizowano pole danych w źródle danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> Można skopiować właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TemplateField" /> do.</param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.TemplateField" />-pochodnych do określonego obiektu <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A> Metoda jest metodą pomocnika używany do kopiowania właściwości bieżącego <xref:System.Web.UI.WebControls.TemplateField>-pochodnych obiektu <xref:System.Web.UI.WebControls.DataControlField> obiektu utworzonego przez metodę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metody.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <returns>Zawsze zwraca nową <see cref="T:System.Web.UI.WebControls.TemplateField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A> Metoda zastępuje metodę podstawową, aby zwrócić <xref:System.Web.UI.WebControls.TemplateField> obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> w klasie pochodnej, należy utworzyć nowe wystąpienie tego typu i nie mogą wywoływać metodę podstawową.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania elementów w trybie edycji w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementów w trybie edycji w <see cref="T:System.Web.UI.WebControls.TemplateField" />. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> właściwości w celu określenia niestandardowej zawartości dla elementu, który jest w trybie edycji w wyświetlana <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementu w trybie edycji. <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Właściwość zwykle zawiera kontrolki wejściowe dla użytkownika zmodyfikować wartości w źródle danych.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<EditItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<EditItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> właściwość, aby utworzyć szablon niestandardowy dla elementu w trybie edycji w <xref:System.Web.UI.WebControls.TemplateField> kolumnie pole <xref:System.Web.UI.WebControls.GridView> formantu. Szablon zawiera kontrolki serwera weryfikacji, aby uniemożliwić użytkownikowi pozostawiając puste pole wartości.  
  
 [!code-aspx-csharp[TemplateFieldEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</param>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> zawierający tekst lub formanty <see cref="T:System.Web.UI.WebControls.TemplateField" />.</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="includeReadOnly">
          <see langword="true" /> Aby wskazać, że wartości pola tylko do odczytu są uwzględniane w <c>słownika</c> kolekcji; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wyodrębnia wartości formantu danych pola określone przez jedną lub więcej instrukcji Wiązanie dwukierunkowe (<see langword="DataBind" />) z bieżącą komórką tabeli i dodaje do określonej wartości <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> Metoda jest implementowana przez typy pochodne <xref:System.Web.UI.WebControls.DataControlField>, takich jak <xref:System.Web.UI.WebControls.TemplateField>. Ta metoda jest wywoływana, aby wyodrębnić wartości pola powiązane z danymi dwukierunkowe szablonu, aby wypełnić słowniki do przekazania do źródła danych do aktualizowania, wstawiania lub operację usuwania. Pary pól i wartości są przechowywane w kolekcji słownik, który jest przekazywany do metody. <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> Metoda jest wywoływana przez `ExtractRowValues` określa metody danych, takich jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania stopce <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon do wyświetlania stopce <see cref="T:System.Web.UI.WebControls.TemplateField" />. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> właściwości w celu określenia niestandardowego zawartość wyświetlaną w stopce <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania stopki.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<FooterTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<FooterTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> właściwość, aby utworzyć szablon niestandardowy dla sekcji stopki <xref:System.Web.UI.WebControls.TemplateField> kolumnie pole w <xref:System.Web.UI.WebControls.GridView> formantu. Ten szablon zawiera sumę wartości w <xref:System.Web.UI.WebControls.TemplateField> pola kolumny.  
  
 [!code-aspx-csharp[TemplateFieldFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania sekcji nagłówka <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon do wyświetlania sekcji nagłówka <see cref="T:System.Web.UI.WebControls.TemplateField" /> w formancie powiązane z danymi. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> właściwość umożliwia określenie niestandardowych zawartości wyświetlany w nagłówku sekcji <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa, jak jest renderowany w nagłówku sekcji.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<HeaderTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<HeaderTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> właściwość, aby utworzyć szablon niestandardowy dla sekcji nagłówka <xref:System.Web.UI.WebControls.TemplateField> kolumnie pole w <xref:System.Web.UI.WebControls.GridView> formantu. Szablon Wyświetla pole wyboru, które umożliwia użytkownikom wyświetlanie lub ukrywanie wierszy <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[TemplateFieldHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> zawierający tekst lub formanty <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <param name="cellType">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> wartości.</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości określający stan wiersza, który zawiera <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />.</param>
        <param name="rowIndex">Indeks wiersza, który <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> znajduje się w.</param>
        <summary>Dodaje tekst lub kontrolki do kolekcji controls komórki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas tworzenia kontrolki powiązane z danymi niestandardowej, która używa <xref:System.Web.UI.WebControls.DataControlFieldCell> obiektów zainicjować komórki struktury tabeli z danymi lub formantów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania elementów w trybie wstawiania w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiektu.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementów w trybie wstawiania w <see cref="T:System.Web.UI.WebControls.TemplateField" />. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> właściwość umożliwia określenie niestandardowych zawartości wyświetlane dla elementów w trybie wstawiania w <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów w trybie wstawiania.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<InsertItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<InsertItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
> [!NOTE]
>  Nie wszystkie formanty powiązane z danymi obsługuje ten szablon ten szablon jest obsługiwana tylko przez formanty powiązane z danymi, które umożliwiają wstawianie rekordu, takie jak <xref:System.Web.UI.WebControls.DetailsView> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> właściwość, aby utworzyć szablon niestandardowy dla elementu w trybie wstawiania w <xref:System.Web.UI.WebControls.TemplateField> pola wiersza w <xref:System.Web.UI.WebControls.DetailsView> formantu. Wyświetla szablon <xref:System.Web.UI.WebControls.DropDownList> formant, który umożliwia użytkownikowi wybranie wartości z listy wstępnie zdefiniowanych.  
  
 [!code-aspx-csharp[TemplateFieldInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon do wyświetlania elementów w formancie powiązane z danymi.</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementu <see cref="T:System.Web.UI.WebControls.TemplateField" />. Wartość domyślna to <see langword="null" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwość umożliwia określenie niestandardowych zawartości wyświetlane dla elementów w <xref:System.Web.UI.WebControls.TemplateField> obiektu. Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów.  
  
> [!NOTE]
>  Opcjonalnie można określić <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> właściwość w połączeniu z <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwość, aby utworzyć inny wygląd dla każdego innego elementu w formancie powiązane z danymi.  
  
 Aby określić szablon, najpierw umieścić otwierające i zamykające `<ItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<ItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).  
  
 Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell> obiektu w formancie powiązane z danymi z formantem. Następnie użyj <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.TableCell> obiektu do kontroli dostępu. Można również użyć <xref:System.Web.UI.Control.FindControl%2A> metody <xref:System.Web.UI.WebControls.TableCell> obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A> określona właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> właściwość, aby utworzyć szablon niestandardowy dla elementów <xref:System.Web.UI.WebControls.TemplateField> w <xref:System.Web.UI.WebControls.GridView> formantu. Szablon zawiera wartość pola w <xref:System.Web.UI.WebControls.RadioButtonList> formantu.  
  
 [!code-aspx-csharp[TemplateFieldItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta.</summary>
        <value>
          <see langword="true" /> Jeśli formant sprawdza poprawność danych wejściowych klienta; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formanty zawarte w <see cref="T:System.Web.UI.WebControls.TemplateField" /> obiekt wywołania zwrotne strony pomocy technicznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A> Metoda nie jest obsługiwana dla tej klasy i zawsze zwraca <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Domyślna implementacja ta metoda jest wywoływana.</exception>
        <block subset="none" type="overrides">
          <para>Klasy, które pochodzą z <see cref="T:System.Web.UI.WebControls.TemplateField" /> klasy mogą przesłaniać tę metodę, aby wskazać, czy formanty zawarte wywołania zwrotne Obsługa pola. Aby wskazać, że wywołania zwrotne są obsługiwane, należy zaimplementować tę metodę jako empty — metoda, która zgłosiła wyjątek; w przeciwnym razie Zgłoś wyjątek z komunikatem przydatne opisujący przyczynę wywołania zwrotne nie są obsługiwane.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>