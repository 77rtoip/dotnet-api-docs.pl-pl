<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62976260b8581f986cbd7d719a652a3576a46648" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691448" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje pole, który jest wyświetlany jako przycisk w formancie powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> Klasy jest używany przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania przycisku dla każdego rekordu, który jest wyświetlany. <xref:System.Web.UI.WebControls.ButtonField> Obiektu są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolować Wyświetla <xref:System.Web.UI.WebControls.ButtonField> obiektu jako kolumny, podczas <xref:System.Web.UI.WebControls.DetailsView> kontroli wyświetla go jako wiersz.  
  
 Kliknięcie przycisku w polu przycisk wywołuje zdarzenie polecenia nadrzędnego formantu powiązanego z danymi. Możesz podać niestandardowe procedury do wykonania po kliknięciu przycisku polecenia przez zapewnienie obsługi zdarzeń dla zdarzenia polecenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.GridView.RowCommand> zdarzenia podczas <xref:System.Web.UI.WebControls.DetailsView> kontrolować zgłasza <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> zdarzeń.  
  
 Aby określić indeks rekordu, który wywołuje zdarzenie polecenia, użyj <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwości argument zdarzenia, który jest przekazywany do polecenia zdarzeń formantu powiązanego z danymi. <xref:System.Web.UI.WebControls.ButtonField> Klasy automatycznie wypełni <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwość z wartością odpowiedni indeks.  
  
 Aby określić typ przycisku do wyświetlenia, użyj <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwości. Podczas wyświetlania łącza lub przycisku polecenia, użyj <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości w celu określenia podpis do wyświetlenia na przyciskach.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości, wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonField> udostępnianie tego samego podpisu.  
  
 Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonField> obiektu pole w źródle danych. Dzięki temu można wyświetlić różnych podpisów dla przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Wartości, które znajdują się w określonym polu są używane do podpisy przycisków. Ustaw <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.ButtonField> obiektu pole w źródle danych.  
  
 Podczas wyświetlania obrazu przycisku, użyj <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> właściwości w celu określenia obraz do wyświetlania dla przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu.  
  
> [!NOTE]
>  Wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonField> obiektu udostępniać ten sam obraz.  
  
 Można ukryć <xref:System.Web.UI.WebControls.ButtonField> obiektu w formancie powiązane z danymi, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> właściwości `false`.  
  
 <xref:System.Web.UI.WebControls.ButtonField> Obiektu umożliwia dostosowanie jego nagłówku i stopce sekcji. Aby wyświetlić podpisu w nagłówku lub stopce strony sekcji, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> właściwości, odpowiednio. Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Aby ukryć sekcji nagłówka <xref:System.Web.UI.WebControls.ButtonField> obiekt, ustaw <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwości `false`.  
  
> [!NOTE]
>  Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView> kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu. Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwość przycisk poszczególne pola. Pokaż lub Ukryj sekcji całego nagłówka formantu powiązanego z danymi (jeśli jest dostępny), użyj `ShowHeader` właściwości formantu.  
  
 Ponadto można dostosować wygląd <xref:System.Web.UI.WebControls.ButtonField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.  
  
|Właściwości stylu|Ustawienia stylu dla|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Formanty podrzędne serwera sieci Web z <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Stopce <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Nagłówek sekcji <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Dane elementów w <xref:System.Web.UI.WebControls.ButtonField>.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField> obiektu do wyświetlenia kolumnę przyciski poleceń w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> konstruktora, aby zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.ButtonField> klasy. Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.  
  
 Aby dodać <xref:System.Web.UI.WebControls.ButtonField> dynamicznie obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.ButtonField> obiektów, ustawienia swoich właściwości, a następnie dodaj go do kolekcji pól dla formantu powiązanego z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolować, Dodaj <xref:System.Web.UI.WebControls.ButtonField> do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dodawać pola dynamicznie do formantu powiązanego z danymi pola powinna być zadeklarowana statycznie, a następnie mogą być pokazano lub ukryty, jak właściwe. Statycznie deklarowanie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać za pomocą konstruktora M:System.Web.UI.WebControls.ButtonField.#ctor <xref:System.Web.UI.WebControls.ButtonField> dynamicznie do obiektu <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje akcję do wykonania, gdy przycisk w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekt zostanie kliknięty.</summary>
        <value>Nazwa akcji do wykonania, gdy przycisk w <see cref="T:System.Web.UI.WebControls.ButtonField" /> zostanie kliknięty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> właściwość do skojarzenia nazwa polecenia, takich jak `"Add"` lub `"Remove"`, za pomocą przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Można ustawić <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> właściwości dowolny ciąg, który identyfikuje akcję do wykonania po kliknięciu przycisku polecenia. Można programowo określić nazwę polecenia w obsłudze zdarzeń i wykonać odpowiednie działania.  
  
> [!NOTE]
>  Wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonField> obiektu tej samej nazwie polecenia.  
  
 Formanty powiązane z danymi rozpoznawać nazwy niektórych poleceń i automatycznie podnieść i obsługiwać odpowiednie zdarzenia dla formantu. Następujące nazwy polecenia są rozpoznawane:  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Aby wywołać stronicowanie, ustaw <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> do `"Page"` i <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> zamkniętego <xref:System.Web.UI.WebControls.Button> formant `"First"`, `"Last"`, `"Prev"`, `"Next"`, lub numer strony. Ponieważ jednak <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> dla <xref:System.Web.UI.WebControls.ButtonField> formant zawsze jest liczba całkowita indeks wiersza, <xref:System.Web.UI.WebControls.ButtonField> formantu nie nadaje się do wywoływania stronicowania. Podobnie, podczas gdy można wywołać sortowanie przez ustawienie <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> do `"Sort"`, <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwość <xref:System.Web.UI.WebControls.ButtonField> formant zawsze jest liczba całkowita indeks wiersza. Z tego powodu <xref:System.Web.UI.WebControls.ButtonField> formantu nie nadaje się do wywoływania sortowania. Dla niestandardowych poleceń nazwy, takie jak `"Add"` i `"Remove"`, należy napisać kod zdarzenia można sprawdzić nazwę polecenia i wykonanie akcji niestandardowych. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Nie wszystkie polecenia nazwy są rozpoznawane przez co formantów powiązanych z danymi. Na przykład `"New"` nie jest rozpoznawany przez <xref:System.Web.UI.WebControls.GridView> kontroli i `"Select"` nie jest rozpoznawany przez <xref:System.Web.UI.WebControls.DetailsView> formantu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> właściwość, aby określić nazwę polecenia przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> Do którego należy skopiować właściwości bieżącego <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> Metoda jest używany przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> metodę, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.ButtonFieldBase>-pochodnych obiektu <xref:System.Web.UI.WebControls.DataControlField> obiekt, który został utworzony przez <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> — metoda.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metody w klasie pochodnej wywołania <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metody klasy podstawowej, aby upewnić się, że wszystkie właściwości obiektu są kopiowane.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> Metoda jest używany przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> metody klasy podstawowej, aby utworzyć pustą <xref:System.Web.UI.WebControls.ButtonField> obiektu, do którego należy skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.ButtonField>-pochodzi z obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zastąpienie <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> metodę, aby zwrócić nowe wystąpienie klasy pochodnej. Nie wywołuj <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> metody klasy podstawowej.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola danych, dla którego wartość jest powiązany z <see cref="P:System.Web.UI.WebControls.Button.Text" /> właściwość <see cref="T:System.Web.UI.WebControls.Button" /> formantu realizowanego przez <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="T:System.Web.UI.WebControls.ButtonField" />. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType.Button> lub <xref:System.Web.UI.WebControls.ButtonType.Link> wartość, użyj <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości w celu określenia nazwy pola, które chcesz powiązać <xref:System.Web.UI.WebControls.ButtonField> obiektu. Wartości pola są następnie wyświetlane jako tekst przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Opcjonalnie można sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości.  
  
 Zamiast <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.ButtonField> obiekt do pola źródła danych, można użyć <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwość, aby wyświetlić tekst statyczny tekst przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Gdy <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwość jest używana, każdy przycisk udziały sam podpis.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> i <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości ma pierwszeństwo.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości w celu określenia pole, które mają być wyświetlane w <xref:System.Web.UI.WebControls.ButtonField> kolumny <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola.</summary>
        <value>Ciąg formatu, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (""), co oznacza, że specjalne formatowanie nie jest stosowane do wartości pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania wartości, które są wyświetlane w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Jeśli <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwość nie jest ustawiona, wartość w polu jest wyświetlana bez żadnego formatowania.  
  
> [!NOTE]
>  Ciąg formatu, który jest stosowany tylko wtedy, gdy <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwość jest ustawiona.  
  
 Ciąg formatu, który może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy wartości dla pola. Na przykład w ciągu formatu `"Item Value: {0}"`, `{0}` symbol zastępczy jest zastępowany wartość w polu wyświetlanym w <xref:System.Web.UI.WebControls.ButtonField> obiektu. Pozostała część ciągu formatu jest wyświetlany jako zwykły tekst.  
  
> [!NOTE]
>  Ciąg formatu, który nie zawiera symbol zastępczy, wartość pola ze źródła danych nie jest uwzględniony w ostatnim wyświetlany tekst.  
  
 Symbol zastępczy składa się z dwóch części oddzielone dwukropkiem i ujęte w nawiasy klamrowe w formie { `A` : `Bxx` }. Wartość przed dwukropkiem (`A` w przykładzie ogólne) określa indeks wartości pola liczony od zera listę parametrów.  
  
> [!NOTE]
>  To `A` parametru jest częścią formatowania składni. Ponieważ istnieje tylko jedno pole wartość każdej komórki, tę wartość można ustawić tylko na 0.  
  
 Dwukropek i wartości po dwukropku są opcjonalne. Znak po dwukropkiem (`B` w przykładzie ogólne) określa format wyświetlania wartości. Poniższa tabela zawiera listę typowych formatach.  
  
|Format znak|Opis|  
|----------------------|-----------------|  
|`C`|Wyświetla wartości liczbowe w formacie waluty.|  
|`D`|Wyświetla wartości liczbowe w formacie dziesiętnym.|  
|`E`|Wyświetla wartości liczbowe w naukowych formacie (wykładnicza).|  
|`F`|Wyświetla wartości liczbowe w formacie.|  
|`G`|Wyświetla wartości liczbowe w zasadzie formatu.|  
|`N`|Wyświetla wartości liczbowe w formacie liczb.|  
|`X`|Wyświetla wartości liczbowe w formacie szesnastkowym.|  
  
> [!NOTE]
>  Z wyjątkiem `X`, znaki formatu nie jest uwzględniana. `X` Format znak Wyświetla znaki szesnastkowe w przypadku, gdy jest określona.  
  
 Wartość po znaku formatu (`xx` w przykładzie ogólne) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia. Na przykład ciąg formatu `"{0:F2}"` Wyświetla liczbę stałoprzecinkowe z dwóch miejsc po przecinku.  
  
 Aby uzyskać więcej informacji na ciągach formatowania, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania wartości pola.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Wartość pola do formatowania.</param>
        <summary>Formatuje wartość określonego pola dla komórki w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu.</summary>
        <returns>Wartość pola konwertowana na format określonego przez <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> Metoda jest używany do transformacji wartość pola do formatu, który jest określony przez metodę Pomocnika <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy, można zastąpić <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> metodę w celu niestandardowe procedury formatowania.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz do wyświetlania dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu.</summary>
        <value>Obraz do wyświetlania dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" />. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType.Image> wartość, użyj <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> właściwości w celu określenia obraz do wyświetlania dla każdego przycisku. Ten obraz można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje tego formatu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> właściwości w celu określenia obraz do wyświetlania dla każdego przycisku w <xref:System.Web.UI.WebControls.ButtonField> obiektu. W tym przykładzie kodu można wyświetlić musisz podać własnego obrazu.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          <see langword="true" /> Aby włączyć sortowanie; w przeciwnym razie <see langword="false" />.</param>
        <param name="control">Formant danych, który jest właścicielem <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Inicjuje bieżące <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu.</summary>
        <returns>
          <see langword="false" />, co oznacza formant nie trzeba ponownie powiązać z danymi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> Metoda jest wywoływana przez formant danych, z którym <xref:System.Web.UI.WebControls.ButtonField> obiekt jest skojarzony z zainicjować obiektu podstawowego dla wystąpień pola, zanim pole jest kiedykolwiek dodana do kolekcji wierszy. Określa dane, takie jak <xref:System.Web.UI.WebControls.DetailsView> i <xref:System.Web.UI.WebControls.GridView>, wywołaj <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> metody w ich `CreateChildControls` metod przed innych metod, takich jak `CreateRow`, są wywoływane w celu utworzenia określonych wierszy z danymi.  
  
 Wywołanie <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> metodą podczas pisania niestandardowego formantu powiązanego z danymi, która używa <xref:System.Web.UI.WebControls.TableCell> obiektów w celu przeprowadzenia podstawowego inicjowania dla <xref:System.Web.UI.WebControls.ButtonField> obiektu. Zaimplementuj tę metodę, jeśli Twoje <xref:System.Web.UI.WebControls.ButtonField>— Typ pochodny wymaga inicjowanie obiektu przed wypełnia <xref:System.Web.UI.WebControls.TableCell> obiekty z danymi lub formantów w <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> — metoda.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy zastąpić <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> — metoda i wróć <see langword="true" />, jeśli jest to pole wymaga wykonanie odświeżania strony w kolejności, w polu działał prawidłowo wiązania z danymi.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> Zainicjować.</param>
        <param name="cellType">A <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> wartość, która wskazuje typ wiersza (nagłówek, stopka lub danych).</param>
        <param name="rowState">Jeden z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="rowIndex">Liczony od zera indeks wiersza.</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> obiektu do stanu określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> Metoda tworzy określoną przez typ przycisku <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwości i dodaje go do <xref:System.Web.UI.Control.Controls%2A> Kolekcja <xref:System.Web.UI.WebControls.DataControlFieldCell> obiektu. <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Właściwość <xref:System.Web.UI.WebControls.Button> kontrola jest ustawiona na `rowIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podpis statycznych, która jest wyświetlana dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu.</summary>
        <value>Podpis wyświetlany dla przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType.Button> lub <xref:System.Web.UI.WebControls.ButtonType.Link> wartość, użyj <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwość, aby wyświetlić tekst statyczny dla podpisu przycisków w <xref:System.Web.UI.WebControls.ButtonField>. Każdy przycisk udostępnia sam podpis.  
  
 Zamiast <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwość, aby wyświetlić tekst statyczny w <xref:System.Web.UI.WebControls.ButtonField> obiektu, można użyć <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.ButtonField> pole w źródle danych. Wartości pola są następnie wyświetlane jako podpisy przycisków.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> i <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> właściwości ma pierwszeństwo.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości w celu określenia podpis ma być wyświetlany dla przycisku w <xref:System.Web.UI.WebControls.ButtonField> obiektu.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formanty, które są zawarte w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekt wywołania zwrotne pomocy technicznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Metoda jest metodą pomocnika używanego w taki sposób, aby ustalić, czy formanty zawarte w <xref:System.Web.UI.WebControls.ButtonField> obiekt wywołania zwrotne pomocy technicznej. Ta metoda jest implementowany jako empty — metoda (metody, która nie zawiera żadnego kodu) aby wskazać, że wywołania zwrotne są obsługiwane.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klasy, które pochodzą z <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> metody, aby wskazać, czy formanty, które znajdują się za pomocą pola obsługują wywołań zwrotnych. Aby wskazać, że wywołania zwrotne są obsługiwane, należy zaimplementować <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> metodę jako pustą metodę, która nie zgłasza wyjątku; w przeciwnym razie Zgłoś wyjątek z komunikatem przydatne opisujący przyczynę wywołania zwrotne nie są obsługiwane.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>