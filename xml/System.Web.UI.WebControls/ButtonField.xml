<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0a840e8fbc09c82b3d0850faa972be71ab65443" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69393733" /></Metadata><TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przedstawia pole, które jest wyświetlane jako przycisk w kontrolce powiązanej z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana przez formanty powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania przycisku dla każdego wyświetlonego rekordu. <xref:System.Web.UI.WebControls.ButtonField> <xref:System.Web.UI.WebControls.ButtonField> Obiekt jest wyświetlany inaczej w zależności od kontrolki powiązanej z danymi, w której jest używany. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolka <xref:System.Web.UI.WebControls.ButtonField> wyświetla obiekt jako kolumnę, podczas gdy <xref:System.Web.UI.WebControls.DetailsView> kontrolka wyświetla go jako wiersz.  
  
 Kliknięcie przycisku w polu przycisku wywołuje zdarzenie polecenia nadrzędnego formantu powiązanego z danymi. Można podać procedurę niestandardową, która będzie wykonywana po kliknięciu przycisku polecenia, dostarczając procedurę obsługi zdarzeń dla zdarzenia polecenia.  
  
> [!NOTE]
>  Formant wywołuje zdarzenie, podczas gdy <xref:System.Web.UI.WebControls.DetailsView> kontrolka wywołuje zdarzenie.<xref:System.Web.UI.WebControls.DetailsView.ItemCommand> <xref:System.Web.UI.WebControls.GridView.RowCommand> <xref:System.Web.UI.WebControls.GridView>  
  
 Aby określić indeks rekordu, który wywołuje zdarzenie polecenia, należy użyć <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwości argumentu zdarzenia, który jest przesyłany do zdarzenia polecenia dla formantu powiązanego z danymi. Klasa automatycznie wypełnia <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> właściwość odpowiednią wartością indeksu. <xref:System.Web.UI.WebControls.ButtonField>  
  
 Aby określić typ przycisku do wyświetlenia, użyj <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwości. Podczas wyświetlania linku lub przycisku polecenia Użyj <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości, aby określić podpis, który ma być wyświetlany na przyciskach.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwość, wszystkie przyciski <xref:System.Web.UI.WebControls.ButtonField> w udziale mają ten sam podpis.  
  
 Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonField> obiekt z polem w źródle danych. Pozwala to wyświetlić różne podpisy przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiekcie. Wartości, które znajdują się w określonym polu są używane dla napisów tekstowych przycisków. Ustaw właściwość <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> , aby <xref:System.Web.UI.WebControls.ButtonField> powiązać obiekt z polem w źródle danych.  
  
 Podczas wyświetlania przycisku obrazu należy użyć <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> właściwości, aby określić obraz do wyświetlenia dla przycisków <xref:System.Web.UI.WebControls.ButtonField> w obiekcie.  
  
> [!NOTE]
>  Wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonField> obiekcie mają ten sam obraz.  
  
 Można ukryć <xref:System.Web.UI.WebControls.ButtonField> obiekt w kontrolce powiązanej z danymi, <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> ustawiając właściwość na `false`.  
  
 <xref:System.Web.UI.WebControls.ButtonField> Obiekt umożliwia dostosowanie jego nagłówków i stopek. Aby wyświetlić podpis w sekcji nagłówka lub stopki, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> odpowiednio właściwości lub. <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Zamiast wyświetlania tekstu w sekcji nagłówka, można wyświetlić obraz przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> właściwości. Aby ukryć sekcję nagłówka w <xref:System.Web.UI.WebControls.ButtonField> obiekcie, należy <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> ustawić właściwość na `false`.  
  
> [!NOTE]
>  Niektóre kontrolki powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> kontrolka) mogą pokazać lub ukryć tylko całą sekcję nagłówka kontrolki. Te kontrolki powiązane z danymi nie obsługują <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwości dla poszczególnych pól przycisku. Aby pokazać lub ukryć całą sekcję nagłówka kontrolki powiązanej z danymi (jeśli jest dostępna), użyj `ShowHeader` właściwości formantu.  
  
 Można również dostosować wygląd <xref:System.Web.UI.WebControls.ButtonField> obiektu (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono różne właściwości stylu.  
  
|Style — właściwość|Ustawienia stylu dla|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Kontrolki podrzędne serwera sieci Web <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Sekcja Stopka okna <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Sekcja <xref:System.Web.UI.WebControls.ButtonField>nagłówka.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Elementy danych w <xref:System.Web.UI.WebControls.ButtonField>.|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.ButtonField> obiektu do wyświetlania kolumny przycisków poleceń <xref:System.Web.UI.WebControls.GridView> w kontrolce.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.ButtonField> klasy. <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> Ten konstruktor jest często używany podczas dodawania pól do dynamicznie utworzonego formantu powiązanego z danymi.  
  
 Aby dynamicznie dodać <xref:System.Web.UI.WebControls.ButtonField> obiekt do formantu powiązanego z danymi, Utwórz nowy <xref:System.Web.UI.WebControls.ButtonField> obiekt, ustaw jego właściwości, a następnie dodaj go do kolekcji pól dla kontrolki powiązanej z danymi. Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView> kontrolki, <xref:System.Web.UI.WebControls.ButtonField> Dodaj obiekt do <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji.  
  
> [!NOTE]
>  Chociaż można dynamicznie dodawać pola do kontrolki powiązanej z danymi, pola powinny być deklarowane statycznie, a następnie pokazane lub ukryte, zgodnie z potrzebami. Statycznie deklarując wszystkie pola zmniejsza rozmiar stanu widoku dla formantu powiązanego z danymi nadrzędnymi.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania konstruktora #ctor M:System.Web.UI.WebControls.ButtonField. do dynamicznego dodawania <xref:System.Web.UI.WebControls.ButtonField> obiektu <xref:System.Web.UI.WebControls.GridView> do kontrolki.  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje akcję do wykonania, gdy zostanie kliknięty przycisk <see cref="T:System.Web.UI.WebControls.ButtonField" /> w obiekcie.</summary>
        <value>Nazwa akcji do wykonania, gdy <see cref="T:System.Web.UI.WebControls.ButtonField" /> zostanie kliknięty przycisk w elemencie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby skojarzyć nazwę polecenia, taką jak `"Add"` lub `"Remove"`, z przyciskami w <xref:System.Web.UI.WebControls.ButtonField> obiekcie. <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> Można ustawić <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> właściwość na dowolny ciąg, który identyfikuje akcję do wykonania po kliknięciu przycisku polecenia. Następnie można programowo określić nazwę polecenia w programie obsługi zdarzeń i wykonać odpowiednie działania.  
  
> [!NOTE]
>  Wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonField> obiekcie mają tę samą nazwę polecenia.  
  
 Formanty powiązane z danymi rozpoznają pewne nazwy poleceń i automatycznie generują i obsługują odpowiednie zdarzenia dla kontrolki. Rozpoznawane są następujące nazwy poleceń:  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Aby wywołać stronicowanie, ustaw <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> wartość `"Page"` na i <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> dla zawartej <xref:System.Web.UI.WebControls.Button> kontrolki `"First"`na `"Last"`, `"Prev"`, `"Next"`, lub na numer strony. Jednak ponieważ <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> <xref:System.Web.UI.WebControls.ButtonField> dla kontrolki jest zawsze indeks wierszy <xref:System.Web.UI.WebControls.ButtonField> Integer, formant nie jest odpowiedni do wywoływania stronicowania. Podobnie, chociaż można wywołać sortowanie <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> przez ustawienie <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> właściwości na `"Sort"` <xref:System.Web.UI.WebControls.ButtonField> , właściwość kontrolki jest zawsze indeksem wierszy liczb całkowitych. Z <xref:System.Web.UI.WebControls.ButtonField> tego powodu formant nie jest odpowiedni do wywoływania sortowania. W przypadku niestandardowych nazw poleceń, takich `"Add"` jak `"Remove"`i, należy napisać kod zdarzenia, aby sprawdzić nazwę polecenia i wykonać pewną akcję niestandardową. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Nie wszystkie nazwy poleceń są rozpoznawane przez każdy formant powiązany z danymi. Na przykład `"New"` nie jest rozpoznawany <xref:System.Web.UI.WebControls.GridView> przez formant i `"Select"` nie jest rozpoznawany przez <xref:System.Web.UI.WebControls.DetailsView> formant.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> aby określić nazwę polecenia przycisków <xref:System.Web.UI.WebControls.ButtonField> w obiekcie <xref:System.Web.UI.WebControls.GridView> kontrolki.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">, <see cref="T:System.Web.UI.WebControls.DataControlField" /> Do którego mają zostać skopiowane właściwości bieżącego <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Kopiuje właściwości bieżącego <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiektu do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase> <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DataControlField> Metoda jest metodą pomocnika, która jest używana przez metodę do kopiowania właściwości bieżącego obiektu pochodnego do obiektu, który został utworzony przez metodę. <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> wywołać metodę klasy bazowej, aby upewnić się, że wszystkie właściwości obiektu zostały skopiowane.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca nowe wystąpienie <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która jest używana <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> przez metodę klasy bazowej do utworzenia pustego <xref:System.Web.UI.WebControls.ButtonField> obiektu, do którego mają zostać skopiowane właściwości bieżącego <xref:System.Web.UI.WebControls.ButtonField>obiektu pochodnego. <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> metodę, aby zwrócić nowe wystąpienie klasy pochodnej. Nie wywołuj <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> metody klasy bazowej.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola danych, dla którego wartość jest powiązana z <see cref="P:System.Web.UI.WebControls.Button.Text" /> właściwością <see cref="T:System.Web.UI.WebControls.Button" /> kontrolki <see cref="T:System.Web.UI.WebControls.ButtonField" /> , która jest renderowana przez obiekt.</summary>
        <value>Nazwa pola, z którym <see cref="T:System.Web.UI.WebControls.ButtonField" />ma zostać utworzone powiązanie. Wartość domyślna to ciąg pusty (""), który wskazuje, że <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonType.Link> <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> <xref:System.Web.UI.WebControls.ButtonField> Gdy właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu jest ustawiona na wartość lub,użyjwłaściwości,abyokreślićnazwępola,któremabyćpowiązanezobiektem.<xref:System.Web.UI.WebControls.ButtonType.Button> <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Wartości pola są następnie wyświetlane jako tekst przycisków w <xref:System.Web.UI.WebControls.ButtonField> obiekcie. Opcjonalnie można sformatować wyświetlany tekst przez ustawienie <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości.  
  
 Zamiast używać <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> <xref:System.Web.UI.WebControls.ButtonField> właściwości <xref:System.Web.UI.WebControls.ButtonField>,aby powiązać obiekt z polem ze źródła danych, można użyć właściwości,abywyświetlićtekststatycznydlatekstuprzyciskówwobiekcie.<xref:System.Web.UI.WebControls.ButtonField.Text%2A> <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Gdy właściwość jest używana, każdy przycisk ma taki sam podpis.  
  
> [!NOTE]
>  Jeśli właściwości <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> i <xref:System.Web.UI.WebControls.ButtonField.Text%2A> sąustawione,właściwość<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> ma pierwszeństwo.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> aby określić pole, które ma być wyświetlane <xref:System.Web.UI.WebControls.ButtonField> w kolumnie <xref:System.Web.UI.WebControls.GridView> kontrolki.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg określający format wyświetlania wartości pola.</summary>
        <value>Ciąg formatu, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (""), który wskazuje, że żadne specjalne formatowanie nie jest stosowane do wartości pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić niestandardowy format wyświetlania dla wartości, które są wyświetlane <xref:System.Web.UI.WebControls.ButtonField> w obiekcie. <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> Jeśli właściwość nie jest ustawiona, wartość pola jest wyświetlana bez żadnego formatowania specjalnego.  
  
> [!NOTE]
>  Ciąg formatu jest stosowany tylko wtedy, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> gdy właściwość jest ustawiona.  
  
 Ciąg formatu może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy dla wartości pola. Na przykład w ciągu `"Item Value: {0}"` `{0}` formatu symbol zastępczy jest zastępowany wartością pola wyświetlanego w <xref:System.Web.UI.WebControls.ButtonField> obiekcie. Pozostała część ciągu formatu jest wyświetlana jako tekst w postaci literału.  
  
> [!NOTE]
>  Jeśli ciąg formatu nie zawiera symbolu zastępczego, wartość pola ze źródła danych nie jest uwzględniana w końcowym tekście wyświetlanym.  
  
 Symbol zastępczy składa się z dwóch części, rozdzielonych dwukropkiem i opakowany w nawiasy `A` klamrowe w postaci {: `Bxx` }. Wartość przed dwukropkiem (`A` w ogólnym przykładzie) Określa indeks wartości pola w postaci listy parametrów na podstawie zera.  
  
> [!NOTE]
>  Ten `A` parametr jest częścią składni formatowania. Ponieważ w każdej komórce istnieje tylko jedna wartość pola, ta wartość może być ustawiona na 0.  
  
 Dwukropek i wartości po dwukropku są opcjonalne. Znak po dwukropku (`B` w ogólnym przykładzie) określa format, w którym ma zostać wyświetlona wartość. W poniższej tabeli wymieniono typowe formaty.  
  
|Formatowanie znaku|Opis|  
|----------------------|-----------------|  
|`C`|Wyświetla wartości liczbowe w formacie waluty.|  
|`D`|Wyświetla wartości liczbowe w formacie dziesiętnym.|  
|`E`|Wyświetla wartości liczbowe w formacie naukowym (wykładniczym).|  
|`F`|Wyświetla wartości liczbowe w stałym formacie.|  
|`G`|Wyświetla wartości liczbowe w formacie ogólnym.|  
|`N`|Wyświetla wartości liczbowe w formacie liczb.|  
|`X`|Wyświetla wartości liczbowe w formacie szesnastkowym.|  
  
> [!NOTE]
>  Z wyjątkiem `X`znaków w formacie nie jest rozróżniana wielkość liter. Znak `X` formatu wyświetla znaki szesnastkowe w przypadku, który jest określony.  
  
 Wartość po znaku formatowania (`xx` w ogólnym przykładzie) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia. Na przykład ciąg `"{0:F2}"` formatu wyświetla liczbę stałych punktów z dwoma miejscami dziesiętnymi.  
  
 Aby uzyskać więcej informacji na temat formatowania ciągów, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> właściwości, aby określić niestandardowy format wyświetlania wartości pola.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Wartość pola do sformatowania.</param>
        <summary>Formatuje określoną wartość pola dla komórki w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekcie.</summary>
        <returns>Wartość pola konwertowana na format określony przez <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> właściwość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która jest używana do przekształcania wartości pola do formatu określonego <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> przez właściwość. <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas rozszerzania <see cref="T:System.Web.UI.WebControls.ButtonField" /> klasy można <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> zastąpić metodę, aby wykonać niestandardową procedurę formatowania.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz do wyświetlenia dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekcie.</summary>
        <value>Obraz do wyświetlenia dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" />. Wartość domyślna to ciąg pusty (""), który wskazuje, że <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Gdy właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu<xref:System.Web.UI.WebControls.ButtonType.Image> jest ustawiona na wartość, użyj <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> właściwości, aby określić obraz do wyświetlenia dla każdego przycisku. Ten obraz może być w dowolnym formacie pliku (jpg, GIF, BMP itd.), o ile przeglądarka klienta obsługuje ten format.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> aby określić obraz do wyświetlenia dla każdego przycisku <xref:System.Web.UI.WebControls.ButtonField> w obiekcie. Aby można było wyświetlić ten przykład kodu, musisz podać własny obraz.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled"><see langword="true" />Aby włączyć sortowanie; w przeciwnym razie. <see langword="false" /></param>
        <param name="control">Kontrolka danych będąca właścicielem <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Inicjuje bieżący <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekt.</summary>
        <returns><see langword="false" />, co oznacza, że kontrolka nie musi ponownie powiązać danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez kontrolkę danych, z <xref:System.Web.UI.WebControls.ButtonField> którą skojarzony jest obiekt, aby wykonać podstawowe inicjowanie obiektu dla wystąpień pola, zanim pole zostanie kiedykolwiek dodane do kolekcji wierszy. <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> Kontrolki danych, takie <xref:System.Web.UI.WebControls.DetailsView> jak <xref:System.Web.UI.WebControls.GridView>i, wywołaj <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> metodę w `CreateChildControls` swoich metodach przed innymi metodami `CreateRow`, takimi jak, są wywoływane w celu utworzenia konkretnych wierszy zawierających dane.  
  
 Wywołaj <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> metodę, gdy piszesz niestandardową kontrolkę powiązaną z danymi, <xref:System.Web.UI.WebControls.TableCell> która używa obiektów do <xref:System.Web.UI.WebControls.ButtonField> przeprowadzenia inicjowania podstawowego dla obiektu. Zaimplementuj tę metodę, <xref:System.Web.UI.WebControls.ButtonField>Jeśli typ pochodny wymaga zainicjowania obiektu przed <xref:System.Web.UI.WebControls.TableCell> wypełnieniem obiektów <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> danymi lub kontrolkami w metodzie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> metodę i Return <see langword="true" />, jeśli pole wymaga wykonania powiązania danych na stronie ogłaszania zwrotnego, aby pole działało poprawnie.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> Do zainicjowania.</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> Wartość wskazująca typ wiersza (nagłówka, stopki lub danych).</param>
        <param name="rowState">Jedna z <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> wartości.</param>
        <param name="rowIndex">Indeks wiersza (liczony od zera).</param>
        <summary>Inicjuje określony <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> obiekt do określonego stanu wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy typ przycisku, który jest określony <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> przez właściwość <xref:System.Web.UI.Control.Controls%2A> i dodaje go <xref:System.Web.UI.WebControls.DataControlFieldCell> do kolekcji obiektu. <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> Właściwość kontrolki jest ustawiona na `rowIndex`. <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> <xref:System.Web.UI.WebControls.Button>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia statyczny podpis wyświetlany dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" /> obiekcie.</summary>
        <value>Podpis wyświetlany dla każdego przycisku w <see cref="T:System.Web.UI.WebControls.ButtonField" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonType.Link> <xref:System.Web.UI.WebControls.ButtonField.Text%2A> <xref:System.Web.UI.WebControls.ButtonField>Gdy właściwość <xref:System.Web.UI.WebControls.ButtonField> obiektu jest ustawiona na wartość lub,użyjwłaściwości,abywyświetlićtekststatycznydlapodpisuprzyciskóww.<xref:System.Web.UI.WebControls.ButtonType.Button> <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Każdy przycisk ma ten sam podpis.  
  
 Zamiast używać <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości do wyświetlania tekstu statycznego <xref:System.Web.UI.WebControls.ButtonField> w obiekcie <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> , można użyć właściwości, aby powiązać <xref:System.Web.UI.WebControls.ButtonField> z polem w źródle danych. Wartości pola są następnie wyświetlane jako podpis przycisków.  
  
> [!NOTE]
>  Jeśli właściwości <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> i <xref:System.Web.UI.WebControls.ButtonField.Text%2A> sąustawione,właściwość<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> ma pierwszeństwo.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.ButtonField.Text%2A> właściwości, aby określić podpis do wyświetlania dla każdego przycisku <xref:System.Web.UI.WebControls.ButtonField> w obiekcie.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy kontrolki, które są zawarte <see cref="T:System.Web.UI.WebControls.ButtonField" /> w obiekcie obsługują wywołania zwrotne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która jest używana do określenia, czy kontrolki, które są zawarte <xref:System.Web.UI.WebControls.ButtonField> w obiekcie obsługują wywołania zwrotne. <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Ta metoda jest implementowana jako metoda pusta (metoda, która nie zawiera żadnego kodu) wskazująca, że wywołania zwrotne są obsługiwane.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klasy pochodne od <see cref="T:System.Web.UI.WebControls.BoundField" /> klasy mogą <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> przesłaniać metodę w celu wskazania, czy kontrolki zawarte w polu obsługują wywołania zwrotne. Aby wskazać, że wywołania zwrotne są obsługiwane, <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> należy zaimplementować metodę jako pustą metodę, która nie zgłasza wyjątku; w przeciwnym razie Zgłoś wyjątek z przydatnym komunikatem opisującym, dlaczego wywołania zwrotne nie są obsługiwane.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
