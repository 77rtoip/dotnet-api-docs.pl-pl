<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bcac915f2864a6a11c114b034e34756fb1f5cd4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691424" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje podstawowe funkcje wymagane przez krok w <see cref="T:System.Web.UI.WebControls.Wizard" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można bezpośrednio utworzyć wystąpienia <xref:System.Web.UI.WebControls.WizardStepBase> klasy. Jednak ta klasa jest dziedziczona przez <xref:System.Web.UI.WebControls.WizardStep> klasy i <xref:System.Web.UI.WebControls.TemplatedWizardStep> klasy, aby zapewnić podstawowe funkcje kroku w formancie, który działa jako kreatora.  
  
 Może pochodzić od <xref:System.Web.UI.WebControls.WizardStepBase> klasy w celu utworzenia niestandardowych klasa, która reprezentuje unikatowy etapem formantu kreatora.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może powrócić do bieżącego etapu z kolejnych czynności w <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik jest dozwolone, aby powrócić do bieżącego kroku; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> Właściwości może służyć do wymuszania liniowej nawigacji w <xref:System.Web.UI.WebControls.Wizard> formantu. Jeśli ma każdego kroku jego <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną właściwość `false`, użytkownik nie będzie można powrócić do kroku po uzyskaniu do nich. Jeden scenariusz, w których może używać tej funkcji jest, aby uniemożliwić użytkownikowi wróć do kroku po jej zakończeniu, ponieważ są przechowywanie danych do bazy danych jako każdego kroku zostało zakończone. Jeśli zapiszesz dane po każdym kroku i Zezwalaj użytkownikowi na wróć do kroku i po jego zapisaniu, zmienić informacji zapisanych danych może zostać uszkodzona. Przez ustawienie <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> właściwości `false`, gdy użytkownik opuścił krok, użytkownik nie będzie można do niego wrócić i zmienić wartości.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> Właściwość określa, jak i kiedy **Wstecz** przycisk nie jest renderowany. W poniższej tabeli opisano **Wstecz** przycisk sposób renderowania.  
  
|Scenariusz|Zachowanie|  
|--------------|--------------|  
|Liniowy: Krok 1 ma <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną `false` i akcji użytkownik przechodzi do kroku 2.|Krok 2 nie są wyświetlane **Wstecz** przycisku.|  
|Non-liniowej: Krok 1 ma <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną `false` i akcji użytkownik przechodzi do kroku 3.|Krok 3 nie będą wyświetlane **Wstecz** przycisku.|  
|Przycisków paska bocznego: Krok 2 ma <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> ma ustawioną wartość `true`, a użytkownik kliknie przycisk paska bocznego.|Przyciski nie są automatycznie wyłączane na pasku bocznym po <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ma ustawioną wartość `false`. Jeśli użytkownik kliknie przycisk, akcja jest ignorowana.|  
|Liniowy & Non-liniowy z szablonu niestandardowego: krok ma niestandardowy szablon nawigacji.|Nie automatyczne ukrywanie lub wyświetlania występuje, gdy <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawiono `false` gdy używasz szablonu nawigacji. **Wstecz** przycisk powinien być opcjonalne w szablonie.|  
|Przy użyciu projektanta programu Visual Studio i <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : kontrolka ma wykonać 5 prostych kroków, podczas pracy z kroku 4 i uruchomienia strony.|Po kroku 4 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, a następnie **Wstecz** przycisku jest renderowany. **Wstecz** tylko ukryte przycisk <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> ustawioną <xref:System.Web.UI.WebControls.WizardStepType.Step> Jeśli poprzedni krok w historii zawiera <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną `false`. Ponieważ krok 4 jest renderowany najpierw i nie trzeba wykonywać żadnych działań w historii, **Wstecz** przycisk nie jest ukryty.|  
|Rozpocznij krok i inne niż liniowy nawigacji: użytkownik odwiedzi kroku 3 i kroku 4, a następnie kroku 1 ma <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> ustawioną <xref:System.Web.UI.WebControls.WizardStepType.Start>.|Kreator nie doda **Wstecz** przycisku, gdy <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> ustawiono <xref:System.Web.UI.WebControls.WizardStepType.Start> niezależnie od tego, w jaki sposób użytkownik przechodzi do tego kroku.|  
|Tego samego kroku w historii: Użytkownik odwiedzi krok 3 gdzie <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> ustawiono <xref:System.Web.UI.WebControls.WizardStepType.Step> i użytkownik nie zatwierdzić ich działania. Ich, a następnie kliknięcie przycisku Poprzedni kroku 3.|Kontroli Kreator sprawdza, czy **Wstecz** krok w historii jest "w tym samym" której obecnie jest ten użytkownik. Jeśli krok jest taki sam, formantu kreatora wygląda Wstecz w historii ustalenie poprzedniego kroku "różne" i podstawowych wyświetlanie **Wstecz** przycisk i docelowego na podstawie "różnych kroku" w historii.|  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> właściwość jest ustawiona na `false`, ale <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> właściwości formantu nadrzędnego elementu <xref:System.Web.UI.WebControls.WizardStepBase> ma ustawioną wartość `true`, kliknięcie przycisku w obszarze paska bocznego nie ma wpływu. Obszar paska bocznego jest zwykle wyświetlany rożne nawigację, więc jeśli nie używasz funkcji rożne nawigacji, możesz ustawić <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> właściwości `false`.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> właściwości, aby zatrzymać użytkownika z wracając do kroku w <xref:System.Web.UI.WebControls.Wizard> kontroluje po uzyskaniu do nich. W tym przykładzie `Step1` krok ma jego <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ustawioną właściwość `false`. Gdy użytkownik opuści `Step1` kroku ma przycisku Wstecz pojawia się na `Step2` kroku.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kompozycje zastosowanie do tego formantu.</summary>
        <value>
          <see langword="true" /> Aby użyć motywów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> Właściwość wskazuje, czy włączono motywy dla <xref:System.Web.UI.WebControls.WizardStepBase> formantu. <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> Właściwość dotyczy również czy kompozycji są włączone dla formanty zawarte w jego kolekcji formantów. Gdy <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> właściwość jest `true`, katalogu motywu aplikacji jest wyszukiwany Karnacje formantów do zastosowania. Jeśli nie karnacji dla określonego formantu istnieje w katalogu motywu, karnacji nie została zastosowana. Gdy <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> właściwość jest `false`, katalogu motywu i wartość <xref:System.Web.UI.Control.SkinID%2A> właściwość nie jest używana.  
  
 Można zastąpić formantu <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> wartość zestawu kontrolki nadrzędnej lub strony zawierającej. Na przykład jeśli <xref:System.Web.UI.WebControls.WizardStepBase> formant ma <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> ustawioną `false`, kompozycje można umożliwiają selektywne stosowanie do formantów podrzędnych zawartych w kroku kreatora przez ustawienie <xref:System.Web.UI.Control.EnableTheming%2A> właściwości `true` na formanty podrzędne poszczególnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator programowy przypisany do kontrolki serwera.</summary>
        <value>Identyfikator programowy, przypisane do formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> właściwości do identyfikowania i odwołania formantu kroku kreatora określonego w strony formularzy sieci Web. <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> Wartość staje się nazwę wystąpienia kontrolki na stronie; dzięki temu można łatwo uzyskiwać dostęp do określonego kroku kod dla tej strony. Na przykład jeśli ustawisz <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> właściwość <xref:System.Web.UI.WebControls.WizardStepBase> formantu do "Krok 1.", możesz odwoływać się do formantów podrzędnych kroku kreatora w kodzie dla tej strony jako `Step1.Controls`.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> Formant gwarantuje, że każdy krok <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> formantu ma nieprawidłowy Unikatowy identyfikator, gdy kroki zostały dodane lub zmodyfikowane w czasie projektowania. Na przykład po ustawieniu <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> kroku w czasie projektowania, nie można dopasować identyfikatora kolejny krok zawarte w <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> kontroli, a nie można dopasować <xref:System.Web.UI.Control.ID%2A> dla zawierający <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> formantu.  
  
   
  
## Examples  
 Poniższy przykładowy kod definiuje trzy kroki kreatora <xref:System.Web.UI.WebControls.Wizard> kontrolki strony formularzy sieci Web. W kodzie strony wystąpień kroku kreatora są nazywane według wartości Identyfikatora i może być przywoływany w kodzie jako `WizardStep1`, `WizardStep2`, i `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość została ustawiona na ciąg nieprawidłowy identyfikator w czasie projektowania.  
  
 —lub—  
  
 Właściwość została ustawiona na taki sam identyfikator jak zawierający <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> formantu w czasie projektowania.  
  
 —lub—  
  
 Właściwość została ustawiona na taki sam identyfikator jak inny etapem zawierający <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> formantu w czasie projektowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Czy reprezentuje reprezentujący stan formantu ma zostać przywrócony.</param>
        <summary>Przywraca stan widoku informacje z poprzedniego żądania strony, która została zapisana przez <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> metody.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę skojarzony z krokiem w formancie, który działa jako kreatora.</summary>
        <value>Nazwa skojarzona z krokiem w formancie, który działa jako kreatora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> Właściwość zwraca ciąg, który identyfikuje etapem formantu kreatora. Jeśli wartość jest określona dla <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> właściwość <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> właściwość zwraca tę wartość. Jeśli nie określono wartości dla <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> właściwość <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> właściwość zwraca wartość <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> właściwości. Jeśli nie określono wartości dla dowolnego <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> lub <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> właściwość <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> zwraca właściwość `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie.</param>
        <summary>Wyświetla zawartość <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> formantów podrzędnych formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość mają być odwzorowane na kliencie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ nawigacji interfejsu użytkownika (UI), aby wyświetlić kroku w <see cref="T:System.Web.UI.WebControls.Wizard" /> formantu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.WizardStepType" /> wartości wyliczenia. Wartość domyślna to <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> właściwości, aby określić typ przycisków nawigacji dla kroku w <xref:System.Web.UI.WebControls.Wizard> formantu. Jeśli określono wartość dla tej właściwości, wszystkie kroki oznaczona jako <xref:System.Web.UI.WebControls.WizardStepType.Complete> wyświetla w stanie wyłączenia na pasku bocznym.  
  
 Jeśli wartość tej właściwości nie jest określona, wartością domyślną jest `WizardStepType.Auto`.  
  
 W poniższej tabeli wymieniono dostępne ustawienia <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> właściwości i efekty kroku:  
  
 `WizardStepType.Auto`  
 Nawigacji interfejsu użytkownika, który jest renderowany kroku jest określana przez kolejność, w którym zadeklarowany jest kroku.  
  
 `WizardStepType.Complete`  
 Krok jest ostatnim pojawią się. Nie przycisków nawigacji są renderowane.  
  
 `WizardStepType.Finish`  
 Krok jest ostatnim danych kolekcji. Przyciski Zakończ i poprzedni są renderowane nawigacji.  
  
 `WizardStepType.Start`  
 Krok jest pierwszą pojawią się. Nie są odtwarzane przycisk Wstecz.  
  
 `WizardStepType.Step`  
 Krok jest żadnych między rozpoczęciem a kroku. Przyciski Wstecz i dalej są renderowane nawigacji. Ten typ kroku jest przydatne w przypadku przesłaniania <xref:System.Web.UI.WebControls.WizardStepType.Auto> krok typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość nie jest jednym z <see cref="T:System.Web.UI.WebControls.WizardStepType" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł, aby użyć krok opisany w <see cref="T:System.Web.UI.WebControls.Wizard" /> kontroli, gdy jest włączona funkcja paska bocznego.</summary>
        <value>Tytuł, aby użyć krok opisany w <see cref="T:System.Web.UI.WebControls.Wizard" /> kontroli, gdy jest włączona funkcja paska bocznego. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> właściwość, aby wyświetlić przyjazną dla użytkownika tytuł kroku w <xref:System.Web.UI.WebControls.Wizard> kontroli, gdy jest włączona funkcja paska bocznego. Jeśli <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> nie ustawiono właściwości i włączeniu funkcji paska bocznego, wartość <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> właściwości jest wyświetlany dla przycisku paska bocznego.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, za pomocą <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> właściwość, aby wyświetlić przyjazną dla użytkownika tytuł kroku w <xref:System.Web.UI.WebControls.Wizard> formantu. W tym przykładzie `Step1` nie ma jej <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> ustawić właściwości, aby był w <xref:System.Web.UI.WebControls.Wizard> formantu "WizardStep1". `Step2` ma jego <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> zbioru właściwości, dlatego jest widoczny jako "Krok 2".  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.Wizard" /> pochodną formant, który jest elementem nadrzędnym obiektu <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> Pochodną formant, który jest elementem nadrzędnym obiektu <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>