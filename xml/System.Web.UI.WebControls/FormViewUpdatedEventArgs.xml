<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a20f34032697e518f34d74d21c019fea737c8e53" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46651512" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Kontrolować zgłasza <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenie, gdy przycisk Aktualizuj (przycisk z jego `CommandName` właściwość ustawioną na "Aktualizuj") w kontrolce kliknięciu, ale po <xref:System.Web.UI.WebControls.FormView> kontroli aktualizuje rekord. Dzięki temu można podać metodę obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak sprawdzanie wyników operacji aktualizacji, przy każdym wystąpieniu tego zdarzenia.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> obiekt jest przekazywany do metody obsługi zdarzeń, dzięki czemu można określić liczbę zmodyfikowanych rekordów wraz z wygenerowanymi wyjątkami, które mogły wystąpić. Aby określić liczbę rekordów dotyczy operacji aktualizacji, należy użyć <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości. Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpiły wszelkie wyjątki. Można również określić, czy wyjątek został obsłużony w metodzie obsługi zdarzeń, ustawiając <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości. Jeśli potrzebujesz uzyskać dostęp do oryginalnej wartości pola klucza zaktualizowanym rekordem, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwości. Oryginalne wartości pola klucza nie jest możliwy za pomocą <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwości. Zaktualizowane wartości (w tym wartości zaktualizowane pole klucza, jeśli zezwolisz użytkownikom na edytowanie pól klucza) są dostępne przy użyciu <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> właściwości.  
  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po operacji aktualizacji. Podczas obsługi wyjątku, który wystąpił podczas operacji aktualizacji, można zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji przez ustawienie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> właściwość `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> klasy, zobacz <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> obiekt przekazywany do metody obsługi zdarzeń dla <xref:System.Web.UI.WebControls.FormView.ItemUpdated> zdarzenia w celu określenia, czy wystąpił wyjątek podczas operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Liczba wierszy dotyczy operacji aktualizacji.</param>
        <param name="e">
          <see cref="T:System.Exception" /> Reprezentujący wyjątek zgłaszany, gdy operacja aktualizacji została wykonana. Jeśli żaden wyjątek jest zgłaszany, użyj <see langword="null" /> dla tego parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia ten konstruktor inicjuje nowe wystąpienie klasy <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> klasy.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|Wartość `affectedRows` parametru.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Obiekt znajdujący się w `e` parametru.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|Zainicjowana na `false`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|Zainicjowana na `false`.|  
  
> [!NOTE]
>  Ten konstruktor jest używany przede wszystkim deweloperom kontroli, gdy wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę wierszy dotyczy operacji aktualizacji.</summary>
        <value>Liczba wierszy dotyczy operacji aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości w celu określenia liczby rekordów dotyczy operacji aktualizacji. Ta właściwość jest często używana Aby zweryfikować, że poprawna liczba rekordów została zaktualizowana w następujących sytuacjach:  
  
-   Upewnij się, że tylko jeden rekord został zaktualizowany. Czasami instrukcji update nieprawidłowo napisane można zaktualizować wielu rekordów.  
  
-   Upewnij się, że rekord został zaktualizowany, gdy wystąpi błąd podczas operacji aktualizacji, które nie zgłaszała wyjątku.  
  
-   Sprawdź, czy rekord został zaktualizowany, gdy formant źródła danych, która obsługuje wykrywanie konfliktów (optymistycznego sprawdzania współbieżności), takie jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.ObjectDataSource> kontroluje, ma swoją <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> właściwością `ConflictOptions.CompareAllValues` wartość wyliczenia . W ramach tego ustawienia, rekord, który został zmodyfikowany przez innego użytkownika jednocześnie mogły nie zostać zaktualizowane.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> właściwości, aby sprawdzić, czy rekord został zaktualizowany.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek (jeśli istnieje), został zgłoszony podczas operacji aktualizacji.</summary>
        <value>
          <see cref="T:System.Exception" /> Obiekt, który reprezentuje wyjątek, który został zgłoszony podczas operacji aktualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości do określenia wyjątku (jeśli istnieje), został zgłoszony podczas operacji aktualizacji. Jeśli zostały zgłoszone żadne wyjątki, właściwość ta zwraca `null`.  
  
> [!NOTE]
>  Jeśli zdecydujesz się obsługiwać wyjątek w obsłudze zdarzeń został zgłoszony wyjątek, należy ustawić <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości `true`; w przeciwnym razie wyjątek jest zgłaszany ponownie przez <xref:System.Web.UI.WebControls.FormView> kontroli.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości w celu określenia, czy wystąpił wyjątek podczas operacji aktualizacji.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek zgłoszony podczas operacji aktualizacji został obsłużony w zdarzeniu programu obsługi.</summary>
        <value>
          <see langword="true" /> Jeśli wyjątek został obsłużony w zdarzeniu obsługi; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany podczas operacji aktualizacji, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości, aby wskazać, czy wyjątek został obsłużony w zdarzeniu programu obsługi. Jeśli ta właściwość jest równa `true`, wyjątek jest uznawany za obsługiwany i nie jest zgłaszany ponownie przez <xref:System.Web.UI.WebControls.FormView> kontroli. Jeśli ta właściwość jest ustawiona `false`, wyjątek jest zgłaszany ponownie. Aby określić, które wyjątek został zgłoszony, użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> właściwości, aby wskazać, czy wyjątek został obsłużony w zdarzeniu programu obsługi.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.FormView" /> kontroli może pozostawać w trybie edycji po operacji aktualizacji.</summary>
        <value>
          <see langword="true" /> Aby pozostać w trybie edycji po operacji aktualizacji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Web.UI.WebControls.FormView> sterowanie powraca do trybu określonego przez <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości po operacji aktualizacji. Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> właściwości w celu określenia czy <xref:System.Web.UI.WebControls.FormView> kontroli może pozostawać w trybie edycji. Aby zachować <xref:System.Web.UI.WebControls.FormView> sterowania w trybie edycji, ustaw tę właściwość na `true`.  
  
> [!NOTE]
>  Ta właściwość powinna być używana, tylko wtedy, gdy sytuacja występuje (np. podniesionych wyjątek), który wymaga, aby zachowywać się inaczej niż w zwykły sposób formant. Jeśli <xref:System.Web.UI.WebControls.FormView> kontrolka wymaga pozostać w trybie edycji domyślnie, ustaw <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> właściwości zamiast tego.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> właściwości, aby zachować <xref:System.Web.UI.WebControls.FormView> kontroli w trybie edycji, gdy wystąpi wyjątek.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający oryginalnego pary nazwa/wartość pola klucza dla zaktualizowanym rekordem.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Zawiera słownik oryginalnego pary nazwa/wartość pola klucza dla zaktualizowanym rekordem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Właściwość zawiera oryginalne wartości pola klucza na liście <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> właściwość <xref:System.Web.UI.WebControls.FormView> kontroli. Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwość, aby uzyskać dostęp do wartości pola klucza dla zaktualizowanym rekordem. Na przykład można użyć tych wartości do przechowywania dziennika zaktualizowanych rekordów.  
  
> [!NOTE]
>  Jeśli zezwolisz na użytkownika zaktualizować wartości pola klucza <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> właściwość zawiera oryginalnych wartości pola klucza. Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Właściwość zwraca <xref:System.Collections.Specialized.OrderedDictionary> obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfejsu. <xref:System.Collections.Specialized.OrderedDictionary> Obiekt zawiera <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> obiektów reprezentujących pola zaktualizowanym rekordem. Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> właściwość <xref:System.Collections.Specialized.OrderedDictionary> obiektu. Podobnie, możesz uzyskać dostęp do wartości pola przy użyciu <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary> obiektu do uzyskania dostępu, pola wartości bezpośrednio. Formanty, które polegają na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pola tylko przez indeks.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> właściwość, aby uzyskać dostęp do wartości pola klucza dla zaktualizowanym rekordem.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający nowej pary nazwa/wartość pola dla zaktualizowanym rekordem.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Zawiera słownik nowej pary nazwa/wartość pola dla zaktualizowanym rekordem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> właściwość, aby uzyskać dostęp do nowych wartości pola zaktualizowanym rekordem. Na przykład można użyć tych wartości do przechowywania dziennika zaktualizowanych rekordów.  
  
> [!NOTE]
>  Jeśli zezwolisz na użytkownika zaktualizować wartości pola klucza <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> właściwość zawiera oryginalnych wartości pola klucza. Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Właściwość zwraca <xref:System.Collections.Specialized.OrderedDictionary> obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfejsu. <xref:System.Collections.Specialized.OrderedDictionary> Obiekt zawiera <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> obiektów reprezentujących pola zaktualizowanym rekordem. Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> właściwość <xref:System.Collections.Specialized.OrderedDictionary> obiektu. Podobnie, możesz uzyskać dostęp do wartości pola przy użyciu <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary> obiektu do uzyskania dostępu, pola wartości bezpośrednio. Formanty, które polegają na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pola tylko przez indeks.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> właściwość, aby uzyskać dostęp do nowych wartości wprowadzonej przez użytkownika dla pól niż klucz zaktualizowanym rekordem.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający oryginalnego pary nazwa/wartość pola-key dla zaktualizowanym rekordem.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Zawiera słownik oryginalnego pary nazwa/wartość pola dla zaktualizowanym rekordem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwość, aby uzyskać dostęp do oryginalnej wartości pól niż klucz zaktualizowanym rekordem. Na przykład można użyć tych wartości do przechowywania dziennika zaktualizowanych rekordów. Formant źródła danych, która obsługuje wykrywanie konfliktów (optymistycznego sprawdzania współbieżności), takie jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.ObjectDataSource> formantów, za pomocą jego <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> ustawioną na `ConflictOptions.CompareAllValues` także porównanie tych oryginalnych wartości przed odbywa się rekord w bazie danych, przed wykonaniem operacji aktualizacji. Jeśli rekord został zmodyfikowany przez innego użytkownika jednocześnie, rekord nie jest aktualizowany.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> Właściwości nie zawiera pola klucza. Jeśli zezwolisz programowi użytkownika zaktualizować wartości pola klucza, oryginalne wartości pola klucza są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> właściwości. Zaktualizowane wartości są przechowywane w <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Właściwość zwraca <xref:System.Collections.Specialized.OrderedDictionary> obiekt, który implementuje <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfejsu. <xref:System.Collections.Specialized.OrderedDictionary> Obiekt zawiera <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> obiektów reprezentujących pola zaktualizowanym rekordem. Aby uzyskać dostęp do nazw pól, należy użyć <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> właściwość <xref:System.Collections.Specialized.OrderedDictionary> obiektu. Podobnie, możesz uzyskać dostęp do wartości pola przy użyciu <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> właściwości.  
  
> [!NOTE]
>  Jako skrót, można również użyć indeksatorem <xref:System.Collections.Specialized.OrderedDictionary> obiektu do uzyskania dostępu, pola wartości bezpośrednio. Formanty, które polegają na kolejność pól źródła danych (takich jak <xref:System.Web.UI.WebControls.AccessDataSource>) mogą uzyskiwać dostęp do wartości pola tylko przez indeks.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> właściwość, aby uzyskać dostęp do oryginalnej wartości pól niż klucz pod kątem zaktualizowanym rekordem.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>