<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fed16329a67968fe3391ed20f1c1cf0dc0b94a4f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69413344" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceDeleteEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest przesyłany do dowolnej procedury obsługi <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> dla zdarzenia. <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> Właściwość zawiera dane, które zostaną usunięte.  
  
 Jeśli obiekt, który reprezentuje źródło danych zgłasza wyjątek sprawdzania poprawności przed usunięciem danych, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> Właściwość zawiera wystąpienie <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> klasy. Można pobrać wszystkie wyjątki walidacji za pomocą <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> właściwości. Jeśli nie zostanie zgłoszony żaden wyjątek sprawdzania poprawności <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> , właściwość `null`zawiera. Jeśli obsługujesz wyjątki walidacji i nie chcesz, aby wyjątek był ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> właściwość na. `true`  
  
 Tworzysz procedurę obsługi <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzeń, aby sprawdzić poprawność danych, sprawdzić błędy walidacji z klasy danych lub anulować operację usuwania. Operacja usuwania zostanie anulowana przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości na. `true`  
  
 Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource> Formant przechowuje oryginalne wartości ze źródła danych w widoku stan na stronie sieci Web, z wyjątkiem tych, których <xref:System.Data.Linq.Mapping.ColumnAttribute> atrybut jest oznaczony jako `UpdateCheck.Never`. LINQ to SQL automatycznie sprawdza integralność danych przed usunięciem danych. W tym celu należy porównać bieżące wartości ze źródła danych z oryginalnymi wartościami, które są przechowywane w stanie widoku. Aby wykonać dodatkowe sprawdzanie poprawności danych, można utworzyć procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak anulować operację usuwania na podstawie właściwości we <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> właściwości i wartości ze strony sieci Web. W przykładzie użytkownicy muszą wybrać <xref:System.Web.UI.WebControls.CheckBox> kontrolkę, aby potwierdzić, że chcą usunąć rekord produktu, `OnSale` gdy właściwość jest ustawiona na `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">LINQ do SQL</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs originalObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera dane do usunięcia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który wystąpił podczas walidacji danych do usunięcia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> klasy z określonym wyjątkiem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który został zgłoszony podczas sprawdzania poprawności danych przed operacją usuwania.</summary>
        <value>Wyjątek, jeśli wystąpił błąd; w przeciwnym razie. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przed wykonaniem operacji usuwania zostanie zgłoszony wyjątek walidacji, wyjątek jest przechowywany we <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> właściwości. W procedurze obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzenia można pobrać wyjątek <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> za pomocą właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy nie należy go ponownie zgłaszać.</summary>
        <value><see langword="true" />Jeśli wyjątek został obsłużony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> zdarzenia, aby sprawdzić wyjątki walidacji, które zostały zgłoszone przed operacją usuwania. Jeśli wystąpi wyjątek i nie chcesz, aby był on ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> właściwość na. `true` Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> właściwość nie zostanie ustawiona na `true`, wyjątek zostanie rozpropagowany do następnego programu obsługi zdarzeń w stosie wywołań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje dane do usunięcia.</summary>
        <value>Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera dane do usunięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć właściwości, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> aby korzystać z danych przed ich usunięciem. Możesz sprawdzić poprawność danych lub anulować zdarzenie, ustawiając <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość na. `true` Można zmienić, który rekord jest usuwany, zmieniając wartość lub wartości obiektu we <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak anulować operację usuwania na podstawie właściwości we <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> właściwości i wartości ze strony sieci Web. W przykładzie użytkownicy muszą wybrać <xref:System.Web.UI.WebControls.CheckBox> kontrolkę, aby potwierdzić, że chcą usunąć rekord produktu, `OnSale` gdy właściwość jest ustawiona na `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
