<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ab4325615454ed91c3a809e54c9e27b6efdfd83" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69413329" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="43a1c-101">Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43a1c-102">Obiekt jest przesyłany do dowolnego programu obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> dla zdarzenia. <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs></span><span class="sxs-lookup"><span data-stu-id="43a1c-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-103"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Właściwość zawiera dane, które zostaną wstawione.</span><span class="sxs-lookup"><span data-stu-id="43a1c-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="43a1c-104">Można użyć <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> obiektu do sprawdzenia danych przed wykonaniem operacji INSERT w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="43a1c-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="43a1c-105">Następnie można sprawdzić poprawność danych, sprawdzić błędy walidacji z klasy danych lub zmienić wartość przed aktualizacją.</span><span class="sxs-lookup"><span data-stu-id="43a1c-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="43a1c-106">Możesz również anulować operację wstawiania.</span><span class="sxs-lookup"><span data-stu-id="43a1c-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="43a1c-107">Jeśli obiekt reprezentujący źródło danych zgłasza wyjątek sprawdzania poprawności przed wstawieniem danych, <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Właściwość zawiera wystąpienie <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> klasy.</span><span class="sxs-lookup"><span data-stu-id="43a1c-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="43a1c-108">Można pobrać wszystkie wyjątki walidacji za pomocą <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="43a1c-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="43a1c-109">Jeśli nie zostanie zgłoszony żaden wyjątek sprawdzania poprawności <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> , właściwość `null`zawiera.</span><span class="sxs-lookup"><span data-stu-id="43a1c-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="43a1c-110">Jeśli obsługujesz wyjątki walidacji i nie chcesz, aby wyjątek był ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> właściwość na. `true`</span><span class="sxs-lookup"><span data-stu-id="43a1c-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43a1c-111">Poniższy przykład pokazuje procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-112">Obiekt z <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> właściwości jest rzutowany na typ o nazwie `Product`.</span><span class="sxs-lookup"><span data-stu-id="43a1c-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="43a1c-113">`DateModified` Właściwość`Product` obiektu jest ustawiona na bieżącą datę i godzinę.</span><span class="sxs-lookup"><span data-stu-id="43a1c-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="43a1c-114">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-115">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="43a1c-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43a1c-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="43a1c-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs newObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject"><span data-ttu-id="43a1c-117">Obiekt, który zawiera dane do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-117">An object that contains the data to insert.</span></span></param>
        <summary><span data-ttu-id="43a1c-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="43a1c-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="43a1c-119">Wyjątek, który wystąpił podczas sprawdzania poprawności danych do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-119">The exception that occurred when the data to insert was being validated.</span></span></param>
        <summary><span data-ttu-id="43a1c-120">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> klasy i określa podany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="43a1c-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43a1c-121">Pobiera wyjątek, który został zgłoszony podczas sprawdzania poprawności danych przed operacją wstawiania.</span><span class="sxs-lookup"><span data-stu-id="43a1c-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span></span></summary>
        <value><span data-ttu-id="43a1c-122">Wyjątek, jeśli wystąpił błąd; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="43a1c-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43a1c-123">Jeśli przed wykonaniem operacji wstawiania zostanie zgłoszony wyjątek walidacji, wyjątek jest przechowywany we <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="43a1c-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="43a1c-124">W procedurze obsługi <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia można pobrać wyjątek <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> za pomocą właściwości.</span><span class="sxs-lookup"><span data-stu-id="43a1c-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43a1c-125">Poniższy przykład pokazuje procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-126">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="43a1c-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43a1c-127">Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy nie należy go ponownie zgłaszać.</span><span class="sxs-lookup"><span data-stu-id="43a1c-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="43a1c-128"><see langword="true" />Jeśli wyjątek został obsłużony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="43a1c-128"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43a1c-129">Można utworzyć obsługę zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia, aby sprawdzić wyjątki walidacji, które wystąpiły przed operacją wstawiania.</span><span class="sxs-lookup"><span data-stu-id="43a1c-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="43a1c-130">Jeśli wystąpi wyjątek i nie chcesz, aby był on ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> właściwość na. `true`</span><span class="sxs-lookup"><span data-stu-id="43a1c-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="43a1c-131">Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> właściwość nie zostanie ustawiona na `true`, wyjątek zostanie rozpropagowany do następnego programu obsługi zdarzeń w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="43a1c-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43a1c-132">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-133">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="43a1c-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43a1c-134">Pobiera obiekt, który zawiera dane do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-134">Gets the object that contains the data to insert.</span></span></summary>
        <value><span data-ttu-id="43a1c-135">Obiekt, który zawiera dane do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-135">An object that contains the data to insert.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43a1c-136"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Właściwość zawiera dane, które zostaną wstawione do źródła danych.</span><span class="sxs-lookup"><span data-stu-id="43a1c-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="43a1c-137">Utwórz procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia i <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Pobierz właściwość w celu weryfikacji danych, Zmień dane lub Anuluj operację wstawiania przed wykonaniem operacji na danych.</span><span class="sxs-lookup"><span data-stu-id="43a1c-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="43a1c-138">Właściwość zwraca obiekt typu <xref:System.Object>. <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A></span><span class="sxs-lookup"><span data-stu-id="43a1c-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="43a1c-139">Ten obiekt można rzutować na typ klasy, która reprezentuje dane.</span><span class="sxs-lookup"><span data-stu-id="43a1c-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43a1c-140">Poniższy przykład pokazuje procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="43a1c-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="43a1c-141">Obiekt z <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> właściwości jest rzutowany na typ o nazwie `Product`.</span><span class="sxs-lookup"><span data-stu-id="43a1c-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="43a1c-142">`DateModified` Właściwość`Product` obiektu jest ustawiona na bieżącą datę i godzinę.</span><span class="sxs-lookup"><span data-stu-id="43a1c-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
