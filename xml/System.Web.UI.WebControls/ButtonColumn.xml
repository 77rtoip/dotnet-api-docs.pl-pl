<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e590333490ec58890a122c520df4253fe29bae25" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51891961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Typ kolumny <see cref="T:System.Web.UI.WebControls.DataGrid" /> formant, który zawiera przycisk zdefiniowanych przez użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn> klasy w <xref:System.Web.UI.WebControls.DataGrid> sterowania, aby utworzyć przycisk, który odpowiada za pomocą każdego wiersza w <xref:System.Web.UI.WebControls.DataGrid> kontroli. Określ podpis, który jest wyświetlany w przyciski, ustawiając <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwości. Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwość, wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu udostępnić ten sam podpis. Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonColumn> przycisków, aby pole w źródle danych. Umożliwia to wyświetlanie różnych podpisów dla każdego przycisku. Wartości w określonym polu są używane do podpis tekstowy. Ustaw <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości powiązania <xref:System.Web.UI.WebControls.ButtonColumn> do pola w źródle danych.  
  
 Można formatować podpisów, które są wyświetlane w przyciski, ustawiając <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości z ciągiem formatowania.  
  
 Przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> zgłasza <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeń. Można programistycznie sterować akcję wykonywaną po kliknięciu przycisku, zapewniając program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeń.  
  
 Domyślnie strona nie jest przeprowadzana weryfikacja przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> kliknięciu. Walidowanie strony określa, czy kontrolki wejściowe, które są skojarzone z weryfikacji kontrolować na stronie, które przekazać wszystkie reguły sprawdzania poprawności, które są określone przez formant sprawdzania poprawności. Aby wykonać sprawdzanie poprawności strony, po kliknięciu przycisku, ustaw <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn> klasy w <xref:System.Web.UI.WebControls.DataGrid> tworzenie **Dodaj** przycisków.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A> konstruktora, aby utworzyć i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.ButtonColumn> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.ButtonColumn> klasy i dodać go do <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> kolekcji.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ przycisku, aby wyświetlić <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości. Wartość domyślna to <see langword="LinkButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> właściwości w celu określenia czy przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu są wyświetlane jako łącza i przyciski. Poniższa tabela zawiera listę możliwych ustawień.  
  
|Typ przycisku|Monitor|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|Łącze.|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|Kontrolka przycisku.|  
  
 Przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> zgłasza <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeń. Można programistycznie sterować akcję wykonywaną po kliknięciu przycisku, zapewniając program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeń.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje jak używać <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> właściwości, aby określić, że przyciski w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu są wyświetlane jako przyciski.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Typ określona kolumna nie jest jednym z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sprawdzanie poprawności jest wykonywane, gdy przycisk w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli weryfikacja jest przeprowadzana przycisku w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> jest kliknięto; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie strona nie jest przeprowadzana weryfikacja przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu. Walidowanie strony określa, czy kontrolki wejściowe, które są skojarzone z weryfikacji kontrolować na stronie, które przekazać wszystkie reguły sprawdzania poprawności, które są określone przez formant sprawdzania poprawności. Aby wykonać sprawdzanie poprawności strony przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> po kliknięciu ustaw <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość `true`.  
  
 Gdy wartość <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość jest `true`, można również użyć <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwość, aby określić nazwę grupy sprawdzania poprawności, dla których <xref:System.Web.UI.WebControls.ButtonColumn> powoduje, że sprawdzania poprawności.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje polecenie do wykonania, gdy przycisk w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>Ciąg, który reprezentuje polecenie do wykonania, gdy przycisk w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> kliknięciu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> właściwości, aby skojarzyć nazwę polecenia, takie jak `Add` lub `Remove`, za pomocą przycisku. Możesz ustawić <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> właściwość dowolny ciąg, który określa akcję do wykonania, gdy przycisk w <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> obiektu. Następnie możesz określić programowo nazwa polecenia w procedurze obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeń i wykonać właściwe działania.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> właściwość, aby skojarzyć nazwę polecenia z przyciskiem. Następnie nazwę polecenia kliknięto przycisk, jest określana programowo w program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> odbywa się zdarzenie i odpowiednie działania.  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych można powiązać <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>Nazwa pola, które można powiązać <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości w celu określenia nazwy pola ze źródła danych, które można powiązać <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwość przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu.  
  
 Powiązanie kolumny z polem zamiast bezpośrednio ustawienie <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> Właściwość pozwala wyświetlać różne podpisy dla przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> przy użyciu wartości w określonym polu.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości powiązania <xref:System.Web.UI.WebControls.ButtonColumn> obiektu do pola w źródle danych.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa format wyświetlania podpisu w każdy przycisk.</summary>
        <value>Ciąg, który określa format wyświetlania podpisu w każdy przycisk. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> właściwość, aby podać niestandardowy format wyświetlania dla podpisu przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu.  
  
 Ciąg formatu danych składa się z dwóch części, oddzielone dwukropkiem w formie `{A:Bxx}`. Na przykład ciąg formatowania `{0:F2}` formatów komórek do wyświetlenia stałego punktu liczb z dwóch miejsc po przecinku.  
  
> [!NOTE]
>  Cały ciąg muszą być ujęte w nawiasy klamrowe, aby wskazać, że ciąg formatu i nie literału ciągu. Dowolny tekst poza nawiasów klamrowych jest wyświetlana jako literał tekstowy.  
  
 Wartość przed dwukropkiem (`A` w przykładzie ogólne) określa indeks parametru liczony od zera liście parametrów.  
  
> [!NOTE]
>  Tę wartość można ustawić tylko na 0, ponieważ istnieje tylko jedna wartość w każdej komórce.  
  
 Znak po dwukropku (`B` w przykładzie ogólne) określa format wyświetlania wartości w. W poniższej tabeli wymieniono typowe formaty.  
  
|Format znak|Wyświetla wartości liczbowe w|  
|----------------------|--------------------------------|  
|`C`|Format waluty.|  
|`D`|Format dziesiętny.|  
|`E`|Notacja naukowa (wykładniczej).|  
|`F`|Stałym formacie.|  
|`G`|Ogólny format.|  
|`N`|Format liczb.|  
|`X`|Formacie szesnastkowym.|  
  
> [!NOTE]
>  Format znak nie jest uwzględniana wielkość liter, z wyjątkiem `X`, powoduje wyświetlenie w przypadku określonych znaków szesnastkowych.  
  
 Wartość po znaku formatu (`xx` w przykładzie ogólne) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 Aby uzyskać więcej informacji na temat formatowania ciągów, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> właściwość, aby wyświetlić napis każdego przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> obiekt w formacie waluty.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Typy formatowania na platformie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Wartość do sformatowania.</param>
        <summary>Konwertuje określoną wartość do formatu, który jest wskazywany przez <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> właściwości.</summary>
        <returns>
          <paramref name="dataTextValue" /> Konwertowana na format wskazywanym przez <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> metodę, aby przekonwertować określonej wartości do formatu, który jest wskazywany przez <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> właściwości.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> Metoda zwraca ciąg równoważna wartości, jeśli <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> nie ustawiono właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu do stanu początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> metodę, aby zresetować <xref:System.Web.UI.WebControls.ButtonColumn> obiektu do stanu początkowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.TableCell" /> reprezentujący komórkę do zresetowania.</param>
        <param name="columnIndex">Numer kolumny, w którym znajduje się komórki.</param>
        <param name="itemType">Jedną z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości.</param>
        <summary>Resetuje komórkę w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu do stanu początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A> Metoda powoduje zresetowanie określona komórka w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu do stanu początkowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podpis, który jest wyświetlany w przycisków <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>Podpis wyświetlany w przycisków <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwości do określania lub ustalania podpis, który jest wyświetlany w przycisków <xref:System.Web.UI.WebControls.ButtonColumn> obiektu.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwość, wszystkie przyciski w <xref:System.Web.UI.WebControls.ButtonColumn> udostępnić ten sam podpis.  
  
 Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonColumn> do pola w źródle danych. Umożliwia to wyświetlanie różnych podpisów dla przycisków w kolumnie, używając wartości w określonym polu. Ustaw <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości powiązania <xref:System.Web.UI.WebControls.ButtonColumn> do pola w źródle danych.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisywać automatycznie plik zasobów za pomocą narzędzia projektanta. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwości w celu określenia podpis dla przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> obiektu.  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupy formantów sprawdzania poprawności, dla którego <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze.</summary>
        <value>Określa grupy sprawdzania poprawności, dla którego <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdzanie poprawności grupy umożliwiają przypisywanie sprawdzania poprawności formantów na stronie do określonej kategorii. Każda grupa sprawdzania poprawności można zweryfikować niezależnie od innych grup sprawdzania poprawności na stronie. Użyj <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwość, aby określić nazwę grupy sprawdzania poprawności, dla których <xref:System.Web.UI.WebControls.ButtonColumn> obiektu powoduje sprawdzania poprawności, gdy wysyła on żądanie POST na serwerze.  
  
 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Właściwość ma wpływ tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość jest ustawiona na `true`. Po określeniu wartości <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwości, formanty sprawdzania poprawności, które należą do określonej grupy są weryfikowane podczas <xref:System.Web.UI.WebControls.ButtonColumn> wpisów z powrotem do serwera. Jeśli nie określisz wartości <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwości i <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość jest ustawiona na `true`, wszystkie formanty sprawdzania poprawności na stronie, które nie są przypisane do grupy sprawdzania poprawności są weryfikowane podczas <xref:System.Web.UI.WebControls.ButtonColumn> wpisów z powrotem do serwera.  
  
 Wartość tej właściwości jest przechowywana w widoku stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>