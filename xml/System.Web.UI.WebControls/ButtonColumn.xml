<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc615c478e8e1657804f9f8b7125f17df503d12f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69393754" /></Metadata><TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Typ kolumny dla <see cref="T:System.Web.UI.WebControls.DataGrid" /> kontrolki zawierającej przycisk zdefiniowany przez użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj klasy w kontrolce, aby utworzyć przycisk, który odpowiada każdemu wierszowi w <xref:System.Web.UI.WebControls.DataGrid> kontrolce. <xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.ButtonColumn> Określ podpis wyświetlany na przyciskach przez ustawienie <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwości. Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwość, wszystkie przyciski <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie mają taki sam podpis. Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonColumn> przyciski z polem w źródle danych. Pozwala to wyświetlić różne podpisy dla każdego przycisku. Wartości w określonym polu są używane dla podpisu tekstu. Ustaw właściwość w celu powiązania do pola w źródle danych. <xref:System.Web.UI.WebControls.ButtonColumn> <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>  
  
 Można sformatować podpisy wyświetlane na przyciskach przez ustawienie <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> właściwości na ciąg formatowania.  
  
 Kliknięcie przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeniu wywołuje zdarzenie. Można programowo sterować akcją wykonywaną po kliknięciu przycisku przez udostępnienie obsługi zdarzenia dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzenia.  
  
 Domyślnie Walidacja strony nie jest wykonywana po kliknięciu przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> elemencie. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji, które są określone przez kontrolkę walidacji. Aby przeprowadzić walidację strony po kliknięciu przycisku, ustaw <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwość na. `true`  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania <xref:System.Web.UI.WebControls.ButtonColumn> klasy <xref:System.Web.UI.WebControls.DataGrid> w kontrolce do tworzenia przycisków **dodawania** .  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.ButtonColumn> klasy. <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.ButtonColumn> klasy i dodać je <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> do kolekcji.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ przycisku, który ma być wyświetlany w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekcie.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości. Wartość domyślna to <see langword="LinkButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> , aby określić, czy przyciski <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie są wyświetlane jako przyciski konsolidacji lub wypychania. Poniższa tabela zawiera listę możliwych ustawień.  
  
|Typ przycisku|Monitor|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|Link.|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|Kontrolka przycisku.|  
  
 Kliknięcie przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzeniu wywołuje zdarzenie. Można programowo sterować akcją wykonywaną po kliknięciu przycisku przez udostępnienie obsługi zdarzenia dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzenia.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> właściwości, aby określić, że przyciski <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie są wyświetlane jako przyciski wypychania.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony typ kolumny nie jest jedną z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekcie.</summary>
        <value><see langword="true" />Jeśli walidacja jest wykonywana po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> elemencie, <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Walidacja strony nie jest wykonywana po kliknięciu przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> obiekcie. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji, które są określone przez kontrolkę walidacji. Aby przeprowadzić walidację strony po kliknięciu przycisku w <xref:System.Web.UI.WebControls.ButtonColumn> elemencie, należy <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> ustawić właściwość na `true`.  
  
 Gdy wartość <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwości jest `true`, można również użyć <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwości, aby określić nazwę grupy walidacji, dla której ma <xref:System.Web.UI.WebControls.ButtonColumn> być sprawdzana Walidacja.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje polecenie do wykonania, gdy zostanie kliknięty przycisk <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> w obiekcie.</summary>
        <value>Ciąg, który reprezentuje polecenie, które ma zostać wykonane po kliknięciu przycisku <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> w elemencie. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby skojarzyć nazwę polecenia, taką jak `Add` lub `Remove`, za pomocą przycisku. <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> Można ustawić <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> właściwość na dowolny ciąg, który identyfikuje akcję do wykonania po kliknięciu przycisku <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> w obiekcie. Następnie można określić programowo nazwę polecenia w programie obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzenia i wykonać odpowiednie działania.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> jak używać właściwości do kojarzenia nazwy polecenia z przyciskiem. Następnie nazwa polecenia klikniętego przycisku jest określana programowo w programie obsługi zdarzeń dla <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> zdarzenia i jest wykonywana odpowiednia akcja.  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, które ma zostać powiązane <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> z obiektem.</summary>
        <value>Nazwa pola do powiązania <see cref="T:System.Web.UI.WebControls.ButtonColumn" />z. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić nazwę pola ze źródła danych do powiązania <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> z właściwością przycisków w <xref:System.Web.UI.WebControls.ButtonColumn> obiekcie. <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>  
  
 Powiązanie kolumny z polem, a nie bezpośrednio ustawieniem właściwości <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> , pozwala wyświetlić różne podpisy przycisków w tabeli, <xref:System.Web.UI.WebControls.ButtonColumn> używając wartości w określonym polu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać właściwości, <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> aby <xref:System.Web.UI.WebControls.ButtonColumn> powiązać obiekt z polem w źródle danych.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg określający format wyświetlania podpisu w każdym przycisku.</summary>
        <value>Ciąg określający format wyświetlania napisu w każdym przycisku. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> , aby podać niestandardowy format wyświetlania dla podpisu przycisków <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie.  
  
 Ciąg formatu danych składa się z dwóch części, rozdzielonych dwukropkiem w postaci `{A:Bxx}`. Na przykład ciąg `{0:F2}` formatowania formatuje komórkę, aby wyświetlić stałą liczbę punktów z dwoma miejscami dziesiętnymi.  
  
> [!NOTE]
>  Cały ciąg musi być ujęty w nawiasy klamrowe, aby wskazać, że jest ciągiem formatu, a nie ciągiem literału. Dowolny tekst spoza nawiasów klamrowych jest wyświetlany jako tekst w postaci literału.  
  
 Wartość przed dwukropkiem (`A` w ogólnym przykładzie) Określa indeks parametru w liście parametrów na podstawie zera.  
  
> [!NOTE]
>  Tę wartość można ustawić tylko na 0, ponieważ w każdej komórce istnieje tylko jedna wartość.  
  
 Znak po dwukropku (`B` w ogólnym przykładzie) określa format, w którym ma zostać wyświetlona wartość. W poniższej tabeli wymieniono typowe formaty.  
  
|Formatowanie znaku|Wyświetla wartości liczbowe w|  
|----------------------|--------------------------------|  
|`C`|Format waluty.|  
|`D`|Format dziesiętny.|  
|`E`|Format naukowy (wykładniczy).|  
|`F`|Stały format.|  
|`G`|Format ogólny.|  
|`N`|Format liczby.|  
|`X`|Format szesnastkowy.|  
  
> [!NOTE]
>  W znaku formatowania nie jest rozróżniana wielkość liter, `X`z wyjątkiem, który wyświetla znaki szesnastkowe w określonym przypadku.  
  
 Wartość po znaku formatowania (`xx` w ogólnym przykładzie) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Aby uzyskać więcej informacji na temat formatowania ciągów, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> właściwości do wyświetlania podpisu każdego przycisku <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie w formacie waluty.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Wartość do sformatowania.</param>
        <summary>Konwertuje określoną wartość na format, który jest wskazywany przez <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> właściwość.</summary>
        <returns>Przekonwertowano na format wskazany <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />przez. <paramref name="dataTextValue" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby skonwertować określoną wartość do formatu, który jest wskazywany <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> przez właściwość. <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A>  
  
> [!NOTE]
>  Metoda zwraca odpowiednik ciągu wartości, <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> Jeśli właściwość nie jest ustawiona. <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekt do stanu początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> , aby <xref:System.Web.UI.WebControls.ButtonColumn> zresetować obiekt do stanu początkowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> Reprezentuje komórkę do zresetowania.</param>
        <param name="columnIndex">Numer kolumny, w której znajduje się komórka.</param>
        <param name="itemType">Jedna z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości.</param>
        <summary>Resetuje komórkę w <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekcie do stanu początkowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda resetuje określoną komórkę <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie do stanu początkowego. <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podpis wyświetlany na przyciskach <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiektu.</summary>
        <value>Podpis wyświetlany na przyciskach <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić lub określić podpis wyświetlany na przyciskach <xref:System.Web.UI.WebControls.ButtonColumn> obiektu. <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwość, wszystkie przyciski <xref:System.Web.UI.WebControls.ButtonColumn> w udziale mają ten sam podpis.  
  
 Alternatywnie można powiązać <xref:System.Web.UI.WebControls.ButtonColumn> do pola w źródle danych. Pozwala to wyświetlić różne podpisy przycisków w kolumnie, używając wartości w określonym polu. Ustaw właściwość w celu powiązania do pola w źródle danych. <xref:System.Web.UI.WebControls.ButtonColumn> <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> właściwości, aby określić podpis przycisków <xref:System.Web.UI.WebControls.ButtonColumn> w obiekcie.  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę kontrolek walidacji, dla których <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekt powoduje sprawdzenie poprawności po zaksięgowaniu z powrotem na serwerze.</summary>
        <value>Grupa formantów walidacji, dla których <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> obiekt powoduje sprawdzenie poprawności po odesłaniu na serwer. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla <xref:System.Web.UI.WebControls.ButtonColumn> której obiekt powoduje sprawdzenie poprawności po odesłaniu na serwer.  
  
 Właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> właściwości jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Po określeniu wartości dla <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są weryfikowane <xref:System.Web.UI.WebControls.ButtonColumn> po ponownym zaksięgowaniu na serwerze. <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Jeśli nie określisz wartości właściwości <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> i właściwość jest ustawiona na `true`, wszystkie kontrolki weryfikacji na stronie, które nie są przypisane <xref:System.Web.UI.WebControls.ButtonColumn> do grupy walidacji, są weryfikowane w przypadku powrotu z powrotem do serwera.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>
