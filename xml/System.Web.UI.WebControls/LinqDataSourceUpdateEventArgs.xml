<Type Name="LinqDataSourceUpdateEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62106f7ebbe05e7cc74c85e5d0abb495bb47c3bd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39903672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e3f5d-101">Udostępnia dane dla <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3f5d-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f5d-102"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Obiekt jest przekazywany do dowolnego programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-102">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-103">Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> obiektu, aby sprawdzić te dane, przed wykonaniem operacji aktualizacji w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-103">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object to examine the data before the update operation is executed in the data source.</span></span> <span data-ttu-id="e3f5d-104">Możesz następnie sprawdzania poprawności danych, sprawdź weryfikacji wyjątki generowane przez klasę danych lub zmień wartość przed aktualizacją.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-104">You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</span></span> <span data-ttu-id="e3f5d-105">Możesz również anulować operacji aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-105">You can also cancel the update operation.</span></span>  
  
 <span data-ttu-id="e3f5d-106"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Obiekt zawiera dane, które początkowo zostały pobrane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-106">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> object contains the data that was originally retrieved from the data source.</span></span> <span data-ttu-id="e3f5d-107"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> Obiekt zawiera dane, w którym zostanie zapisany w źródle danych podczas operacji aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-107">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> object contains the data that will be saved in the data source during the update operation.</span></span>  
  
 <span data-ttu-id="e3f5d-108">Jeśli obiekt, który reprezentuje źródło danych generuje wyjątek weryfikacji przed zaktualizowaniem danych <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> właściwość zawiera wystąpienie <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> klasy.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-108">If the object that represents the data source throws a validation exception before updating the data, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="e3f5d-109">Możesz pobrać wszystkie wyjątki za pośrednictwem weryfikacji <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-109">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="e3f5d-110">Jeśli jest zgłaszany żaden wyjątek sprawdzania poprawności, <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> właściwość zawiera `null`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-110">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="e3f5d-111">Obsługa wyjątków weryfikacji i nie powinien zostać zgłoszony ponownie wyjątek, ustawić <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-111">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="e3f5d-112">Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource> magazynów kontroli oryginalne wartości ze źródła danych w widoku stanu na stronie sieci Web, z wyjątkiem tych, których <xref:System.Data.Linq.Mapping.ColumnAttribute> atrybut jest oznaczony jako `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-112">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state on the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="e3f5d-113">LINQ do SQL automatycznie sprawdza, czy integralności danych przed zaktualizowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-113">LINQ to SQL automatically checks the integrity of the data before updating the data.</span></span> <span data-ttu-id="e3f5d-114">Odbywa się to przez porównanie bieżącej wartości w źródle danych przy użyciu oryginalnych wartości, które są przechowywane w widoku stanu.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-114">It does this by comparing the current values in the data source with the original values stored in view state.</span></span> <span data-ttu-id="e3f5d-115">LINQ do SQL zgłasza wyjątek, jeśli wartości w źródle danych uległy zmianie.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-115">LINQ to SQL raises an exception if the values in the data source have changed.</span></span> <span data-ttu-id="e3f5d-116">Można przeprowadzić weryfikacji dodatkowe dane, tworząc funkcję obsługi <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-116">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f5d-117">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-117">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-118">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwości, aby określić, czy wartość w `Category` właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-118">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="e3f5d-119">Jeśli tak, `CategoryChanged` właściwości obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-119">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="e3f5d-120">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-120">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-121">Wyświetla wszystkie komunikaty o wyjątkach sprawdzania poprawności, używając <xref:System.Web.UI.WebControls.Label> kontroli.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-121">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3f5d-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-122">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="e3f5d-123">Wyjątek, który wystąpił podczas sprawdzania poprawności danych, aby zaktualizować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-123">The exception that occurred when validating the data to update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f5d-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy z określonym wyjątkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-124">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject, object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object, newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Object ^ originalObject, System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : obj * obj -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs (originalObject, newObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">
          <span data-ttu-id="e3f5d-125">Obiekt o typie określonym w <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwość, która zawiera wartości początkowe, które zostały pobrane ze źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-125">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</span>
          </span>
        </param>
        <param name="newObject">
          <span data-ttu-id="e3f5d-126">Obiekt o typie określonym w <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwość, która zawiera wartości, które zostaną zapisane w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-126">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f5d-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-127">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f5d-128">Pobiera wyjątek, który został zgłoszony, podczas gdy dane został weryfikacji przed wykonaniem operacji aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-128">Gets the exception that was thrown while the data was being validated before the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f5d-129">Wyjątek, jeśli wystąpi błąd; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-129">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f5d-130">Jeśli wyjątek sprawdzania poprawności jest wywoływane przed wykonaniem operacji aktualizacji, wyjątek jest przechowywany w <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-130">If a validation exception is raised before the update operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="e3f5d-131">W obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń, możesz pobrać wyjątku za pomocą <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-131">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f5d-132">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-133">Wyświetla wszystkie komunikaty o wyjątkach sprawdzania poprawności, używając <xref:System.Web.UI.WebControls.Label> kontroli.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f5d-134">Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy jej powinna nie zostanie wygenerowany ponownie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-134">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f5d-135">
            <see langword="true" /> Jeśli wyjątek został obsłużony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-135">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f5d-136">Można utworzyć program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia w celu zbadania wyjątki sprawdzania poprawności, które miały miejsce przed operację aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-136">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to examine validation exceptions that occurred before the update operation.</span></span> <span data-ttu-id="e3f5d-137">Jeśli możesz obsłużyć wyjątek i nie chcesz zostanie wygenerowany ponownie ustawić <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-137">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="e3f5d-138">Jeśli nie ustawisz <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwości `true`, wyjątek będzie propagowane do następnego programu obsługi zdarzeń w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-138">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f5d-139">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-139">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-140">Wyświetla wszystkie komunikaty o wyjątkach sprawdzania poprawności, używając <xref:System.Web.UI.WebControls.Label> kontroli.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-140">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f5d-141">Pobiera obiekt, który zawiera wartości, które zostaną zapisane w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-141">Gets the object that contains the values that will be saved in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f5d-142">Obiekt o typie określonym w <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwość, która zawiera dane do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-142">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f5d-143">Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń i pobieranie <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwości sprawdzania poprawności danych.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-143">Create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to validate the data.</span></span> <span data-ttu-id="e3f5d-144">Możesz również zmienić dane lub anulować operację aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-144">You can also change the data or cancel the update operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f5d-145">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-145">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-146">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwości, aby określić, czy wartość w `Category` właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-146">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="e3f5d-147">Jeśli tak, `CategoryChanged` właściwości obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-147">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f5d-148">Pobiera obiekt, który zawiera wartości, które początkowo zostały pobrane ze źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-148">Gets the object that contains the values that were originally retrieved from the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f5d-149">Obiekt o typie określonym w <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwość, która zawiera dane, które zostały pobrane ze źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f5d-149">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f5d-150">Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwość do sprawdzenia oryginalnych wartości w odniesieniu do bieżącej wartości w źródle danych i anulować operację aktualizacji lub wykonać inne działania.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-150">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</span></span>  
  
 <span data-ttu-id="e3f5d-151"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Właściwość zawiera wartości dla właściwości, które są zachowywane w widoku stanu na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-151">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property contains values for only the properties that are persisted in view state in the Web page.</span></span> <span data-ttu-id="e3f5d-152">Właściwości są utrwalane w tych okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="e3f5d-152">A property is persisted under these circumstances:</span></span>  
  
-   <span data-ttu-id="e3f5d-153">Gdy jest on wyświetlany w kontrolce powiązanych z danymi.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-153">When it is displayed in a data-bound control.</span></span>  
  
-   <span data-ttu-id="e3f5d-154">Gdy <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> właściwość <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> ma ustawioną wartość atrybutu `Always` lub `WhenChanged`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-154">When the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> property of the <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> attribute is set to `Always` or `WhenChanged`.</span></span>  
  
 <span data-ttu-id="e3f5d-155">Jeśli <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> właściwość jest ustawiona na `Never` i wartość nie jest wyświetlana w formancie powiązanych z danymi, wartość nie znajduje się na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-155">If the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> property is set to `Never` and the value is not displayed in a data-bound control, the value is not stored in the Web page.</span></span> <span data-ttu-id="e3f5d-156">W takim przypadku nie można przypisać do <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-156">In that case, it cannot be assigned to the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f5d-157">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-157">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="e3f5d-158">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwości, aby określić, czy wartość w `Category` właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-158">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="e3f5d-159">Jeśli tak, `CategoryChanged` właściwości obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="e3f5d-159">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>