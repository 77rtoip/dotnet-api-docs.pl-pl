<Type Name="LinqDataSourceUpdateEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a6f2717b1e7ae92842905169d66a0a6e848535c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414825" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c8bc3-101">Dostarcza dane dla <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bc3-102">Obiekt jest przesyłany do dowolnego programu obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Updating> dla zdarzenia. <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs></span><span class="sxs-lookup"><span data-stu-id="c8bc3-102">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-103">Można użyć <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> obiektu do sprawdzenia danych przed wykonaniem operacji aktualizacji w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-103">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object to examine the data before the update operation is executed in the data source.</span></span> <span data-ttu-id="c8bc3-104">Następnie można sprawdzić poprawność danych, sprawdzić wyjątki walidacji zgłoszone przez klasę danych lub zmienić wartość przed aktualizacją.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-104">You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</span></span> <span data-ttu-id="c8bc3-105">Możesz również anulować operację aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-105">You can also cancel the update operation.</span></span>  
  
 <span data-ttu-id="c8bc3-106"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Obiekt zawiera dane, które zostały pierwotnie pobrane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-106">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> object contains the data that was originally retrieved from the data source.</span></span> <span data-ttu-id="c8bc3-107"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> Obiekt zawiera dane, które zostaną zapisane w źródle danych podczas operacji aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-107">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> object contains the data that will be saved in the data source during the update operation.</span></span>  
  
 <span data-ttu-id="c8bc3-108">Jeśli obiekt, który reprezentuje źródło danych zgłasza wyjątek sprawdzania poprawności przed zaktualizowaniem danych, <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> Właściwość zawiera wystąpienie <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-108">If the object that represents the data source throws a validation exception before updating the data, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="c8bc3-109">Można pobrać wszystkie wyjątki walidacji za pomocą <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-109">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="c8bc3-110">Jeśli nie zostanie zgłoszony żaden wyjątek sprawdzania poprawności <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> , właściwość `null`zawiera.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-110">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="c8bc3-111">Jeśli obsługujesz wyjątki walidacji i nie chcesz, aby wyjątek był ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwość na. `true`</span><span class="sxs-lookup"><span data-stu-id="c8bc3-111">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="c8bc3-112">Domyślnie <xref:System.Web.UI.WebControls.LinqDataSource> kontrolka przechowuje oryginalne wartości ze źródła danych w widoku stan na stronie sieci Web, z wyjątkiem tych, których <xref:System.Data.Linq.Mapping.ColumnAttribute> atrybut jest oznaczony jako `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-112">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state on the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="c8bc3-113">LINQ to SQL automatycznie sprawdza integralność danych przed zaktualizowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-113">LINQ to SQL automatically checks the integrity of the data before updating the data.</span></span> <span data-ttu-id="c8bc3-114">W tym celu należy porównać bieżące wartości ze źródła danych z oryginalnymi wartościami przechowywanymi w stanie widoku.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-114">It does this by comparing the current values in the data source with the original values stored in view state.</span></span> <span data-ttu-id="c8bc3-115">LINQ to SQL zgłasza wyjątek, jeśli wartości w źródle danych zostały zmienione.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-115">LINQ to SQL raises an exception if the values in the data source have changed.</span></span> <span data-ttu-id="c8bc3-116">Aby wykonać dodatkowe sprawdzanie poprawności danych, można utworzyć procedurę obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-116">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8bc3-117">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-117">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-118">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> i właściwości, aby określić, `Category` czy wartość we właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-118">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="c8bc3-119">Jeśli tak, `CategoryChanged` właściwość obiektu <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> we właściwości jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-119">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="c8bc3-120">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-120">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-121">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-121">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="c8bc3-122">LINQ do SQL</span><span class="sxs-lookup"><span data-stu-id="c8bc3-122">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8bc3-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-123">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="c8bc3-124">Wyjątek, który wystąpił podczas walidacji danych do zaktualizowania.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-124">The exception that occurred when validating the data to update.</span></span></param>
        <summary><span data-ttu-id="c8bc3-125">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy z określonym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject, object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object, newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Object ^ originalObject, System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : obj * obj -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs (originalObject, newObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject"><span data-ttu-id="c8bc3-126">Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera początkowe wartości, które zostały pobrane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-126">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</span></span></param>
        <param name="newObject"><span data-ttu-id="c8bc3-127">Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera wartości, które zostaną zapisane w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-127">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</span></span></param>
        <summary><span data-ttu-id="c8bc3-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-128">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8bc3-129">Pobiera wyjątek zgłoszony podczas sprawdzania poprawności danych przed operacją aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-129">Gets the exception that was thrown while the data was being validated before the update operation.</span></span></summary>
        <value><span data-ttu-id="c8bc3-130">Wyjątek, jeśli wystąpił błąd; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="c8bc3-130">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bc3-131">Jeśli wyjątek walidacji jest wywoływany przed wykonaniem operacji aktualizacji, wyjątek jest przechowywany we <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-131">If a validation exception is raised before the update operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="c8bc3-132">W procedurze obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia można pobrać wyjątek <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> za pomocą właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-132">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8bc3-133">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-133">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-134">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-134">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8bc3-135">Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy nie należy go ponownie zgłaszać.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-135">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="c8bc3-136"><see langword="true" />Jeśli wyjątek został obsłużony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="c8bc3-136"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bc3-137">Można utworzyć procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia, aby sprawdzić wyjątki walidacji, które wystąpiły przed operacją aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-137">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to examine validation exceptions that occurred before the update operation.</span></span> <span data-ttu-id="c8bc3-138">Jeśli wystąpi wyjątek i nie chcesz, aby był on ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwość na. `true`</span><span class="sxs-lookup"><span data-stu-id="c8bc3-138">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c8bc3-139">Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> właściwość nie zostanie ustawiona na `true`, wyjątek zostanie rozpropagowany do następnego programu obsługi zdarzeń w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-139">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8bc3-140">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-140">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-141">Wyświetla wszystkie komunikaty o wyjątkach weryfikacji przy użyciu <xref:System.Web.UI.WebControls.Label> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-141">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8bc3-142">Pobiera obiekt, który zawiera wartości, które zostaną zapisane w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-142">Gets the object that contains the values that will be saved in the data source.</span></span></summary>
        <value><span data-ttu-id="c8bc3-143">Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera dane do zapisania.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-143">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bc3-144">Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia i <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> Pobierz właściwość, aby sprawdzić poprawność danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-144">Create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to validate the data.</span></span> <span data-ttu-id="c8bc3-145">Możesz również zmienić dane lub anulować operację aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-145">You can also change the data or cancel the update operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8bc3-146">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-146">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-147">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> i właściwości, aby określić, `Category` czy wartość we właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-147">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="c8bc3-148">Jeśli tak, `CategoryChanged` właściwość obiektu <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> we właściwości jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-148">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8bc3-149">Pobiera obiekt, który zawiera wartości, które zostały pierwotnie pobrane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-149">Gets the object that contains the values that were originally retrieved from the data source.</span></span></summary>
        <value><span data-ttu-id="c8bc3-150">Obiekt typu określonego we <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> właściwości, który zawiera dane pobrane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-150">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bc3-151">Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości, aby sprawdzić oryginalne wartości względem bieżących wartości w źródle danych i anulować operację aktualizacji lub wykonać inną akcję.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-151">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</span></span>  
  
 <span data-ttu-id="c8bc3-152"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Właściwość zawiera wartości tylko dla właściwości, które są utrwalane w stanie widoku na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-152">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property contains values for only the properties that are persisted in view state in the Web page.</span></span> <span data-ttu-id="c8bc3-153">Właściwość jest utrwalana w następujących okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="c8bc3-153">A property is persisted under these circumstances:</span></span>  
  
-   <span data-ttu-id="c8bc3-154">Gdy jest wyświetlany w kontrolce powiązanej z danymi.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-154">When it is displayed in a data-bound control.</span></span>  
  
-   <span data-ttu-id="c8bc3-155">`Always` `WhenChanged`Gdy właściwość atrybutu<xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> jest ustawiona na lub. <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c8bc3-155">When the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> property of the <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> attribute is set to `Always` or `WhenChanged`.</span></span>  
  
 <span data-ttu-id="c8bc3-156">Jeśli właściwość jest ustawiona na `Never` , a wartość nie jest wyświetlana w formancie powiązanym z danymi, wartość nie jest przechowywana na stronie sieci Web. <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A></span><span class="sxs-lookup"><span data-stu-id="c8bc3-156">If the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> property is set to `Never` and the value is not displayed in a data-bound control, the value is not stored in the Web page.</span></span> <span data-ttu-id="c8bc3-157">W takim przypadku nie można przypisać do <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-157">In that case, it cannot be assigned to the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8bc3-158">Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Updating> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-158">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8bc3-159">W przykładzie pokazano, jak porównać właściwości z <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> i właściwości, aby określić, `Category` czy wartość we właściwości została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-159">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="c8bc3-160">Jeśli tak, `CategoryChanged` właściwość obiektu <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> we właściwości jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="c8bc3-160">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
