<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5aeeab0f5b093a8d1a5e117849929a0dccac4767" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51892039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako abstrakcyjna klasa bazowa dla kontrolek weryfikacji, wykonujących wpisane porównania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasy jest dziedziczona przez formanty sprawdzania poprawności, pozwalające porównać wartości, takich jak <xref:System.Web.UI.WebControls.CompareValidator> i <xref:System.Web.UI.WebControls.RangeValidator> formantów, aby zapewnić podstawowe funkcje wspólne.  
  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwości w celu określenia danych typu, czy wartości są konwertowane na, przed którą jest porównywany.  
  
> [!NOTE]
>  Jeśli wartość kontrolki wprowadzania sprawdzania poprawności, nie można przekonwertować na określony typ danych, sprawdzanie poprawności nie powiedzie się. <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> Formantu sprawdzania poprawności jest właściwością `false`.  
  
 <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasa zawiera także kilka właściwości i metod statycznych, które są przydatne podczas przeprowadzania walidacji porównania. Można określić, czy dany ciąg można przekonwertować na określony typ danych przy użyciu <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> metody. Maksymalna rok, który może być reprezentowany przez rok dwucyfrowy znajduje się w <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> właściwości. <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Metoda umożliwia przekonwertować rok dwucyfrowy rok w postaci czterech cyfr.  
  
> [!NOTE]
>  Jeśli używasz modułu sprawdzania poprawności formantów, które wynikają z <xref:System.Web.UI.WebControls.BaseCompareValidator> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> sterowania, upewnij się, że formantem modułu sprawdzania poprawności i jest skojarzony z są na tym samym panelu. Aby uzyskać więcej informacji o korzystaniu z <xref:System.Web.UI.UpdatePanel> kontrolowanie aktualizacji stron częściowych, zobacz [Przegląd renderowanie części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Aby uzyskać więcej informacji na temat kontrolek weryfikacji zobacz <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślny dla tej kontrolki nie mogą być zgodne ze standardami ułatwień dostępu, takich jak wskazówki o priorytecie 1 interfejsów sieci Web zawartości ułatwień dostępu wskazówki wersji 1.0 (WCAG). Aby uzyskać szczegółowe informacje o obsłudze ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET oraz dostępność](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.WebControls.BaseCompareValidator> klasa jest klasą abstrakcyjną, nie można utworzyć <xref:System.Web.UI.WebControls.BaseCompareValidator> obiektu bezpośrednio. Ten konstruktor jest często nazywane przez konstruktora klasy pochodnej w celu zainicjowania właściwości zdefiniowane w <xref:System.Web.UI.WebControls.BaseCompareValidator> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na komputerze klienckim.</param>
        <summary>Dodaje atrybuty kodu HTML i stylów, które należy do renderowania kontrolki na określonym <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> Metoda jest używana do renderowania atrybutów formantu w tagu HTML dla formantu. Metoda ta zazwyczaj jest zastępowany przez deweloperów kontroli w klasach pochodnych można wstawić odpowiednich atrybutów i style do <xref:System.Web.UI.HtmlTextWriter> strumień wyjściowy dla formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> metody, pamiętaj wywołać odpowiedniej metody w klasie bazowej. W przeciwnym razie nie będzie renderowana atrybutów znajdujących się w klasie bazowej.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy określony ciąg można przekonwertować na określony typ danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">Ciąg do testowania.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</param>
        <summary>Określa, czy określony ciąg można przekonwertować na określony typ danych. Ta wersja waluty testy użycie metody przeciążonej, double i wartości daty w formacie używany przez bieżącą kulturę.</summary>
        <returns>
          <see langword="true" /> Jeśli ciąg określone dane można przekonwertować na określony typ danych; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> metodę pozwala ustalić, czy określony ciąg można przekonwertować na określony typ danych. Ta metoda jest często używana do sprawdzenia, czy jest możliwe przekonwertowanie ciągu na wybrany zgodny typ danych przed przystąpieniem do wykonywania operacji, która jest zależna od typu danych.  
  
 Ta wersja metody sprawdza wartość przy użyciu formatu używanego przez bieżącą kulturę. Aby przetestować wartości przy użyciu formatu neutralnej <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
   
  
## Examples  
 Poniższy przykład demonstruje użycie <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> metody do porównywania dwóch wartości całkowitych i określić, czy jest możliwe przekonwertowanie drugi liczbą całkowitą.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Ciąg do testowania.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości wyliczenia.</param>
        <param name="cultureInvariant">
          <see langword="true" /> Aby przetestować wartości przy użyciu formatu neutralnej; w przeciwnym razie <see langword="false" />.</param>
        <summary>Określa, czy określony ciąg można przekonwertować na określony typ danych. Ta wersja przeciążonej metody umożliwia określenie, czy wartości są testowane przy użyciu formatu neutralnej.</summary>
        <returns>
          <see langword="true" /> Jeśli ciąg określone dane można przekonwertować na określony typ danych; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> metodę pozwala ustalić, czy określony ciąg można przekonwertować na określony typ danych. Ta metoda jest często używana do sprawdzenia, czy jest możliwe przekonwertowanie ciągu na wybrany zgodny typ danych przed przystąpieniem do wykonywania operacji, która jest zależna od typu danych. Aby wskazać, że wartości powinien zostać przetestowany przy użyciu formatu niezależne od kultury, należy przekazać w `true` dla `cultureInvariant` parametru; w przeciwnym razie wartości są przetestowane za pomocą format używany przez bieżącą kulturę. Podczas testowania wartość przy użyciu formatu używanego przez bieżącą kulturę, należy rozważyć użycie <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Porównuje dwa ciągi przy użyciu określonego operatora i typu danych sprawdzania poprawności.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Wartość po lewej stronie operatora.</param>
        <param name="rightText">Wartość po prawej stronie operatora.</param>
        <param name="op">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> wartości.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</param>
        <summary>Porównuje dwa ciągi przy użyciu określonego operatora i typu danych. Ta wersja waluty porównuje użycie metody przeciążonej, double i wartości daty w formacie używany przez bieżącą kulturę.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="leftValue" /> parametr odnosi się do <paramref name="rightValue" /> parametru w sposób określony przez <paramref name="op" /> parametru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Metoda używany do sprawdzania, czy wartość `leftText` parametr odnosi się do wartości `rightText` parametru w sposób określony przez `op` parametru. `type` Parametr określa typ danych wartości, którą jest porównywany.  
  
> [!NOTE]
>  Jeśli `op` parametr ma wartość `ValidationCompareOperator.DataTypeCheck`, ta metoda sprawdza tylko wartość `leftText` parametr dla typu danych określonego przez `type` parametru. `rightText` Parametr jest ignorowany.  
  
 Ta wersja metody porównuje wartości przy użyciu format używany przez bieżącą kulturę. Aby porównać wartości, używając formatu niezależne od kultury, należy użyć <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Wartość po lewej stronie operatora.</param>
        <param name="cultureInvariantLeftText">
          <see langword="true" /> można przekonwertować wartości po lewej stronie na formacie kultury neutralnej. w przeciwnym razie <see langword="false" />.</param>
        <param name="rightText">Wartość po prawej stronie operatora.</param>
        <param name="cultureInvariantRightText">
          <see langword="true" /> można przekonwertować wartości po prawej stronie na formacie kultury neutralnej. w przeciwnym razie <see langword="false" />.</param>
        <param name="op">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> wartości.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</param>
        <summary>Porównuje dwa ciągi przy użyciu określonego operatora i typu danych sprawdzania poprawności. Ta wersja przeciążenie umożliwia określenie, czy wartości są porównywane, używając formatu neutralnej.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="leftValue" /> parametr odnosi się do <paramref name="rightValue" /> parametru w sposób określony przez <paramref name="op" /> parametru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Metoda używany do sprawdzania, czy wartość `leftText` parametr odnosi się do wartości `rightText` parametru w sposób określony przez `op` parametru. `type` Parametr określa typ danych wartości, którą jest porównywany.  
  
> [!NOTE]
>  Jeśli `op` parametr ma wartość `ValidationCompareOperator.DataTypeCheck`, ta metoda sprawdza tylko wartość `leftText` parametr dla typu danych określonego przez `type` parametru. `rightText` Parametr jest ignorowany.  
  
 Aby wskazać, że należy porównać wartości przy użyciu formatu niezależne od kultury, należy przekazać w `true` dla `cultureInvariantLeftText` i `cultureInvariantRightText` parametrów; w przeciwnym razie wartości są porównywane, za pomocą format używany przez bieżącą kulturę. Podczas porównywania wartości za pomocą format używany przez bieżącą kulturę, należy rozważyć użycie <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konwertuje określony tekst na obiekt określonego typu danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do przekształcenia.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</param>
        <param name="value">Po powrocie z tej metody zawiera obiekt z wynikiem konwersji. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Konwertuje określony tekst na obiekt określonego typu danych. Ta wersja waluty konwertuje użycie metody przeciążonej, double i wartości daty w formacie używany przez bieżącą kulturę.</summary>
        <returns>
          <see langword="true" /> Jeśli konwersja się powiedzie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> Metoda służy do konwertowania tekstu do obiektu określonego typu danych. Mimo że metoda zwraca `true` lub `false` wskaż, czy konwersja powiodła się, przekonwertowana wartości są przechowywane w `value` `out` parametru.  
  
> [!NOTE]
>  Jeśli konwersja nie powiedzie, `value` parametr ma wartość `null`.  
  
 Ta wersja metody konwertuje wartości za pomocą format używany przez bieżącą kulturę. Aby dokonać konwersji wartości przy użyciu formatu niezależne od kultury, należy użyć <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do przekształcenia.</param>
        <param name="type">Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</param>
        <param name="cultureInvariant">
          <see langword="true" /> Aby przekonwertować wartości na formacie kultury neutralnej. w przeciwnym razie <see langword="false" />.</param>
        <param name="value">Po powrocie z tej metody zawiera obiekt z wynikiem konwersji. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Konwertuje określony tekst na obiekt określonego typu danych. Ta wersja przeciążonej metody umożliwia określenie, czy wartości są konwertowane przy użyciu formatu kultury neutralnej.</summary>
        <returns>
          <see langword="true" /> Jeśli konwersja się powiedzie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> Metoda służy do konwertowania tekstu do obiektu określonego typu danych. Mimo że metoda zwraca `true` lub `false` wskaż, czy konwersja powiodła się, przekonwertowana wartości są przechowywane w `value` `out` parametru.  
  
> [!NOTE]
>  Jeśli konwersja nie powiedzie, `value` parametr ma wartość `null`.  
  
 Aby wskazać, że wartości powinny być konwertowane przy użyciu formatu niezależne od kultury, należy przekazać w `true` dla `cultureInvariant` parametru; w przeciwnym razie wartości są konwertowane przy użyciu format używany przez bieżącą kulturę. Podczas konwertowania wartości przy użyciu format używany przez bieżącą kulturę, należy rozważyć użycie <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> wersji tej metody przeciążone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartości są konwertowane na format niezależny od kultury, przed którą jest porównywany.</summary>
        <value>
          <see langword="true" /> Aby konwertować wartości do formatu neutralnej przed ich porównaniem; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> właściwość jest ustawiona na `true`, właściwości kontrolki, które nie są silnie typizowane są konwertowane na format niezależny od kultury, przed którą jest porównywany. Jeśli ta właściwość jest równa `false`, wartości są konwertowane na format bieżącej kultury. <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> Właściwość nie ma wpływu na wartości, które są wprowadzane przez użytkowników kontrolki na stronie sieci Web.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/e6e2bb94-a95d-44e2-b68c-cfdd1db77784">Niezależne od kultury operacje na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalną rok, który może być reprezentowany przez rok w postaci dwóch cyfr.</summary>
        <value>Maksymalna rok może być reprezentowany przez rok w postaci dwóch cyfr.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> właściwości w celu określenia maksymalnej rok, który może być reprezentowany przez dwucyfrowy rok w zakresie roku 100. Na przykład, jeśli ta właściwość zawiera wartość `2029`, może reprezentować lat 1930 do 2029 przy użyciu rok w postaci dwóch cyfr. Dwucyfrowy rok 30 interpretowany jako 1930, podczas gdy 29 jest interpretowany jako 2029. Wartość tej właściwości nie można zmienić bezpośrednio; jednak można zmienić maksymalną rok, który może być reprezentowany przez rok w postaci dwóch cyfr, ustawiając <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant sprawdzania poprawności mogą być renderowane dla nowszej wersji przeglądarki ("wyższej").</summary>
        <returns>
          <see langword="true" /> Jeśli formant sprawdzania poprawności mogą być renderowane w przeglądarce "wyższej"; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> Metoda jest używana przede wszystkim dzięki funkcji pomocnika, która <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> właściwości w celu określenia, czy przeglądarki klienta obsługuje renderowanie "wyższej" (renderowanie w nowszej wersji przeglądarki). <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasa zastępuje tę metodę, aby zwrócić `false` Jeśli bieżąca kultura używa innego niż kalendarz gregoriański —.  
  
> [!NOTE]
>  Ta metoda jest używana przede wszystkim deweloperom kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> metody, pamiętaj wywołać odpowiedniej metody w klasie bazowej. W przeciwnym razie będą pomijane warunków zdefiniowanych w klasie bazowej.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa kolejność, w którym dzień, miesiąc i rok są wyświetlane w wartości daty dla bieżącej kultury.</summary>
        <returns>Ciąg, który reprezentuje kolejność dzień, miesiąc i rok w wartości daty dla bieżącej kultury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dzień, miesiąc i rok w wartości daty może znajdować się w różnych zleceniach w zależności od bieżącego ustawienia kultury. <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> Metoda jest używana do określania kolejności, w jakiej są wyświetlane te wartości. W poniższej tabeli przedstawiono różne wartości, które są zwracane przez tę metodę.  
  
|Data kolejności elementów|Wartość zwracana|  
|------------------------|------------------|  
|Dzień, miesiąc, rok|"dmy"|  
|Miesiąc, dzień, rok|"mdy"|  
|Rok, miesiąc, dzień|"ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Dwucyfrowy rok.</param>
        <summary>Generuje reprezentację czterocyfrowy rok określonego dwucyfrowy rok.</summary>
        <returns>Czterocyfrowy rok reprezentacja określonego dwucyfrowy rok.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> metodę w celu wygenerowania czterocyfrowy rok reprezentację określonego dwucyfrowy rok. Reprezentacja czterocyfrowy rok, który jest zależny od wartości <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> właściwości, która zawiera maksymalną rok, który może być reprezentowany przez dwucyfrowy rok w zakresie roku 100. Na przykład jeśli <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> właściwość zawiera wartość `2029`, <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> metoda zwraca rok między 1930 i 2029. Dwucyfrowy rok 30 interpretowany jako 1930, podczas gdy 29 jest interpretowany jako 2029. Możesz zmienić maksymalną rok, który może być reprezentowany przez rok w postaci dwóch cyfr, ustawiając <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  Ponieważ ta metoda jest `static`, można go użyć bez tworzenia wystąpienia klasy kwalifikując nazwę metody wraz z nazwą klasy — na przykład `BaseCompareValidator.GetFullYear`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych, który porównywane wartości są konwertowane na przed dokonywane jest porównanie.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości wyliczenia. Wartość domyślna to <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwości w celu określenia typu danych, używane do porównania. <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Właściwość jest używana w inny sposób przez różne formanty sprawdzania poprawności porównania.  
  
> [!IMPORTANT]
>  Gdy <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.ValidationDataType.Date> i bieżącym typem kalendarz jest innych niż gregoriański, moduł sprawdzania poprawności po stronie serwera tylko. Moduł sprawdzania poprawności skryptu klienta obsługuje tylko gregoriańskiego.  
  
 Na przykład w <xref:System.Web.UI.WebControls.RangeValidator> kontrolki, wszystkie wartości są porównywane (górna granica, dolną granicę i wartości wejściowe formantu) są konwertowane na określony typ danych, zanim każde porównanie jest wykonywane. Jednak jeśli używasz <xref:System.Web.UI.WebControls.CompareValidator> i ustaw jego <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> właściwości `ValidationCompareOperator.DataTypeCheck`, tylko wartości wejściowe formantu jest konwertowany na określony typ danych.  
  
> [!NOTE]
>  Jeśli wartość kontrolki wprowadzania skojarzonego z kontrolką sprawdzania poprawności, nie można przekonwertować na określony typ danych, sprawdzanie poprawności nie powiedzie się. <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> Formantu sprawdzania poprawności jest właściwością `false`.  
  
 W poniższej tabeli wymieniono wartości, które umożliwiają <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwości.  
  
|Typ danych|Opis|  
|---------------|-----------------|  
|`String`|Określa typ danych ciągu.|  
|`Integer`|Określa typ danych 32-bitową.|  
|`Double`|Określa podwójnej precyzji numer danych typu zmiennoprzecinkowego.|  
|`Date`|Określa typ danych Data.|  
|`Currency`|Określa typ danych pieniężnych.|  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> właściwości w celu określenia typu danych, który porównywane wartości są konwertowane na przed dokonywane jest porównanie.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony typ danych nie jest jednym z <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>