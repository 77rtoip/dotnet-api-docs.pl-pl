<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71540fca903b9568b09aa47c0ad13790c2047d5e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see langword="SendMailError" /> zdarzeń formanty, takie jak <see cref="T:System.Web.UI.WebControls.ChangePassword" /> kontroli, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> kontroli i <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Obiektu zawiera komunikat o błędzie, który jest uruchamiany przez dostawcę poczty SMTP, jeśli nie można wysłać wiadomości e-mail przez <xref:System.Web.UI.WebControls.ChangePassword> kontroli, lub <xref:System.Web.UI.WebControls.CreateUserWizard> formantu. W takim przypadku <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiektu są wysyłane do <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>.  
  
 Utwórz <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> obiektu delegowanego obsługi zdarzeń. Obsługa zdarzenia umożliwia aplikacji sieci Web kontynuować wykonywanie, nawet jeśli wystąpił wyjątek. Jest to przydatne, gdy nie jest krytyczne do wysyłania wiadomości e-mail. Na przykład jeśli wyjątek występuje, gdy użytkownik pracuje w Kreatorze wieloetapowych, może być korzystne błąd, wyświetlany jest komunikat informacyjny dla użytkownika i zezwolić użytkownikowi zakończyć pracę kreatora.  
  
 Sprawdź <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> właściwość, aby ustalić przyczynę rzeczywiste wyjątku. Wyjątek Najczęstszą przyczyną jest błąd konfiguracji w [ &lt;smtp&gt; elementu (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) z pliku konfiguracji komputera. Mimo że wystąpił błąd, takie jak zwykle jest to wykryte podczas opracowywania debugowanie aplikacji, serwerów poczty mogą nieoczekiwanie zakończyć się niepowodzeniem w środowisku produkcyjnym i należy określić, czy ma cała aplikacja będzie działać w takiej sytuacji. W przeciwnym razie obsługi zdarzenia umożliwia aplikacji w taki sposób kontynuować.  
  
 Należy ustawić <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> właściwości `true` sygnalizują wyjątek został obsłużony, a w przeciwnym razie, jest zgłoszony wyjątek i będzie zawierać oryginalnej wiadomości o błędach i stosu wywołań.  
  
 Jeśli nie utworzysz programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzeń, lub w przypadku utworzenia programu obsługi zdarzeń, ale pozostaw <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> ustawioną właściwość `false`, aplikacji sieci Web zostanie przestanie działać, jeśli wystąpi błąd podczas wysyłania wiadomości e-mail i będzie ASP.NET Wyświetl komunikat o błędzie.  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzeń, zamiast tego wykonywana przez <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Jest to preferowana metoda obsługi zdarzeń w klasie pochodzącej z <xref:System.Web.UI.WebControls.ChangePassword> lub <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i obejmuje program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia o nazwie SendMailError. Przykładowy kod przyjęto założenie, że witryny sieci Web ASP.NET został skonfigurowany do członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownik został utworzony którego nazwa i hasło są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie prostego uwierzytelniania formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o sposobie konfigurowania serwera SMTP, zobacz [NIB: porady: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Na potrzeby tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykładzie jest tworzony do testowania z powodu błędu do wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowany lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Do użytkownika zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zapoznaj się z przykładem kod poniżej, aby utworzyć źródło określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródło zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiektu ma ustawioną wartość `true` wskazująca, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Skorzystaj z następującego przykładu kodu, jeśli konieczne jest dodanie programowo źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w pierwszym przykładzie kodu działała prawidłowo. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> w klasie pochodnej, należy wywołać <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> metody klasy podstawowej, aby włączyć delegatów zarejestrowanych do odbierania zdarzeń.</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Exception" /> Obiekt zawierający wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca wyjątek zgłoszony przez usługę poczty SMTP, gdy nie można wysłać wiadomości e-mail.</summary>
        <value>
          <see cref="T:System.Exception" /> Obiekt, który zawiera wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> Właściwość zawiera wyjątek, który jest generowany przez dostawcę poczty SMTP, gdy nie można wysłać wiadomości e-mail przez <xref:System.Web.UI.WebControls.ChangePassword> kontroli lub <xref:System.Web.UI.WebControls.CreateUserWizard>. Najczęstszą przyczyną tego wyjątku jest błąd konfiguracji w [ &lt;smtp&gt; elementu (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) pliku konfiguracji komputera, który tworzy następujący komunikat o wyjątku: `The transport failed to connect to the server.`  
  
 Nie są zgłaszane wyjątki, jeśli występuje błąd w wiadomości e-mail, gdy osadzanie plików przy użyciu <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>. Zamiast tego osadzonego pliku uszkodzone podczas wyświetlania wiadomości e-mail.  
  
 Należy ustawić <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> przekazany jako obiekt `e` parametr <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>, do `true` sygnalizują wyjątek został obsłużony, a w przeciwnym razie, jest zgłoszony wyjątek i zawiera oryginalnej wiadomości o błędach i stosu wywołań.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i obejmuje program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia o nazwie `SendMailError`. Przykładowy kod przyjęto założenie, że witryny sieci Web ASP.NET został skonfigurowany do członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownik został utworzony którego nazwa i hasło są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie prostego uwierzytelniania formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o sposobie konfigurowania serwera SMTP, zobacz [NIB: porady: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Na potrzeby tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykładzie jest tworzony do testowania z powodu błędu do wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowany lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Do użytkownika zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zapoznaj się z przykładem kod poniżej, aby utworzyć źródło określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródło zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiektu ma ustawioną wartość `true` wskazująca, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Skorzystaj z następującego przykładu kodu, jeśli konieczne jest dodanie programowo źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w pierwszym przykładzie kodu działała prawidłowo. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy wyjątek SMTP który jest zawarty w <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> właściwość został obsłużony.</summary>
        <value>Jeśli <see langword="true" />, wyjątek jest używane i obsługiwane przez <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" /> delegowanie. Jeśli <see langword="false" />, zgłoszony wyjątek, łącznie z oryginalnej wiadomości o błędach i stosu wywołań.  
  
 Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość wskazuje, czy <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> został obsłużony. Wyjątek jest wywoływane przez dostawcę poczty SMTP, gdy nie można wysłać wiadomości e-mail przez <xref:System.Web.UI.WebControls.ChangePassword> kontroli lub <xref:System.Web.UI.WebControls.CreateUserWizard>. Wyjątek Najczęstszą przyczyną jest błąd konfiguracji w [ &lt;smtp&gt; elementu (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) z pliku konfiguracji komputera. Mimo że wystąpił błąd, takie jak zwykle jest to wykryte podczas opracowywania debugowanie aplikacji, serwerów poczty mogą nieoczekiwanie zakończyć się niepowodzeniem w środowisku produkcyjnym i należy określić, czy ma cała aplikacja będzie działać w takiej sytuacji. W przeciwnym razie obsługi zdarzenia umożliwia aplikacji w taki sposób kontynuować.  
  
 Jeśli nie utworzysz programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzeń, lub w przypadku utworzenia programu obsługi zdarzeń, ale pozostaw <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> ustawioną właściwość `false`, aplikacji sieci Web zostanie przestanie działać, jeśli wystąpi błąd podczas wysyłania wiadomości e-mail i będzie ASP.NET Wyświetl komunikat o błędzie. Obsługa zdarzenia umożliwia aplikacji sieci Web kontynuować wykonywanie, nawet jeśli wystąpił wyjątek. Jest to przydatne, gdy nie jest krytyczne do wysyłania wiadomości e-mail. Na przykład jeśli wyjątek występuje, gdy użytkownik pracuje w Kreatorze wieloetapowych, może być korzystne błąd, wyświetlany jest komunikat informacyjny dla użytkownika i zezwolić użytkownikowi zakończyć pracę kreatora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> formant sieci Web i obejmuje program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia o nazwie `SendMailError`. Przykładowy kod przyjęto założenie, że witryny sieci Web ASP.NET został skonfigurowany do członkostwa ASP.NET i uwierzytelnianie formularzy i czy użytkownik został utworzony którego nazwa i hasło są znane do Ciebie. Aby uzyskać więcej informacji, zobacz [porady: Implementowanie prostego uwierzytelniania formularzy](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Jeśli zmiany hasła zakończy się powodzeniem, kod w `SendingMail` obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. SMTP musi już być skonfigurowane na serwerze w kolejności, w tym przykładzie kodu do pracy. Aby uzyskać informacje o sposobie konfigurowania serwera SMTP, zobacz [NIB: porady: Instalowanie i konfigurowanie serwerów wirtualnych SMTP w usługach IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Na potrzeby tego przykładu nie jest konieczne skonfigurować serwer SMTP; przykładzie jest tworzony do testowania z powodu błędu do wysyłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie jest poprawnie skonfigurowany lub inny błąd występuje, i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Do użytkownika zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows, przy założeniu, że źródło zdarzenia o nazwie MySamplesSite już istnieje. Zapoznaj się z przykładem kod poniżej, aby utworzyć źródło określonego zdarzenia. Aby uzyskać więcej informacji o tworzeniu źródło zdarzeń, zobacz [serwera obsługi zdarzeń, na stronach formularzy sieci Web programu ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Właściwość <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiektu ma ustawioną wartość `true` wskazująca, że błąd został obsłużony.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Skorzystaj z następującego przykładu kodu, jeśli konieczne jest dodanie programowo źródło zdarzenia w dzienniku aplikacji o nazwie MySamplesSite. Źródłem tego zdarzenia muszą istnieć w pierwszym przykładzie kodu działała prawidłowo. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
  </Members>
</Type>