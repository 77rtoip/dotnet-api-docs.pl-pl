<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00715f412bbf912e6bff44346d1360d65931b831" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389471" /></Metadata><TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dane dla <see langword="SendMailError" /> zdarzenia formantów, takich <see cref="T:System.Web.UI.WebControls.ChangePassword" /> jak kontrolka, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> formant i <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> formant.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zawiera komunikat o błędzie, który jest wywoływany przez dostawcę poczty SMTP, gdy nie można wysłać wiadomości e-mail <xref:System.Web.UI.WebControls.ChangePassword> przez formant lub <xref:System.Web.UI.WebControls.CreateUserWizard> formant. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> W takim przypadku <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> obiekt jest wysyłany <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>do.  
  
 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> Utwórz delegata, aby obsłużyć zdarzenie. Obsługa zdarzenia pozwala aplikacji sieci Web kontynuować działanie, chociaż wystąpił wyjątek. Jest to przydatne, gdy wysyłanie wiadomości e-mail nie jest krytyczne. Na przykład jeśli wystąpi wyjątek, gdy użytkownik pracuje za pomocą Kreatora wieloetapowego, może być korzystne zarejestrowanie błędu, wyświetlenie komunikatu informacyjnego dla użytkownika i zezwolenie użytkownikowi na ukończenie działania kreatora.  
  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> Sprawdź właściwość, aby określić rzeczywistą przyczynę wyjątku. Najbardziej typową przyczyną wyjątku jest błąd konfiguracji w [ &lt;elemencie SMTP&gt; (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) pliku konfiguracji komputera. Mimo że ten błąd jest zwykle odnajdowany podczas opracowywania i debugowania aplikacji, serwery poczty mogą nieoczekiwanie kończyć się niepowodzeniem w środowisku produkcyjnym i należy określić, czy cała aplikacja ma kończyć się niepowodzeniem w takiej sytuacji. W przeciwnym razie obsługa zdarzenia pozwala aplikacji na wykonanie.  
  
 Należy ustawić <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> `true` właściwość na, aby sygnalizować, że wyjątek został obsłużony; w przeciwnym razie wyjątek jest ponownie zgłaszany i będzie zawierać oryginalny stos wywołań i komunikat o błędzie.  
  
 Jeśli nie utworzysz programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia lub jeśli utworzysz obsługę zdarzeń, ale <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> opuścisz Właściwość ustawioną na `false`, aplikacja sieci Web przestanie działać, jeśli wystąpi błąd podczas wysyłania wiadomości e-mail, a ASP.NET będzie Wyświetla komunikat o błędzie.  
  
 Metoda umożliwia także klasom pochodnym obsłużenia zdarzenia, a nie <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>przez. <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Jest to preferowana technika obsługi zdarzenia w klasie, która jest pochodną <xref:System.Web.UI.WebControls.ChangePassword> lub. <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera program obsługi zdarzeń <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> dla zdarzenia o nazwie SendMailError. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> wywołać metodę klasy bazowej, aby umożliwić zarejestrowanym delegatom odbieranie zdarzenia.</para></block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Obsługa i wywoływanie zdarzeń</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Zabezpieczanie formantów logowania</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Podstawowe rozwiązania w zakresie zabezpieczeń dla aplikacji sieci Web</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SendMailErrorEventArgs : Exception -&gt; System.Web.UI.WebControls.SendMailErrorEventArgs" Usage="new System.Web.UI.WebControls.SendMailErrorEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Exception" /> Obiekt zawierający wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Obsługa i wywoływanie zdarzeń</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca wyjątek zgłoszony przez usługę poczty SMTP, gdy nie można wysłać wiadomości e-mail.</summary>
        <value><see cref="T:System.Exception" /> Obiekt, który zawiera wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera wyjątek, który jest generowany przez dostawcę poczty SMTP, gdy nie można wysłać wiadomości e-mail <xref:System.Web.UI.WebControls.ChangePassword> przez formant lub <xref:System.Web.UI.WebControls.CreateUserWizard>. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> Najbardziej typową przyczyną tego wyjątku jest błąd konfiguracji w [ &lt;elemencie SMTP&gt; (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) pliku konfiguracji komputera, który generuje następujący komunikat o wyjątku:`The transport failed to connect to the server.`  
  
 Wyjątki nie są generowane, jeśli podczas osadzania pliku za pomocą <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>programu wystąpi błąd w wiadomości e-mail. Zamiast tego osadzony plik zostanie przerwany, gdy zostanie wyświetlony komunikat poczta.  
  
 Należy ustawić <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> obiekt, który został przekazano `e` jako parametr <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>do, aby `true` sygnalizować, że wyjątek został obsłużony; w przeciwnym razie wyjątek jest ponownie zgłaszany i zawiera oryginalny stos wywołań i komunikat o błędzie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzeń o nazwie `SendMailError`. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Obsługa i wywoływanie zdarzeń</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy wyjątek SMTP, który jest zawarty we <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> właściwości, został obsłużony.</summary>
        <value>Jeśli <see langword="true" />, wyjątek jest używany i obsługiwany <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" /> przez delegata. Jeśli <see langword="false" />wyjątek jest ponownie zgłaszany, łącznie z oryginalnym stosem wywołań i komunikatem o błędzie.  
  
Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość wskazuje, <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> czy został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Wyjątek jest wywoływany przez dostawcę poczty SMTP, gdy nie można wysłać wiadomości e-mail przez <xref:System.Web.UI.WebControls.ChangePassword> formant <xref:System.Web.UI.WebControls.CreateUserWizard>lub. Najbardziej typową przyczyną wyjątku jest błąd konfiguracji w [ &lt;elemencie SMTP&gt; (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) pliku konfiguracji komputera. Mimo że ten błąd jest zwykle odnajdowany podczas opracowywania i debugowania aplikacji, serwery poczty mogą nieoczekiwanie kończyć się niepowodzeniem w środowisku produkcyjnym i należy określić, czy cała aplikacja ma kończyć się niepowodzeniem w takiej sytuacji. W przeciwnym razie obsługa zdarzenia pozwala aplikacji na wykonanie.  
  
 Jeśli nie utworzysz programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzenia lub jeśli utworzysz obsługę zdarzeń, ale <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> opuścisz Właściwość ustawioną na `false`, aplikacja sieci Web przestanie działać, jeśli wystąpi błąd podczas wysyłania wiadomości e-mail, a ASP.NET będzie Wyświetla komunikat o błędzie. Obsługa zdarzenia pozwala aplikacji sieci Web kontynuować działanie, chociaż wystąpił wyjątek. Jest to przydatne, gdy wysyłanie wiadomości e-mail nie jest krytyczne. Na przykład jeśli wystąpi wyjątek, gdy użytkownik pracuje za pomocą Kreatora wieloetapowego, może być korzystne zarejestrowanie błędu, wyświetlenie komunikatu informacyjnego dla użytkownika i zezwolenie użytkownikowi na ukończenie działania kreatora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje stronę ASP.NET, która używa <xref:System.Web.UI.WebControls.ChangePassword> kontrolki sieci Web i zawiera procedurę obsługi <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> zdarzeń o nazwie `SendMailError`. W przykładzie kodu założono, że witryna sieci Web ASP.NET została skonfigurowana tak, aby korzystała z członkostwa ASP.NET i uwierzytelniania formularzy oraz że utworzono użytkownika, którego nazwa i hasło są znane. Aby uzyskać więcej informacji, zobacz [jak: Zaimplementuj proste uwierzytelnianie](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)formularzy.  
  
 Jeśli zmiana hasła zakończyła się pomyślnie, kod w `SendingMail` programie obsługi zdarzeń próbuje wysłać wiadomość e-mail do użytkownika, aby potwierdzić zmianę. Protokół SMTP musi być już skonfigurowany na serwerze, aby ten przykład kodu działał. Informacje o sposobie konfigurowania serwera SMTP można znaleźć w temacie [NIB: Instrukcje: Zainstaluj i skonfiguruj serwery wirtualne SMTP w usługach IIS](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)6,0. Na potrzeby tego przykładu nie jest konieczne konfigurowanie serwera SMTP; przykład został skonstruowany w celu przetestowania pod kątem niepomyślnego wysłania wiadomości e-mail.  
  
 Jeśli serwer poczty nie został prawidłowo skonfigurowany lub Wystąpił inny błąd i nie można wysłać wiadomości e-mail, `SendMailError` funkcja jest wywoływana. Zostanie wyświetlony komunikat. Ponadto zdarzenie jest rejestrowane w dzienniku zdarzeń aplikacji systemu Windows z założeniem, że źródło zdarzeń o nazwie MySamplesSite już istnieje. Zapoznaj się z poniższym przykładem kodu, aby utworzyć określone źródło zdarzenia. Aby uzyskać więcej informacji na temat tworzenia źródła zdarzeń, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Właściwość obiektu jest ustawiona na `true` tak, aby wskazywał, że błąd został obsłużony. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Użyj poniższego przykładu kodu, jeśli musisz programowo dodać Źródło zdarzenia o nazwie MySamplesSite do dziennika aplikacji. To źródło zdarzenia musi istnieć, aby pierwszy przykład kodu działał poprawnie. Poniższy przykład kodu wymaga uprawnień administratora.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Obsługa i wywoływanie zdarzeń</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Karta aplikacji narzędzia administrowania witryną sieci Web</related>
      </Docs>
    </Member>
  </Members>
</Type>
