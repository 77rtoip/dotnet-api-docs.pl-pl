<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b421179ea0a6d464f28758a67961c9af9c8e3919" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580065" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia mechanizm korzystające z kontrolki źródła danych do powiązania zmiennych aplikacji tożsamości użytkowników i opcji i innych danych. Służy jako klasa podstawowa dla wszystkich typów parametrów programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> Klasa reprezentuje parametr w sparametryzowanego zapytania SQL wyrażenie filtrowania lub wywołanie metody obiektu firm kontroli źródła danych w programie ASP.NET używa wybierz, filtrowanie, lub modyfikować danych. <xref:System.Web.UI.WebControls.Parameter> obiekty są zawarte w <xref:System.Web.UI.WebControls.ParameterCollection> obiektu. <xref:System.Web.UI.WebControls.Parameter> obiekty są oceniane w czasie wykonywania, aby powiązać wartości zmiennych, które reprezentują dowolnej metody jest używany przez formant źródła danych na interakcję z danymi.  
  
 Użyj klasy, które pochodzą z <xref:System.Web.UI.WebControls.Parameter> ze źródłem danych i formanty powiązane z danymi do tworzenia aplikacji opartych na sieci Web danych. Te klasy parametru są używane przez kontrolki źródła danych do powiązania określonych rodzajów wartości znajdujące się w aplikacji sieci Web do symboli zastępczych w ciągi zapytań SQL, parametry metody obiektu biznesowe i inne. Poniższa tabela zawiera listę typów parametrów, które znajdują się w programie ASP.NET.  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Wiąże żadnej publicznej właściwości kontrolki serwera sieci Web.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Wiąże pola formularza.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Wiąże pole stanu sesji.|  
|<xref:System.Web.UI.WebControls.RouteParameter>|Wiąże parametr adresu URL trasy.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Wiąże pole pliku cookie.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Wiąże parametr ciągu zapytania.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Wiąże pole profilu.|  
  
 Rozszerzanie podstawowym <xref:System.Web.UI.WebControls.Parameter> klasy należy zaimplementować własnych typów parametru niestandardowego.  
  
 <xref:System.Web.UI.WebControls.Parameter> obiekty są bardzo proste: mają <xref:System.Web.UI.WebControls.Parameter.Name%2A> i <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwości, może być reprezentowany deklaratywnie i śledzić stan użytek wielu żądań HTTP. Obsługuje wszystkie parametry <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwości w przypadkach, gdy parametr jest powiązany z wartością, ale daje w wyniku wartość `null` w czasie wykonywania.  
  
 Korzystając z kolekcją <xref:System.Web.UI.WebControls.Parameter> obiekty z formantem źródła danych może być istotne, ich kolejność, w kolekcji. Aby uzyskać więcej informacji dotyczących korzystania z parametrów, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) i [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie wybranej wartości <xref:System.Web.UI.WebControls.DropDownList> kontroli sz`here` klauzuli zapytania SQL. W przykładzie użyto <xref:System.Web.UI.WebControls.ControlParameter> klasy, która jest pochodną <xref:System.Web.UI.WebControls.ControlParameter> klasy.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Element definiuje zapytania o parametr o nazwie "@Title" gdzie wartość `DropDownList1` powinien pojawiać się. <xref:System.Web.UI.WebControls.ControlParameter> Element określa, że "@Title" — symbol zastępczy zostanie zastąpiony przez wartość <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> właściwość `DropDownList1` formantu. <xref:System.Web.UI.WebControls.ControlParameter> Element zostanie dodany do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Kolekcja <xref:System.Web.UI.WebControls.SqlDataSource> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 W poniższym przykładzie przypomina poprzedni, ale używa zamiast znaczników kodu. Podczas ładowania strony po raz pierwszy, <xref:System.Web.UI.WebControls.DropDownList> formant nie ma wybranych wartości i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość <xref:System.Web.UI.WebControls.Parameter> obiekt jest używany.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 Poniższy kod przedstawia klasę kodu strony w poprzednim przykładzie.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 Poniższy przykład kodu pokazuje, jak rozszerzyć <xref:System.Web.UI.WebControls.Parameter> klasę, aby utworzyć nowy typ parametru używanego przez kontrolki źródła danych i innych kontrolek w scenariuszach powiązania danych. Można użyć formantu źródła danych `StaticParameter` zadeklarowany parametr do powiązania wartości wszystkich obiektów, zazwyczaj w ciągu na strony formularzy sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie domyślnego <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.Parameter.%23ctor> konstruktor został zainicjowany z wartościami domyślnymi dla wszystkich jego właściwości. <xref:System.Web.UI.WebControls.Parameter.Name%2A> Właściwość jest inicjowana na <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwość jest inicjowana na <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana na `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> przy użyciu określonej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> jest zainicjowany konstruktor z określonym `name` i wartości domyślne dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.Type%2A> Właściwość jest inicjowana na <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana na `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> konstruktora z klasy, która rozszerza <xref:System.Web.UI.WebControls.Parameter> klasy zainicjować <xref:System.Web.UI.WebControls.Parameter.Name%2A> Właściwość wystąpienia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">A <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia, z którego zainicjowano bieżącego wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy przy użyciu wartości oryginalnej, określonego wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> Konstruktor jest `protected` Konstruktor kopiujący używany do klonowania <xref:System.Web.UI.WebControls.Parameter> wystąpienia. Wartości <xref:System.Web.UI.WebControls.Parameter.Name%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, i <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> właściwości są przenoszone do nowego wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> konstruktora z klasy, która rozszerza <xref:System.Web.UI.WebControls.Parameter> klasy do zaimplementowania prawidłowy obiekt w klonowania zachowanie dla klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> przy użyciu określonego typu dla nazwy bazy danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> jest zainicjowany konstruktor z określonym `name` i `dbType` parametry i z wartościami domyślnymi dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana na `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">A <see cref="T:System.TypeCode" /> , który opisuje typ parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> przy użyciu określonej nazwy i typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> jest zainicjowany konstruktor z określonym `name` i `type` parametry i wartości domyślne dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>i <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana na `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> konstruktora z klasy, która rozszerza <xref:System.Web.UI.WebControls.Parameter> klasy zainicjować <xref:System.Web.UI.WebControls.Parameter.Name%2A> i <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwości wystąpienia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</param>
        <param name="dbType">Typ bazy danych <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</param>
        <param name="defaultValue">Wartość domyślna dla <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia, jeśli <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązana wartość, która nie jest jeszcze kiedy zainicjowana <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> jest wywoływana.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> przy użyciu określonej nazwy typu określonej bazy danych i wartość określona dla jego <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość <xref:System.Web.UI.WebControls.Parameter> wystąpienia jest ustawiana na <xref:System.Data.ParameterDirection.Input>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">A <see cref="T:System.TypeCode" /> , który opisuje typ parametru.</param>
        <param name="defaultValue">Ciąg, który służy jako wartości domyślnej dla parametru, jeśli <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązana wartość, która nie jest jeszcze kiedy zainicjowana <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> jest wywoływana.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> przy użyciu określonej nazwy określonego typu i określony ciąg dla jego <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> utworzone za pomocą obiektu <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> jest zainicjowany konstruktor z określonym `name` parametru i `type` parametru i przypisaniu <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> wartości właściwości. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość jest inicjowana na <xref:System.Data.ParameterDirection.Input>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> konstruktora, aby dodać obiekty parametr aktualizacji do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Kolekcja <xref:System.Web.UI.WebControls.AccessDataSource> kontroli przed wywołaniem <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> — metoda.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Parameter" /> jest identyczna z bieżącej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> Wywołania metody <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> Konstruktor kopiujący zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.Parameter> klasy z wartościami bieżącego wystąpienia.  
  
 Po rozszerzeniu <xref:System.Web.UI.WebControls.Parameter> klasy, można zastąpić <xref:System.Web.UI.WebControls.Parameter.Clone%2A> metodę w celu uwzględnienia tutaj stan, który powinien zostać skopiowany do nowego wystąpienia klasy pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> konstruktora z klasy, która rozszerza <xref:System.Web.UI.WebControls.Parameter> klasy do zaimplementowania prawidłowy obiekt w klonowania zachowanie dla klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">A <see cref="T:System.Data.DbType" /> wartość do przekonwertowania na równoważne <see cref="T:System.TypeCode" /> wartość.</param>
        <summary>Konwertuje <see cref="T:System.Data.DbType" /> wartość równoważną <see cref="T:System.TypeCode" /> wartość.</summary>
        <returns>A <see cref="T:System.TypeCode" /> wartość, która jest odpowiednikiem określonego <see cref="T:System.Data.DbType" /> wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca <xref:System.TypeCode.Object> wystąpienia, jeśli odpowiednika <xref:System.Data.DbType> wartość zostanie znaleziona. Typy bazy danych bez równoważne typy <xref:System.Data.DbType.Guid>, <xref:System.Data.DbType.Binary>, i <xref:System.Data.DbType.DateTimeOffset>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy wartość która <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt jest powiązany do powinny być konwertowane na <see langword="null" /> przypadku <see cref="F:System.String.Empty" />.</summary>
        <value>
          <see langword="true" /> Jeśli wartość która <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązany z powinny być konwertowane na <see langword="null" /> gdy jest <see cref="F:System.String.Empty" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> właściwość parametru została zmieniona, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">
          <see cref="T:System.TypeCode" /> Wartość do przekonwertowania na równoważne <see cref="T:System.Data.DbType" /> wartość.</param>
        <summary>Konwertuje <see cref="T:System.TypeCode" /> wartość równoważną <see cref="T:System.Data.DbType" /> wartość.</summary>
        <returns>A <see cref="T:System.Data.DbType" /> wartość, która jest odpowiednikiem określonego <see cref="T:System.TypeCode" /> wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca <xref:System.Data.DbType.Object> wystąpienia przypadku nieznalezienia odpowiednika. Typy bez równoważne bazy danych należą <xref:System.TypeCode.DBNull> i <xref:System.TypeCode.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ bazy danych parametru.</summary>
        <value>Typ bazy danych <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia. Wartość domyślna to <see cref="F:System.Data.DbType.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ bazy danych może służyć do tworzenia jednoznacznie parametrów, dzięki czemu są poprawnie konwertować wartości między aplikacji sieci Web i podstawowy kod lub wartości z tabel bazy danych.  
  
 Jeśli typ bazy danych parametru zostanie zmieniony przez ustawienie <xref:System.Web.UI.WebControls.Parameter.DbType%2A> właściwość <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Aby ustawić tę właściwość na wartość, która nie jest nastąpiła próba <see cref="T:System.Data.DbType" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określenie wartości domyślnej dla parametru powinien wartość parametru jest powiązana z być niezainicjowana, kiedy <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> metoda jest wywoływana.</summary>
        <value>Ciąg, który służy jako wartość domyślną dla <see cref="T:System.Web.UI.WebControls.Parameter" /> Jeśli wartość jest powiązany z nie można rozpoznać lub nie został zainicjowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> Właściwość jest używana w sytuacji, gdy parametr jest powiązany z wartością, ale wartość jest `null` lub nie można ustalić, kiedy <xref:System.Web.UI.WebControls.Parameter> oceny obiektu.  
  
 Jeśli <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość parametru została zmieniona, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać rekordu danych za pomocą <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i wyświetl ją w <xref:System.Web.UI.WebControls.DetailsView> formantu. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontroli pobiera konkretnego pracownika, wywołując `GetEmployee` metody `EmployeeLogic` klasy. `GetEmployee` Metoda wymaga parametru Identyfikatora pracownika. <xref:System.Web.UI.WebControls.ObjectDataSource> Kontrolować używa <xref:System.Web.UI.WebControls.QueryStringParameter> obiektu w jego <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji do przekazania do Identyfikatora `GetEmployee` metody w tym przykładzie.  
  
 Aby wyświetlić przykładem implementacji `EmployeeLogic` klasy i `GetEmployee` metody, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource> Przegląd klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt jest używany do powiązania wartości do formantu lub formant może służyć do zmiany wartości.</summary>
        <value>Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości. <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> ustawiono <see cref="F:System.Data.ParameterDirection.Input" /> domyślnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość nie jest obecnie używana przez <xref:System.Web.UI.WebControls.Parameter> klasy i jest zarezerwowany do użytku w przyszłości.  
  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Właściwość opisuje kierunek przepływu danych między wartością który <xref:System.Web.UI.WebControls.Parameter> jest powiązane wystąpienie i <xref:System.Web.UI.WebControls.Parameter> samego obiektu. Wartością domyślną dla <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości, <xref:System.Data.ParameterDirection.Input>, w tym artykule opisano najbardziej typowy scenariusz, w którym przepływ danych jest zawsze w jednym kierunku: od wartości, do której <xref:System.Web.UI.WebControls.Parameter> obiektów jest powiązany z <xref:System.Web.UI.WebControls.Parameter> obiektu. Wszelkie zmiany wprowadzone do wartości podstawowej są uwzględniane przy <xref:System.Web.UI.WebControls.Parameter> obiekt, ale wszelkie zmiany <xref:System.Web.UI.WebControls.Parameter> obiektu nie są widoczne na podstawie danych źródłowych. Można ustawić <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości <xref:System.Data.ParameterDirection.InputOutput> lub <xref:System.Data.ParameterDirection.Output> podczas pracy z parametrów wyjściowych lub <xref:System.Data.ParameterDirection.ReturnValue> podczas pracy z wartości zwracanej z procedury składowanej.  
  
 Jeśli <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość parametru została zmieniona, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, i <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości <xref:System.Web.UI.WebControls.Parameter> obiektów w przypadku używania ich jako parametry wyjściowe i parametrów wartości zwracanej z procedury składowanej. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Przegląd klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżący <see cref="T:System.Web.HttpContext" /> żądania.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Jest powiązany parametr. Jeśli parametr nie jest powiązana z formantem <c>kontroli</c> parametru jest ignorowana.</param>
        <summary>Aktualizacje i zwraca wartość <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu.</summary>
        <returns>
          <see langword="object" /> Reprezentujący aktualizację wartości parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> metoda ma zwrócić `null` we wszystkich przypadkach. Klasy, które pochodzą z <xref:System.Web.UI.WebControls.Parameter> klasy zastąpienie <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> metoda zwraca wartość parametru zaktualizowane. Na przykład <xref:System.Web.UI.WebControls.ControlParameter> obiektu zwraca wartość formantu, który jest powiązany, podczas gdy <xref:System.Web.UI.WebControls.QueryStringParameter> obiektu pobiera bieżący pary nazwa/wartość z <xref:System.Web.HttpRequest> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> metodę, aby zwracała poprawną wartość w klasie pochodzącej z <xref:System.Web.UI.WebControls.Parameter> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.DbType" /> wartość, która odpowiada typowi CLR bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.Data.DbType" /> Wartość, która odpowiada typowi CLR bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> Właściwość może nie mieć zostały skonfigurowane lub musi mieć ustawioną <xref:System.Data.DbType.Object>. Ta metoda jest przeznaczona do użycia tylko wtedy, gdy typ CLR jest ustawiony, ale <xref:System.Web.UI.WebControls.Parameter.DbType%2A> właściwość nie jest.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> Ustawiono już właściwość do wartości innej niż <see cref="F:System.Data.DbType.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu jest zapisywanie zmian stanu widoku.</summary>
        <value>
          <see langword="true" /> Jeśli widok źródła danych zostanie oznaczona do zapisania stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący <see cref="T:System.Web.UI.WebControls.Parameter" /> stanu do przywrócenia.</param>
        <summary>Przywraca widoku źródła danych wcześniej zapisany stan widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontroli deweloperzy mogą przesłaniać tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Ta metoda przywraca stan widoku informacje dotyczące <xref:System.Web.UI.WebControls.Parameter> obiektu z poprzedniego żądania strony, która została zapisana przez <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę parametru.</summary>
        <value>Nazwa parametru. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> obiekty nie muszą mieć nazwę; jednak kontrolki źródła danych może użyć nazwy parametru odpowiadające <xref:System.Web.UI.WebControls.Parameter> obiektu w kolekcji z parametrem w podpisie metody query lub business SQL. Na przykład <xref:System.Web.UI.WebControls.SqlDataSource> formantu można użyć nazwy <xref:System.Web.UI.WebControls.Parameter> obiekt, aby dopasować element zastępczy w sparametryzowanego zapytania SQL. Podobnie <xref:System.Web.UI.WebControls.SqlDataSource> formantu można użyć nazwy <xref:System.Web.UI.WebControls.Parameter> obiektu w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji, aby dopasować element zastępczy w <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. W niektórych przypadkach, czy nazwa nie jest używana i kolejność, w którym <xref:System.Web.UI.WebControls.Parameter> obiekt jest dodawany do <xref:System.Web.UI.WebControls.ParameterCollection> kolekcji ma większe znaczenie. Aby uzyskać więcej informacji, zobacz [przy użyciu parametrów za pomocą formantu SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) i [przy użyciu parametrów z kontrolki ObjectDataSource](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Zmiana nazwy parametru <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania danych filtrowanych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> formant do pobierania danych z obiektem biznesowym warstwy środkowej i <xref:System.Web.UI.WebControls.GridView> formantu, aby wyświetlić wyniki. Przykładowy kod składa się z <xref:System.Web.UI.WebControls.TextBox> kontroli, <xref:System.Web.UI.WebControls.GridView> kontroli, <xref:System.Web.UI.WebControls.ObjectDataSource> kontroli i przycisk przesyłania. Domyślnie <xref:System.Web.UI.WebControls.TextBox> kontroli jest wypełniana nazwę jednego z `Northwind` pracowników. <xref:System.Web.UI.WebControls.GridView> Kontroli Wyświetla informacje dotyczące pracowników, określanego przez nazwę w <xref:System.Web.UI.WebControls.TextBox> formantu. Aby pobrać dane na innego pracownika, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox> sterowania i kliknij przycisk.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Właściwość określa wyrażenie używane do filtrowania danych pobranych przez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> właściwości. Używa symbole zastępcze parametrów, które są oceniane w parametrach zawarte w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie symbol zastępczy parametru jest ograniczone przez pojedynczy cudzysłów, ponieważ typ parametru jest typu ciąg, który może zawierać spacji. Jeśli typ parametru jest typu liczbowego lub daty, ograniczający znaki cudzysłowu nie są wymagane.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwość <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołania <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> metody <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> kolekcji zawierającej <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.Parameter> obiektu nie jest zawarty w <xref:System.Web.UI.WebControls.ParameterCollection> kolekcji, wywołania <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> — metoda nie ma wpływu. Jeśli <xref:System.Web.UI.WebControls.Parameter> obiektu jest zawarty w <xref:System.Web.UI.WebControls.ParameterCollection> kolekcji, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> zgłasza <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> zdarzeń kolekcji.  
  
 Jeśli <xref:System.Web.UI.WebControls.ParameterCollection> kolekcji jest zawarty w kontroli źródła danych, <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> kontroli źródła danych wywołuje zdarzenie <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzeń, co powoduje wszystkie formanty powiązane z danymi ponownie powiązać.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metodę, aby podnieść <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> zdarzenie po zmianie stanu parametru. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stan widoku obiektu od czasu strony zostało przesłane do serwera.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawiera zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stanu widoku. Jeśli stan jest niedostępny widok skojarzony z obiektem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez deweloperów formantu.  
  
 Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formancie serwera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie trwale obiektowi ciągu po zapisywania stanu etapu cyklu życia serwera kontroli.  
  
 Po zapisaniu stan widoku, ten obiekt string jest zwracana do klienta jako zmienna, która jest przechowywany w formacie HTML `hidden` elementu. Podczas tworzenia niestandardowe kontrolki serwera może poprawić wydajność tej metody i modyfikując formantu serwera <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znaczniki <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt tak stanu zostaną zarejestrowane w widoku stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A> Metoda jest wywoływana bezpośrednio przez <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> metody, aby oznaczyć <xref:System.Web.UI.WebControls.Parameter> obiekt, tak aby jego stan jest rejestrowany w widoku stanu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar parametru.</summary>
        <value>Rozmiar parametru wyrażone jako liczba całkowita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.Web.UI.WebControls.Parameter.Size%2A> została zmieniona, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Parameter" /> czyli kopię bieżącego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> Wywołania metody <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> konstruktora, aby zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.Parameter> klasy z wartościami bieżącego wystąpienia.  
  
 Po rozszerzeniu <xref:System.Web.UI.WebControls.Parameter> klasy, można zastąpić <xref:System.Web.UI.WebControls.Parameter.Clone%2A> metodę w celu uwzględnienia tutaj stan, który powinien zostać skopiowany do nowego wystąpienia klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.Parameter.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu jest zapisywanie zmian stanu widoku.</summary>
        <value>
          <see langword="true" /> Jeśli widok źródła danych zostanie oznaczona do zapisania stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący <see cref="T:System.Web.UI.WebControls.Parameter" /> stanu do przywrócenia.</param>
        <summary>Przywraca widoku źródła danych wcześniej zapisany stan widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przywraca stan widoku informacje dotyczące <xref:System.Web.UI.WebControls.Parameter> obiektu z poprzedniego żądania strony, która została zapisana przez <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> metody.  
  
 Ta metoda jest używana głównie przez deweloperów formantu. Można zastąpić tę metodę, aby kontrolować sposób formantu niestandardowego serwera przywraca stan widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stan widoku obiektu od czasu strony zostało przesłane do serwera.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawiera zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stan widoku obiektu. Jeśli stan jest niedostępny widok skojarzony z obiektem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez deweloperów formantu.  
  
 Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formancie serwera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie trwale obiektowi ciągu po zapisywania stanu etapu cyklu życia serwera kontroli.  
  
 Po zapisaniu stan widoku, ten obiekt string jest zwracana do klienta jako zmienna, która jest przechowywany w formacie HTML `hidden` elementu. Podczas tworzenia niestandardowe kontrolki serwera może poprawić wydajność tej metody i modyfikując formantu serwera <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu do śledzenia zmian stanu widoku, mogą być przechowywane w formancie <see cref="P:System.Web.UI.Control.ViewState" /> obiekt i trwałego na żądania dla tej samej stronie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</summary>
        <returns>Reprezentacja ciągu wartość tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.ToString%2A> Metoda zwraca <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość <xref:System.Web.UI.WebControls.Parameter> obiektu. Jeśli <xref:System.Web.UI.WebControls.Parameter> obiekt nie ma nazwy, <xref:System.Web.UI.WebControls.Parameter.ToString%2A> zwraca <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak uzyskać dostęp do różnych właściwości z <xref:System.Web.UI.WebControls.Parameter> obiektu, łącznie z jej <xref:System.Web.UI.WebControls.Parameter.Name%2A> i <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu do śledzenia zmian stanu widoku, mogą być przechowywane w formancie <see cref="P:System.Web.UI.Control.ViewState" /> obiekt i trwałego na żądania dla tej samej stronie.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ parametru.</summary>
        <value>Typ <see cref="T:System.Web.UI.WebControls.Parameter" />. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ może służyć do tworzenia jednoznacznie parametrów, aby poprawnie konwersję wartości między aplikacji sieci Web i kod źródłowy.  
  
 Zmiana typu parametru <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metoda jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, i <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwości <xref:System.Web.UI.WebControls.Parameter> obiektów w przypadku używania ich jako parametry wyjściowe i parametrów wartości zwracanej z procedury składowanej. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Przegląd klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Typ parametru nie jest jednym z <see cref="T:System.TypeCode" /> wartości.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik informacje o stanie, który służy do zapisywania i przywracania stanu widoku <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu dla wielu żądań przesyłanych do tej samej stronie.</summary>
        <value>Wystąpienie <see cref="T:System.Web.UI.StateBag" /> zawierający <see cref="T:System.Web.UI.WebControls.Parameter" /> informacji stan widoku obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr stan widoku jest sumą wszystkich wartości właściwości. Aby zachować te wartości na żądania HTTP, kontrolek serwera ASP.NET używają tej właściwości, który jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy do przechowywania wartości właściwości. Wartości są następnie przekazywane jako zmienną do kodu HTML `hidden` elementu wejściowego, gdy są przetwarzane kolejne żądania. Stan widoku jest domyślnie włączona dla wszystkich kontrolek serwera.  
  
 Aby uzyskać więcej informacji na temat słowniki i sposobu ich używania, zobacz [kolekcje i struktury danych](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak obiekt stan widoku używany do przechowywania stanu obiektu parametru w klasie, rozszerzający <xref:System.Web.UI.WebControls.Parameter> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.WebControls.Parameter> Przegląd klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>