<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="133550bd39c0a421d08f8176344bdb96a100cd5e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414510" /></Metadata><TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia mechanizm używany przez formanty źródła danych do powiązania ze zmiennymi aplikacji, tożsamościami użytkowników i opcjami oraz innymi danymi. Służy jako klasa bazowa dla wszystkich typów parametrów ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> Klasa reprezentuje parametr w sparametryzowanym zapytaniu SQL, wyrażenie filtrowania lub wywołanie metody obiektu biznesowego, które ASP.NET kontroli źródła danych używa do wybierania, filtrowania lub modyfikowania danych. <xref:System.Web.UI.WebControls.Parameter>obiekty są zawarte w <xref:System.Web.UI.WebControls.ParameterCollection> obiekcie. <xref:System.Web.UI.WebControls.Parameter>obiekty są oceniane w czasie wykonywania, aby powiązać wartości zmiennych, które reprezentują do dowolnej metody, jest używana przez formant źródła danych do współdziałania z danymi.  
  
 Użyj klas, które pochodzą <xref:System.Web.UI.WebControls.Parameter> z programu ze źródłem danych i formantami związanymi z danymi, aby tworzyć aplikacje oparte na sieci Web. Te klasy parametrów są używane przez kontrolki źródła danych do powiązania określonych rodzajów wartości znalezionych w aplikacjach sieci Web do symboli zastępczych w ciągach zapytań SQL, parametrach metod obiektu biznesowego i innych. Poniższa tabela zawiera listę typów parametrów, które znajdują się w ASP.NET.  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Tworzy powiązanie każdej publicznej właściwości kontrolki serwera sieci Web.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Wiąże pole formularza.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Wiąże pole stanu sesji.|  
|<xref:System.Web.UI.WebControls.RouteParameter>|Tworzy powiązanie parametru adresu URL trasy.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Tworzy powiązanie pola cookie.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Tworzy powiązanie parametru ciągu zapytania.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Wiąże pole profilu.|  
  
 Rozszerzając klasę bazową <xref:System.Web.UI.WebControls.Parameter> , gdy chcesz zaimplementować własne niestandardowe typy parametrów.  
  
 <xref:System.Web.UI.WebControls.Parameter>obiekty są bardzo proste: mają <xref:System.Web.UI.WebControls.Parameter.Name%2A> <xref:System.Web.UI.WebControls.Parameter.Type%2A> właściwości i mogą być prezentowane w sposób deklaratywny i mogą śledzić stan w wielu żądaniach HTTP. Wszystkie parametry obsługują <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość, w przypadku gdy parametr jest powiązany z wartością, ale wartość jest obliczana `null` w czasie wykonywania.  
  
 W przypadku korzystania z kolekcji <xref:System.Web.UI.WebControls.Parameter> obiektów z kontrolką źródła danych ich kolejność w kolekcji może mieć znaczenie. Aby uzyskać więcej informacji na temat sposobu użycia parametrów, zobacz [Używanie parametrów z kontrolką kontrolki SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) i [Używanie parametrów z kontrolką ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać wybranej wartości <xref:System.Web.UI.WebControls.DropDownList> kontrolki w`here` klauzuli w zapytaniu SQL. W przykładzie zastosowano <xref:System.Web.UI.WebControls.ControlParameter> klasę, która pochodzi <xref:System.Web.UI.WebControls.ControlParameter> od klasy.  
  
 Element definiuje zapytanie z parametrem o nazwie "@Title", gdzie wartość z `DropDownList1` powinna być równa. <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Element określa, że symbol zastępczy "@Title" zostanie zastąpiony <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> przez wartość właściwości `DropDownList1` formantu. <xref:System.Web.UI.WebControls.ControlParameter> Element zostanie dodany <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> do kolekcji <xref:System.Web.UI.WebControls.SqlDataSource> kontrolki. <xref:System.Web.UI.WebControls.ControlParameter>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 Poniższy przykład przypomina poprzedni, ale używa kodu zamiast znacznika. Gdy strona jest ładowana po raz pierwszy, <xref:System.Web.UI.WebControls.DropDownList> kontrolka nie ma wybranej wartości <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> i jest używana Właściwość <xref:System.Web.UI.WebControls.Parameter> obiektu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 Poniższy kod przedstawia klasę związany z kodem dla strony w poprzednim przykładzie.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 Poniższy przykład kodu ilustruje sposób rozszerzania <xref:System.Web.UI.WebControls.Parameter> klasy w celu utworzenia nowego typu parametru, który może być używany przez kontrolki źródła danych i inne kontrolki w scenariuszach powiązania danych. Kontrolka źródła danych może użyć `StaticParameter` parametru, aby powiązać z wartością dowolnego obiektu, zazwyczaj jest to ciąg, zadeklarowany na stronie formularzy sieci Web.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Używanie parametrów z kontrolkami źródła danych</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> domyślne klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> Obiekt utworzony <xref:System.Web.UI.WebControls.Parameter.%23ctor> za pomocą konstruktora jest inicjowany z wartościami domyślnymi dla wszystkich jego właściwości. <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.TypeCode.Object?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> Właściwość jest inicjowana do <xref:System.String.Empty?displayProperty=nameWithType>, właściwość jest inicjowana do, właściwość jest inicjowana do <xref:System.Data.ParameterDirection.Input>, a właściwość jest inicjowana do <xref:System.Web.UI.WebControls.Parameter.Name%2A> `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy, używając podanej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt utworzony za pomocą konstruktora jest inicjowany z wartościami określonymi `name` i domyślnymi dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> <xref:System.Web.UI.WebControls.Parameter> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.Data.ParameterDirection.Input> <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> Właściwość jest inicjowana do <xref:System.TypeCode.Object?displayProperty=nameWithType>, właściwość jest inicjowana`null`do, a właściwość jest inicjowana. <xref:System.Web.UI.WebControls.Parameter.Type%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> jak wywołać konstruktora z klasy, która <xref:System.Web.UI.WebControls.Parameter> rozszerza klasę, aby zainicjować <xref:System.Web.UI.WebControls.Parameter.Name%2A> Właściwość wystąpienia. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original"><see cref="T:System.Web.UI.WebControls.Parameter" /> Wystąpienie, z którego jest inicjowane bieżące wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy z wartościami oryginalnego, określonego wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest konstruktorem kopiującym używanym do klonowania wystąpienia.<xref:System.Web.UI.WebControls.Parameter> `protected` <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> Wartości <xref:System.Web.UI.WebControls.Parameter.Name%2A>właściwości, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, isą<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> przesyłane do nowego wystąpienia. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> jak wywołać konstruktora z klasy, która <xref:System.Web.UI.WebControls.Parameter> rozszerza klasę, aby zaimplementować poprawne zachowanie klonowania obiektów dla klasy. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="dbType">Typ bazy danych parametru.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy, używając określonej nazwy i typu bazy danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt utworzony `name` za pomocą konstruktora jest inicjowany z określonymi parametrami `dbType` i z wartościami domyślnymi dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> <xref:System.Web.UI.WebControls.Parameter> Właściwość jest inicjowana do <xref:System.Data.ParameterDirection.Input>, a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana do `null`. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">A <see cref="T:System.TypeCode" /> , który opisuje typ parametru.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy, używając określonej nazwy i typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt utworzony `name` za pomocą konstruktora jest inicjowany z określonymi parametrami `type` i wartościami domyślnymi dla innych właściwości. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> <xref:System.Web.UI.WebControls.Parameter> Właściwość jest inicjowana do <xref:System.Data.ParameterDirection.Input>, a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> właściwość jest inicjowana do `null`. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> , jak wywołać konstruktora z klasy, która <xref:System.Web.UI.WebControls.Parameter> rozszerza klasę, aby zainicjować <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwości i <xref:System.Web.UI.WebControls.Parameter.Type%2A> wystąpienia. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</param>
        <param name="dbType">Typ bazy danych <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</param>
        <param name="defaultValue">Wartość domyślna dla <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia, <see cref="T:System.Web.UI.WebControls.Parameter" /> jeśli jest powiązana z wartością, która nie została jeszcze zainicjowana, <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> gdy jest wywoływana.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy, używając określonej nazwy, określonego typu bazy danych i określonej wartości <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość wystąpienia jest inicjowana do <xref:System.Data.ParameterDirection.Input>. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.Web.UI.WebControls.Parameter>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">A <see cref="T:System.TypeCode" /> , który opisuje typ parametru.</param>
        <param name="defaultValue">Ciąg, który służy jako wartość domyślna parametru, jeśli <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązany z wartością, która nie została jeszcze zainicjowana, gdy <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> jest wywoływana.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.Parameter" /> klasy, używając określonej nazwy, określonego typu i określonego ciągu dla jego <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> `name` `type` Obiekt utworzony za pomocą konstruktora jest inicjowany z określonym parametrem i parametrem i ma przypisaną wartość właściwości. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> <xref:System.Web.UI.WebControls.Parameter> Właściwość jest inicjowana do <xref:System.Data.ParameterDirection.Input>. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 Poniższy przykład <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> kodu demonstruje sposób użycia konstruktora do dodawania obiektów parametrów aktualizacji <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> do kolekcji <xref:System.Web.UI.WebControls.AccessDataSource> kontrolki przed wywołaniem <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> metody.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca duplikat bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Parameter" /> Jest to dokładny duplikat bieżącego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje konstruktora kopiującego<xref:System.Web.UI.WebControls.Parameter> , aby zainicjować nowe wystąpienie klasy z wartościami bieżącego wystąpienia. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> <xref:System.Web.UI.WebControls.Parameter.Clone%2A>  
  
 W przypadku rozszerzającej <xref:System.Web.UI.WebControls.Parameter> klasy można <xref:System.Web.UI.WebControls.Parameter.Clone%2A> zastąpić metodę, aby uwzględnić wszystkie Stany, które mają zostać skopiowane do nowego wystąpienia klasy pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> jak wywołać konstruktora z klasy, która <xref:System.Web.UI.WebControls.Parameter> rozszerza klasę, aby zaimplementować poprawne zachowanie klonowania obiektów dla klasy. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.WebControls.Parameter> klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">Wartość do przekonwertowania na równoważną <see cref="T:System.TypeCode" /> wartość. <see cref="T:System.Data.DbType" /></param>
        <summary>Konwertuje wartość na równoważną <see cref="T:System.TypeCode" />wartość. <see cref="T:System.Data.DbType" /></summary>
        <returns>Wartość, która jest równoważna z określoną <see cref="T:System.Data.DbType" /> wartością. <see cref="T:System.TypeCode" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca wystąpienie <xref:System.TypeCode.Object> , jeśli nie zostanie znaleziony odpowiednik <xref:System.Data.DbType> wartości. Typy baz danych bez równoważnych <xref:System.Data.DbType.Guid>typów <xref:System.Data.DbType.Binary>obejmują, <xref:System.Data.DbType.DateTimeOffset>, i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość, z którą <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązany obiekt, powinna być konwertowana na <see langword="null" /> , jeśli jest <see cref="F:System.String.Empty" />.</summary>
        <value><see langword="true" />Jeśli wartość, z którą <see cref="T:System.Web.UI.WebControls.Parameter" /> jest powiązany, powinna być konwertowana na <see langword="null" /> , gdy jest <see cref="F:System.String.Empty" />; w przeciwnym <see langword="false" />razie,. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość parametru jest zmieniana <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> , wywoływana jest metoda. <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">Wartość do przekonwertowania na równoważną <see cref="T:System.Data.DbType" /> wartość. <see cref="T:System.TypeCode" /></param>
        <summary>Konwertuje wartość na równoważną <see cref="T:System.Data.DbType" />wartość. <see cref="T:System.TypeCode" /></summary>
        <returns>Wartość, która jest równoważna z określoną <see cref="T:System.TypeCode" /> wartością. <see cref="T:System.Data.DbType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca wystąpienie <xref:System.Data.DbType.Object> , jeśli nie znaleziono odpowiednika. Typy bez równoważnych typów baz <xref:System.TypeCode.DBNull> danych <xref:System.TypeCode.Empty>obejmują i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ bazy danych parametru.</summary>
        <value>Typ bazy danych <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia. Wartość domyślna to <see cref="F:System.Data.DbType.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ bazy danych może służyć do tworzenia silnie wpisanych parametrów, dzięki czemu wartości są konwertowane prawidłowo między aplikacją sieci Web a kodem źródłowym lub wartościami z tabel bazy danych.  
  
 Jeśli typ bazy danych parametru zostanie zmieniony przez ustawienie <xref:System.Web.UI.WebControls.Parameter.DbType%2A> właściwości <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> , Metoda zostanie wywołana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podjęto próbę ustawienia tej właściwości na wartość, która nie znajduje się w <see cref="T:System.Data.DbType" /> wyliczeniu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa wartość domyślną dla parametru, jeśli wartość, z którą jest powiązany parametr, musi być niezainicjowana, gdy <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> wywoływana jest metoda.</summary>
        <value>Ciąg, który służy jako wartość domyślna dla <see cref="T:System.Web.UI.WebControls.Parameter" /> gdy wartość, z którą jest powiązany, nie może zostać rozpoznany lub nie jest zainicjowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest używana w scenariuszach, w których parametr jest powiązany z wartością, ale wartość jest `null` lub <xref:System.Web.UI.WebControls.Parameter> nie można rozpoznać, gdy obiekt jest obliczany. <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
 Jeśli właściwość parametru jest zmieniana <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> , wywoływana jest metoda. <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób pobierania pojedynczego rekordu danych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki i wyświetlania jej <xref:System.Web.UI.WebControls.DetailsView> w kontrolce. Formant Pobiera określony rekord pracownika przez `GetEmployee` wywołanie metody `EmployeeLogic` klasy. <xref:System.Web.UI.WebControls.ObjectDataSource> `GetEmployee` Metoda wymaga parametru identyfikatora pracownika. Formant używa obiektu w <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> kolekcji w celu przekazania identyfikatora do `GetEmployee` metody w tym przykładzie. <xref:System.Web.UI.WebControls.QueryStringParameter> <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Aby wyświetlić przykładową implementację `EmployeeLogic` klasy `GetEmployee` i metody, zobacz <xref:System.Web.UI.WebControls.ObjectDataSource> Omówienie klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt jest używany do powiązania wartości z kontrolką, czy można użyć kontrolki, aby zmienić wartość.</summary>
        <value>Jedna z <see cref="T:System.Data.ParameterDirection" /> wartości. <see cref="P:System.Web.UI.WebControls.Parameter.Direction" />jest domyślnie ustawiony <see cref="F:System.Data.ParameterDirection.Input" /> na wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie jest obecnie używana <xref:System.Web.UI.WebControls.Parameter> przez klasę i jest zarezerwowana do użycia w przyszłości. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
 Właściwość opisuje kierunek przepływu danych między wartością <xref:System.Web.UI.WebControls.Parameter> , z którą <xref:System.Web.UI.WebControls.Parameter> jest powiązane wystąpienie, i samym obiektem. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Wartość <xref:System.Web.UI.WebControls.Parameter.Direction%2A> domyślna właściwości, <xref:System.Data.ParameterDirection.Input>, opisuje najbardziej typowy scenariusz, w którym przepływ danych jest zawsze w jednym kierunku: od wartości, do której <xref:System.Web.UI.WebControls.Parameter> obiekt jest powiązany <xref:System.Web.UI.WebControls.Parameter> z obiektem. Wszelkie zmiany wprowadzone do wartości bazowej są uwzględniane przez <xref:System.Web.UI.WebControls.Parameter> obiekt, ale wszelkie zmiany <xref:System.Web.UI.WebControls.Parameter> w obiekcie nie są uwzględniane przez dane bazowe. Można ustawić <xref:System.Web.UI.WebControls.Parameter.Direction%2A> właściwość na <xref:System.Data.ParameterDirection.InputOutput> lub <xref:System.Data.ParameterDirection.Output> podczas pracy z parametrami wyjściowymi lub <xref:System.Data.ParameterDirection.ReturnValue> podczas pracy z wartością zwracaną z procedury składowanej.  
  
 Jeśli właściwość parametru jest zmieniana <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> , wywoływana jest metoda. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>sposób ustawiania właściwości <xref:System.Web.UI.WebControls.Parameter> ,, i <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> obiektów, gdy są używane jako parametry wyjściowe i parametry wartości zwracanej z procedurą składowaną. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> w przeglądzie klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Bieżąca <see cref="T:System.Web.HttpContext" /> część żądania.</param>
        <param name="control"><see cref="T:System.Web.UI.Control" /> Parametr jest powiązany z. Jeśli parametr nie jest powiązany z kontrolką, <paramref name="control" /> parametr jest ignorowany.</param>
        <summary>Aktualizuje i zwraca wartość <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektu.</summary>
        <returns><see langword="object" /> Reprezentuje zaktualizowaną i bieżącą wartość parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślną implementacją <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> metody jest zwrócenie `null` we wszystkich przypadkach. Klasy pochodne od <xref:System.Web.UI.WebControls.Parameter> klasy <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> przesłaniają metodę w celu zwrócenia zaktualizowanej wartości parametru. Na przykład <xref:System.Web.UI.WebControls.ControlParameter> obiekt zwraca wartość kontrolki, z którą jest powiązany, <xref:System.Web.UI.WebControls.QueryStringParameter> podczas gdy obiekt pobiera bieżącą parę nazwa <xref:System.Web.HttpRequest> /wartość z obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> jak zastąpić metodę, aby zwrócić poprawną wartość w klasie, która jest pochodną <xref:System.Web.UI.WebControls.Parameter> klasy. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość, która jest równoważna z typem CLR bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia. <see cref="T:System.Data.DbType" /></summary>
        <returns>Wartość, która jest równoważna z typem CLR bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia. <see cref="T:System.Data.DbType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie może już być ustawiona lub musi być ustawiona na <xref:System.Data.DbType.Object>wartość. <xref:System.Web.UI.WebControls.Parameter.DbType%2A> Ta metoda jest przeznaczona do użycia tylko wtedy, gdy typ CLR jest ustawiony, <xref:System.Web.UI.WebControls.Parameter.DbType%2A> ale właściwość nie jest.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość ma już ustawioną wartość inną niż <see cref="F:System.Data.DbType.Object" />. <see cref="P:System.Web.UI.WebControls.Parameter.DbType" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt zapisuje zmiany w stanie widoku.</summary>
        <value><see langword="true" />Jeśli widok źródła danych jest oznaczony do zapisania jego stanu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> Reprezentujestan,<see cref="T:System.Web.UI.WebControls.Parameter" /> który ma zostać przywrócony.</param>
        <summary>Przywraca stan widoku poprzednio zapisanego widoku źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontrolowanie deweloperów może zastąpić tę metodę, aby określić, jak niestandardowy formant serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Ta metoda przywraca informacje o stanie widoku dla <xref:System.Web.UI.WebControls.Parameter> obiektu z poprzedniego żądania strony, które zostało zapisane <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> przez metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę parametru.</summary>
        <value>Nazwa parametru. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter>obiekty nie muszą mieć nazwy; jednak kontrolki źródła danych mogą używać nazwy parametru do dopasowania <xref:System.Web.UI.WebControls.Parameter> obiektu w kolekcji z parametrem w kwerendzie SQL lub podpisie metody biznesowej. Na przykład <xref:System.Web.UI.WebControls.SqlDataSource> kontrolka może użyć nazwy <xref:System.Web.UI.WebControls.Parameter> obiektu, aby dopasować symbol zastępczy w sparametryzowanym zapytaniu SQL. Podobnie formant może użyć nazwy <xref:System.Web.UI.WebControls.Parameter> obiektu w <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> kolekcji, aby dopasować symbol zastępczy we <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> właściwości. <xref:System.Web.UI.WebControls.SqlDataSource> W niektórych przypadkach nazwa nie jest używana, a kolejność, w jakiej <xref:System.Web.UI.WebControls.Parameter> obiekt jest dodawany <xref:System.Web.UI.WebControls.ParameterCollection> do kolekcji, jest bardziej ważna. Aby uzyskać więcej informacji, zobacz [Używanie parametrów z kontrolką kontrolki SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) i [Używanie parametrów z kontrolką ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Jeśli nazwa parametru zostanie zmieniona, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> wywoływana jest metoda.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób wyświetlania filtrowanych danych przy użyciu <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki do pobierania danych z obiektu biznesowego warstwy środkowej <xref:System.Web.UI.WebControls.GridView> i kontrolki do wyświetlania wyników. Przykład kodu składa się z <xref:System.Web.UI.WebControls.TextBox> kontrolki <xref:System.Web.UI.WebControls.GridView> , kontrolki, <xref:System.Web.UI.WebControls.ObjectDataSource> kontrolki i przycisku przesyłania. Domyślnie <xref:System.Web.UI.WebControls.TextBox> kontrolka jest wypełniana nazwą jednego `Northwind` z pracowników. Kontrolka wyświetla informacje o pracowniku identyfikowanym przez nazwę <xref:System.Web.UI.WebControls.TextBox> w kontrolce. <xref:System.Web.UI.WebControls.GridView> Aby pobrać dane z innego pracownika, wprowadź pełną nazwę pracownika w <xref:System.Web.UI.WebControls.TextBox> kontrolce, a następnie kliknij przycisk.  
  
 Właściwość określa wyrażenie służące do filtrowania danych pobranych <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> przez właściwość. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Używa ona symboli zastępczych parametrów, które są oceniane do parametrów zawartych w <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> kolekcji. W tym przykładzie symbol zastępczy parametru jest ograniczony przez znaki pojedynczego cudzysłowu, ponieważ typ parametru jest ciągiem, który może zawierać spacje. Jeśli typ parametru jest liczbą lub typem daty, powiązane cudzysłowy nie są zbędne.  
  
 Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> właściwości <xref:System.Web.UI.WebControls.ObjectDataSource> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> Wywołuje metodę <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> kolekcji, która zawiera <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obiekt nie jest zawarty <xref:System.Web.UI.WebControls.ParameterCollection> w kolekcji, wywołanie <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> metody nie ma żadnego wpływu. <xref:System.Web.UI.WebControls.Parameter> Jeśli obiekt jest zawarty <xref:System.Web.UI.WebControls.ParameterCollection> w kolekcji, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> podnosi <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> zdarzenie kolekcji. <xref:System.Web.UI.WebControls.Parameter>  
  
 Jeśli kolekcja jest zawarta w kontrolce źródła danych <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> , zdarzenie wywołuje <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie kontroli źródła danych, powodując ponowne powiązanie wszelkich kontrolek powiązanych z danymi. <xref:System.Web.UI.WebControls.ParameterCollection>  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wywołać metodę, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> aby zgłosić zdarzenie, <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> gdy zmienia się stan parametru. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stanu widoku obiektu od momentu, gdy strona została opublikowana z powrotem na serwerze.</summary>
        <returns><see cref="T:System.Object" /> Zawiera zmiany<see cref="T:System.Web.UI.WebControls.Parameter" /> stanu widoku. Jeśli nie ma stanu widoku skojarzonego z obiektem, Metoda ta zwraca wartość <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 Stan widoku to akumulacja wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane we <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki serwera, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie utrwalana w obiekcie String po etapie zapisywania stanu w cyklu działania kontroli serwera.  
  
 Gdy stan widoku jest zapisywany, ten obiekt ciągu jest zwracany do klienta jako zmienna, która jest przechowywana w elemencie HTML `hidden` . Podczas tworzenia niestandardowych kontrolek serwera można poprawić wydajność przez zastąpienie tej metody i zmodyfikowanie <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> właściwości kontrolki serwera.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> Oznacza obiekt, aby stan został zarejestrowany w stanie widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana bezpośrednio <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> przez <xref:System.Web.UI.WebControls.Parameter> metodę, aby oznaczyć obiekt tak, że jego stan jest zarejestrowany w stanie widoku. <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar parametru.</summary>
        <value>Rozmiar parametru wyrażony jako liczba całkowita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wartość dla <xref:System.Web.UI.WebControls.Parameter.Size%2A> jest zmieniana <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> , wywoływana jest metoda.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca duplikat bieżącego <see cref="T:System.Web.UI.WebControls.Parameter" /> wystąpienia.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Parameter" /> To jest kopia bieżącego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje konstruktora, aby zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.Parameter> klasy z wartościami bieżącego wystąpienia. <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> <xref:System.Web.UI.WebControls.Parameter.Clone%2A>  
  
 W przypadku rozszerzającej <xref:System.Web.UI.WebControls.Parameter> klasy można <xref:System.Web.UI.WebControls.Parameter.Clone%2A> zastąpić metodę, aby uwzględnić wszystkie Stany, które mają zostać skopiowane do nowego wystąpienia klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.Parameter" /> obiekt zapisuje zmiany w stanie widoku.</summary>
        <value><see langword="true" />Jeśli widok źródła danych jest oznaczony do zapisania jego stanu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> Reprezentujestan,<see cref="T:System.Web.UI.WebControls.Parameter" /> który ma zostać przywrócony.</param>
        <summary>Przywraca stan widoku poprzednio zapisanego widoku źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przywraca informacje o stanie widoku dla <xref:System.Web.UI.WebControls.Parameter> obiektu z poprzedniego żądania strony, które zostało zapisane <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> przez metodę.  
  
 Ta metoda jest używana głównie przez deweloperów kontroli. Można zastąpić tę metodę, aby kontrolować sposób, w jaki formant serwera niestandardowego przywraca stan widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany <see cref="T:System.Web.UI.WebControls.Parameter" /> stanu widoku obiektu od momentu, gdy strona została opublikowana z powrotem na serwerze.</summary>
        <returns>Zawiera zmiany stanu widoku <see cref="T:System.Web.UI.WebControls.Parameter" />obiektu. <see cref="T:System.Object" /> Jeśli nie ma stanu widoku skojarzonego z obiektem, Metoda ta zwraca wartość <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 Stan widoku to akumulacja wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane we <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki serwera, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie utrwalana w obiekcie String po etapie zapisywania stanu w cyklu działania kontroli serwera.  
  
 Gdy stan widoku jest zapisywany, ten obiekt ciągu jest zwracany do klienta jako zmienna, która jest przechowywana w elemencie HTML `hidden` . Podczas tworzenia niestandardowych kontrolek serwera można poprawić wydajność przez zastąpienie tej metody i zmodyfikowanie <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> właściwości kontrolki serwera.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, <see cref="T:System.Web.UI.WebControls.Parameter" /> że obiekt śledzi zmiany stanu widoku, aby mogły być przechowywane w <see cref="P:System.Web.UI.Control.ViewState" /> obiekcie kontrolki i utrwalane między żądaniami dla tej samej strony.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</summary>
        <returns>Ciąg reprezentujący wartość tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.ToString%2A> Metoda zwraca<xref:System.Web.UI.WebControls.Parameter> właściwość obiektu. <xref:System.Web.UI.WebControls.Parameter.Name%2A> Jeśli obiekt nie ma nazwy, <xref:System.Web.UI.WebControls.Parameter.ToString%2A> zwraca <xref:System.String.Empty?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.Parameter>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak uzyskać dostęp do różnych właściwości <xref:System.Web.UI.WebControls.Parameter> obiektu, w tym jego <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwości i. <xref:System.Web.UI.WebControls.Parameter.Type%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, <see cref="T:System.Web.UI.WebControls.Parameter" /> że obiekt śledzi zmiany stanu widoku, aby mogły być przechowywane w <see cref="P:System.Web.UI.Control.ViewState" /> obiekcie kontrolki i utrwalane między żądaniami dla tej samej strony.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ parametru.</summary>
        <value>Typ <see cref="T:System.Web.UI.WebControls.Parameter" />. Wartość domyślna to <see cref="F:System.TypeCode.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ może służyć do tworzenia parametrów silnie wpisanych, dzięki czemu wartości są konwertowane prawidłowo między aplikacją sieci Web i kodem źródłowym.  
  
 Jeśli typ parametru zostanie zmieniony, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> wywoływana jest metoda.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>sposób ustawiania właściwości <xref:System.Web.UI.WebControls.Parameter> ,, i <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> obiektów, gdy są używane jako parametry wyjściowe i parametry wartości zwracanej z procedurą składowaną. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> w przeglądzie klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Typ parametru nie jest jedną z <see cref="T:System.TypeCode" /> wartości.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">Korzystanie z kontrolek kontrolki SqlDataSource i AccessDataSource z parametrami</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Używanie parametrów z kontrolką ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik informacji o stanie, który umożliwia zapisanie i przywrócenie stanu <see cref="T:System.Web.UI.WebControls.Parameter" /> widoku obiektu w wielu żądaniach na tej samej stronie.</summary>
        <value><see cref="T:System.Web.UI.StateBag" /> Wystąpienie<see cref="T:System.Web.UI.WebControls.Parameter" /> zawierające informacje o stanie widoku obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku parametru jest akumulacją wszystkich wartości właściwości. Aby zachować te wartości w żądaniach HTTP, formanty serwera ASP.NET używają tej właściwości, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy do przechowywania wartości właściwości. Wartości są następnie przenoszone jako zmienna do elementu wejściowego `hidden` HTML, gdy kolejne żądania są przetwarzane. Stan widoku jest domyślnie włączony dla wszystkich formantów serwera.  
  
 Aby uzyskać więcej informacji o słownikach i sposobach ich używania, zobacz [kolekcje i struktury danych](~/docs/standard/collections/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać obiektu widoku stanu do przechowywania stanu obiektu parametru w klasie rozszerzającej <xref:System.Web.UI.WebControls.Parameter> klasę. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Web.UI.WebControls.Parameter> w przeglądzie klasy.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
