<Type Name="TableCellCollection" FullName="System.Web.UI.WebControls.TableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7531ce2a5a0368d36a1aa093e2286795514ffefb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37532877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableCellCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableCellCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableCellCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TableCellCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje kolekcję <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> i <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty, które tworzą wiersza w <see cref="T:System.Web.UI.WebControls.Table" /> kontroli. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana do programowego zarządzania kolekcją <xref:System.Web.UI.WebControls.TableCell> obiekty, które tworzą wiersza w <xref:System.Web.UI.WebControls.Table> kontroli. Ta klasa jest często używana do dodawania lub usuwania komórki z wiersza w <xref:System.Web.UI.WebControls.Table> kontroli.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.Table> kontrolka zawiera <xref:System.Web.UI.WebControls.Table.Rows%2A> kolekcji, która reprezentuje kolekcję <xref:System.Web.UI.WebControls.TableRow> obiektów. Każdy <xref:System.Web.UI.WebControls.TableRow> reprezentuje pojedynczego wiersza w tabeli i zawiera <xref:System.Web.UI.WebControls.TableRow.Cells%2A> kolekcji, która reprezentuje kolekcję <xref:System.Web.UI.WebControls.TableCell> obiektów. Te <xref:System.Web.UI.WebControls.TableCell> obiekty reprezentują pojedynczych komórek w tabeli. Aby uzyskać pojedyncze komórki, należy najpierw pobrać <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.Table.Rows%2A> zbiór <xref:System.Web.UI.WebControls.Table> kontroli. Następnie możesz uzyskać <xref:System.Web.UI.WebControls.TableCell> z <xref:System.Web.UI.WebControls.TableRow.Cells%2A> zbiór <xref:System.Web.UI.WebControls.TableRow>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak programowo wypełnienia <xref:System.Web.UI.WebControls.Table> kontroli. <xref:System.Web.UI.WebControls.TableCell> obiekty, które reprezentują pojedyncze komórki, są dodawane do <xref:System.Web.UI.WebControls.TableRow> obiektów, które reprezentują poszczególne wiersze za pośrednictwem <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwości.  
  
 [!code-aspx-csharp[Classic TableCellCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TableRow" />
    <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.TableCell" />
    <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
    <altmember cref="T:System.Web.UI.WebControls.TableHeaderCell" />
    <altmember cref="T:System.Web.UI.WebControls.Table" />
    <altmember cref="T:System.Web.UI.WebControls.TableCellCollection" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (cell As TableCell) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TableCell -&gt; int" Usage="tableCellCollection.Add cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Do dodania do kolekcji.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.WebControls.TableCell" /> na końcu <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>Numer indeksu <see cref="T:System.Web.UI.WebControls.TableCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania określonego <xref:System.Web.UI.WebControls.TableCell> na końcu <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.Add%2A> metody w celu dodania <xref:System.Web.UI.WebControls.TableCell> do <xref:System.Web.UI.WebControls.TableCellCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, cell As TableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TableCell -&gt; unit" Usage="tableCellCollection.AddAt (index, cell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja w <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> jaką można dodać <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Do dodania do <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Dodaje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> do <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> w określonej lokalizacji indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wstawić określonego <xref:System.Web.UI.WebControls.TableCell> w <xref:System.Web.UI.WebControls.TableCellCollection> pod określonym indeksem.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A> metody w celu dodania <xref:System.Web.UI.WebControls.TableCell> w środku <xref:System.Web.UI.WebControls.TableCellCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableCellCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.WebControls.TableCell[] cells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.WebControls.TableCell[] cells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (cells As TableCell())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::UI::WebControls::TableCell ^&gt; ^ cells);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.UI.WebControls.TableCell[] -&gt; unit" Usage="tableCellCollection.AddRange cells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cells" Type="System.Web.UI.WebControls.TableCell[]" />
      </Parameters>
      <Docs>
        <param name="cells">Tablica zawierająca <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty do dodania do kolekcji.</param>
        <summary>Dołącza <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektów z określonej tablicy na końcu kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> metodę, aby dołączyć <xref:System.Web.UI.WebControls.TableCell> obiektów z określonej tablicy w kolekcji. Ta metoda jest używana najczęściej, gdy są konstruowanie wiersza tabeli. Aby utworzyć wiersza tabeli, należy najpierw utworzyć tablicę <xref:System.Web.UI.WebControls.TableCell> obiekty reprezentujące komórki wiersza. Następnie użyj <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> metody, przekazując tablicę jako argument, aby dodać <xref:System.Web.UI.WebControls.TableCell> obiekty do kolekcji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.AddRange%2A> metody w celu dodania <xref:System.Web.UI.WebControls.TableCell> obiektów z tablicy <xref:System.Web.UI.WebControls.TableCellCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-csharp[TableCellCollection_AddRange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TableCellCollection_AddRange/CS/tablecellcollection_addrange.cs.aspx#1)]
 [!code-vb[TableCellCollection_AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TableCellCollection_AddRange/VB/tablecellcollection_addrange.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="cells" /> parametr <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tableCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie wszystkich <xref:System.Web.UI.WebControls.TableCell> obiekty <xref:System.Web.UI.WebControls.TableCellCollection> i ustaw <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> właściwości na wartość 0.  
  
> [!NOTE]
>  Ta metoda usuwa <xref:System.Web.UI.WebControls.TableCell> obiekty <xref:System.Web.UI.WebControls.TableCellCollection>, ale nie powoduje usunięcia <xref:System.Web.UI.WebControls.TableRow> z <xref:System.Web.UI.WebControls.Table> kontroli. Pamiętaj usunęła również <xref:System.Web.UI.WebControls.TableRow> Aby całkowicie usunąć wiersz z tabeli.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.Clear%2A> metodę, aby usunąć wszystkie <xref:System.Web.UI.WebControls.TableCell> obiektów z wiersza Centrum tabeli i zastąp je z nowymi <xref:System.Web.UI.WebControls.TableCell> obiektów.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="P:System.Web.UI.WebControls.TableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="tableCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <param name="index">Pierwszy indeks w określonym <see cref="T:System.Array" /> do odbierania elementów.</param>
        <summary>Kopiuje elementy z <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> określonej <see cref="T:System.Array" />, począwszy od określonego indeksu w <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do kopiowania zawartości <xref:System.Web.UI.WebControls.TableCellCollection> do określonego <xref:System.Array?displayProperty=nameWithType> zaczynając od określonego indeksu.  
  
> [!NOTE]
>  `array` Parametr musi być liczony od zera <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.CopyTo%2A> metodę, aby skopiować elementy z <xref:System.Web.UI.WebControls.TableCellCollection> do określonej tablicy.  
  
 [!code-aspx-csharp[Classic TableCellCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TableCellCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty w <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <value>Liczba <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty w <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia liczby komórek w <xref:System.Web.UI.WebControls.TableCellCollection>. <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> Właściwość jest często używana, gdy iteracji w kolekcji, aby ustalić górny powiązana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.Count%2A> właściwości, aby określić liczbę komórek w <xref:System.Web.UI.WebControls.TableCellCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-csharp[Classic TableCellCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic TableCellCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetCellIndex">
      <MemberSignature Language="C#" Value="public int GetCellIndex (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellIndex(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellIndex (cell As TableCell) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellIndex(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.GetCellIndex : System.Web.UI.WebControls.TableCell -&gt; int" Usage="tableCellCollection.GetCellIndex cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Uzyskać indeks w <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Zwraca wartość, która reprezentuje indeks określonego <see cref="T:System.Web.UI.WebControls.TableCell" /> z <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>Indeksuje określony <see cref="T:System.Web.UI.WebControls.TableCell" /> w ramach <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. Wartość domyślna to -1, co oznacza, że dopasowanie nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do określenia indeksu określonego <xref:System.Web.UI.WebControls.TableCell> w <xref:System.Web.UI.WebControls.TableCellCollection>. Jeśli określony <xref:System.Web.UI.WebControls.TableCell> jest nie można odnaleźć indeksu-1 jest zwracana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A> właściwość, aby wyświetlić indeks kolumny zaznaczonej komórki.  
  
 [!code-aspx-csharp[Classic TableCellCollection.GetCellIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.GetCellIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.GetCellIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.GetCellIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tableCellCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Collections.IEnumerator" /> zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.WebControls.TableCell" /> obiekty w <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" /> zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.WebControls.TableCell" /> obiektów w ramach <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt, który może być postanowiliśmy za pośrednictwem łatwo można pobrać każdy element w <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
 Użyj <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwości do pobrania elementu obecnie wskazany w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metodę, aby przejść do następnego elementu w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodę, aby przenieść modułu wyliczającego z powrotem do pozycji początkowej.  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> Metoda musi zostać wywołana po utworzeniu <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt lub po nim za pomocą <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodę, aby przenieść modułu wyliczającego do pierwszego elementu w kolekcji. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwość jest niezdefiniowana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.TableCellCollection.GetEnumerator%2A> metodę w celu utworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType> zaimplementowany obiekt. Następnie jest postanowiliśmy za pośrednictwem w celu wyświetlenia elementów w zaznaczonym wierszu.  
  
 [!code-aspx-csharp[Classic TableCellCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.TableCellCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> jest tylko do odczytu.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ta zwraca zawsze `false` z informacją, że <xref:System.Web.UI.WebControls.TableCellCollection> mogą być zapisywane we wszystkich przypadkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TableCellCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> jest synchronizowany (bezpieczna wątkowo).</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest tworzony na podstawie <xref:System.Collections.ICollection?displayProperty=nameWithType> i zostanie zastąpiony zawsze zwracają `false`.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A> właściwości, zobacz <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableCell ^ default[int] { System::Web::UI::WebControls::TableCell ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TableCell" Usage="System.Web.UI.WebControls.TableCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Określa wartość indeksu porządkowe <see cref="T:System.Web.UI.WebControls.TableCell" /> do zwrócenia.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.TableCell" /> z <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> pod określonym indeksem.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableCell" /> reprezentujący element w <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj ten indeksator, aby pobrać osoba <xref:System.Web.UI.WebControls.TableCell> w <xref:System.Web.UI.WebControls.TableCellCollection> pod określonym indeksem przy użyciu prostej tablicy notacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak korzystać indeksator <xref:System.Web.UI.WebControls.TableCell> z <xref:System.Web.UI.WebControls.TableCellCollection>. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableCellCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As TableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TableCell -&gt; unit" Usage="tableCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> Do usunięcia z <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Usuwa określony <see cref="T:System.Web.UI.WebControls.TableCell" /> z <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie określonego <xref:System.Web.UI.WebControls.TableCell> z <xref:System.Web.UI.WebControls.TableCellCollection>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A> metodę, aby usunąć środkowej kolumny z tabeli. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy.  
  
 [!code-aspx-csharp[Classic TableCellCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="tableCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks <see cref="T:System.Web.UI.WebControls.TableCell" /> do usunięcia z <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.TableCell" /> z <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie <xref:System.Web.UI.WebControls.TableCell> z <xref:System.Web.UI.WebControls.TableCellCollection> pod określonym indeksem.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Web.UI.WebControls.TableCellCollection.RemoveAt%2A> metodę, aby usunąć czwarty kolumnę z tabeli. Należy pamiętać, że w tym przykładzie <xref:System.Web.UI.WebControls.TableRow.Cells%2A> właściwość <xref:System.Web.UI.WebControls.TableRow> jest wystąpieniem <xref:System.Web.UI.WebControls.TableCellCollection> klasy. Należy również zauważyć, że indeks <xref:System.Web.UI.WebControls.TableRow.Cells%2A> kolekcja jest liczony od zera.  
  
 [!code-aspx-csharp[Classic TableCellCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableCellCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableCellCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableCellCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TableCellCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
        <value>Obiekt, który może służyć do synchronizowania dostępu do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony w tej implementacji jest <xref:System.Web.UI.WebControls.TableCellCollection> sam.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A> właściwości, zobacz <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (o As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ o) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do dodania do kolekcji.</param>
        <summary>Dodaje obiekt do kolekcji.</summary>
        <returns>Indeks, w którym obiekt został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj, należy użyć <xref:System.Web.UI.WebControls.TableCellCollection.Add%2A?displayProperty=nameWithType> metody w celu dodania elementu do <xref:System.Web.UI.WebControls.TableCellCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Add%2A?displayProperty=nameWithType> Metody jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (o As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ o) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony obiekt znajduje się w tej kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Contains%2A> Metody jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (o As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ o) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do zlokalizowania w kolekcji.</param>
        <summary>Wyszukuje określonego obiektu i zwraca liczony od zera indeks pierwszego wystąpienia w tej kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia obiektu w kolekcji; w przeciwnym razie, -1, jeśli obiekt nie znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj, należy użyć <xref:System.Web.UI.WebControls.TableCellCollection.GetCellIndex%2A> metodę, aby uzyskać indeks elementu w <xref:System.Web.UI.WebControls.TableCellCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23IndexOf%2A> Metody jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, o As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ o) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks w kolekcji, w której mają zostać wstawione obiektu.</param>
        <param name="o">Obiekt do wstawienia do kolekcji.</param>
        <summary>Wstawia obiektu do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj, należy użyć <xref:System.Web.UI.WebControls.TableCellCollection.AddAt%2A> metody w celu dodania elementu do <xref:System.Web.UI.WebControls.TableCellCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Insert%2A> Metody jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> Jeśli lista ma stały rozmiar; w przeciwnym razie <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TableCellCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Element pod określonym indeksem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (o As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ o) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do usunięcia z kolekcji.</param>
        <summary>Usuwa obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj, należy użyć <xref:System.Web.UI.WebControls.TableCellCollection.Remove%2A?displayProperty=nameWithType> metodę, aby usunąć element z <xref:System.Web.UI.WebControls.TableCellCollection> obiektu.  
  
 <xref:System.Web.UI.WebControls.TableCellCollection.System%23Collections%23IList%23Remove%2A> Metody jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.TableCellCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>