<Type Name="EditCommandColumn" FullName="System.Web.UI.WebControls.EditCommandColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af920e1c09acf601a6fcf73ba288a5699e824909" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69400975" /></Metadata><TypeSignature Language="C#" Value="public class EditCommandColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditCommandColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EditCommandColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class EditCommandColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditCommandColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type EditCommandColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specjalny typ kolumny dla <see cref="T:System.Web.UI.WebControls.DataGrid" /> kontrolki <see langword="Edit" /> zawierającej przyciski do edytowania elementów danych w każdym wierszu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Cancel` <xref:System.Web.UI.WebControls.DataGrid> `Update`Użyj klasy, aby utworzyć specjalną kolumnę dla kontrolki zawierającej przyciski,, i dla każdego wiersza danych w siatce. `Edit` <xref:System.Web.UI.WebControls.EditCommandColumn> Te przyciski umożliwiają edytowanie wartości wiersza w <xref:System.Web.UI.WebControls.DataGrid> kontrolce.  
  
 Jeśli nie wybrano żadnego wiersza, `Edit` <xref:System.Web.UI.WebControls.EditCommandColumn> w <xref:System.Web.UI.WebControls.DataGrid> formancie zostanie wyświetlony przycisk w obiekcie dla każdego wiersza danych. `Update` <xref:System.Web.UI.WebControls.DataGrid.EditCommand> `Edit` Gdy zostanie kliknięty `Cancel` przycisk dla elementu, zdarzenie jest wywoływane, a przycisk jest zastępowany przyciskami i. `Edit` Musisz podać kod, aby obsłużyć <xref:System.Web.UI.WebControls.DataGrid.EditCommand> zdarzenie. Typowy program obsługi zdarzeń ustawia <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> właściwość na zaznaczony wiersz, a następnie ponownie wiąże dane <xref:System.Web.UI.WebControls.DataGrid> z kontrolką.  
  
> [!NOTE]
>  Należy podać wartości <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A>właściwości, <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A>i <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> . W przeciwnym razie skojarzone przyciski nie pojawią się w <xref:System.Web.UI.WebControls.EditCommandColumn>.  
  
 Przyciski w obszarze <xref:System.Web.UI.WebControls.EditCommandColumn> można ustawić tak, aby były wyświetlane jako hiperłącza lub przyciski push przez <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> ustawienie właściwości.  
  
 Kliknięcie przycisku `Update` lub `Cancel` podnosi <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> odpowiednio zdarzenie lub. <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> Musisz podać kod, aby obsłużyć te zdarzenia.  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> dla zdarzenia aktualizuje dane, <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataGrid> następnie ponownie wiąże dane z kontrolką.  
  
 Typowy program obsługi <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> dla zdarzenia <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> ustawia właściwość na `-1` (aby usunąć zaznaczenie elementu), a <xref:System.Web.UI.WebControls.DataGrid> następnie ponownie wiąże dane z kontrolką.  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.EditCommandColumn> Obiekt może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować skrypt złośliwego klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. Możesz użyć kontrolek walidacji do zweryfikowania danych wejściowych użytkownika przed wyświetleniem tekstu <xref:System.Web.UI.WebControls.DataGrid> wejściowego w kontrolce.  ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Chroń przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web, stosując](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowanie HTML do ciągów i [sprawdzając poprawność danych wejściowych użytkownika na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Domyślnie Walidacja strony jest wykonywana po `Update` kliknięciu przycisku <xref:System.Web.UI.WebControls.EditCommandColumn> w kontrolce. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji, które są określone przez kontrolkę walidacji. Aby zapobiec występowaniu walidacji strony, należy <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> ustawić właściwość `false`na.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać <xref:System.Web.UI.WebControls.EditCommandColumn> obiekt <xref:System.Web.UI.WebControls.DataGrid> do kontrolki.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">dla działania w środowisku hostowanym. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditCommandColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EditCommandColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditCommandColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.EditCommandColumn> klasy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.EditCommandColumn> klasy.  
  
 [!code-csharp[Classic EditCommandColumn.EditCommandColumn Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic EditCommandColumn.EditCommandColumn Example/CS/source.cs#1)]
 [!code-vb[Classic EditCommandColumn.EditCommandColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic EditCommandColumn.EditCommandColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ przycisku dla kolumny.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości. Wartość domyślna to <see langword="LinkButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> , aby określić, czy przyciski w kolumnie mają być wyświetlane jako przyciski lub hiperłącza wypychane.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> właściwości do `Edit` wyświetlania przycisków poleceń jako przycisków wypychania.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony typ przycisku nie jest jedną z <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelText">
      <MemberSignature Language="C#" Value="public virtual string CancelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelText : string with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.CancelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany dla <see langword="Cancel" /> przycisku polecenia <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</summary>
        <value>Podpis wyświetlany dla <see langword="Cancel" /> przycisku polecenia <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> , aby określić tekst, który będzie wyświetlany `Cancel` dla przycisku polecenia w <xref:System.Web.UI.WebControls.EditCommandColumn>.  
  
> [!NOTE]
>  Musisz podać wartość <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> właściwości. W przeciwnym razie przycisk <xref:System.Web.UI.WebControls.EditCommandColumn> polecenianiebędziewyświetlanyw.`Cancel`  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> właściwości w celu podania niestandardowego tekstu `Cancel` dla przycisku polecenia.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po <see langword="Update" /> kliknięciu przycisku <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> w obiekcie.</summary>
        <value><see langword="true" />Jeśli walidacja jest wykonywana po <see langword="Update" /> kliknięciu przycisku <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> w elemencie, <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Walidacja strony jest wykonywana po `Update` kliknięciu przycisku <xref:System.Web.UI.WebControls.EditCommandColumn> w kontrolce. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji, które są określone przez kontrolkę walidacji.  
  
 Możesz określić lub określić, czy Walidacja jest przeprowadzana na kliencie i serwerze, gdy `Update` zostanie kliknięty przycisk <xref:System.Web.UI.WebControls.EditCommandColumn> w kontrolce przy użyciu <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> właściwości. Aby zapobiec wykonywaniu walidacji, należy ustawić <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> właściwość na `false`.  
  
 Gdy <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> wartość właściwości jest ustawiona na `true`, można również użyć <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> właściwości, aby określić `Update` nazwę grupy <xref:System.Web.UI.WebControls.EditCommandColumn> walidacji, dla której przycisk w obiekcie powoduje sprawdzenie poprawności.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="EditText">
      <MemberSignature Language="C#" Value="public virtual string EditText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EditText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditText : string with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.EditText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany dla <see langword="Edit" /> przycisku <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</summary>
        <value>Podpis, który ma być wyświetlany <see langword="Edit" /> dla przycisku <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> , aby określić tekst, który ma być wyświetlany `Edit` dla przycisku w <xref:System.Web.UI.WebControls.EditCommandColumn> kontrolce.  
  
> [!NOTE]
>  Musisz podać wartość <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> właściwości. W przeciwnym <xref:System.Web.UI.WebControls.EditCommandColumn>razie `Edit` przycisk nie będzie wyświetlany w.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> aby podać niestandardowy tekst `Edit` dla przycisku.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="editCommandColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> Zawierający informacje o komórce, która ma zostać zainicjowana.</param>
        <param name="columnIndex">Numer kolumny, w której znajduje się komórka.</param>
        <param name="itemType">Jedna z <see cref="T:System.Web.UI.WebControls.ListItemType" /> wartości.</param>
        <summary>Inicjuje komórkę w kolumnie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateText">
      <MemberSignature Language="C#" Value="public virtual string UpdateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateText : string with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany dla <see langword="Update" /> przycisku polecenia <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</summary>
        <value>Podpis wyświetlany dla <see langword="Update" /> przycisku polecenia <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> , aby określić tekst, który będzie wyświetlany `Update` dla przycisku polecenia w <xref:System.Web.UI.WebControls.EditCommandColumn>.  
  
> [!NOTE]
>  Musisz podać wartość <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> właściwości. W przeciwnym razie przycisk <xref:System.Web.UI.WebControls.EditCommandColumn> polecenianiebędziewyświetlanyw.`Update`  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 Wartość tej właściwości, po ustawieniu, może być automatycznie zapisywana w pliku zasobów przy użyciu narzędzia projektanta. Aby uzyskać więcej informacji, <xref:System.ComponentModel.LocalizableAttribute> Zobacz i [globalizacja i lokalizacja](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> właściwości w celu podania niestandardowego tekstu `Update` dla przycisku polecenia.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.EditCommandColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę kontrolek walidacji, dla których <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> obiekt powoduje sprawdzenie poprawności po zaksięgowaniu z powrotem na serwerze.</summary>
        <value>Grupa kontrolek walidacji, dla których przycisk Aktualizuj w programie <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> powoduje sprawdzenie poprawności po zalogowaniu z powrotem na serwer. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla której przycisk aktualizacji <xref:System.Web.UI.WebControls.EditCommandColumn> w obiekcie powoduje sprawdzenie poprawności po odesłaniu na serwer.  
  
 Właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> właściwości jest ustawiona na `true`. <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> Po określeniu wartości dla <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są sprawdzane, gdy przycisk Aktualizuj <xref:System.Web.UI.WebControls.EditCommandColumn> w obiekcie zapisuje zwrotnie na serwerze. Jeśli nie <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> określisz wartości dla właściwości <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> i właściwość jest ustawiona na `true`, wszystkie kontrolki weryfikacji na stronie, które nie są przypisane do grupy walidacji, <xref:System.Web.UI.WebControls.EditCommandColumn> są weryfikowane po kliknięciu przycisku Aktualizuj w obiekcie zapisuje zwrotnie na serwerze.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>
