<Type Name="Xml" FullName="System.Web.UI.WebControls.Xml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="439b55e2a784b5ff6bcd5cfe837c04d451b8ef19" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Xml : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Xml extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Xml" />
  <TypeSignature Language="VB.NET" Value="Public Class Xml&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Xml : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false, true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyświetla dokument XML bez formatowania lub przy użyciu rozszerzonego arkusza stylów języka przekształcenia XSLT ().</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Określanie danych XML](#specifying_xml_data)  
  
-   [Określanie transformacji XSL](#specifying_an_xsl_transformation)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Użyj <xref:System.Web.UI.WebControls.Xml> formantu, aby wyświetlić zawartość dokumentu XML bez formatowania lub używanie transformacji XSL.  
  
<a name="specifying_xml_data"></a>   
## <a name="specifying-xml-data"></a>Określanie danych XML  
 Dokument XML, aby wyświetlić jest określany przez ustawienie jednej z trzech właściwości. Te trzy właściwości reprezentują różnych typów dokumentów XML, które mogą być wyświetlane. Można wyświetlić <xref:System.Xml.XmlDocument?displayProperty=nameWithType>, ciąg XML lub przez ustawienie właściwości odpowiedniego pliku XML. W poniższej tabeli wymieniono właściwości do określenia dokumentu XML.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Document%2A>|Ustawia przy użyciu dokumentu XML <xref:System.Xml.XmlDocument?displayProperty=nameWithType> obiektu. **Ostrzeżenie:** ta właściwość jest przestarzała. Użyj jednego z innych właściwości wymienione w tej sekcji, aby ustawić zawartość XML <xref:System.Web.UI.WebControls.Xml> formantu.|  
|<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Ustawia dokumentu XML za pomocą ciągu. **Uwaga:** tej właściwości zwykle jest deklaratywnie ustawić przez umieszczenie tekstu między otwarcia i zamknięcia `<asp:Xml>` tagi <xref:System.Web.UI.WebControls.Xml> formantu.|  
|<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Ustawia dokumentu XML przy użyciu pliku.|  
  
> [!NOTE]
>  Co najmniej jedna z właściwości dokumentu XML należy wybrać opcję wyświetlania dokumentu XML. Jeśli więcej niż jedną właściwość dokumentu XML jest ustawiona, zostanie wyświetlony dokument XML, do którego odwołuje się ostatni zestaw właściwości. Dokumenty w innych właściwości są ignorowane.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Określanie transformacji XSL  
 Opcjonalnie można określić arkusza stylów transformacji XSL (XSLT), które formatuje dokument XML, zanim zostaną zapisane przez ustawienie jednej z dwóch właściwości do strumienia wyjściowego. Dwie właściwości reprezentuje różne rodzaje transformacji XSL arkusze stylów, które mogą służyć do formatowania dokumentu XML. Można też dokumentu XML z <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=nameWithType> obiektu lub z transformacji XSL styl pliku arkusza przez ustawienie właściwości odpowiednie. Jeśli jest określony żaden arkusz stylów transformacji XSL, dokument XML jest wyświetlany przy użyciu domyślnego formatu. W poniższej tabeli wymieniono właściwości służącą do arkusza stylów XSL transformacji.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Formatuje dokumentu XML przy użyciu określonego <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiektu. **Uwaga:** Using <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiekt wymaga `Full Trust` uprawnienia.|  
|<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Formatuje dokumentu XML przy użyciu określonego pliku arkusza stylów XSL transformacji.|  
  
> [!NOTE]
>  Arkusz stylów XSL transformacji jest opcjonalna. Nie należy ustawić <xref:System.Web.UI.WebControls.Xml.Transform%2A> lub <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> właściwości. Jeśli ustawiono obie właściwości arkusza stylów transformacji XSL, ostatni zestaw właściwości określa, które transformacji XSL arkusz stylów używany do formatowania dokumentu XML. Inne właściwość jest ignorowana.  
  
 <xref:System.Web.UI.WebControls.Xml> Klasa udostępnia także <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> właściwość, która umożliwia podanie arkusza stylów XSL przekształcania z argumentów opcjonalnych. Argumenty można parametrów transformacji XSL (XSLT) lub obiektów rozszerzeń.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:Xml  
    DocumentSource="uri"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformSource="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób tworzenia <xref:System.Xml.XmlDocument> i <xref:System.Xml.Xsl.XslTransform> obiektów z przykładowego pliku XML i arkusza stylów XSL transformacji. Obiekty są następnie używane przez formant XML do wyświetlenia dokumentu XML.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Xml.Xsl.XslTransform" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Xml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Xml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Xml" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Reprezentujący element przeanalizowany.</param>
        <summary>Powiadamia kontrolkę serwera analizy elementu XML lub HTML i dodaje element do kontrolki serwera <see cref="T:System.Web.UI.ControlCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Xml.AddParsedSubObject%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.Xml> kontrolki serwera.  
  
 [!code-aspx-csharp[CustomXmlAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomXmlAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomXmlAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobject.cs#2)]
 [!code-vb[CustomXmlAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="obj" /> nie jest typu <see cref="T:System.Web.UI.LiteralControl" />.</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje <see cref="P:System.Web.UI.Control.ClientID" /> właściwości i zwraca identyfikator formantu serwera podstawowego.</summary>
        <value>Identyfikator formantu serwera podstawowego.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje <see cref="P:System.Web.UI.Control.Controls" /> właściwości i zwraca podstawowym <see cref="T:System.Web.UI.ControlCollection" /> kolekcji.</summary>
        <value>Podstawowym <see cref="T:System.Web.UI.ControlCollection" /> kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.EmptyControlCollection" /> obiektu.</summary>
        <returns>Zawsze zwraca <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.CreateControlCollection%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDocument ^ Document { System::Xml::XmlDocument ^ get(); void set(System::Xml::XmlDocument ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the XPathNavigator property. Create a System.Xml.XPath.XPathDocument and call CreateNavigator() to create an XPathNavigator. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlDocument" /> do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</summary>
        <value>
          <see cref="T:System.Xml.XmlDocument" /> Do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.Document%2A> Właściwość jest przestarzała. Aby określić plik XML, który będzie wyświetlany w <xref:System.Web.UI.WebControls.Xml> kontrolować, użyj <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> właściwości lub <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> właściwości. Aby uzyskać więcej informacji na temat tych rozwiązań alternatywnych, zobacz Omówienie klasy dla <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 Dokument XML do wyświetlenia w <xref:System.Web.UI.WebControls.Xml> formant został określony w jednej z trzech sposobów. Można określić <xref:System.Xml.XmlDocument?displayProperty=nameWithType> obiektu, ciąg XML lub przez ustawienie właściwości odpowiedniego pliku XML. <xref:System.Web.UI.WebControls.Xml.Document%2A> Właściwość jest używana do określania <xref:System.Xml.XmlDocument?displayProperty=nameWithType> (reprezentujący dokument XML) do wyświetlenia w formancie.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób tworzenia <xref:System.Xml.XmlDocument> i <xref:System.Xml.Xsl.XslTransform> obiektów z przykładowego pliku XML i arkusza stylów XSL transformacji. Obiekty są następnie używane przez formant XML do wyświetlenia dokumentu XML.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocument" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentContent">
      <MemberSignature Language="C#" Value="public string DocumentContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentContent" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia ciąg, który zawiera dokument XML do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</summary>
        <value>Ciąg, który zawiera kod XML dokumentu do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dokument XML do wyświetlenia w <xref:System.Web.UI.WebControls.Xml> formant został określony w jednej z trzech sposobów. Można określić <xref:System.Xml.XmlDocument?displayProperty=nameWithType> obiektu, ciąg XML lub przez ustawienie właściwości odpowiedniego pliku XML. <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> Właściwość jest używana do określenia ciągu XML (reprezentujący dokument XML) do wyświetlenia w formancie. <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> Właściwość nie jest zwykle programowo Ustaw lub Ustaw jako atrybut kontrolki. Zamiast tego ciągu XML jest zwykle deklaratywnie ustawić przez umieszczenie tekstu między otwarcia i zamknięcia `<asp:Xml>` znaczniki formantu.  
  
> [!NOTE]
>  Mimo że <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> właściwość zawiera zarówno `get` i `set` akcesorów tylko `set` przydaje się metody dostępu. Jeśli używasz `get` dostępu, <xref:System.String.Empty?displayProperty=nameWithType> jest zwracany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentSource">
      <MemberSignature Language="C#" Value="public string DocumentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do dokumentu XML do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</summary>
        <value>Ścieżka do dokumentu XML do wyświetlenia w <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dokument XML do wyświetlenia w <xref:System.Web.UI.WebControls.Xml> formant został określony w jednej z trzech sposobów. Można określić <xref:System.Xml.XmlDocument?displayProperty=nameWithType> obiektu, ciąg XML lub przez ustawienie właściwości odpowiedniego pliku XML. <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> Właściwość jest używana do określenia ścieżki do pliku XML (reprezentujący dokument XML) do wyświetlenia w formancie. Możesz użyć względny lub ścieżką bezwzględną. Ścieżka względna odnosi się lokalizację pliku do lokalizacji formularzy sieci Web formantu strony lub użytkownika bez określania pełną ścieżkę na serwerze. Ścieżka jest względną wobec lokalizacji strony sieci Web. Ułatwia to przenieść całej lokacji do innego katalogu na serwerze bez aktualizowania ścieżkę do pliku w kodzie. Ścieżka bezwzględna zapewnia pełną ścieżkę przeniesienie do innego katalogu witryny wymaga zaktualizowania kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania dokumentu XML przy użyciu transformacji XSL w <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje <see cref="P:System.Web.UI.Control.EnableTheming" /> właściwości. Ta właściwość nie jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.Xml" /> klasy.</summary>
        <value>Zawsze zwraca <see langword="false" />. Ta właściwość nie jest obsługiwana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.EnableTheming%2A> Właściwość jest dziedziczona z <xref:System.Web.UI.Control> klasy, ale nie ma zastosowania do <xref:System.Web.UI.WebControls.Xml> klasy. Zgłasza wyjątek, wszelkie próby, aby ustawić wartość tej właściwości <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Aby ustawić wartość tej właściwości jest podejmowana próba.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator formantu, który ma zostać odnaleziona.</param>
        <summary>Przeszukuje strony kontenera nazewnictwa dla formantu określonego serwera.</summary>
        <returns>Określony formant; w przeciwnym razie <see langword="null" /> Jeśli określony formant nie istnieje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastępuje <see cref="M:System.Web.UI.Control.Focus" /> metody. Ta metoda nie jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.Xml" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.Focus%2A> Metody jest odziedziczone <xref:System.Web.UI.Control> klasy, ale nie ma zastosowania do <xref:System.Web.UI.WebControls.Xml> klasy. Próba wywołania metody zgłasza <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Próby wywołania tej metody.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane czasu projektowania formantu.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> Zawierających dane czasu projektowania <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.GetDesignModeState%2A> Metoda jest metodą pomocnika używany do pobierania bieżący stan czasu projektowania <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera zawiera formanty podrzędne.</summary>
        <returns>
          <see langword="true" /> Jeśli formant zawiera inne formanty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Wynik strumienia wyjściowego.</param>
        <summary>Renderuje wyniki do strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.Xml.Render%2A> metody w formancie niestandardowego serwera, aby <xref:System.Web.UI.WebControls.Xml> formant zawsze jest wyświetlany wraz z obrazem.  
  
 [!code-aspx-csharp[CustomXmlRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_rendercs.aspx#1)]
 [!code-aspx-vb[CustomXmlRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_rendervb.aspx#1)]  
  
 [!code-csharp[CustomXmlRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_render.cs#2)]
 [!code-vb[CustomXmlRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje <see cref="P:System.Web.UI.Control.SkinID" /> właściwości. Ta właściwość nie jest obsługiwana przez <see cref="T:System.Web.UI.WebControls.Xml" /> klasy.</summary>
        <value>Zawsze zwraca ciąg pusty (""). Ta właściwość nie jest obsługiwana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.SkinID%2A> Właściwość jest dziedziczona z <xref:System.Web.UI.Control> klasy, ale nie ma zastosowania do <xref:System.Web.UI.WebControls.Xml> klasy. Zgłasza wyjątek, wszelkie próby, aby ustawić wartość tej właściwości <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Aby ustawić wartość tej właściwości jest podejmowana próba.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XslTransform Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XslTransform Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As XslTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XslTransform ^ Transform { System::Xml::Xsl::XslTransform ^ get(); void set(System::Xml::Xsl::XslTransform ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XslTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Xsl.XslTransform" /> obiekt, który formatuje dokument XML, zanim zostaną zapisane w strumieniu wyjściowym.</summary>
        <value>
          <see cref="T:System.Xml.Xsl.XslTransform" /> Który formatuje dokumentu XML, zanim zostaną zapisane w strumieniu wyjściowym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z <xref:System.Web.UI.WebControls.Xml> sterowania do wyświetlenia dokumentu XML, można opcjonalnie określić arkusza stylów Extensible Stylesheet Language Transformation (XSLT), które formatuje dokument XML, zanim zostaną zapisane w strumieniu wyjściowym w jeden z dwóch sposobów. Można sformatować dokument XML przy użyciu jednej <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiektu lub plik arkusza stylów XSL transformacji. Jeśli jest określony żaden dokument transformacji XSL, dokument XML jest wyświetlany przy użyciu domyślnego formatu. <xref:System.Web.UI.WebControls.Xml.Transform%2A> Właściwość jest używana do określania <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiektu (reprezentujący dokument transformacji XSL) używany do formatowania dokumentu w formacie XML, zanim zostaną zapisane w strumieniu wyjściowym.  
  
> [!NOTE]
>  Przy użyciu <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiekt wymaga `Full Trust` uprawnienia.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób tworzenia <xref:System.Xml.XmlDocument> i <xref:System.Xml.Xsl.XslTransform> obiektów z przykładowego pliku XML i arkusza stylów XSL transformacji. Obiekty są następnie używane przez formant XML do wyświetlenia dokumentu XML.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Xsl.XsltArgumentList" /> zawierający listę opcjonalne argumenty przekazane do arkusza stylów i używane podczas Extensible Stylesheet Language Transformation (XSLT).</summary>
        <value>A <see cref="T:System.Xml.Xsl.XsltArgumentList" /> zawierający listę argumentów opcjonalnych przekazany do arkusza stylów i użyty podczas transformacji XSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> właściwość, aby zapewnić arkusza stylów XSL przekształcania Argumenty opcjonalne. Argumenty można parametrów XSLT lub obiektów rozszerzeń.  
  
 Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=nameWithType> , zobacz [XsltArgumentList parametry arkusza stylów i obiektów rozszerzenia](~/docs/standard/data/xml/xsltargumentlist-for-style-sheet-parameters-and-extension-objects.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="TransformSource">
      <MemberSignature Language="C#" Value="public string TransformSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformSource" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransformSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do arkusza stylów Extensible Stylesheet Language Transformation (XSLT), które formatuje dokument XML, zanim zostaną zapisane w strumieniu wyjściowym.</summary>
        <value>Ścieżka do arkusza stylów transformacji XSL, które formatuje dokument XML, zanim zostaną zapisane w strumieniu wyjściowym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z <xref:System.Web.UI.WebControls.Xml> sterowania do wyświetlenia dokumentu XML, można opcjonalnie określić arkusza stylów transformacji XSL, które formatuje dokument XML, zanim zostaną zapisane w strumieniu wyjściowym w jeden z dwóch sposobów. Dokument XML z albo można sformatować <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> obiektu lub z transformacji XSL styl pliku arkusza. Jeśli jest określony żaden arkusz stylów transformacji XSL, dokument XML jest wyświetlany przy użyciu domyślnego formatu. <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> Właściwość jest używana do określenia ścieżki do pliku arkusza stylów dla transformacji XSL (reprezentujący arkusza stylów XSL przekształcania) używany do formatowania dokumentu w formacie XML, zanim zostaną zapisane w strumieniu wyjściowym. Możesz użyć względny lub ścieżką bezwzględną. Ścieżka względna odnosi się lokalizację pliku do lokalizacji formularzy sieci Web formantu strony lub użytkownika bez określania pełną ścieżkę na serwerze. Ścieżka jest względną wobec lokalizacji strony sieci Web. Ułatwia to przenieść całej lokacji do innego katalogu na serwerze bez aktualizowania ścieżkę do pliku w kodzie. Ścieżka bezwzględna zapewnia pełną ścieżkę przeniesienie do innego katalogu witryny wymaga zaktualizowania kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wyświetlania dokumentu XML przy użyciu transformacji XSL w <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="XPathNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator XPathNavigator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.XPathNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Property XPathNavigator As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ XPathNavigator { System::Xml::XPath::XPathNavigator ^ get(); void set(System::Xml::XPath::XPathNavigator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia model kursora do nawigowania i edytowania danych XML skojarzonych z <see cref="T:System.Web.UI.WebControls.Xml" /> formantu.</summary>
        <value>
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może służyć do skojarzenia <xref:System.Xml.XPath.XPathNavigator> obiekt z <xref:System.Web.UI.WebControls.Xml> formantu.  
  
 <xref:System.Xml.XPath.XPathNavigator> Obiekt jest tworzony z klasy, która implementuje <xref:System.Xml.XPath.IXPathNavigable> interfejsu, takich jak <xref:System.Xml.XPath.XPathDocument> i <xref:System.Xml.XmlDocument> klasy. <xref:System.Xml.XPath.XPathNavigator> obiekty utworzone przez <xref:System.Xml.XPath.XPathDocument> obiekty są tylko do odczytu i <xref:System.Xml.XPath.XPathNavigator> obiekty utworzone przez <xref:System.Xml.XmlDocument> obiekty mogą być edytowane. <xref:System.Xml.XPath.XPathNavigator> Stanu tylko do odczytu lub nie można edytować obiektu jest określany przy użyciu <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> właściwość <xref:System.Xml.XPath.XPathNavigator> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>