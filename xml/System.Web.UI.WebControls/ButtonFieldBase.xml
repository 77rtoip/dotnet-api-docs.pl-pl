<Type Name="ButtonFieldBase" FullName="System.Web.UI.WebControls.ButtonFieldBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="159ef330074c42614f1e835131c31eefc5c0e5e9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401751" /></Metadata><TypeSignature Language="C#" Value="public abstract class ButtonFieldBase : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ButtonFieldBase extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonFieldBase&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonFieldBase abstract : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type ButtonFieldBase = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako abstrakcyjna klasa bazowa dla pól przycisków, takich jak <see cref="T:System.Web.UI.WebControls.ButtonField" /> lub <see cref="T:System.Web.UI.WebControls.CommandField" /> klasy. <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> Klasa zawiera metody i właściwości, które są wspólne dla wszystkich pól przycisków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase> Klasa jest abstrakcyjną klasą bazową dla pól przycisków i zawiera metody i właściwości, które są wspólne dla wszystkich pól przycisków. Ponieważ ta klasa jest abstrakcyjna, nie można utworzyć jej wystąpienia bezpośrednio. Zamiast tego należy utworzyć wystąpienie klasy nieabstrakcyjnej, która dziedziczy z <xref:System.Web.UI.WebControls.ButtonFieldBase> klasy, takiej <xref:System.Web.UI.WebControls.ButtonField> jak lub <xref:System.Web.UI.WebControls.CommandField> .  
  
 Obiekt pochodzący od <xref:System.Web.UI.WebControls.ButtonFieldBase> jest używany przez formanty powiązane z danymi (takie <xref:System.Web.UI.WebControls.GridView> jak kontrolki i <xref:System.Web.UI.WebControls.DetailsView> ), aby wyświetlić jeden lub więcej przycisków dla każdego wyświetlonego rekordu. Pole przycisku jest wyświetlane inaczej w zależności od kontrolki powiązanej z danymi, w której jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView> kontrolka Wyświetla pole Button jako kolumnę, <xref:System.Web.UI.WebControls.DetailsView> natomiast formant wyświetla go jako wiersz.  
  
 Kliknięcie przycisku w polu przycisku wywołuje zdarzenie polecenia nadrzędnego formantu powiązanego z danymi. Można podać procedurę niestandardową, która będzie wykonywana po kliknięciu przycisku, dostarczając procedurę obsługi zdarzeń dla zdarzenia polecenia.  
  
> [!NOTE]
>  Formant wywołuje zdarzenie, podczas gdy <xref:System.Web.UI.WebControls.DetailsView> kontrolka wywołuje zdarzenie.<xref:System.Web.UI.WebControls.DetailsView.ItemCommand> <xref:System.Web.UI.WebControls.GridView.RowCommand> <xref:System.Web.UI.WebControls.GridView>  
  
 Aby określić typ przycisku do wyświetlenia, użyj <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwości. Aby pokazać lub ukryć sekcję <xref:System.Web.UI.WebControls.ButtonFieldBase> nagłówka obiektu, należy <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> ustawić właściwość.  
  
> [!NOTE]
>  Niektóre kontrolki powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> kontrolka) mogą pokazać lub ukryć tylko całą sekcję nagłówka kontrolki. Te kontrolki powiązane z danymi nie obsługują <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwości dla poszczególnych pól przycisku. Aby pokazać lub ukryć całą sekcję nagłówka kontrolki powiązanej z danymi (jeśli jest dostępna), użyj `ShowHeader` właściwości formantu.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> klasy należy zastąpić następujący element członkowski:. <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /></para></block>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonFieldBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonFieldBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonFieldBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ Klasa jest klasą abstrakcyjną, nie można bezpośrednio <xref:System.Web.UI.WebControls.ButtonFieldBase> utworzyć obiektu. <xref:System.Web.UI.WebControls.ButtonFieldBase>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType ButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ przycisku, który ma być wyświetlany w polu przycisku.</summary>
        <value>Jedna z <see cref="T:System.Web.UI.WebControls.ButtonType" /> wartości. Wartość domyślna to <see langword="ButtonType.Link" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> , aby określić, który typ przycisku ma być wyświetlany w polu przycisku. Poniższa tabela zawiera listę dostępnych typów przycisków.  
  
|Wartość typu przycisku|Wyświetla jako|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ButtonType.Button>|Kontrolka przycisku.|  
|<xref:System.Web.UI.WebControls.ButtonType.Image>|Przycisk z obrazem.|  
|<xref:System.Web.UI.WebControls.ButtonType.Link>|Link.|  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> właściwości, aby określić, że przyciski są wyświetlane <xref:System.Web.UI.WebControls.ButtonField> w obiekcie <xref:System.Web.UI.WebControls.GridView> kontrolki.  
  
 [!code-aspx-csharp[ButtonFieldBaseButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseButtonType/CS/buttonfieldbasebuttontypecs.aspx#1)]
 [!code-aspx-vb[ButtonFieldBaseButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseButtonType/VB/buttonfieldbasebuttontypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" /> właściwości nie jest jedną <see cref="T:System.Web.UI.WebControls.ButtonType" /> z wartości.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonFieldBase.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> obiekcie.</summary>
        <value><see langword="true" />Aby przeprowadzić walidację po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> elemencie; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla <xref:System.Web.UI.WebControls.ButtonFieldBase> której obiekt powoduje sprawdzenie poprawności po odesłaniu na serwer.  
  
 Właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> właściwości jest ustawiona na `true`. <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> Po określeniu wartości dla <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są weryfikowane <xref:System.Web.UI.WebControls.ButtonFieldBase> po ponownym zaksięgowaniu na serwerze. <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> Jeśli nie określisz wartości właściwości <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> i właściwość jest ustawiona na `true`, wszystkie kontrolki weryfikacji na stronie, które nie są przypisane <xref:System.Web.UI.WebControls.ButtonFieldBase> do grupy walidacji, są weryfikowane w przypadku powrotu z powrotem do serwera.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> aby przeprowadzić walidację po kliknięciu przycisku <xref:System.Web.UI.WebControls.ButtonField> w obiekcie <xref:System.Web.UI.WebControls.GridView> kontrolki.  
  
 [!code-aspx-csharp[ButtonFieldBaseCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/CS/buttonfieldbasecausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldBaseCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/VB/buttonfieldbasecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonFieldBase.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">, <see cref="T:System.Web.UI.WebControls.DataControlField" /> Do którego mają zostać skopiowane właściwości bieżącego <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" />.</param>
        <summary>Kopiuje właściwości bieżącego obiektu, który jest pochodną <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> klasy do określonego <see cref="T:System.Web.UI.WebControls.DataControlField" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase> <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> `newField` <xref:System.Web.UI.WebControls.DataControlField> Metoda jest metodą pomocnika, która jest używana przez metodę do kopiowania właściwości bieżącego obiektu, który jest pochodną klasy do obiektu, który jest przesyłany do parametru. <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy formantów powinni zastąpić <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodę, aby skopiować wszystkie właściwości, które są dodawane do kontrolki niestandardowej. Podczas zastępowania <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metody w klasie pochodnej należy <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> wywołać metodę klasy bazowej, aby zostały skopiowane właściwości klasy bazowej.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public override bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.ButtonFieldBase.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sekcja nagłówka jest wyświetlana w <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> obiekcie.</summary>
        <value><see langword="true" />Aby wyświetlić sekcję nagłówka; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> , aby pokazać lub ukryć sekcję <xref:System.Web.UI.WebControls.ButtonFieldBase> nagłówka obiektu. Aby wyświetlić sekcję nagłówka, ustaw <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwość na. `true`  
  
> [!NOTE]
>  Niektóre kontrolki powiązane z danymi (takie jak <xref:System.Web.UI.WebControls.GridView> kontrolka) mogą pokazać lub ukryć tylko całą sekcję nagłówka kontrolki. Te kontrolki powiązane z danymi nie obsługują <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwości dla poszczególnych pól przycisku. Aby pokazać lub ukryć całą sekcję nagłówka kontrolki powiązanej z danymi (jeśli jest dostępna), użyj `ShowHeader` właściwości formantu.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> właściwości do wyświetlania sekcji <xref:System.Web.UI.WebControls.ButtonField> nagłówka obiektu w <xref:System.Web.UI.WebControls.DetailsView> kontrolce.  
  
 [!code-aspx-csharp[ButtonFieldBaseShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseShowHeader/CS/buttonfieldbaseshowheadercs.aspx#1)]
 [!code-aspx-vb[ButtonFieldBaseShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseShowHeader/VB/buttonfieldbaseshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę grupy kontrolek walidacji do zweryfikowania, gdy zostanie kliknięty przycisk <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> w obiekcie.</summary>
        <value>Nazwa grupy walidacji do zweryfikowania po kliknięciu przycisku w <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> elemencie. Wartość domyślna to ciąg pusty (""), który wskazuje, że <see cref="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" /> właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić grupę walidacji do zweryfikowania po kliknięciu przycisku <xref:System.Web.UI.WebControls.ButtonFieldBase> w obiekcie. <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> Sprawdzane są tylko kontrolki walidacji w określonej grupie walidacji.  
  
> [!NOTE]
>  Właściwość musi mieć `true` ustawioną wartość <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> , aby Właściwość miała efekt. <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A>  
  
 Aby uzyskać więcej informacji na temat grup walidacji, zobacz <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A?displayProperty=nameWithType>.  
  
 Wartość tej właściwości jest przechowywana w stanie widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> właściwości, aby określić, że tylko określona grupa formantów walidacji jest sprawdzana po kliknięciu przycisku <xref:System.Web.UI.WebControls.ButtonField> w obiekcie <xref:System.Web.UI.WebControls.GridView> kontrolki.  
  
 [!code-aspx-csharp[ButtonFieldBaseCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/CS/buttonfieldbasecausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldBaseCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/VB/buttonfieldbasecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      </Docs>
    </Member>
  </Members>
</Type>
