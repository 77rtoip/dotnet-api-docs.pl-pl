<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="397ed9376985c69513834ee2e1edcf9a0819adeb" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39931346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, i <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Klasy umożliwia zbadanie wyników operacje na danych, które zostały wykonane przez <xref:System.Web.UI.WebControls.LinqDataSource> kontroli. A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> obiekt jest przekazywany do obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, i <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzenia <xref:System.Web.UI.WebControls.LinqDataSource> kontroli.  
  
 Jeśli operacja danych została ukończona pomyślnie, wynikowy obiekt danych, są przechowywane w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość `null`. W przypadku niepowodzenia operacji danych wyjątek, który wystąpił podczas operacji danych są przechowywane w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwości i <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość `null`. Jeśli obsługi wyjątków, reprezentowane przez <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> , właściwością <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> właściwość `true` tak, aby nie zostanie zgłoszony wyjątek.  
  
 Możesz pobrać całkowita liczba rekordów danych zwrócone w wyniku zapytania za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzeń. W procedurze obsługi zdarzeń Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość `null`, produktu, identyfikator jest pobierana z obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości. Produkt, identyfikator klucza podstawowego dla tabeli a jest ustawiana przez bazę danych, dlatego wartość nie jest znany do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowane, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest równa `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Zostanie następnie ustawiona właściwość `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Błąd, który wystąpił podczas operacji danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> przy użyciu wyjątek, który wystąpił w wyniku operacji danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany, gdy wyjątek jest zgłaszany podczas operacji danych. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Zostaje automatycznie ustalona `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Obiekt, który zawiera dane, które powstały na skutek operacja na danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> przy użyciu obiektu, który zawiera dane z operacji danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany, gdy operacja na danych zakończy się bez błędów. `result` Parametr zawiera obiekt, który reprezentuje wynik operacji danych. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Zostaje automatycznie ustalona `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Obiekt, który zawiera dane, które powstały na skutek operacja na danych.</param>
        <param name="totalRowCount">Liczba wierszy, które zostały zwrócone przez operację pobierania danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy z obiektu, który zawiera dane z operacji danych i liczba zwracanych wierszy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który został wygenerowany podczas operacji danych.</summary>
        <value>
          <see cref="T:System.Exception" /> Obiekt, który reprezentuje wyjątek, jeśli wystąpi błąd; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany podczas operacji danych, wyjątek jest przechowywany w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwości. Można utworzyć procedury obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, i <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzeń i pobieranie wyjątek, jeśli występują, za pośrednictwem <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzeń. W procedurze obsługi zdarzeń Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość `null`, produktu, identyfikator jest pobierana z obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości. Identyfikator produktu jest klucz podstawowy dla tabeli i jest ustawiony przez bazę danych, dlatego wartość nie jest znany, do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowane, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest równa `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Zostanie następnie ustawiona właściwość `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy jej powinna nie zostanie wygenerowany ponownie.</summary>
        <value>
          <see langword="true" /> Jeśli wyjątek został obsłużony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć procedury obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, i <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzeń, aby sprawdzić wszystkie wyjątki, które wystąpiły podczas tych czynności. Jeśli możesz obsłużyć wyjątek i nie chcesz zostanie wygenerowany ponownie ustawić <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> właściwość `true`. Jeśli nie ustawisz <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> właściwości `true`, wyjątek będzie propagowane do następnego programu obsługi zdarzeń w stosie wywołań.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzeń. W procedurze obsługi zdarzeń Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość `null`, produktu, identyfikator jest pobierana z obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości. Produkt, identyfikator klucza podstawowego dla tabeli a jest ustawiana przez bazę danych, dlatego wartość nie jest znany do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowane, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest równa `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Zostanie następnie ustawiona właściwość `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wynik operacji danych.</summary>
        <value>Obiekt, który zawiera dane z operacji danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość, aby sprawdzić wartości zwracane z operacji danych. Można pobrać parametrów wyjściowych z operacji danych lub modyfikować wartości zwracanych w wyniku zapytania.  
  
 Dane przechowywane w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości zależy od typu operacji danych, która została wykonana. Po usunięciu danych <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość zawiera obiekt o typie określonym w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości przy użyciu oryginalnych wartości, które zostały usunięte ze źródła danych. Podczas wstawiania lub aktualizacji danych <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość zawiera obiekt o typie określonym w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> własności na nowe wartości, którzy zostali zapisani w źródle danych. Po wybraniu danych <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość zawiera wyniki zapytania.  
  
 Jeśli zapytanie select obejmuje grupowania danych lub wybrać podzbiór właściwości z typem określonym w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość zawiera obiekt utworzony dynamicznie typu. W przeciwnym razie <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwość zawiera obiekt o typie określonym w <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzeń. W procedurze obsługi zdarzeń Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość `null`, produktu, identyfikator jest pobierana z obiektu w <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości. Produkt, identyfikator klucza podstawowego dla tabeli a jest ustawiana przez bazę danych, dlatego wartość nie jest znany do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowane, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest równa `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Zostanie następnie ustawiona właściwość `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera łączną liczbę wierszy w zestawie danych z operacją pobierania danych.</summary>
        <value>Całkowita liczba wierszy w zestawie danych, od operacji pobierania danych; -1, jeśli <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> obiekt został utworzony podczas operacji modyfikacji danych; -1, jeśli włączono dostosować stronicowania, ustawiając <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> do <see langword="true" /> i ustawiając <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> do <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości do pobrania to liczba rekordów w zestawie danych podczas operacji pobierania danych. Typowo ta właściwość pobrać w sytuacji, gdy są wyświetlane strony danych i chcesz wyświetlać całkowitej liczbie rekordów.  
  
 Gdy jest trwa stronicowanych danych, wartości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwość może być inny niż rzeczywista liczba wierszy, które są zwracane przez zapytanie. Jest to spowodowane zapytanie zwraca tylko liczbę wierszy, które są potrzebne do tej strony danych.  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Właściwość zawiera liczbę rekordów w wyniku zapytania tylko wtedy, gdy jest on dostępny w obsłudze zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzeń. Gdy właściwość jest dostępny program obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, lub <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzenia <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwość zawiera wartość -1.  
  
 Wartość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> zależy od właściwości <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwość <xref:System.Web.UI.WebControls.LinqDataSource> kontroli, a następnie na `AllowPaging` właściwości kontrolki powiązania danych. W poniższej tabeli przedstawiono możliwe wartości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości.  
  
|Właściwość AutoPage kontrolka LinqDataSource|Właściwość AllowPaging właściwości kontrolki powiązania danych|Właściwość TotalRowCount|Wynik|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Liczba rekordów dla zapytania.|Dane są automatycznie stronicowanej.|  
|`false`|`false`|Liczba rekordów dla zapytania.|Dane nie są stronicowane.|  
|`true`|`false`|-1|Dane nie są stronicowane.|  
|`false`|`true`|Wartość, która została przypisana do <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> właściwości programu obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> zdarzeń.|Danych jest stronicowanej zgodnie z wartości określona podczas dostosowane stronicowania.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano strony sieci Web z <xref:System.Web.UI.WebControls.LinqDataSource> kontroli <xref:System.Web.UI.WebControls.GridView> kontroli i <xref:System.Web.UI.WebControls.Literal> kontroli. <xref:System.Web.UI.WebControls.LinqDataSource> Kontroli definiuje zdarzenia obsługi dla <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzeń.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 Poniższy przykład przedstawia kod dla programu obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzeń. Wartość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwość jest przypisany do <xref:System.Web.UI.WebControls.Literal> kontroli.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>