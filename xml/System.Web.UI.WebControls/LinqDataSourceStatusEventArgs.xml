<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1eaa7efb46dc1e004579fef514fcd8db71c9ed26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69390842" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />Dostarcza dane dla zdarzeń, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" /> <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, i .<see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa umożliwia badanie wyników operacji na danych, które zostały wykonane <xref:System.Web.UI.WebControls.LinqDataSource> przez formant. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> Obiektjest<xref:System.Web.UI.WebControls.LinqDataSource.Updated> przesyłany do obsługi zdarzeń dla zdarzeń<xref:System.Web.UI.WebControls.LinqDataSource> ,,, i kontrolki. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>  
  
 Jeśli operacja danych zakończyła się pomyślnie, obiekt danych wyjściowych jest przechowywany <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> we właściwości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> i właściwość jest `null`. Jeśli operacja danych nie powiodła się, wyjątek, który wystąpił podczas operacji na danych, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> jest przechowywany we <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości i `null`właściwość jest. Jeśli został obsłużony wyjątek reprezentowany przez <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość, należy <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> ustawić właściwość na `true` tak, aby wyjątek nie został wygenerowany.  
  
 Pobierasz łączną liczbę rekordów danych zwracanych z zapytania przez <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenia. W programie obsługi zdarzeń, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość ma `null`wartość, identyfikator produktu jest pobierany <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> z obiektu we właściwości. Identyfikator produktu jest kluczem podstawowym tabeli i jest ustawiany przez bazę danych, w związku z czym wartość nie jest znana do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowany, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest `null`równa. Właściwość jest następnie ustawiana na `true`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Błąd, który wystąpił podczas operacji na danych.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy przy użyciu wyjątku, który wystąpił w wyniku operacji na danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany, gdy wyjątek jest zgłaszany podczas operacji na danych. Właściwość jest automatycznie ustawiana na `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Obiekt, który zawiera dane powstałe w wyniku operacji na danych.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy przy użyciu obiektu, który zawiera dane z operacji danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany, gdy operacja danych została zakończona bez błędu. `result` Parametr zawiera obiekt, który reprezentuje wynik operacji danych. Właściwość jest automatycznie ustawiana na `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Obiekt, który zawiera dane powstałe w wyniku operacji na danych.</param>
        <param name="totalRowCount">Liczba wierszy zwróconych z operacji pobierania danych.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> klasy z obiektem, który zawiera dane z operacji danych i liczbę zwracanych wierszy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który został zgłoszony podczas operacji na danych.</summary>
        <value>Obiekt, który reprezentuje wyjątek, jeśli wystąpił błąd; <see langword="null" />w przeciwnym razie. <see cref="T:System.Exception" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest wywoływany podczas operacji na danych, wyjątek jest przechowywany we <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwości. Obsługę <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>zdarzeń można utworzyć dla zdarzeń, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>,, i <xref:System.Web.UI.WebControls.LinqDataSource.Updated> i pobrać wyjątek, jeśli istnieje, przez <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenia. W programie obsługi zdarzeń, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość ma `null`wartość, identyfikator produktu jest pobierany <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> z obiektu we właściwości. Identyfikator produktu jest kluczem podstawowym tabeli i jest ustawiany przez bazę danych, więc wartość nie jest znana do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowany, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest `null`równa. Właściwość jest następnie ustawiana na `true`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony i czy nie należy go ponownie zgłaszać.</summary>
        <value><see langword="true" />Jeśli wyjątek został obsłużony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>utworzyć obsługę zdarzeń dla zdarzeń, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, i <xref:System.Web.UI.WebControls.LinqDataSource.Updated> , aby przejrzeć wyjątki, które wystąpiły podczas tych operacji. Jeśli wystąpi wyjątek i nie chcesz, aby był on ponownie zgłaszany, ustaw <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> właściwość na. `true` Jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> właściwość nie zostanie ustawiona na `true`, wyjątek zostanie rozpropagowany do następnego programu obsługi zdarzeń w stosie wywołań.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenia. W programie obsługi zdarzeń, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość ma `null`wartość, identyfikator produktu jest pobierany <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> z obiektu we właściwości. Identyfikator produktu jest kluczem podstawowym tabeli i jest ustawiany przez bazę danych, w związku z czym wartość nie jest znana do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowany, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest `null`równa. Właściwość jest następnie ustawiana na `true`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje wynik operacji na danych.</summary>
        <value>Obiekt, który zawiera dane z operacji danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Właściwość służy do badania wartości zwracanych z operacji danych. Parametry wyjściowe można pobrać z operacji danych lub zmodyfikować wartości zwracane z zapytania.  
  
 Dane przechowywane we <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> właściwości są zależne od typu wykonywanej operacji na danych. Po usunięciu danych <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Właściwość zawiera obiekt typu określonego <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> we właściwości z oryginalnymi wartościami, które zostały usunięte ze źródła danych. Gdy wstawiasz lub aktualizujesz dane, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Właściwość zawiera obiekt typu określonego <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> we właściwości z nowymi wartościami, które zostały zapisane w źródle danych. Po wybraniu danych <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Właściwość zawiera wyniki zapytania.  
  
 Jeśli zapytanie SELECT obejmuje grupowanie danych lub wybranie podzestawu właściwości z typu określonego we <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> , właściwość zawiera obiekt typu, który jest tworzony dynamicznie. W przeciwnym <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> razie Właściwośćzawieraobiekttypu<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> określonego we właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> zdarzenia. W programie obsługi zdarzeń, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość ma `null`wartość, identyfikator produktu jest pobierany <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> z obiektu we właściwości. Identyfikator produktu jest kluczem podstawowym tabeli i jest ustawiany przez bazę danych, w związku z czym wartość nie jest znana do momentu zakończenia operacji wstawiania. Komunikat o wyjątku jest rejestrowany, jeśli <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> właściwość nie jest `null`równa. Właściwość jest następnie ustawiana na `true`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera łączną liczbę wierszy w zestawie danych z operacji pobierania danych.</summary>
        <value>Całkowita liczba wierszy w zestawie danych w ramach operacji pobierania danych; -1 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> , jeśli obiekt został utworzony podczas operacji modyfikacji danych;-1 Jeśli włączono niestandardowe stronicowanie przez ustawienie <see langword="false" /> <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> do <see langword="true" />. <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> aby pobrać liczbę rekordów w zestawie danych podczas operacji pobierania danych. Zazwyczaj ta właściwość jest pobierana, gdy wyświetlane są strony danych i chcesz wyświetlić łączną liczbę rekordów.  
  
 Gdy dane są stronicowane, wartość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości może różnić się od rzeczywistej liczby wierszy zwracanych przez zapytanie. Wynika to z faktu, że zapytanie zwraca tylko liczbę wierszy, które są zbędne dla tej strony danych.  
  
 Właściwość zawiera liczbę rekordów z zapytania tylko wtedy, gdy jest on dostępny w programie obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Selected> dla zdarzenia. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Po uzyskaniu dostępu do właściwości z programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, lub <xref:System.Web.UI.WebControls.LinqDataSource.Updated> zdarzenia, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Właściwość zawiera-1.  
  
 Wartość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości zależy od <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> właściwości <xref:System.Web.UI.WebControls.LinqDataSource> kontrolki i `AllowPaging` właściwości kontrolki powiązanej z danymi. Poniższa tabela zawiera podsumowanie możliwych wartości <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości.  
  
|Właściwość AutoPage kontrolki LinqDataSource|Właściwość Właściwość AllowPaging kontrolki powiązanej z danymi|Właściwość TotalRowCount|Wynik|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Liczba rekordów dla zapytania.|Dane są automatycznie stronicowane.|  
|`false`|`false`|Liczba rekordów dla zapytania.|Dane nie są stronicowane.|  
|`true`|`false`|-1|Dane nie są stronicowane.|  
|`false`|`true`|Wartość, która została przypisana do <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> właściwości w programie obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> dla zdarzenia.|Dane są stronicowane zgodnie z wartościami określonymi podczas dostosowywania stronicowania.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje stronę sieci Web z <xref:System.Web.UI.WebControls.LinqDataSource> kontrolką <xref:System.Web.UI.WebControls.GridView> , kontrolką i <xref:System.Web.UI.WebControls.Literal> kontrolką. Kontrolka definiuje procedurę obsługi zdarzeń <xref:System.Web.UI.WebControls.LinqDataSource.Selected> dla zdarzenia. <xref:System.Web.UI.WebControls.LinqDataSource>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 Poniższy przykład pokazuje kod dla programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.LinqDataSource.Selected> zdarzenia. Wartość <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> właściwości jest przypisana <xref:System.Web.UI.WebControls.Literal> do kontrolki.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
