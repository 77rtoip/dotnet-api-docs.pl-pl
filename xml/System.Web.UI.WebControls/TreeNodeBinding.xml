<Type Name="TreeNodeBinding" FullName="System.Web.UI.WebControls.TreeNodeBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="246f489241e37641071dee563d85f8a975bbdd87" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TreeNodeBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeBinding extends System.Object implements class System.ICloneable, class System.Web.UI.IDataSourceViewSchemaAccessor, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeBinding&#xA;Implements ICloneable, IDataSourceViewSchemaAccessor, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeBinding sealed : ICloneable, System::Web::UI::IDataSourceViewSchemaAccessor, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeBinding = class&#xA;    interface IStateManager&#xA;    interface ICloneable&#xA;    interface IDataSourceViewSchemaAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSourceViewSchemaAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TextField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje relację między elementem danych i jest on wiązany w węźle <see cref="T:System.Web.UI.WebControls.TreeView" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, gdzie każdy element danych zawiera wiele pól (np. element XML o kilka atrybutów), węzeł zawiera wartość, która jest zwracana w wyniku `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Właściwości węzła można powiązać z określonym polem, określając powiązania węzła drzewa. A <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu definiuje relację między każdego elementu danych i węzeł, który jest wiązany.  
  
 <xref:System.Web.UI.WebControls.TreeView> Kontrolować magazynów jego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty w <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> właściwości i stosuje powiązania ze źródłem danych, aby utworzyć relacje jeden do jednego między hierarchią drzewa i hierarchii źródła danych. Dla każdego elementu danych w źródle danych <xref:System.Web.UI.WebControls.TreeView> kontroli próbuje dopasować element danych, aby <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt, aby można było utworzyć odpowiednie <xref:System.Web.UI.WebControls.TreeNode> obiektu.  
  
 Podczas tworzenia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu, należy określić kryteria dla powiązania. Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> lub obu właściwości. Określenie zarówno jest bardziej wydajne niewielkie. Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład następująca <xref:System.Web.UI.WebControls.TreeNodeBinding> wiązania deklaracji `Name` i `ID` pola źródła danych, aby <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości, odpowiednio dla wszystkich węzłów o głębi 0:  
  
```  
<asp:TreeNodeBinding Depth="0" TextField="Name" ValueField="ID">  
```  
  
 Element członkowski danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Każdy element danych w źródle danych hierarchicznych (reprezentowane przez <xref:System.Web.UI.IHierarchyData?displayProperty=nameWithType> interfejsu) udostępnia <xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=nameWithType> właściwość, która określa typ elementu danych. Na przykład element członkowski danych elementu XML określa nazwę elementu. Jeśli źródło danych zawiera wiele typów elementów danych, element członkowski danych określa dane, których typ, aby użyć elementu. Następujące <xref:System.Web.UI.WebControls.TreeNodeBinding> wiązania deklaracji `<Book>` elementy <xref:System.Web.UI.WebControls.XmlDataSource> kontroli do wszystkich węzłów w drzewie, bez względu na lokalizację w hierarchii:  
  
```  
<asp:TreeNodeBinding DataMember="Book" TextField="Title" ValueField= "ISBN">  
```  
  
 Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który może być powiązana wartość. Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> zastosowano obiekt mają taką samą wartość.  
  
> [!NOTE]
>  Można selektywnie zastąpić powiązania właściwości w <xref:System.Web.UI.WebControls.TreeNode> obiektu ustawiając odpowiednią właściwość bezpośrednio w węźle.  
  
 W poniższej tabeli wymieniono właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding> klasy, która pozwala na powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola elementu danych.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>|Aby powiązać pole <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
  
 W poniższej tabeli wymieniono właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding> klasy, która pozwala na powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu na wartość statyczną.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
|<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>|Wartość statyczną, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu.|  
  
 Jeśli konflikt <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty są zdefiniowane, <xref:System.Web.UI.WebControls.TreeView> kontroli stosuje powiązań węzła drzewa w następującej kolejności:  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje i jest zgodny zarówno głębokości, jak i element członkowski danych.  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje i zgodny element członkowski danych.  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiekt, który definiuje i jest zgodna tylko głębokość.  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektu, który definiuje element członkowski danych ani głębokość. (Ten typ powiązania węzeł drzewa jest stosowany do wszystkich węzłów w drzewie).  
  
5.  <xref:System.Web.UI.WebControls.TreeNodeBinding> Obiektów, które nie mają odpowiednika w źródle danych. W tym przypadku wartości zwracane przez `ToString` metody element danych jest następnie związana z <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości węzłów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu.  
  
 <xref:System.Web.UI.WebControls.TreeNodeBinding> Klasa umożliwia również formatowania tekstu, który jest wyświetlany w węźle przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A> właściwości.  
  
   
  
## Examples  
 W poniższej tabeli przedstawiono niektóre przykładowe węzła drzewa deklaracje powiązania.  
  
|Przykład powiązania|Opis|  
|---------------------|-----------------|  
|`<asp:TreeNodeBinding TextField="Title" ValueField= "ID"/>`|Wiąże <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości wszystkich węzłów w drzewie `Title` i `ID` odpowiednio pól danych źródłowych. Wszystkie węzły użyć tej deklaracji powiązanie węzła drzewa, ponieważ <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> i <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> nie ustawiono właściwości.|  
|`<asp:TreeNodeBinding DataMember= "Book" TextField= "Title" ValueField= "ID"/>`|Wiąże <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości wszystkich węzłów w drzewie `Title` i `ID` pola `Book` danych odpowiednio elementów w źródle danych.|  
|`<asp:TreeNodeBinding Depth="2" TextField= "Title" ValueField= "ID"/>`|Wiąże <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości wszystkich węzłów o głębi 2 w drzewie `Title` i `ID` pól danych odpowiednio elementów w źródle danych.|  
|`<asp:TreeNodeBinding DataMember="Book" Depth= "2" TextField= "Title" ValueField= "ID" ImageUrl= "Image.jpg">`|Wiąże <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości wszystkich węzłów o głębi 2 w drzewie `Title` i `ID` pola `Book` danych odpowiednio elementów w źródle danych. Także wiąże <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości węzłów na wartość statyczną.|  
  
 Ta sekcja zawiera trzy przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów deklaratywnego definiowania relacji między węzłem i element danych. Drugi przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów programowo, aby zdefiniować relację między węzłem a elementu danych. Trzeci przykładzie kodu przedstawiono przykładowe dane XML dla przykładów kodu pierwszego i drugiego.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów deklaratywnego definiowania relacji między węzłem i element danych. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektów programowo, aby zdefiniować relację między węzłem a elementu danych. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML znajduje się w następnym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Poniższy przykład kodu przewiduje przykładowych danych XML w powyższych przykładach kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.FormatString" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.%23ctor%2A> konstruktora, aby zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNodeBinding> klasy. Często jest używany podczas wypełniania dynamicznie <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.%23ctor%2A> konstruktora, aby dodać <xref:System.Web.UI.WebControls.TreeNodeBinding> dynamicznie do obiektu <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Kolekcja <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość do dopasowywania <see cref="P:System.Web.UI.IHierarchyData.Type" /> właściwość elementu danych określić, czy ma być stosowana powiązanie węzła drzewa.</summary>
        <value>Wartość do dopasowania do elementu danych <see cref="P:System.Web.UI.IHierarchyData.Type" /> właściwości w celu określenia, czy ma być stosowana powiązanie węzła drzewa. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element członkowski danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Każdy element danych w źródle danych hierarchicznych (reprezentowane przez <xref:System.Web.UI.IHierarchyData?displayProperty=nameWithType> obiektu) udostępnia <xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=nameWithType> właściwość, która określa typ elementu danych. Na przykład element członkowski danych elementu XML określa nazwę elementu. Jeśli źródło danych zawiera wiele typów elementów danych, element członkowski danych określa dane, których typ, aby użyć elementu. Następujące <xref:System.Web.UI.WebControls.TreeNodeBinding> wiązania deklaracji `<Book>` elementy <xref:System.Web.UI.WebControls.XmlDataSource> kontroli do wszystkich węzłów w drzewie, bez względu na lokalizację w hierarchii:  
  
```  
<asp:TreeNodeBinding DataMember="Book" TextField="Title" ValueField= "ISBN">  
```  
  
 Podczas tworzenia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu, należy określić kryteria dla powiązania. Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> lub obu właściwości. Określenie zarówno jest bardziej wydajne niewielkie.  
  
 Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który może być powiązana wartość. Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> zastosowano obiekt mają taką samą wartość.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości w celu określenia, które można powiązać z węzłem — element XML. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości w celu określenia, które można powiązać z węzłem — element XML. W tym przykładzie kodu działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingDataMember/CS/treenodebindingdatamembercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingDataMember/VB/treenodebindingdatamembervb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia głębokość węzła, w którym <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Głębokość węzła, w którym <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to -1, co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład następująca <xref:System.Web.UI.WebControls.TreeNodeBinding> wiązania deklaracji `Name` i `ID` pola źródła danych, aby <xref:System.Web.UI.WebControls.TreeNode.Text%2A> i <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości, odpowiednio dla wszystkich węzłów o głębi 0:  
  
```  
<asp:TreeNodeBinding Depth="0" TextField="Name" ValueField="ID">  
```  
  
 Podczas tworzenia <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu, należy określić kryteria dla powiązania. Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> lub obu właściwości. Określenie zarówno jest bardziej wydajne niewielkie.  
  
 Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt, który może być powiązana wartość. Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> zastosowano obiekt mają taką samą wartość.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> właściwości, aby zastosować <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przy głębokości określonego węzła. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> właściwości, aby zastosować <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przy głębokości określonego węzła. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingDataMember/CS/treenodebindingdatamembercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingDataMember/VB/treenodebindingdatamembervb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Depth" />
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa format wyświetlania tekst w węźle, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Ciąg formatowania, który określa format wyświetlania tekst w węźle, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.FormatString" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A> Właściwość jest używana do zapewnienia formatu niestandardowego tekstu węzła. Ciąg formatu danych składa się z dwóch części oddzielone dwukropkiem w formie { `A` : `Bxx` }. Na przykład ciąg formatowania `{0:F2}` Wyświetla liczbę stałoprzecinkowe z dwóch miejsc po przecinku.  
  
> [!NOTE]
>  Cały ciąg musi być ujęta w nawiasy, aby wskazać, że ciąg formatu i nie literału ciągu. Tekst poza nawiasy klamrowe jest wyświetlany jako zwykły tekst.  
  
 Wartość przed dwukropkiem (`A` w przykładzie ogólne) określa indeks parametru liczony od zera liście parametrów.  
  
> [!NOTE]
>  Tę wartość można ustawić tylko na 0, ponieważ istnieje tylko jedna wartość w każdym węźle.  
  
 Znak po dwukropkiem (`B` w przykładzie ogólne) określa format wyświetlania wartości. Poniższa tabela zawiera listę typowych formatach.  
  
|Format znak|Wyświetla wartości numerycznych|  
|----------------------|--------------------------------|  
|`C`|Formacie waluty.|  
|`D`|Format dziesiętny.|  
|`E`|Notacja naukowa (wykładnicza).|  
|`F`|Stały format.|  
|`G`|Ogólny format.|  
|`N`|Format liczb.|  
|`X`|Szesnastkowej.|  
  
> [!NOTE]
>  Z wyjątkiem `X`, format znak nie jest uwzględniana wielkość liter. `X` Format znak Wyświetla znaki szesnastkowe w przypadku, gdy jest określona.  
  
 Wartość po znaku formatu (`xx` w przykładzie ogólne) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia.  
  
 Aby uzyskać więcej informacji na ciągach formatowania, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A> właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania tekstu, który jest wyświetlany w węźle głównym. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A> właściwości w celu określenia niestandardowych formatów wyświetlania tekstu, który jest wyświetlany w węźle głównym. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingFormatString/CS/treenodebindingformatstringcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingFormatString/VB/treenodebindingformatstringvb.aspx#1)]  
  
 Poniższy przykładowy kod jest przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że nie ustawiono właściwości P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Gdy obraz jest wyświetlany obok węzła, tekst elementu ToolTip jest wyświetlane, gdy wskaźnik myszy znajduje się na obrazie.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości do powiązania tego samego tekstu etykietki narzędzia obrazu węzła, można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTipField">
      <MemberSignature Language="C#" Value="public string ImageToolTipField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTipField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTipField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTipField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTipField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Gdy obraz jest wyświetlany obok węzła, tekst elementu ToolTip jest wyświetlane, gdy wskaźnik myszy znajduje się na obrazie.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który jest wyświetlany obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Adres URL obrazu, który jest wyświetlany obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" /> Nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> właściwości w celu określenia niestandardowego obrazu, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Obraz jest wyświetlany obok węzła i można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje tego formatu.  
  
> [!NOTE]
>  Można zastąpić obrazu dla oddzielnego węzła, ustawiając jego <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości bezpośrednio.  
  
 Zamiast używać tej właściwości można powiązać ten sam obraz na każdym węźle, można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> właściwości.  
  
 Podczas wyświetlania obrazu obok węzła o <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> właściwość, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> właściwości. Tekst etykietki narzędzia, który określisz udostępnia urządzeń ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> właściwości, aby zastosować <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu przy głębokości określonego węzła. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> właściwości w celu określenia niestandardowego obrazu dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrlField">
      <MemberSignature Language="C#" Value="public string ImageUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrlField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> właściwości w celu określenia nazwy pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Obraz jest wyświetlany obok węzła i można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje format.  
  
> [!NOTE]
>  Można zastąpić obrazu dla oddzielnego węzła, ustawiając jego <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwości bezpośrednio.  
  
 Zamiast używać tej właściwości można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Podczas wyświetlania obrazu obok węzła o <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> właściwość, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> właściwości. Tekst etykietki narzędzia, który określisz udostępnia urządzeń ułatwianiem opis obrazu, który może służyć do udostępnić formantu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL, aby połączyć, gdy węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> zastosowano obiekt zostanie kliknięty.</summary>
        <value>Adres URL, aby połączyć, gdy węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> zastosowano obiekt zostanie kliknięty. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwości, aby określić adres URL, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Gdy ta właściwość jest ustawiona, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać hiperłącze tekst węzła, zamiast zwykłego tekstu. Można również ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwość można powiązać ten sam adres URL do każdego węzła można powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwość, aby określić adres URL, aby połączyć, gdy węzeł, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> zastosowano obiekt zostanie kliknięty. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwość, aby określić adres URL, aby połączyć, gdy węzeł, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> zastosowano obiekt zostanie kliknięty. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrlField">
      <MemberSignature Language="C#" Value="public string NavigateUrlField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrlField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrlField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrlField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrlField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Gdy <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwość jest ustawiona, <xref:System.Web.UI.WebControls.TreeView> kontrolka ma wyświetlać hiperłącze tekst węzła, zamiast zwykłego tekstu. Można również ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt jest stosowany jest wypełniana dynamicznie.</summary>
        <value>
          <see langword="true" /> Aby wypełnić węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> dynamicznie; w przeciwnym razie jest stosowany obiekt <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView> sterowanie obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> właściwość jest ustawiona na `true`, węzły podrzędne węzła który <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekt jest stosowany do pobiera wypełnione w czasie wykonywania, gdy węzeł jest rozwinięty.  
  
 Kiedy wiązania danych są tworzone przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> z <xref:System.Web.UI.WebControls.TreeView> formant `true`, mają powiązania, które są tworzone <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> ustawioną właściwość `true`. Mieć powiązań danych, które są tworzone deklaratywnie <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> ustawioną właściwość `false`. Za pomocą składni deklaratywnej pozwala na kontrolowanie zachowania wiązania danych indywidualnych.  
  
> [!NOTE]
>  W odróżnieniu od <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> klasy <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> właściwości nie wymaga to metoda obsługi zdarzeń określonych dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzeń, jeśli używasz kontroli źródła danych, takich jak <xref:System.Web.UI.WebControls.XmlDataSource>. Zamiast tego <xref:System.Web.UI.WebControls.TreeView> kontroli dynamicznie generuje metody obsługi zdarzeń za pomocą właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding> obiekty w <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> kolekcji. Nadal można zdefiniować metody obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> zdarzeń; jednak będzie ona wywoływana po metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView> formantu.  
  
 Obsługiwane przeglądarki można również korzystać z populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView> formantu do wypełnienia węzła dynamicznie na kliencie, gdy ten węzeł jest rozwinięty, uniemożliwia potrzeby publikowania na serwer. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta, zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości w celu określenia, czy pole wyboru jest wyświetlane dla węzła. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości w celu określenia, czy pole wyboru jest wyświetlane dla węzła. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingPopulateOnDemand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingPopulateOnDemand/CS/treenodebindingpopulateondemandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingPopulateOnDemand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingPopulateOnDemand/VB/treenodebindingpopulateondemandvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdarzenie lub zdarzenia, aby zgłaszał węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt jest stosowany jest zaznaczone.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> wartości. Wartość domyślna to <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Właściwość jest używana do określania, które zdarzenie lub zdarzenia wywoływane po wybraniu węzła.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> właściwości bezpośrednio do każdego węzła.  
  
 W poniższej tabeli wymieniono dostępne opcje.  
  
|`SelectAction` Wartość|Opis|  
|--------------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Przełącza węzeł między rozwinięty i zwinięty. Zgłasza <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzenia lub <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> zdarzeń, zależnie od potrzeb.|  
|`TreeNodeSelectAction.None`|Zgłasza brak zdarzeń po wybraniu węzła.|  
|`TreeNodeSelectAction.Select`|Zgłasza <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> zdarzeń po wybraniu węzła.|  
|`TreeNodeSelectAction.SelectExpand`|Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> zdarzeń po wybraniu węzła. Węzły są tylko rozwinięte, nigdy nie jest zwinięty.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> ustawioną właściwość `TreeNodeSelectAction.None`.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> właściwości w celu określenia, które zdarzenie jest wywoływane, gdy węzeł zostanie kliknięty. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> właściwości w celu określenia, które zdarzenie jest wywoływane, gdy węzeł zostanie kliknięty. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingSelectAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingSelectAction/CS/treenodebindingselectactioncs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingSelectAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingSelectAction/VB/treenodebindingselectactionvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pole wyboru jest wyświetlany obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>
          <see langword="true" /> Aby wyświetlić pole wyboru obok węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiekt jest stosowane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapewnić obsługę wielowęzłowego zaznaczenia w <xref:System.Web.UI.WebControls.TreeView> kontrolka pola wyboru obok obrazu można wyświetlić w węźle. Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Właściwość jest używana do wyświetlenia lub ukrycia pole wyboru dla węzła.  
  
> [!NOTE]
>  Mimo że <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwość może być używana do wyświetlania pola wyboru, częściej do użycia są <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> formantu. Jednak <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> właściwość ma wpływ na każdy typ węzła, określonym przez właściwość; w związku z tym <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> jest często używana do zastąpienia tego ustawienia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> właściwości bezpośrednio do każdego węzła.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości w celu określenia, czy pole wyboru jest wyświetlane dla węzła. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> właściwości w celu określenia, czy pole wyboru jest wyświetlane dla węzła. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingShowCheckBox/CS/treenodebindingshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingShowCheckBox/VB/treenodebindingshowcheckboxvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <returns>Obiekt reprezentujący kopię <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeBinding.System%23ICloneable%23Clone%2A> Metoda jest funkcji pomocnika, która tworzy kopię <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu, z którego <xref:System.Web.UI.WebControls.TreeNodeBinding.System%23ICloneable%23Clone%2A> metoda jest wywoływana.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeBinding.System%23ICloneable%23Clone%2A> Metoda jest używana głównie przez deweloperów formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema">
      <MemberSignature Language="C#" Value="object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceViewSchema As Object Implements IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />.</summary>
        <value>Obiekt reprezentujący schematu, z którym skojarzony jest <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNodeBinding> wystąpienia jest rzutowane na <xref:System.Web.UI.IDataSourceViewSchemaAccessor> interfejsu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>
          <see langword="true" />, jeśli formant jest oznaczony do zapisania stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNodeBinding> wystąpienia jest rzutowane na <xref:System.Web.UI.IStateManager> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Object" /> zawierający wartości stanu zapisanego widoku.</param>
        <summary>Ładuje wcześniej zapisany widok stanu dla węzła.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje widoku zmian stanu obiektu.</summary>
        <returns>Obiekt, który zawiera zmian stanu widoku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu do śledzenia zmian stanu widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Web.UI.WebControls.TreeNodeBinding.System%23Web%23UI%23IStateManager%23TrackViewState%2A> metoda została wywołana w formancie serwera <xref:System.Web.UI.Control.IsTrackingViewState%2A> zwraca właściwość `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia docelowego okna lub ramki, w której można wyświetlić zawartości strony sieci Web, który jest skojarzony z węzłem, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Docelowego okna lub ramki, w której można wyświetlić zawartości połączonej strony sieci Web. Wartości musi rozpoczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalne, które zaczynają się od podkreślenia, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość docelowa </term><description> opis </description></listheader><item><term><see langword="_blank" /></term><description> renderuje zawartość w nowym oknie bez ramek.  </description></item><item><term><see langword="_parent" /></term><description> Renderuje zawartość w obiekcie nadrzędnym natychmiastowego ramek.  </description></item><item><term><see langword="_search" /></term><description> Renderuje zawartość w okienku wyszukiwania.  </description></item><item><term><see langword="_self" /></term><description> Renderuje zawartość w ramce z fokusem.  </description></item><item><term><see langword="_top" /></term><description> Renderuje zawartość w oknie pełny bez ramek.  </description></item></list><block subset="none" type="note"><para> Sprawdź w dokumentacji przeglądarki, aby ustalić, czy <see langword="_search" /> wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowsze wersje obsługują <see langword="_search" /> wartość docelowa.  </para></block>  Wartość domyślna to ciąg pusty (""), który odświeża okna lub ramki z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Target%2A> Właściwość jest używana do określania okna lub ramki, w którym można wyświetlić treści sieci Web, który jest połączony z węzeł po kliknięciu tego węzła.  
  
> [!NOTE]
>  Ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> zastąpienia właściwości <xref:System.Web.UI.WebControls.TreeView.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeView> kontroli dla węzłów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości bezpośrednio do każdego węzła.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> Właściwości renderuje jako `target` atrybutu. `target` Atrybutu `anchor` elementów nie jest dozwolona w definicji typu dokumentu XHTML 1.1. Nie ustawiaj <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości, jeśli przetworzonych wyników dla <xref:System.Web.UI.WebControls.TreeNodeBinding> formantu musi być zgodny z XHTML 1.1. Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Podczas tworzenia stron sieci Web z ułatwieniami dostępu, należy unikać używania <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości pod kątem inne okno. Aby uzyskać więcej informacji, zobacz [NIB: dostępność ASP.NET](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości w celu określenia, że strona sieci Web, który jest skojarzony z węzłem głównym powinien być wyświetlany w nowym oknie. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości w celu określenia, że strona sieci Web, który jest skojarzony z węzłem głównym powinien być wyświetlany w nowym oknie. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Book.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingTarget/CS/treenodebindingtargetcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingTarget/VB/treenodebindingtargetvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
    <Appendix Heading="Appendix A">  
    </Appendix>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
      </Docs>
    </Member>
    <Member MemberName="TargetField">
      <MemberSignature Language="C#" Value="public string TargetField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.TargetField" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.TargetField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Target" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Target" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.TargetField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.TargetField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Target%2A> Właściwość jest używana do określania okna lub ramki, w którym można wyświetlić treści sieci Web, który jest połączony z węzeł po kliknięciu tego węzła.  
  
 Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.TargetField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.TargetField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.Target%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który jest wyświetlany dla węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Tekst wyświetlany w węźle, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Właściwość jest używana do określania tekst wyświetlany w węźle.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości do powiązania tego samego tekstu w każdym węźle można powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości w celu określenia wartości do wyświetlenia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości w celu określenia wartości do wyświetlenia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public string TextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
      <MemberSignature Language="VB.NET" Value="Public Property TextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.TextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Text" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Text" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Właściwość jest używana do określania tekst wyświetlany w węźle.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Text%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykietki narzędzia dla węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Tekst etykietki narzędzia dla węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Tekst etykietki narzędzia jest wyświetlane, gdy wskaźnik myszy znajduje się nad węzłem.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości do powiązania tego samego tekstu etykietki narzędzia w każdym węźle można powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości w celu określenia tekst etykietki narzędzia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipField">
      <MemberSignature Language="C#" Value="public string ToolTipField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Tekst etykietki narzędzia jest wyświetlane, gdy wskaźnik myszy znajduje się nad węzłem.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBinding.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNodeBinding.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> właściwości.</summary>
        <returns>Zwraca <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> właściwości. Jeśli <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> właściwość jest <see langword="null" /> lub ciąg pusty (""), ** (pusta) ** jest zwracany.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wyświetlanych, która nie jest wyświetlana, ale jest używany do przechowywania wszelkich dodatkowych danych o węzeł, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu zostanie zastosowana, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony.</summary>
        <value>Dodatkowe dane dotyczące węzła, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> zastosowano obiekt; to dane nie są wyświetlane. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwości w celu określenia wartość do powiązania z <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Właściwość jest używana do uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości przechowując wszelkie dodatkowe dane skojarzone z węzłem, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Ta wartość nie jest wyświetlana w formancie i jest najczęściej używany do przechowywania danych obsługi zdarzenia odświeżania strony.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwości do powiązania tej samej wartości w każdym węźle można powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwości.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwość, aby przechowywać dodatkowe dane dotyczące węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwość, aby przechowywać dodatkowe dane dotyczące węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeBindingText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingText/CS/treenodebindingtextcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingText/VB/treenodebindingtextvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      </Docs>
    </Member>
    <Member MemberName="ValueField">
      <MemberSignature Language="C#" Value="public string ValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueField : string with get, set" Usage="System.Web.UI.WebControls.TreeNodeBinding.ValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Value" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu.</summary>
        <value>Nazwa pola, które chcesz powiązać <see cref="P:System.Web.UI.WebControls.TreeNode.Value" /> właściwość <see cref="T:System.Web.UI.WebControls.TreeNode" /> obiektu, do którego <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> obiektu. Wartość domyślna to ciąg pusty (""), co oznacza, że <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" /> nie ustawiono właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.TreeView> kontrolka jest powiązana ze źródłem danych, użyj <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwość, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu. Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode> obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Właściwość jest używana do uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A> właściwości przechowując wszelkie dodatkowe dane skojarzone z węzłem, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. Ta wartość nie jest wyświetlana w formancie i jest najczęściej używany do przechowywania danych obsługi zdarzenia odświeżania strony.  
  
> [!NOTE]
>  Można selektywnie zastąpić <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwości przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwości bezpośrednio do każdego węzła.  
  
 Zamiast <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwości do powiązania <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiekt do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Value%2A> wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> właściwości.  
  
> [!NOTE]
>  Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.  
  
 Wartość tej właściwości jest przechowywany w stanie widoku.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak używać <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W drugim przykładzie kodu zawiera przykładowe dane XML w pierwszym przykładzie kodu.  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> właściwości w celu określenia, który atrybut elementu XML, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A> właściwość <xref:System.Web.UI.WebControls.TreeNode> obiektu, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding> obiektu. W tym przykładzie działał prawidłowo należy skopiować przykładowe dane XML, po tym przykładzie kodu w pliku o nazwie Booklist.xml.  
  
 [!code-aspx-csharp[TreeNodeTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeTextField/CS/treenodebindingtextfieldcs.aspx#1)]
 [!code-aspx-vb[TreeNodeTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeTextField/VB/treenodebindingtextfieldvb.aspx#1)]  
  
 W poniższym przykładzie kodu przedstawiono przykładowych danych XML dla poprzedniego przykładu kodu.  
  
```  
<Books Text="Books List">  
    <Book Text="Book Title One"  
        Value="1"   
        Image="Bookimage1.jpg"  
        ImageToolTip="Book 1 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Book Title 1">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$1.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage1.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
    <Book Text="Book Title Two"  
        Value="2"   
        Image="Bookimage2.jpg"  
        ImageToolTip="Book 2 Photo"   
        Nav="http://www.microsoft.com"  
        Tip="Click Me">  
        <Description Text="Book Description">  
        </Description>  
        <Price Value="$2.99">  
        </Price>  
        <Author Text="Author Name"  
            Value="LastName"   
            Image="Authorimage2.jpg"   
            Nav="http://www.microsoft.com"  
            Tip="Author Name">  
        </Author>  
    </Book>  
</Books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.Value" />
      </Docs>
    </Member>
  </Members>
</Type>