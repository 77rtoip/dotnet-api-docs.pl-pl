<Type Name="EntityDataSource" FullName="System.Web.UI.WebControls.EntityDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc04fbc2a05e0807d0fca8f416ba6e5b668e8bd5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691682" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityDataSource extends System.Web.UI.DataSourceControl implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource, class System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EntityDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityDataSource&#xA;Inherits DataSourceControl&#xA;Implements IDynamicDataSource, IQueryableDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityDataSource : System::Web::UI::DataSourceControl, System::Web::DynamicData::IDynamicDataSource, System::Web::UI::WebControls::IQueryableDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IQueryableDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("EntitySetName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje modelu danych jednostki (EDM) do formantów powiązanych z danymi w aplikacji ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Można użyć <xref:System.Web.UI.WebControls.EntityDataSource> kontroli wraz z danymi formantu do pobierania danych z modelu EDM i wyświetlanie, edytowanie i sortować dane na stronie sieci Web przy użyciu niewielkiego lub żadnego kodu. Aby uzyskać więcej informacji, zobacz [informacje o formancie serwera sieci Web obiektu EntityDataSource](http://msdn.microsoft.com/library/1f09af00-9578-4744-a029-765710a3c83f).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:EntityDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    CommandText="string"  
    ConnectionString="string"  
    ContextType="typed ObjectContext"  
    ContextTypeName="string"  
    DefaultContainerName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    EntitySetName="string"  
    EntityTypeFilter="string"  
    GroupBy="string"  
    Include="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnException="IDynamicDataSource.Exception event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    StoreOriginalValuesInViewState="True|False"  
    Where="string"  
>  
        <CommandParameters />  
        <DeleteParameters />  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <UpdateParameters />  
        <WhereParameters />  
</asp:EntityDataSource>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <see cref="T:System.Data.EntityClient.EntityConnection" /> Do modelu Entity Data Model (EDM).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> klasy z udostępnionego połączenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> kontroli dynamicznie tworzy klauzuli ORDER BY, na podstawie wartości w <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" /> kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> kontroli tworzy klauzuli ORDER BY; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontrola jest ustawiona na `true`, formant automatycznie generuje w klauzuli ORDER BY parametru w <xref:System.Web.UI.WebControls.ParameterCollection> przypisane do <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> właściwości. Eliminuje to potrzebę jawnie przypisać do klauzuli ORDER BY <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> właściwości `true`, nie powinien jawnie przypisywać wartości do <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie automatycznie generuje klauzuli ORDER BY i używa wartości `OrderByDropDownList` można ustawić wartości parametru.  
  
```  
<asp:DropDownList AutoPostBack="true" ID="OrderByDropDownList" runat="server">  
    <asp:ListItem Value="TotalDue"></asp:ListItem>  
    <asp:ListItem Value="OrderDate"></asp:ListItem>  
</asp:DropDownList>  
  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:ControlParameter  
    ControlID="OrderByDropDownList"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 Poniższy przykład automatycznie generuje klauzuli ORDER BY i używa `DefaultValue` atrybutu `Parameter` element można ustawić wartości parametru.  
  
```  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:Parameter  
    DefaultValue="TotalDue"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" /> właściwość jest ustawiona na <see langword="true" /> i <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> właściwość nie jest zerowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> kontroli tworzy dynamicznie na podstawie wartości określonych w klauzuli WHERE <see cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" /> kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> kontroli tworzy klauzuli WHERE; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby filtrować wyniki zapytania według equating właściwości typu jednostki z wyrażeniem, można użyć <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwości. Gdy <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontrola jest ustawiona na `true`, formant automatycznie generuje `WHERE` klauzuli z parametrów w <xref:System.Web.UI.WebControls.ParameterCollection> z <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> właściwości. <xref:System.Web.UI.WebControls.Parameter.Name%2A> Właściwości każdego parametru musi być zgodna nazwa właściwości typu obiektu, który znajduje się w wynikach zapytania. Jeśli ustawisz <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwości `true`, nie należy przypisywać jawnie `WHERE` klauzulę <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości.  
  
## <a name="example"></a>Przykład  
 W poniższym przykładzie <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwość jest ustawiona na `true`. W związku z tym <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwości musi być zgodna nazwa właściwości typu obiektu, który znajduje się w wynikach zapytania. Zapytanie wybiera właściwości SalesOrderID i TotalDue SalesOrderHeader typu jednostki. Automatycznie wygenerowany `WHERE` klauzuli zostanie filtrowanie wyników zapytania przez porównanie wartości TotalDue wartość w pole listy TotalDueList wybrana.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Select="it.SalesOrderID, it.TotalDue"  
    AutoGenerateWhereClause="True">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="TotalDue" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
## <a name="example"></a>Przykład  
 Domyślnie <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwość jest ustawiona na `false`. Oznacza to, że konieczne jest podanie `WHERE` klauzuli. W poniższym przykładzie `WHERE` klauzula jest `Where="it.TotalDue < @totalDueParam"` i totalDueParam jest nazwą parametru.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithOutAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Where="it.TotalDue < @totalDueParam"   
    Select="it.SalesOrderID, it.TotalDue">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="totalDueParam" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" /> właściwość jest ustawiona na <see langword="true" /> i <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> właściwość nie jest zerowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> sterowanie obsługuje nawigację fragmentów danych w czasie wykonywania.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może przeglądania danych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource> Sterowanie obsługuje stronicowanie automatycznie za pomocą danych zwróconych przez zapytania. <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> Właściwość jest właściwością logiczną, wskazującą, czy dla danych zwracanych przez zapytania powiązanymi z formantami danych włączono stronicowania. Jeśli ta właściwość jest skonfigurowana `true`, <xref:System.Web.UI.WebControls.EntityDataSource> kontroli dodaje metody konstruktora zapytań odpowiednie do <xref:System.Data.Objects.ObjectQuery%601> na podstawie informacji dostarczonych <xref:System.Web.UI.WebControls.EntityDataSourceView> przez formant powiązany z danymi.  
  
 Wartość <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> właściwość określa, czy <xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceView> formant, który obsługuje źródło danych jest `true` lub `false`.  
  
 Podczas definiowania projekcji za pomocą włączono stronicowania, Zdefiniuj właściwość, według której uporządkować wyniki. Oznacza to, że po ustawieniu <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości do zdefiniowania projekcji i mieć <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> ustawioną `true`, należy także ustawić <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> zdefiniować kolejność lub ustaw dla właściwości <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> właściwości `true` i Dodaj kolejności PARAMETR do <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> sterowanie obsługuje sortowanie danych w czasie wykonywania.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik może sortować dane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource> Formantu obsługuje automatyczne sortowanie danych zwróconych przez zapytania. <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formant jest właściwości typu Boolean wskazującą, czy sortowanie jest włączone dla danych zwracanych przez zapytania, które są powiązane z kontroli danych. Jeśli ta właściwość jest skonfigurowana `true`, <xref:System.Web.UI.WebControls.EntityDataSource> kontroli dodaje metody konstruktora zapytań odpowiednie do <xref:System.Data.Objects.ObjectQuery%601> na podstawie informacji dostarczonych <xref:System.Web.UI.WebControls.EntityDataSourceView> przez formant powiązany z danymi.  
  
 Wartość <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> właściwość określa, czy <xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A> i <xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> właściwości <xref:System.Web.UI.WebControls.EntityDataSourceView> formant, który obsługuje źródło danych jest `true` lub `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection CommandParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ CommandParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów dla kwerendy.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> zawiera parametry, które są przekazywane do polecenia zapytania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.CommandParameters%2A> Właściwość jest używana do dostępu <xref:System.Web.UI.WebControls.ParameterCollection> parametrów, które są przekazywane do jawnego zapytanie SQL jednostki, które zostanie określona przy użyciu <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład zawiera tekst polecenia SQL jednostki, która zwraca kolekcję obiektów produktu.  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 Poniższy przykład zwraca planowanego serię kolumn:  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
         FROM Products AS p   
         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
         ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
               ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
               ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia polecenia SQL jednostki, który definiuje zapytania.</summary>
        <value>A <see langword="string" /> wartość, która jest zapytanie SQL jednostki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formantu można określić kwerendę, która używa niestandardowych wyrażenia SQL jednostki. Instrukcja SELECT, takich jak <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> tworzy projekcję oryginalne dane, które nie są aktualizowalne.  
  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> przypisano właściwości, update, insert i delete funkcje są wyłączone. W tym przypadku metod <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>, <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>, i <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> pokrewnych <xref:System.Web.UI.WebControls.EntityDataSourceView> sterowania wszystkie zwracany `false`.  
  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> właściwość jest ustawiona, jest zwracany wyjątek, kiedy <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metoda jest wywoływana przez formant, który jest powiązany z danych <xref:System.Web.UI.WebControls.EntityDataSource> kontroli, jeśli wartość <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, lub <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> ma ustawioną wartość `true`.  
  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> ustawiono zapytanie zwracające projekcji właściwości (na przykład "`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`"), <xref:System.Data.Common.DbDataRecord> zostaną zwrócone.  
  
   
  
## Examples  
 Następujące przykładowe zastosowania podane polecenie SQL jednostki zwraca kolekcję obiektów produktu.  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 Poniższy przykład zwraca planowanego serię kolumn:  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
          FROM Products AS p   
          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
          ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
                ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
                ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametry połączenia, które służy do wykonywania zapytania.</summary>
        <value>Parametry połączenia dla zapytania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formantu można zainicjować z nazwanych parametrów połączenia EDM przechowywane w elemencie pliku konfiguracji aplikacji. Po utworzeniu za pomocą Kreatora modelu danych jednostki EDM nazwane połączenie EDM jest tworzony w pliku konfiguracyjnym aplikacji. Kiedy nazwane parametry połączenia EDM znajduje się w pliku konfiguracji aplikacji, połączenie jest widoczny jako opcja w Kreatorze skonfiguruj źródło danych obiektu EntityDataSource projektanta. Aby uzyskać więcej informacji, zobacz [skonfigurować kreatora źródła danych (kontrola obiektu EntityDataSource)](http://msdn.microsoft.com/library/263976a5-2406-47c0-8919-c6af6e76d78e).  
  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> właściwość nie została określona, oba <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> i <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> właściwości musi być ustawiona dla formantu utworzyć <xref:System.Data.Objects.ObjectContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of EntityDataSourceContextCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatedEventArgs ^&gt; ^ ContextCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> zakończy tworzenie <see cref="T:System.Data.Objects.ObjectContext" /> używany do pracy z obiektami danych jednostki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa tego zdarzenia dostępu do <xref:System.Data.Objects.ObjectContext> używany przez <xref:System.Web.UI.WebControls.EntityDataSource> formantu, aby wykonać zapytanie i śledzenia zmian. Tego obiektu kontekstu mogą być przechowywane i używane do kolejnych operacji poza <xref:System.Web.UI.WebControls.EntityDataSource>. <xref:System.Data.Objects.ObjectContext> Są uzyskiwane z <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> zwróconego przez <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> zdarzeń. Aby uzyskać więcej informacji, zobacz [zarządzania cyklem życia kontekst obiektu (obiektu EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160). Aby uzyskać więcej informacji o kontekście obiektu, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> Zdarzeń umożliwia przypisanie <xref:System.Data.Objects.ObjectContext> który został utworzony do zmiennej w kolejnych czynności poza <xref:System.Web.UI.WebControls.EntityDataSource>. <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> Właściwość zawiera kontekst został utworzony w <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> zdarzeń. Jeśli użytkownik nie ma przypisanego kontekście podczas <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> zdarzenia wystąpienia kontekstu zawarte w <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> jest tworzony przy <xref:System.Web.UI.WebControls.EntityDataSource> na podstawie <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=nameWithType>, lub <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of EntityDataSourceContextCreatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatingEventArgs ^&gt; ^ ContextCreating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> tworzy <see cref="T:System.Data.Objects.ObjectContext" /> używany do pracy z obiektami danych jednostki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> zdarzenie, aby podać własne <xref:System.Data.Objects.ObjectContext> zamiast nowy <xref:System.Data.Objects.ObjectContext> utworzony. Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> zdarzeń nie jest obsługiwana lub nie ma obsługi <xref:System.Data.Objects.ObjectContext>, <xref:System.Web.UI.WebControls.EntityDataSource> tworzy zgodnie z jego konfiguracji. Gdy <xref:System.Data.Objects.ObjectContext> został dostarczony do <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> tego samego wystąpienia zdarzenia, jest przypisany do `Context` właściwości obiektu zdarzenia kolejnych zdarzeń. Aby uzyskać więcej informacji, zobacz [zarządzania cyklem życia kontekst obiektu (obiektu EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160). Aby uzyskać więcej informacji o kontekście obiektu, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Data.Objects.ObjectContext> zmienna <xref:System.Web.UI.Page> obiektu i przypisz go do <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> obiektu.  
  
```csharp  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of EntityDataSourceContextDisposingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextDisposingEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed <see cref="T:System.Data.Objects.ObjectContext" /> jest usunięte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa tego zdarzenia, aby zapobiec <xref:System.Data.Objects.ObjectContext> używane przez <xref:System.Web.UI.WebControls.EntityDataSource> formantu zostanie usunięty z. Gdy ma być używany jeden <xref:System.Data.Objects.ObjectContext> wystąpienia na stronie kilka formantów lub wystąpienia <xref:System.Web.UI.WebControls.EntityDataSource> formantu. Aby zapobiec <xref:System.Data.Objects.ObjectContext> z zbyt, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> do obiektu `true`. Aby uzyskać więcej informacji, zobacz [zarządzania cyklem życia kontekst obiektu (obiektu EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160). Aby uzyskać więcej informacji o kontekście obiektu, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
   
  
## Examples  
 Aby zachować istniejące <xref:System.Data.Objects.ObjectContext> elementu członkowskiego wystąpienia do użytku w przyszłości Anuluj <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> zdarzeń, jak pokazano w następującym kodem.  
  
```csharp  
protected void EntityDataSource2_ContextDisposing(object sender,   
    EntityDataSourceContextDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public Type ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wpisanego <see cref="T:System.Data.Objects.ObjectContext" /> używane przez <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>Obiekt, który jest pochodną <see cref="T:System.Data.Objects.ObjectContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectContext> Używane przez <xref:System.Web.UI.WebControls.EntityDataSource> sterowania można uzyskać z <xref:System.Web.UI.WebControls.EntityDataSource.ContextType%2A> właściwości. Aby uzyskać więcej informacji, zobacz [zarządzania cyklem życia kontekst obiektu (obiektu EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia w pełni kwalifikowana nazwa typu <see cref="T:System.Data.Objects.ObjectContext" /> używany przez <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>A <see cref="T:System.String" /> czyli pełną nazwę typu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formant jest ciąg, który określa w pełni kwalifikowaną nazwę typu wpisanego <xref:System.Data.Objects.ObjectContext> używany przez <xref:System.Web.UI.WebControls.EntityDataSource> formantu. Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> właściwość nie została określona, oba <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> i <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> właściwości musi być ustawiona dla formantu utworzyć <xref:System.Data.Objects.ObjectContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.EntityDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As EntityDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::EntityDataSourceView ^ CreateView();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EntityDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> skojarzonego z tym formantem.</summary>
        <returns>Obiekt, który działa jako interfejs dla formantów powiązanych z danymi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby podać niestandardowy widok, można przesłonić tę metodę w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kontenera domyślnego.</summary>
        <value>A <see cref="T:System.String" /> oznacza to nazwa kontenera domyślnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> właściwość nie została określona, oba <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> i <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> właściwości musi być ustawiona dla formantu utworzyć <xref:System.Data.Objects.ObjectContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy obiekt został usunięty ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> Zdarzenie jest wywoływane po wykonaniu <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> właśnie została pomyślnie wywołana metoda na <xref:System.Data.Objects.ObjectContext> można usunąć obiektu. <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiekt jest używany do dostępu do usuniętego obiektu. Ten obiekt jest w <xref:System.Data.EntityState.Detached> stanu.  
  
 Jeśli błąd występuje, gdy obiekt jest usunięty, <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> zdarzenie jest zgłaszane, <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> obiekt jest ustawiony na zwróconego <xref:System.Exception>i <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> właściwość jest ustawiona na `null`. Jeśli obsługa wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane podczas operacji usuwania.</summary>
        <value>Parametry, które są używane podczas operacji usuwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4 lub starszym wartość właściwości jest przechowywany w stanie widoku i automatycznie zachowywane między odświeżeniami. Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4.5 wartość właściwości nie są przechowywane w widoku stanu i należy ustawić wartość dla każdego żądania HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed usunięciem obiektu ze źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> Zdarzenie jest wywoływane przed wykonaniem <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> wywoływana jest metoda <xref:System.Data.Objects.ObjectContext> można usunąć obiektu. <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiekt jest używany do dostępu do obiektu do usunięcia. Właściwości tego obiektu nie można całkowicie ustawić. Należy wybrać tylko te właściwości, które są wymagane w celu zidentyfikowania obiektu.  
  
 Aby zatrzymać obiektu przed usunięciem, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> do obiektu `true`.  
  
 Jeśli błąd występuje, gdy trwa przygotowywanie do usunięcia obiektu <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> zdarzenia i <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiekt jest ustawiony do zwróconego <xref:System.Exception>.  
  
 Podczas obsługi wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekty mogą być usunięte przez <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli włączono automatyczne usuwanie operacji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> Nie można ustawić, jeśli <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> właściwość jest włączona.  
  
 A `false` wartość przypisana do <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> wymusza <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> właściwość pokrewny <xref:System.Web.UI.WebControls.EntityDataSourceView> obiektu do zwrócenia `false`. Gdy <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> właściwość jest ustawiona na `false`, <xref:System.NotSupportedException> jest zgłaszane, gdy wywołuje formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metoda <xref:System.Web.UI.WebControls.EntityDataSourceView>.  
  
 Jeśli jeden z warunków dla aktualizacji nie są spełnione i <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.EntityDataSource> zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFlattening">
      <MemberSignature Language="C#" Value="public bool EnableFlattening { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFlattening" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFlattening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFlattening { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy chcesz wyłączyć funkcję tworzenia otoki.</summary>
        <value>
          <see langword="True" /> Jeśli do spłaszczenia właściwości; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas inicjowania <xref:System.Web.UI.WebControls.EntityDataSource> formantu przy użyciu <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> opakowuje każdego wystąpienia jednostki w wynikach w obiekcie <xref:System.ComponentModel.ICustomTypeDescriptor> typu. Aby uzyskać więcej informacji, zobacz [spłaszczanie obiektów (obiektu EntityDataSource)](http://msdn.microsoft.com/library/08a30ef3-1132-4ac4-856c-5ed3d65eaf16).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można dodawać obiektów za pomocą <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli są włączone operacje automatycznego wstawiania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> Nie można ustawić, jeśli <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> właściwość jest ustawiona na `true`.  
  
 A `false` wartość przypisana do <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> wymusza <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> właściwość pokrewny <xref:System.Web.UI.WebControls.EntityDataSourceView> obiektu do zwrócenia `false`. Gdy <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> właściwość jest ustawiona na `false`, <xref:System.NotSupportedException> jest zgłaszane, gdy wywołuje formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metoda <xref:System.Web.UI.WebControls.EntityDataSourceView>.  
  
 Jeśli jeden z warunków dla aktualizacji nie są spełnione i <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.EntityDataSource> zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekty może być modyfikowana przez <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>
          <see langword="true" /> Jeśli włączono automatyczną aktualizację operacji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> Nie można ustawić, jeśli <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> właściwość jest ustawiona na `true`.  
  
 A `false` wartość przypisana do <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> wymusza właściwości <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> właściwość pokrewny <xref:System.Web.UI.WebControls.EntityDataSourceView> obiektu do zwrócenia `false`. Gdy <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> właściwość jest ustawiona na `false`, <xref:System.NotSupportedException> jest zgłaszane, gdy wywołuje formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metoda <xref:System.Web.UI.WebControls.EntityDataSourceView>.  
  
 Ustawienie <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> właściwości `true` nie gwarantuje aktualizacji.  
  
 Jeśli jeden z warunków dla aktualizacji nie są spełnione i <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.EntityDataSource> zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zestawu jednostek używanych przez <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <value>Nazwa zestawu jednostek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formantu służy do określania zestaw jednostek typ obiektów, które są udostępniane przez formant. Wartość <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> właściwość jest domyślne instrukcji SELECT, która jest używana przez formant. Ustawienie nie jest wymagane, jeśli zapytanie jest określony jako wyrażenie SQL jednostki, który został dostarczony do <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> właściwości. Aby uzyskać więcej informacji, zobacz [tekst polecenia niestandardowych (obiektu EntityDataSource)](http://msdn.microsoft.com/library/d42e90d0-1443-474e-8940-53f504d6fc91).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeFilter">
      <MemberSignature Language="C#" Value="public string EntityTypeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityTypeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTypeFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityTypeFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie, które ogranicza kwerendę tylko wyniki z określonego typu pochodnego.</summary>
        <value>Wyrażenie filtru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource> kontroli musi zwracać określonego typu pochodnego <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> również musi być ustawiona właściwość do określenia nazwy tego typu pochodnego. Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> właściwość określa zestaw jednostek, który można wygenerować wyniki polimorficznym <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> jest wymagana właściwość, aby można było edytować dane. Jest to ten sam efekt co stosowania <xref:System.Data.Objects.ObjectQuery%601.OfType%60%601?displayProperty=nameWithType> metodę <xref:System.Data.Objects.ObjectQuery%601?displayProperty=nameWithType>. Jeśli powiązanie danych jest tylko do odczytu, a następnie <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> właściwość nie jest wymagane. W takim przypadku właściwości obiektu zwróconych przez zapytanie będzie tych domyślny typ jednostki dla zestawu jednostek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania. Ponieważ <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> sterowanie obsługuje tylko jeden widok <c>viewName</c> jest ignorowana.</param>
        <summary>Pobiera widok źródła danych o nazwie skojarzony z kontroli źródła danych.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> Skojarzony z <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource> Sterowanie obsługuje widoku źródła danych tylko jeden. Wszystkie obiekty widoku źródła danych, takich jak <xref:System.Web.UI.WebControls.EntityDataSourceView> obiekt, który jest skojarzony z kontroli źródła danych definiuje jej możliwości, wykonuje wszystkie wykonywane jest niezbędne do pobrania danych z bazy danych, która wykonuje operacje, takie jak sortowania, Wstawianie, usuwanie i aktualizowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę wyświetlanie obiektów, które są skojarzone z <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource> Sterowanie obsługuje tylko jeden widok na jej odpowiednie dane. <xref:System.Web.UI.WebControls.EntityDataSource.GetViewNames%2A> Metoda zwraca kolekcji jeden element o tej nazwie w jednym widoku jako ciąg.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie jednostki SQL, który określa sposób grupowania wyników zapytania.</summary>
        <value>W klauzuli GROUP BY.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public string Include { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Include" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberSignature Language="VB.NET" Value="Public Property Include As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Include { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie określające pokrewnych obiektów do uwzględnienia w wynikach zapytania.</summary>
        <value>Rozdzielana przecinkami lista ścieżek zapytania do zwrócenia w wynikach zapytania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontroli określa rozdzielana przecinkami lista ścieżek zapytania, które definiują, które są obiekty zwrócone wraz z obiektem w szczególności, którego dotyczy kwerenda. Każda wartość rozdzielaną przecinkami w ciągu jest przekazywany bez żadnych modyfikacji, wymaga oddzielnego wywołania do <xref:System.Data.Objects.ObjectQuery%601.Include%2A> metody <xref:System.Data.Objects.ObjectQuery%601> która jest wykonywana przez [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]. To zapytanie jest źródło danych objętych <xref:System.Web.UI.WebControls.EntityDataSource> formantu. <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> Właściwość jest stosowany do argumentu <xref:System.Data.Objects.ObjectQuery%601> przed jej wykonaniem.  
  
 Ciąg przekazany do <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> właściwość używa tego samego formatu jako ciąg, który jest przekazywany do <xref:System.Data.Objects.ObjectQuery%601.Include%2A> metody <xref:System.Data.Objects.ObjectQuery%601>. Przykłady automatycznie ładować powiązanych obiektów przy użyciu ścieżki zapytania, zobacz [porady: Użyj ścieżki zapytania do wyników kształtu](http://msdn.microsoft.com/library/100bf7f5-00ba-4c17-8e27-7a8a14831093).  
  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> jest używana do określenia ścieżki zapytania, właściwości powiązanych jednostek, tylko może być używany tylko do odczytu powiązania danych. Jeśli obiekty powiązane nie jawnie znajdują się w ścieżce zapytania, deskryptorów właściwości są nadal dostępne dla powiązania danych, ale same właściwości zwracać wartości null. W takim przypadku powiązane obiekty muszą być jawnie ładowane do wyświetlania wartości. Aby uzyskać więcej informacji, zobacz [ładowanie powiązanych obiektów](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).  
  
   
  
## Examples  
 Następujący kod XML definiuje ścieżki kwerendę, która zwraca `SalesOrderHeader` obiektów związanych z zwróconego `Contact` obiektu. Z każdym `SalesOrderHeader`, pokrewny `SalesOrderDetail` i `Address` również zostaną zwrócone.  
  
```  
<asp:EntityDataSource ID="ContactDataSource" runat="server"   
    AutoGenerateWhereClause="True" ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="Contact"   
    Include="SalesOrderHeader.SalesOrderDetail, SalesOrderHeader.Address">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="customerId" Name="ContactID"   
            PropertyName="Text" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 W poprzednim przykładzie XML jest taka sama jak następujące <xref:System.Data.Objects.ObjectQuery%601> o nazwie `customers`:  
  
```  
ObjectQuery<Contact> customers =  
      context.Contact  
       .Where("it.ContactID = @ContactID",  
         new ObjectParameter("ContactID", customerId))  
        .Include("SalesOrderHeader.SalesOrderDetail")  
        .Include("SalesOrderHeader.Address");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utworzeniu nowego obiektu w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> Zdarzenie jest wywoływane, gdy dodany obiekt jest tworzony w źródle danych albo wystąpił błąd, gdy dane obiektu jest utrwalona w źródle danych. <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> obiekt jest używany do dostępu do obiektu dodany.  
  
 Właściwości tego obiektu zawierają wartości, które są zwracane ze źródła danych, w tym wszystkie wartości generowanych przez źródło danych.  
  
 Jeśli błąd występuje, gdy obiekt jest utrwalona w źródle danych <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> zdarzenia i <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> obiekt jest ustawiony do zwróconego <xref:System.Exception>. Jeśli obsługa wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, zanim nowy obiekt jest utrwalona w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> Zdarzenie jest wywoływane przed nowy obiekt jest utrwalona w źródle danych. <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> Zdarzenie pozwala na modyfikację lub sprawdź dodawany obiekt, Dodaj inny obiekt lub anulować operację. Można uzyskać dostępu do obiektu, który ma zostać dodana z <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiektu. Jeśli dostarczany inny obiekt, użytkownik jest odpowiedzialny za typ jednostki poprawne ustawienia <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> właściwości.  
  
 Aby zatrzymać obiekt dodawany, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> do obiektu `true`.  
  
 Jeśli wystąpi błąd podczas tworzenia nowego obiektu <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> zdarzenia i <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiekt jest ustawiony do zwróconego <xref:System.Exception>.  
  
 Podczas obsługi wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane podczas operacji wstawiania.</summary>
        <value>Parametry, które są używane podczas operacji wstawiania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4 lub starszym wartość właściwości jest przechowywany w stanie widoku i automatycznie zachowywane między odświeżeniami. Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4.5 wartość właściwości nie są przechowywane w widoku stanu i należy ustawić wartość dla każdego żądania HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Zawierający informacje o stanie.</param>
        <summary>Ładuje stan właściwości w <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formant, który musi być utrwalona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Dodaje <see cref="E:System.Web.UI.Page.LoadComplete" /> program obsługi zdarzeń do <see cref="T:System.Web.UI.Page" /> formant, który zawiera <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Unload" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie SQL jednostki, który określa sposób sortowania wyników zapytania.</summary>
        <value>Klauzula ORDER BY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formantu jest ciągiem, który reprezentuje wyrażenie kwerendy SQL jednostki. Ten ciąg jest przekazywany, bez żadnych modyfikacji, do <xref:System.Data.Objects.ObjectQuery%601> która jest wykonywana przez [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]. To zapytanie jest źródło danych objętych <xref:System.Web.UI.WebControls.EntityDataSource> formantu. Ciąg przekazany do <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> właściwość używa tego samego formatu jako ciąg, który jest przekazywany do <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> metody <xref:System.Data.Objects.ObjectQuery%601>. Przykłady sposobu użycia klauzuli do wyniki zapytania, zobacz [porady: sortowanie danych](http://msdn.microsoft.com/library/c05f2506-cb9d-4ebc-822b-300042ad53e7).  
  
   
  
## Examples  
 Kod znaczników XML w poniższym przykładzie plik .aspx pobiera wartość z formantu i przekazuje ją jako parametr <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 W poprzednim przykładzie XML jest odpowiednikiem następujące <xref:System.Data.Objects.ObjectQuery%601> o nazwie `onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia klauzuli ORDER BY.</summary>
        <value>Parametry, które są używane do tworzenia klauzuli ORDER BY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontrola jest ustawiona na `true`, formant automatycznie generuje w klauzuli ORDER BY parametru w <xref:System.Web.UI.WebControls.ParameterCollection> przypisane do <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> właściwości. Eliminuje to potrzebę jawnie przypisać do klauzuli ORDER BY <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> właściwości. Konstrukcja w klauzuli ORDER BY z <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> właściwości wymaga, aby <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwości parametru w kolekcji identyfikuje jednej właściwości elementu, który jest zwróconych przez kwerendę.  
  
   
  
## Examples  
 W poniższym przykładzie automatycznie generuje klauzuli ORDER BY i używa wartości `orderByDropDownList` można ustawić wartości parametru.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
    ConnectionString="name=AdventureWorksEntities"  
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
    Where="it.OnlineOrderFlag = true" AutoGenerateOrderByClause="True">  
    <OrderByParameters>  
        <asp:ControlParameter Name="OrderByParameter"   
            ControlID="orderByDropDownList" Type="String" />  
    </OrderByParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.QueryCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCreated As EventHandler(Of QueryCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Web::UI::WebControls::QueryCreatedEventArgs ^&gt; ^ QueryCreated;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> utworzenie kwerendy SQL jednostki, która została określona podczas konfiguracji <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz [stosowanie kwerend LINQ do obiektu EntityDataSource](http://msdn.microsoft.com/library/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje stan właściwości w <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> formant, który musi być utrwalona.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający informacje o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia projekcji, która definiuje właściwości do uwzględnienia w wynikach zapytania.</summary>
        <value>Parametry, które są używane do tworzenia klauzuli ORDER BY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formant zawiera ciąg reprezentujący instrukcji kwerendy SQL jednostki. Dzięki temu można projektu określony zestaw właściwości z obiektów zwróconych przez kwerendę.  
  
 Ten ciąg jest przekazywany, bez żadnych modyfikacji, do <xref:System.Data.Objects.ObjectQuery%601> która jest wykonywana przez [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]. To zapytanie jest źródło danych objętych <xref:System.Web.UI.WebControls.EntityDataSource> formantu. Ciąg przekazany do <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwość używa tego samego formatu jako ciąg, który jest przekazywany do <xref:System.Data.Objects.ObjectQuery%601.Select%2A> metody <xref:System.Data.Objects.ObjectQuery%601>. Przykłady sposobu użycia klauzuli do zdefiniowania projekcji dla zapytania, zobacz [porady: wykonywanie zapytań tego obiekty typu anonimowego zwraca](http://msdn.microsoft.com/library/3b264025-e911-4d73-90ce-992d2b9d189d).  
  
 Aktualizacje nie są obsługiwane dla prognozowanych danych. Oznacza to, że gdy używasz <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości w celu określenia projekcji, powiązane powiązania danych nie obsługuje aktualizacji.  
  
 Podczas definiowania projekcji za pomocą włączono stronicowania, Zdefiniuj właściwość, według której uporządkować wyniki. Oznacza to, kiedy należy ustawić <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości zdefiniowane projekcję i ma <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> ustawioną `true`, należy także ustawić <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> zdefiniować kolejność lub ustaw dla właściwości <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> właściwości `true` i Dodaj kolejności PARAMETR do <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> kolekcji.  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> Nie można ustawić, jeśli <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>, lub <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> jest włączona.  
  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> ustawiono zapytanie zwracające projekcji właściwości (na przykład `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`), <xref:System.Data.Common.DbDataRecord> zostaną zwrócone.  
  
   
  
## Examples  
 Następujący kod XML używa <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości w celu określenia projekcji o sześć właściwości typu produktu:  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities"   
    EntitySetName="Product" OrderBy="it.[ProductID]"   
    Select="it.[ProductID], it.[Name], it.[ListPrice],   
    it.[Size], it.[Style], it.[Weight]">  
</asp:EntityDataSource>  
  
```  
  
 W poprzednim przykładzie XML jest taka sama jak następujące <xref:System.Data.Objects.ObjectQuery%601> o nazwie `products`:  
  
```  
ObjectQuery<Product> products = context.Product  
    .Select(it.[ProductID], it.[Name], it.[ListPrice],   
      it.[Size], it.[Style], it.[Weight])  
    .OrderBy("it.[ProductID]");  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> właściwość określa projekcję zapytania i wartość <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />, <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />, lub <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" /> jest <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of EntityDataSourceSelectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectedEventArgs ^&gt; ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wykonaniu zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selected> Zdarzenie jest wywoływane po wykonaniu zapytania i dane zostaną zwrócone. Jest on również wygenerowany, jeśli wystąpił błąd podczas przygotowywania zapytania lub wykonywania.  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> zawiera obiekt <xref:System.Collections.IEnumerable> obiektów, które są zwracane z kwerendy. Obsługa <xref:System.Web.UI.WebControls.EntityDataSource.Selected> zdarzeń do pobierania i przechowywania zwrócone jednostki w <xref:System.Web.UI.Control.ViewState%2A>. W tym do utrwalania zmian obiektu na stronie.  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> obiektu zawiera całkowitą liczbę obiektów na wszystkich stronach, niezależnie od wartości przekazane przez formant powiązany z danymi stronicowanie. <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> jest tylko pobrać, jeśli formant powiązany z danymi musi on, np. Jeśli stronicowanie zostało włączone.  
  
 Jeśli wystąpi błąd, gdy zapytanie jest przygotowane lub wykonane w <xref:System.Web.UI.WebControls.EntityDataSource.Selected> zdarzenie jest zgłaszane, <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> obiekt jest ustawiony na zwróconego <xref:System.Exception>i <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> właściwość jest ustawiona na `null`. Jeśli obsługa wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Selected> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of EntityDataSourceSelectingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectingEventArgs ^&gt; ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed zapytania jest konstruowane i wykonywane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> Zdarzenie jest wywoływane przed zapytania jest konstruowane i wykonywane. Obsługa <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> zdarzenie, aby zmodyfikować konfigurację <xref:System.Web.UI.WebControls.EntityDataSource> lub odczytu lub zmień argumenty z formantu powiązanego z danymi, zanim zapytania jest konstruowane i wykonywane.  
  
 Ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> do obiektu `true` Aby anulować wykonywanie zapytania. Po anulowaniu operacji SELECT żadne dane nie zwrócone do formantu powiązanego z danymi.  
  
 Jeśli `AllowPaging` ustawiono `true` w formancie powiązane z danymi <xref:System.Web.UI.WebControls.EntityDataSource> wywołuje <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> i <xref:System.Data.Objects.ObjectQuery%601.Top%2A> metody konstruktora zapytań na <xref:System.Data.Objects.ObjectQuery%601> za pomocą wartości <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> i <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> właściwości <xref:System.Web.UI.DataSourceSelectArguments> obiektu.  
  
 Jeśli `AllowSorting` ustawiono `true` w formancie powiązane z danymi <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> z <xref:System.Web.UI.DataSourceSelectArguments> obiektu można zmieniać podczas <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> zdarzenie jest obsługiwane. Wszystkie inne operatorów zapytań, takie jak WHERE i ORDER BY, które są określone w znaczniku strony są stosowane po <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> zdarzenie jest wywoływane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia projekcji.</summary>
        <value>Parametry, które są używane do tworzenia projekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podobnie jak <xref:System.Data.Objects.ObjectQuery%601.Select%2A> metody <xref:System.Data.Objects.ObjectQuery%601> klasy, mogą zostać przekazane parametry projekcji, który jest zdefiniowany przez <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości. <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontroli określa <xref:System.Web.UI.WebControls.ParameterCollection> zawierający parametry dostarczania instrukcji SELECT zapytania. <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> Właściwość używa nazwane argumenty do odwoływania się do parametrów, które są określone w ciągu, który został dostarczony do <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> właściwość nie jest ustawiona, staje się nie podstawienia parametru. Wszystkie nazwy parametrów w instrukcji SELECT, i jest poprzedzony przez "`@"` symbol`,` musi mieć zgodną nazwą w <xref:System.Web.UI.WebControls.ParameterCollection>. Wartości null są niedozwolone dla parametrów w <xref:System.Web.UI.WebControls.ParameterCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane ze źródła danych powinny być przechowywane w stan widoku, aby upewnić się, że dane nie został zmieniony przez inny proces przed jego zaktualizowane lub usunięte.</summary>
        <value>
          <see langword="true" /> Jeśli wartości będą przechowywane w widoku stanu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby śledzić zmiany, kiedy aktualizować i usuwać operacje są włączone, <xref:System.Web.UI.WebControls.EntityDataSource> kontroli musi przechowywać informacje o oryginalnych wartości załadować obiektów w <xref:System.Web.UI.PageStatePersister.ControlState%2A>. Ta wymagane informacje są przechowywane w stanie widoku spowoduje zwiększenie rozmiaru strony. Możesz wyłączyć przechowywanie oryginalnych wartości w stan widoku, ustawiając <xref:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState%2A> właściwości `false`. Jeśli to zrobisz, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] nie może śledzić współbieżność w zaktualizowanych obiektów. Aby uzyskać więcej informacji, zobacz [aktualizowania danych (obiektu EntityDataSource)](http://msdn.microsoft.com/library/ca153eec-6817-4c1d-b262-efd6d35b0246).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <MemberSignature Language="C#" Value="void IQueryableDataSource.RaiseViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseViewChanged () Implements IQueryableDataSource.RaiseViewChanged" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() = System::Web::UI::WebControls::IQueryableDataSource::RaiseViewChanged;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia kontrolkę powiązane z danymi, która obiektu parameter został zmieniony i formantu powiązanego z danymi należy odświeżyć.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że śledzenie zmian stanu widoku w celu formantu serwera, mogą być przechowywane w formancie serwera <see cref="T:System.Web.UI.StateBag" /> obiektu. Ten obiekt jest dostępny za pośrednictwem <see cref="P:System.Web.UI.Control.ViewState" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.TrackViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmiany w obiekcie zostały utrwalone w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updated> Zdarzenie jest wywoływane, gdy zmiany w obiekcie zmodyfikowane są zachowywane w źródle danych lub wystąpił błąd podczas stosowania zmian. <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> obiekt jest używany do dostępu do modyfikacji obiektu.  
  
 Właściwości tego obiektu zawierają wartości zwracane ze źródła danych, w tym wartości generowanych przez serwer.  
  
 Jeśli wystąpi błąd podczas zmiany są zachowywane w źródle danych <xref:System.Web.UI.WebControls.EntityDataSource.Updated> zdarzenia i <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> obiekt jest ustawiony do zwróconego <xref:System.Exception>. Jeśli obsługa wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Updated> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane podczas operacji update.</summary>
        <value>Parametry, które są używane podczas operacji update.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4 lub starszym wartość właściwości jest przechowywany w stanie widoku i automatycznie zachowywane między odświeżeniami. Dla aplikacji sieci web przeznaczonych dla platformy ASP.NET 4.5 wartość właściwości nie są przechowywane w widoku stanu i należy ustawić wartość dla każdego żądania HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, zanim zmiany obiektu są zachowywane w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updating> Zdarzenie jest wywoływane przed zmiany właściwości obiektu są zachowywane w źródle danych. <xref:System.Web.UI.WebControls.EntityDataSource.Updating> Zdarzenie pozwala na modyfikację lub sprawdzenie zmian obiekt, podaj inny obiekt lub Anuluj operację przed zmiany są zachowywane. Można uzyskać dostępu do zmodyfikowanego obiektu z <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiektu. Jeśli dostarczany inny obiekt, użytkownik jest odpowiedzialny za typ jednostki poprawne ustawienia <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> właściwości.  
  
 Obsługa <xref:System.Web.UI.WebControls.EntityDataSource.Updating> zdarzeń, jeśli należy zmodyfikować <xref:System.Data.Objects.ObjectStateEntry> dla obiekt, aby ustawić różne wartości oryginalnej do sterowania współbieżnością. Aby uzyskać więcej informacji, zobacz [zapisywania zmian i zarządzanie współbieżności](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).  
  
 Aby zatrzymać zmian z są utrwalane, ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> do obiektu `true`.  
  
 Jeśli wystąpi błąd podczas tworzenia wystąpienia obiektu lub modyfikowanie właściwości, <xref:System.Web.UI.WebControls.EntityDataSource.Updating> zdarzenia i <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> obiekt jest ustawiony do zwróconego <xref:System.Exception>.  
  
 Podczas obsługi wyjątków w <xref:System.Web.UI.WebControls.EntityDataSource.Updating> ustawiony program obsługi zdarzeń, <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwości `true`. Zapobiega to wyjątku z zgłaszanych ponownie. Po określeniu wartość `false` dla <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> właściwość <xref:System.Web.UI.WebControls.EntityDataSource> ponownie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie SQL jednostki, które określa, jak mają być filtrowane wyniki zapytania.</summary>
        <value>W klauzuli WHERE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> formant jest ciąg reprezentujący klauzulę jest Predykat kwerendy SQL jednostki. Ten ciąg jest przekazywany, bez żadnych modyfikacji, do <xref:System.Data.Objects.ObjectQuery%601> która jest wykonywana przez [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]. To zapytanie jest źródło danych objętych <xref:System.Web.UI.WebControls.EntityDataSource> formantu. Ciąg przekazany do <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwość używa tego samego formatu jako ciąg, który jest przekazywany do <xref:System.Data.Objects.ObjectQuery%601.Where%2A> metody <xref:System.Data.Objects.ObjectQuery%601>. Przykłady użycia klauzuli do filtrowania zapytania, zobacz [porady: filtrowanie danych](http://msdn.microsoft.com/library/776f8556-3350-4572-804a-b1513515c1b2).  
  
 Aby filtrować wyniki zapytania według equating właściwości typu jednostki z wyrażeniem, zobacz informacje na temat <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> właściwości.  
  
   
  
## Examples  
 Kod znaczników XML w poniższym przykładzie plik .aspx pobiera wartość z formantu i przekazuje ją jako parametr <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 W poprzednim przykładzie XML jest taka sama jak następujące <xref:System.Data.Objects.ObjectQuery%601> o nazwie `onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję parametrów, które są używane do tworzenia klauzuli WHERE.</summary>
        <value>Parametry, które są używane do tworzenia klauzuli WHERE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podobnie jak <xref:System.Data.Objects.ObjectQuery%601.Where%2A> metody <xref:System.Data.Objects.ObjectQuery%601> klasy, parametry mogą zostać przekazane do predykatu przypisane do <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości. <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> Właściwość <xref:System.Web.UI.WebControls.EntityDataSource> kontroli określa <xref:System.Web.UI.WebControls.ParameterCollection> zawierający parametry umożliwiają określanie wartości do klauzuli WHERE zapytania. <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> Właściwość używa nazwane argumenty do odwoływania się do parametrów, które są określone w ciągu, który został dostarczony do <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> właściwość nie jest ustawiona, staje się nie podstawienia parametru. Wszystkie nazwy parametrów w klauzuli WHERE poprzedzone symbolem "`@"` musi mieć zgodną nazwą w <xref:System.Web.UI.WebControls.ParameterCollection>. Wartości null są niedozwolone dla parametrów w <xref:System.Web.UI.WebControls.ParameterCollection>.  
  
   
  
## Examples  
 Kod znaczników XML w poniższym przykładzie plik .aspx pobiera wartość z formantu i przekazuje ją jako parametr <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> właściwości.  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 W poprzednim przykładzie XML jest taka sama jak następujące <xref:System.Data.Objects.ObjectQuery%601> o nazwie `onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>