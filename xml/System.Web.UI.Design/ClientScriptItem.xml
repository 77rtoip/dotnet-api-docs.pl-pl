<Type Name="ClientScriptItem" FullName="System.Web.UI.Design.ClientScriptItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b14b07fbd6fbeea5c20b18534b49f51fcaecbd4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36391239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItem sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje element skryptu klienta w formularzu sieci Web lub formant użytkownika w czasie projektowania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem> Klasy reprezentuje `script` element, który znajduje się w dokumencie sieci Web w czasie projektowania. Implementacja projektanta formantów niestandardowych można używać <xref:System.Web.UI.Design.ClientScriptItem> obiekt do dodania klienta skryptu elementów do formantu formularza sieci Web lub użytkownika.  
  
 W czasie projektowania, użyj <xref:System.Web.UI.Design.WebFormsRootDesigner> klasę, aby ustawić lub przejrzyj elementy skryptu klienta, które znajdują się w dokumencie, takie jak formularz sieci Web, kontrolki serwera sieci Web, strony zawartości lub strony wzorcowej na powierzchni projektu. Pobierania kolekcję elementów skryptu klienta, które są zawarte w tym dokumencie sieci Web przy użyciu <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> metody. Dodaj element skryptu klienta do dokumentu sieci Web przy użyciu <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> metody.  
  
 Zazwyczaj `script` element zawiera instrukcje skryptu lub określa zewnętrznej lokalizacji dla instrukcji skryptu. `script` Element Opcjonalnie można określić język skryptu instrukcji. Użyj <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> konstruktora w celu zainicjowania właściwości dla nowego obiektu skryptu. Użyj <xref:System.Web.UI.Design.ClientScriptItem> właściwości, aby zbadać `script` obiekt atrybuty i zawartość. <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Reprezentuje właściwość `language` atrybutu `script` elementu. <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Reprezentuje właściwość `src` atrybutu. <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Właściwość reprezentuje instrukcje skryptu ma być wykonywana na kliencie, które są zawarte w `script` elementu.  
  
 Użyj <xref:System.Web.UI.Design.ClientScriptItem> klasy do zarządzania skrypty, które mają być wykonywane w czasie projektowania.  
  
 Aby zarządzać elementami skryptu klienta w czasie wykonywania, należy użyć <xref:System.Web.UI.ClientScriptManager> klasy. Aby uzyskać więcej informacji na temat używania skryptów klienta w czasie wykonywania, zobacz [skrypt po stronie klienta w programie ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ClientScriptItem> Klasy reprezentuje `script` elementów w czasie projektowania, który ostatecznie przeanalizowany i uruchomić w przeglądarce klienta. Ponieważ `script` elementy, które są generowane dla <xref:System.Web.UI.Design.ClientScriptItem> obiekty nie są uruchamiane na serwerze, nie zawierają elementy `runat="server"` atrybutu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ClientScriptItemCollection" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItem (string text, string source, string language, string type, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string source, string language, string type, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, source As String, language As String, type As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItem(System::String ^ text, System::String ^ source, System::String ^ language, System::String ^ type, System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ClientScriptItem : string * string * string * string * string -&gt; System.Web.UI.Design.ClientScriptItem" Usage="new System.Web.UI.Design.ClientScriptItem (text, source, language, type, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Zawartość dla <see langword="script" /> element; ciąg instrukcje skryptu do uruchomienia na kliencie.</param>
        <param name="source">
          <see langword="src" /> Wartość dla atrybutu <see langword="script" /> elementu, określając lokalizację źródła zewnętrznego zawartość skryptu klienta.</param>
        <param name="language">
          <see langword="language" /> Wartość dla atrybutu <see langword="script" /> elementu, określając język instrukcje skryptu.</param>
        <param name="type">Wartość atrybutu type dla <see langword="script" /> element wskazujący typ MIME dla skojarzonego aparatu skryptów.</param>
        <param name="id">Identyfikator <see langword="script" /> elementu. Tego argumentu jest wymagany przez hosta projektu (na przykład [! INCLUDE[vsprvslong](~/includes/vsprvslong-MD.MD)]).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.ClientScriptItem" /> przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjowanie instrukcje dla <xref:System.Web.UI.Design.ClientScriptItem> obiektu za pomocą `text` lub `source` parametr (nie obie). Użyj `text` można zainicjować skryptu, za pomocą ciągu wejściowego, który zawiera instrukcje. Alternatywnie użyj `source` można zainicjować skryptu przy użyciu ścieżki, który zawiera instrukcje skryptu.  
  
 Można określić dowolny z parametrów wejściowych jako `null` lub ciąg pusty (""); odpowiednia właściwość jest ustawiona przy użyciu wartości wejściowej, a `script` wygenerowaniu elementu bez tej właściwości. Przy użyciu `null` lub ciąg pusty ("") generuje następujące wyniki:  
  
-   Aby uzyskać `text`, odpowiadającego `script` element nie zawiera instrukcji skryptu.  
  
-   Aby uzyskać `source`, `src` atrybut nie jest ustawiony `script` elementu.  
  
-   Aby uzyskać `language`, `language` atrybut nie jest ustawiony `script` elementu.  
  
     Gdy klient blok skryptu nie określa język skryptów, przeglądarki klienta określa język.  
  
-   Aby uzyskać `type`, `type` atrybut nie jest ustawiony w elemencie skryptu.  
  
     Gdy klient blok skryptu nie określa typ skryptu, przeglądarki klienta określa typ.  
  
-   Dla `id`, host projektu (na przykład [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]) zgłosi <xref:System.ArgumentNullException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> ma wartość null (zgłoszony przez hosta projektu).</exception>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="ID" /> atrybutu wartości elementu skryptu klienta.</summary>
        <value>
          <see langword="ID" /> Wartość <see langword="script" /> elementu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="language" /> atrybutu wartości elementu skryptu klienta.</summary>
        <value>Określona nazwa języka <see langword="language" /> atrybutu w <see langword="script" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Właściwość reprezentuje język, w którym są zapisywane instrukcje skryptu. Jeśli <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> właściwość jest `null` lub ciąg pusty (""), `language` atrybut nie jest ustawiony `script` elementu. Gdy klient blok skryptu nie określa język skryptów, przeglądarki klienta określa język.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Właściwość jest inicjowana przez <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="src" /> atrybutu wartości elementu skryptu klienta.</summary>
        <value>Ścieżka do pliku źródłowego określonej dla <see langword="src" /> atrybutu w <see langword="script" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Właściwość określa zewnętrzne źródło lokalizacji dla zawartości skryptu klienta. Zazwyczaj instrukcje skryptu dla `script` określony element za pomocą <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> lub <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> właściwość jest `null` lub ciąg pusty (""), `src` atrybut nie jest ustawiony `script` elementu.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Właściwość jest inicjowana przez <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera skrypt instrukcje zawarte w elemencie skryptu klienta.</summary>
        <value>Instrukcje skryptów zawartych w <see langword="script" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Właściwość reprezentuje instrukcji, które są zawarte w `script` elementu. Zazwyczaj instrukcje skryptu dla `script` określony element za pomocą <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> lub <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> właściwość jest `null` lub ciąg pusty (""), `script` element nie zawiera żadnych instrukcji skryptu.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Właściwość jest inicjowana przez <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="type" /> atrybutu wartości elementu skryptu klienta.</summary>
        <value>Nazwa typu MIME skojarzone z <see langword="script" /> elementu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
  </Members>
</Type>