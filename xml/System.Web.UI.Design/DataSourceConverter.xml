<Type Name="DataSourceConverter" FullName="System.Web.UI.Design.DataSourceConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc88c4838eeec8eb8f6b12c772bccae25abc6533" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36590060" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataSourceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataSourceConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c2bca-101">Udostępnia konwertera typów, które można pobrać listy źródeł danych są dostępne dla bieżącego składnika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2bca-101">Provides a type converter that can retrieve a list of data sources accessible to the current component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2bca-102"><xref:System.Web.UI.Design.DataSourceConverter> udostępnia metody, które mogą służyć do pobierania listy źródeł danych są dostępne dla bieżącego składnika czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="c2bca-102"><xref:System.Web.UI.Design.DataSourceConverter> provides methods that can be used to retrieve a list of data sources accessible to the current design-time component.</span></span>  
  
 <span data-ttu-id="c2bca-103">Ten konwerter typów jest używany przez [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] zapewnienie wartości, które znajdują się na liście danych źródeł w **właściwości** okna.</span><span class="sxs-lookup"><span data-stu-id="c2bca-103">This type converter is used by [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] to provide the values that appear in the list of data sources in the **Properties** window.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c2bca-104">Konwerter typów nigdy nie powinien bezpośredni dostęp.</span><span class="sxs-lookup"><span data-stu-id="c2bca-104">You should never access a type converter directly.</span></span> <span data-ttu-id="c2bca-105">Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="c2bca-105">Instead, call the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="c2bca-106">Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="c2bca-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 <span data-ttu-id="c2bca-107">Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="c2bca-107">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
   
  
## Examples  
 [!code-cpp[DataSourceTypeConverterExamples#4](~/samples/snippets/cpp/VS_Snippets_WebNet/DataSourceTypeConverterExamples/CPP/datasourcetypeconverterexamples.cpp#4)]
 [!code-csharp[DataSourceTypeConverterExamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceTypeConverterExamples/CS/datasourcetypeconverterexamples.cs#4)]
 [!code-vb[DataSourceTypeConverterExamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceTypeConverterExamples/VB/datasourcetypeconverterexamples.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2bca-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.DataSourceConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-108">Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c2bca-109">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="c2bca-110">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-110">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-111">Pobiera wartość wskazującą, czy konwerter można przekonwertować obiektu typu określonego źródła natywnego typu konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-111">Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-112">
            <see langword="true" /> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-112">
              <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2bca-113">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-113">As implemented in this class, this method always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c2bca-114">
            <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  <paramref name="context" /> Służy do wyodrębniania dodatkowe informacje o środowisku konwerter jest wywoływany z. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-114">
              <para>Override this method to provide your own conversion requirements.  The <paramref name="context" /> can be used to extract additional information about the environment this converter is being invoked from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c2bca-115">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-115">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c2bca-116">
            <see cref="T:System.Globalization.CultureInfo" /> Który może służyć do obsługi funkcji lokalizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-116">The <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c2bca-117">
            <see cref="T:System.Object" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-117">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-118">Konwertuje określony obiekt natywny typ konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-118">Converts the specified object to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-119">
            <see cref="T:System.Object" /> Reprezentujący określony obiekt po konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-119">An <see cref="T:System.Object" /> that represents the specified object after conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c2bca-120">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-120">The conversion could not be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c2bca-121">
            <para>Zastępuje tę metodę do własnych wymagań konwersji.  <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu kontekstu <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-121">
              <para>Override this method to meet your own conversion requirements.  The <paramref name="context" /> parameter can be used to extract additional information about the environment the converter is being invoked from. It might be <see langword="null" />, so you should always check. Also, properties of the context object may also return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c2bca-122">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Wskazujący składnika lub kontrolki, można pobrać wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-122">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indicating the component or control to get values for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-123">Pobiera dostępne dla formantu źródła danych standardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-123">Gets the standard data sources accessible to the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-124">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> wyświetlania standardowe dostępne źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-124">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2bca-125">Źródła danych, które są dostępne dla składnika są określane przez pobieranie listę składników z projektanta testowania każdego składnika z <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> metody, a następnie zwracanie składników, które są prawidłowe dane źródeł.</span><span class="sxs-lookup"><span data-stu-id="c2bca-125">The data sources that are accessible to the component are determined by retrieving a list of components from the designer, testing each component with the <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> method, and then returning the components that are valid data sources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c2bca-126">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-126">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-127">Pobiera wartość wskazującą, czy zbiór standardowych wartości zwracane z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> znajduje się lista wszystkich możliwych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-127">Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-128">
            <see langword="true" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zwrócony z <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> jest wyłączną listę wszystkich możliwych wartości. <see langword="false" /> Jeśli inne wartości są możliwe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-128">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values; <see langword="false" /> if other values are possible.</span>
          </span>
          <span data-ttu-id="c2bca-129">Zgodnie z implementacją tej klasy, ta metoda zawsze zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-129">As implemented in this class, this method always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2bca-130">Jeśli lista jest wyłączne, takie jak typ danych wyliczenia, nie inne wartości są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="c2bca-130">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="c2bca-131">Jeśli nie jest zarezerwowana listy, a następnie istnieją inne prawidłowe wartości, oprócz wartości na liście standard <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="c2bca-131">If the list is not exclusive, then there are other valid values besides the list of standard values that <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> provides.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c2bca-132">
            <para>Należy przesłonić tę metodę, jeśli typ, który ma zostać przekonwertowany obsługuje standardowe wartości.  <paramref name="context" /> Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Może być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu kontekstu <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-132">
              <para>Override this method if the type you want to convert supports standard values.  The <paramref name="context" /> parameter can be used to extract additional information about the environment this converter is being invoked from. It might be <see langword="null" />, so you should always check. Also, properties of the context object may also return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c2bca-133">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-133">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-134">Pobiera wartość wskazującą, czy konwerter obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-134">Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-135">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinien być wywołany, aby znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-135">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2bca-136">Ta implementacja zawsze zwraca <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-136">This implementation always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IsValidDataSource : System.ComponentModel.IComponent -&gt; bool&#xA;override this.IsValidDataSource : System.ComponentModel.IComponent -&gt; bool" Usage="dataSourceConverter.IsValidDataSource component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="c2bca-137">Składnik, aby sprawdzić jako poprawnego źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-137">The component to check as a valid data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2bca-138">Wskazuje, czy określony składnik jest poprawnego źródła danych dla tego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-138">Indicates whether the specified component is a valid data source for this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2bca-139">
            <see langword="true" /> Jeśli <paramref name="component" /> implementuje <see cref="T:System.Collections.IEnumerable" /> lub <see cref="T:System.ComponentModel.IListSource" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-139">
              <see langword="true" /> if <paramref name="component" /> implements <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2bca-140"><xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A> Używa metody <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> metodę, aby określić składniki, które są dostępne jako standardowe dostępne źródła danych.</span><span class="sxs-lookup"><span data-stu-id="c2bca-140">The <xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> method to determine the components that are available as standard accessible data sources.</span></span> <span data-ttu-id="c2bca-141">Aby uzyskać <xref:System.Web.UI.Design.DataSourceConverter> klasy poprawnego źródła danych jest składnik, który implementuje <xref:System.Collections.IEnumerable> lub <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c2bca-141">For the <xref:System.Web.UI.Design.DataSourceConverter> class, a valid data source is a component that implements the <xref:System.Collections.IEnumerable> or <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c2bca-142">
            <para>Konwertery źródła danych niestandardowych mogą dziedziczyć po <see cref="T:System.Web.UI.Design.DataSourceConverter" /> klasy, a następnie zastąpić <see cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> metody do testowania implementacji interfejsów, które są wymagane do składnik używany jako źródło danych.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c2bca-142">
              <para>Custom data source converters can derive from the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class, and override the <see cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> method, to test for the interface implementations that are required to use a component as a data source.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>