<Type Name="DataColumnSelectionConverter" FullName="System.Web.UI.Design.DataColumnSelectionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d65705e0e616c4566710da646605dc3b3f4aed93" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36390853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumnSelectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataColumnSelectionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumnSelectionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumnSelectionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataColumnSelectionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów właściwości reprezentujący nazwę pola pole powiązane kolumny w <see cref="T:System.Web.UI.WebControls.GridView" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Design.DataColumnSelectionConverter> klasy w celu przekonwertowania typy obiektów przed przypisania do właściwości formantu. Ogólnie rzecz biorąc <xref:System.Web.UI.Design.DataColumnSelectionConverter> klasa obsługuje konwertowania ciągu typy obiektów i dostarcza listę wartości domyślnych, które są dostępne do przypisania do właściwości skojarzonym formancie. Kolekcja wartości domyślnych jest lista nazw pól dla pola powiązane kolumny dla bieżącego <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 Aby obsługiwać Konwertowanie innych typów obiektów, klasa wyprowadzona z <xref:System.Web.UI.Design.DataColumnSelectionConverter> i zastąpić <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> i <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> metody dla typów obiektów dodatkowych. Aby obsługiwać niestandardowe listę standardowych można przypisać wartości, należy zastąpić <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> metody.  
  
 Zastosuj <xref:System.ComponentModel.TypeConverterAttribute> atrybutu, aby określić <xref:System.Web.UI.Design.DataColumnSelectionConverter> klasy jako konwerter typów dla właściwości formantu. Na przykład <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> właściwość <xref:System.Web.UI.WebControls.GridView> kontroli określa <xref:System.Web.UI.Design.DataColumnSelectionConverter> jako jego konwerter typów.  
  
> [!NOTE]
>  Konwerter typów nigdy nie powinien bezpośredni dostęp. Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor> obiektu. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter>.  
  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> Metody oznacza, że konwerter obsługuje, zwraca listę wartości dostępne za pośrednictwem <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> metody. <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> Metoda wskazuje, czy lista nie jest wyłączną listę możliwych wartości.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumnSelectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumnSelectionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Konwerter typów nigdy nie powinien bezpośredni dostęp. Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor> obiektu. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataColumnSelectionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które mogą być używane do uzyskiwania informacji dodatkowy kontekst.</param>
        <param name="sourceType">Typ do przekonwertowania z.</param>
        <summary>Wskazuje, czy określony typ źródła można przekonwertować na typ właściwości skojarzonym formancie.</summary>
        <returns>
          <see langword="true" /> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> metodę, aby określić, czy <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> metoda obsługuje konwersji typu źródłowego.  
  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> Metoda można przekonwertować tylko z ciągu, więc <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> metoda zwraca `true` podczas `sourceType` jest ciągiem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataColumnSelectionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które mogą być używane do uzyskiwania informacji dodatkowy kontekst.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> Obiektu, który może służyć do obsługi funkcji lokalizacji.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt na typ właściwości skojarzonym formancie.</summary>
        <returns>
          <see cref="T:System.Object" /> Wystąpienia, który reprezentuje przekonwertowany obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` jest ciągiem, a następnie reprezentację ciągu `value` jest zwracany. Jeśli `value` jest `null`, ciąg pusty ("") jest zwracany. Wszystkie pozostałe wartości <xref:System.NotSupportedException> wyjątku.  
  
 Wywołanie <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> metodę, aby określić, czy <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> metoda obsługuje konwersji typu źródłowego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nie można wykonać konwersji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataColumnSelectionConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które mogą być używane do uzyskiwania informacji dodatkowy kontekst.</param>
        <summary>Zwraca listę dostępnych wartości, które można przypisać do właściwości skojarzonym formancie.</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zawierające wartości dostępne do przypisania do właściwości skojarzonym formancie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> Używa metody <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> właściwości określonego `context` obiektu uzyskanie <xref:System.ComponentModel.IComponent> implementacji. Jeśli <xref:System.ComponentModel.IComponent> implementacja jest dostępna, jest on używany dostępu do skojarzonego formantu w czasie projektowania i pobrać listę dostępnych wartości skojarzonych <xref:System.Web.UI.WebControls.GridView> składnika.  
  
 Kolekcja dostępnych wartości składa się z pola powiązane kolumny w <xref:System.Web.UI.WebControls.GridView> formantu. Pola powiązane kolumny składają się z <xref:System.Web.UI.WebControls.BoundField> obiekty w <xref:System.Web.UI.WebControls.GridView.Columns%2A> kolekcji i z pola powiązane kolumny są generowane automatycznie dla pola w źródle danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataColumnSelectionConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które mogą być używane do uzyskiwania informacji dodatkowy kontekst.</param>
        <summary>Wskazuje, czy ten konwerter zwraca listę zawierającą wszystkie możliwe wartości, które można przypisać do właściwości skojarzonym formancie.</summary>
        <returns>
          <see langword="true" /> Jeśli ten konwerter zwraca listę zawierającą wszystkie możliwe wartości, które można przypisać do właściwości skojarzonym formancie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> Metodę <xref:System.Web.UI.Design.DataColumnSelectionConverter> wystąpienie zwraca `false`, wskazujący, że lista zwrócona przez <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> metoda nie jest wyłączną listę wszystkich możliwych wartości można przypisać.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataColumnSelectionConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które mogą być używane do uzyskiwania informacji dodatkowy kontekst.</param>
        <summary>Wskazuje, czy ten konwerter zwraca zestaw wartości dostępne do przypisania do właściwości formantu, w ramach określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli ten konwerter zwraca standardowy zestaw dostępnych wartości dla przypisania do właściwości skojarzonym formancie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> — Metoda wskazuje, czy konwerter obsługuje zwraca listę wartości dostępne za pośrednictwem <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> metody.  
  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> Metodę <xref:System.Web.UI.Design.DataColumnSelectionConverter> zwraca obiekt `true` Jeśli określonego `context` obiekt dostaw <xref:System.ComponentModel.IComponent> implementacja jego <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> właściwości. <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> Używa metody <xref:System.ComponentModel.IComponent> implementacji dostępu do skojarzonego formantu w czasie projektowania i pobrać listę dostępnych powiązany pola kolumn z skojarzony <xref:System.Web.UI.WebControls.GridView> składnika.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </Docs>
    </Member>
  </Members>
</Type>