<Type Name="WebFormsReferenceManager" FullName="System.Web.UI.Design.WebFormsReferenceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2657867ff7c3dde33aed3b61d87d880cdd00648" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39998601" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebFormsReferenceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebFormsReferenceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebFormsReferenceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebFormsReferenceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFormsReferenceManager abstract" />
  <TypeSignature Language="F#" Value="type WebFormsReferenceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę bazową do uzyskiwania dostępu do typów, dyrektyw i formantów w bieżącym dokumencie projekt sieci Web. Ta klasa musi być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebFormsReferenceManager> Klasy bazowej jest implementowany przez projektanta hosty w celu zapewnienia dostępu do typów, dyrektyw i formanty użytkownika zdefiniowane w dokumencie projekt sieci Web. Można użyć klasy projektanta kontroli <xref:System.Web.UI.Design.WebFormsReferenceManager> dostęp do definicji w bieżącym dokumencie i Dodaj nowy prefiks tagu do bieżącego dokumentu.  
  
 Możesz uzyskać dostęp do <xref:System.Web.UI.Design.WebFormsReferenceManager> usługi świadczone przez projektanta hosta za pośrednictwem <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> właściwość <xref:System.Web.UI.Design.WebFormsRootDesigner> implementacji. <xref:System.Web.UI.Design.WebFormsRootDesigner> Implementacja jest możliwy na dwa sposoby:  
  
-   Klasy wywodzące się z <xref:System.Web.UI.Design.ControlDesigner> służy <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> właściwości w celu uzyskania dostępu do <xref:System.Web.UI.Design.WebFormsRootDesigner> implementacji dostarczony host projektanta. <xref:System.Web.UI.Design.WebFormsReferenceManager> Implementacja jest dostarczane za pośrednictwem <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> właściwość <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> właściwości.  
  
-   Mogą uzyskiwać dostęp do innych projektanta klas <xref:System.Web.UI.Design.WebFormsRootDesigner> implementacji dzięki uzyskaniu pierwszej <xref:System.ComponentModel.Design.IDesignerHost> usług wdrożenia za pomocą projektanta składników <xref:System.ComponentModel.Component.Site%2A>, a następnie wywołując <xref:System.ComponentModel.Design.IDesignerHost.GetDesigner%2A> metody przy użyciu projektanta hosta <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A>właściwości.  
  
    > [!NOTE]
    >  <xref:System.Web.UI.Design.WebFormsReferenceManager> zastępuje interfejs przestarzałe <xref:System.Web.UI.Design.IWebFormReferenceManager>. Starsze projektanta hosty mogą obsługiwać tylko <xref:System.Web.UI.Design.IWebFormReferenceManager> implementacji interfejsu. Sprawdź, czy <xref:System.Web.UI.Design.WebFormsRootDesigner> i <xref:System.Web.UI.Design.WebFormsReferenceManager> implementacje dostarczony host projektanta nie są `null` zapewnienie host projektanta implementuje <xref:System.Web.UI.Design.WebFormsRootDesigner> i <xref:System.Web.UI.Design.WebFormsReferenceManager> klasy.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFormsReferenceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebFormsReferenceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.Design.WebFormsReferenceManager> klasa jest klasą abstrakcyjną, nie można utworzyć wystąpienia <xref:System.Web.UI.Design.WebFormsReferenceManager> bezpośrednio za pomocą konstruktora.  
  
 Podczas wyprowadzania z <xref:System.Web.UI.Design.WebFormsReferenceManager> klasy, Zastąp konstruktora do zaimplementowania akcji niestandardowej inicjalizacji implementacji Menedżera odwołań.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisterDirectives">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection GetRegisterDirectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRegisterDirectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRegisterDirectives () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ GetRegisterDirectives();" />
      <MemberSignature Language="F#" Value="abstract member GetRegisterDirectives : unit -&gt; System.Collections.ICollection" Usage="webFormsReferenceManager.GetRegisterDirectives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dyrektywy rejestru dla bieżącego dokumentu projektu.</summary>
        <returns>Kolekcja ciągów reprezentujących dyrektywy rejestru zdefiniowany w bieżącym dokumencie.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string GetTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member GetTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.GetTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Typ obiektu.</param>
        <summary>Pobiera prefiks tagu dla określonego typu.</summary>
        <returns>Prefiks tagu dla typu określonego obiektu, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public abstract Type GetType (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetType (tagPrefix As String, tagName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetType(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="webFormsReferenceManager.GetType (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Prefiks tagu typ do pobrania.</param>
        <param name="tagName">Nazwa tagu typ do pobrania.</param>
        <summary>Pobiera typ obiektu, z określonego tagu prefiks i nazwy tagu.</summary>
        <returns>
          <see cref="T:System.Type" /> Obiektu przy użyciu prefiksu określonego tagu i nazwę, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlPath">
      <MemberSignature Language="C#" Value="public abstract string GetUserControlPath (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserControlPath(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserControlPath (tagPrefix As String, tagName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserControlPath(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetUserControlPath : string * string -&gt; string" Usage="webFormsReferenceManager.GetUserControlPath (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Prefiksu tagu kontrolki użytkownika do pobrania.</param>
        <param name="tagName">Nazwa tagu kontrolki użytkownika do pobrania.</param>
        <summary>Pobiera ścieżkę względną adres URL dla kontrolki użytkownika przy użyciu prefiksu określonego tagu i nazwę tagu.</summary>
        <returns>Ciąg reprezentujący względną ścieżkę adresu URL dla formantu określonego użytkownika, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath%2A> używa prefiksu tagu i nazwę do zlokalizowania dyrektywy Zarejestruj kontrolki użytkownika w bieżącym dokumencie i zwraca `src` zdefiniowanych w dyrektywie rejestru wartość atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string RegisterTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegisterTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RegisterTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ RegisterTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.RegisterTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Typ, aby dodać prefiks tagu w bieżącym dokumencie.</param>
        <summary>Dodaje prefiks tagu dla określonego typu.</summary>
        <returns>Ciąg prefiksu tagu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli prefiks tagu już istnieje, nowej dyrektywy rejestru nie został dodany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>