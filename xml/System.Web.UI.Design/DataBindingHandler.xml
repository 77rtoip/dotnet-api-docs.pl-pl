<Type Name="DataBindingHandler" FullName="System.Web.UI.Design.DataBindingHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a61ffdc45f19cd1e5c066a6022dd427cc9332d25" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39804782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataBindingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataBindingHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataBindingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBindingHandler abstract" />
  <TypeSignature Language="F#" Value="type DataBindingHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę bazową dla obsługi powiązanie danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataBindingHandler> udostępnia klasę bazową dla programów obsługi powiązanie danych. Powiązanie danych program obsługi może służyć w Projektancie można utworzyć powiązania danych, który umożliwia znaczące wyświetlania formantów na powierzchni projektowej. Zazwyczaj Projektant formantów jest odpowiedzialny za tę funkcję. Gdy formant nie jest jednak na żywo na powierzchni projektowej np. w szablonie inna kontrolka nie ma projektanta, a ta funkcjonalność jest dostarczana przez program obsługi wiązania danych, jeśli zostało określone za pomocą <xref:System.Web.UI.DataBindingHandlerAttribute> kodu dla formantu .  
  
 Aby korzystać z obsługi wiązania danych, musi mieć kontroli, który ma właściwości powiązanych z danymi lub właściwości <xref:System.Web.UI.DataBindingHandlerAttribute> określony w jej kod, który wskazuje typ obsługi powiązanie danych do użycia.  
  
 Na przykład <xref:System.Web.UI.WebControls.Label> jest skojarzony formant <xref:System.Web.UI.Design.TextDataBindingHandler> klasy za pomocą <xref:System.Web.UI.DataBindingHandlerAttribute> w kodzie dla <xref:System.Web.UI.WebControls.Label> klasy. W szablonie dla <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.Label> formantu, którego właściwość tekst została powiązana z danymi wyświetla słowo "Z danymi" na etykiecie. Bez obsługi wiązania danych Etykieta będzie niewidoczna w czasie projektowania, ponieważ nie ma projektanta można powiązać jej właściwości powiązanych z danymi w formant z szablonem w czasie projektowania.  
  
 Aby zaimplementować mechanizm obsługi wiązania danych, należy zdefiniować nową klasę pochodzącą od tej klasy i implementowanie <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> metodę, aby ustawić odpowiednie właściwości.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBindingHandlerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBindingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataBindingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.DataBindingHandler" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindControl">
      <MemberSignature Language="C#" Value="public abstract void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBindControl(class System.ComponentModel.Design.IDesignerHost designerHost, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DataBindControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member DataBindControl : System.ComponentModel.Design.IDesignerHost * System.Web.UI.Control -&gt; unit" Usage="dataBindingHandler.DataBindControl (designerHost, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="designerHost">
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dla dokumentu.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Do powiązania.</param>
        <summary>Wiąże określoną kontrolkę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powinna zaimplementowana w klasie pochodnej w celu udostępnienia funkcji niestandardowych obsługi powiązanie danych. Logika dla powiązania danych powinny być wdrażane w ramach tej metody i mogą być specyficzne dla typu lub typów, którymi można powiązać właściwości lub we właściwościach obsługi powiązanie danych.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Większość procedur obsługi powiązania danych należy zbadać kolekcji powiązania danych w kontrolce, za pomocą <see cref="T:System.Web.UI.IDataBindingsAccessor" /> interfejsu, aby ustalić, czy wszystkie określone właściwości, które może obsłużyć powiązane z danymi.</para>
        </block>
        <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
      </Docs>
    </Member>
  </Members>
</Type>