<Type Name="DataBindingHandler" FullName="System.Web.UI.Design.DataBindingHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7cf68a101ca068775cd83d8a0223e9f95f7a046" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36391048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataBindingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataBindingHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataBindingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBindingHandler abstract" />
  <TypeSignature Language="F#" Value="type DataBindingHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę podstawową dla obsługi powiązanie danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataBindingHandler> udostępnia klasę podstawową dla programów obsługi powiązania danych. Powiązanie danych obsługi można w Projektancie utworzyć powiązania danych, który umożliwia znaczące wyświetlania formantu na powierzchni projektu. Zwykle projektanta formantów jest odpowiedzialny za tę funkcję. Jednak gdy formantu nie jest na żywo na powierzchni projektu, takie jak w szablonie inny formant nie ma projektanta i tego funkcje są udostępniane przez obsługi wiązania danych, jeśli określono jednej z <xref:System.Web.UI.DataBindingHandlerAttribute> w kodzie formantu .  
  
 Aby korzystać z obsługi wiązania danych, musi mieć kontrolują, które ma właściwości powiązanych z danymi lub właściwości <xref:System.Web.UI.DataBindingHandlerAttribute> określonego w ramach jego kod, który wskazuje typ obsługi wiązania danych do użycia.  
  
 Na przykład <xref:System.Web.UI.WebControls.Label> jest skojarzony formant <xref:System.Web.UI.Design.TextDataBindingHandler> klasy za pomocą <xref:System.Web.UI.DataBindingHandlerAttribute> w kodzie <xref:System.Web.UI.WebControls.Label> klasy. W ramach szablonu dla <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.Label> kontroli, których właściwość text została powiązana z danymi wyświetla słowo "Z danymi" na etykiecie. Bez obsługi wiązania danych etykiety będzie niewidoczny w czasie projektowania, ponieważ nie ma projektanta można powiązać właściwości powiązanych z danymi w kontroli szablonu w czasie projektowania.  
  
 Aby zaimplementować program obsługi wiązania danych, należy zdefiniować nową klasę pochodzącą od tej klasy i wdrożenie <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> metodę, aby ustawić odpowiednie właściwości.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBindingHandlerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBindingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataBindingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.DataBindingHandler" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindControl">
      <MemberSignature Language="C#" Value="public abstract void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBindControl(class System.ComponentModel.Design.IDesignerHost designerHost, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DataBindControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member DataBindControl : System.ComponentModel.Design.IDesignerHost * System.Web.UI.Control -&gt; unit" Usage="dataBindingHandler.DataBindControl (designerHost, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="designerHost">
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> Dokumentu.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Do powiązania.</param>
        <summary>Wiąże określonego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powinna zaimplementowana w klasie pochodnej umożliwiają korzystanie z funkcji do niestandardowego wiązania z danymi programu obsługi. Logikę wiązania danych powinny być implementowane w ramach tej metody i może być określony dla typu lub typy, które jest obsługi wiązania danych można powiązać z właściwością ani właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Większość obsługi powiązania danych, należy zbadać kolekcji powiązania danych w formancie, przy użyciu <see cref="T:System.Web.UI.IDataBindingsAccessor" /> interfejsu, aby sprawdzić, czy wszystkie właściwości specyficzne dla może obsługiwać są powiązane z danymi.</para>
        </block>
        <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
      </Docs>
    </Member>
  </Members>
</Type>