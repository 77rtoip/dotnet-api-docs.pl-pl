<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f88cd4a35d98f239679fa969616c0ddfce0785" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69131810" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje właściwości i metody oceny i edytowania wyrażenia zasobu w czasie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor> Klasa pochodzi<xref:System.Web.UI.Design.ExpressionEditor> z klasy i zapewnia implementację do oceny i kojarzenia odwołania zasobu z właściwością kontrolki w czasie projektowania. Na przykład można powiązać wartość właściwości kontrolki z wyrażeniem `Resources:submitText`zasobu, co oznacza, że wartość właściwości kontrolki jest ustawiana przy użyciu zasobu o nazwie. `submitText`  
  
 Host projektanta wizualnego, taki jak [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], <xref:System.Web.UI.Design.ResourceExpressionEditor> używa klasy, aby określić klasę zasobów, klucz i wartość domyślną projektanta dla wyrażenia zasobu, a następnie oszacować wybrane wyrażenie zasobu na potrzeby renderowania w czasie projektowania.  
  
 Podczas przeglądania <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> właściwości kontrolki w siatce właściwości czasu projektowania projektant wizualny wyświetli okno dialogowe, w którym można ustawić wyrażenia, które podają wartość czasu wykonywania dla właściwości kontrolki. Typ wyrażenia można wybrać na podstawie listy prefiksów wyrażeń. Gdy wybierzesz prefiks wyrażenia **zasobów** na liście, projektant wizualny używa <xref:System.Web.UI.Design.ResourceExpressionEditor> metod do ustawiania, obliczania i konwertowania wyrażenia na podstawie składni wyrażenia zasobu. Projektant wizualny używa wyniku obliczanego wyrażenia do przypisywania wartości właściwości kontrolki, które są renderowane na powierzchni projektowej.  
  
 Właściwość podstawowa <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType> <xref:System.Web.Compilation.ResourceExpressionBuilder> dla zwraca ciąg. `Resources` Klasa jest skojarzona z prefiksem `Resources` wyrażenia i <xref:System.Web.UI.Design.ResourceExpressionEditor> implementacją. <xref:System.Web.Compilation.ResourceExpressionBuilder>  
  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> Metoda szacuje wyrażenie zasobu wejściowego. <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Metoda<xref:System.Web.UI.Design.ExpressionEditorSheet> zwraca implementację, która jest używana do wybierania nazwy zasobu, klasy i wartości domyślnej projektanta oraz do tworzenia wyrażenia zasobu z wybranych wartości zasobów.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób powiązania <xref:System.Web.UI.WebControls.HyperLink.Text%2A> właściwości <xref:System.Web.UI.WebControls.HyperLink> kontrolki z wyrażeniem zasobu przy użyciu <xref:System.Web.UI.Design.ResourceExpressionEditor> klasy.  
  
1.  W projekcie formularzy sieci Web Dodaj nowy plik zasobów o nazwie Strings. resx do katalogu App_LocalResources.  
  
2.  Dodaj ciąg o nazwie myLinkText do pliku zasobów String. resx, a następnie ustaw wartość na tekst dla <xref:System.Web.UI.WebControls.HyperLink> kontrolki.  
  
     Na przykład ustaw `myLinkText` wartość ciągu na `This is a good link`.  
  
3.  Na stronie formularzy sieci Web Dodaj <xref:System.Web.UI.WebControls.HyperLink> kontrolkę.  
  
4.  Dla kontrolki w obszarze właściwości kliknij pozycję **wyrażenia**, a następnie kliknij przycisk wielokropka (**...**). `Hyperlink`  
  
     Zostanie wyświetlone okno dialogowe **wyrażenia.** `<Hyperlinkname>`  
  
5.  W obszarze **Właściwości**możliwe do powiązania kliknij pozycję **tekst**, a następnie na liście **Typ wyrażenia** wprowadź wartość **zasoby**.  
  
     Zostaną wyświetlone właściwości wyrażenia zasobu, które są zdefiniowane <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> przez klasę.  
  
6.  W **obszarze właściwości wyrażenia ustaw właściwość** **ClassName** na **ciągs**, która jest nazwą klasy dla skompilowanego pliku zasobów. resx i ustaw wartość **ResourceKey** na **myLinkText**, która jest nazwą ciągu w ciągach. resx.  
  
 Projektant wizualny używa <xref:System.Web.UI.Design.ResourceExpressionEditor> do przypisywania wyrażenia zasobu `Text` dla właściwości. Poniższe źródło. aspx pokazuje przykład wartości właściwości, która jest ustawiana za pomocą wyrażenia zasobu.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest konfigurowany przez klasę bazową wraz <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> z właściwością ustawioną na `Resources`. <xref:System.Web.UI.Design.ResourceExpressionEditor>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie zasobu do obliczenia. <paramref name="expression" />nie zawiera <see langword="Resources" /> prefiksu wyrażenia.</param>
        <param name="parseTimeData">Obiekt dostarczający dodatkowe dane analizy w postaci <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> wartości.</param>
        <param name="propertyType">Typ właściwości kontrolki.</param>
        <param name="serviceProvider">Implementacja dostawcy usług dostarczana przez hosta projektanta, używana do uzyskiwania dodatkowych usług czasu projektowania.</param>
        <summary>Oblicza wyrażenie zasobu i dostarcza wartość czasu projektowania dla właściwości kontrolki.</summary>
        <returns>Obiekt, do którego odwołuje się obliczony ciąg wyrażenia, jeśli Obliczanie wyrażenia powiodło się; w przeciwnym razie. <see langword="null" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wyszukuje zasób, który jest określony przez `expression`, a następnie zwraca zasób. <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>  
  
 Projektant wizualny używa <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> metody do obliczenia wyrażenia zasobu i zapewnienia wartości czasu projektowania skojarzonej właściwości kontrolki. W czasie wykonywania Analizator strony używa <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> metod i <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> odpowiedniej <xref:System.Web.Compilation.ResourceExpressionBuilder> implementacji do obliczania wyrażenia i podaj wartość w czasie wykonywania dla skojarzonej właściwości kontrolki.  
  
 Projektant wizualny używa metody <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> , aby przeanalizować ciąg wyrażenia w czasie projektowania, a następnie <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> wywołuje metodę z przeanalizowanymi danymi wyrażenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie zasobu używane do inicjowania arkusza edytora wyrażeń.</param>
        <param name="serviceProvider">Implementacja dostawcy usług dostarczana przez hosta projektanta, używana do inicjowania arkusza edytora wyrażeń.</param>
        <summary>Zwraca arkusz edytora wyrażeń zasobów, który jest zainicjowany przy użyciu ciągu wyrażenia wejściowego i implementacji dostawcy usług.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> , który definiuje właściwości wyrażenia zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Metoda zwraca implementację arkusza edytora wyrażeń dla wyrażeń zasobów. Host projektanta wizualnego używa arkusza edytora wyrażeń w jego oknie dialogowym wyrażeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>
