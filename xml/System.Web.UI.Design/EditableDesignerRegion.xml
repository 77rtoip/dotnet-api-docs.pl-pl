<Type Name="EditableDesignerRegion" FullName="System.Web.UI.Design.EditableDesignerRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="831ec555c7d494a6c59e45830f1c105b2733e365" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30587386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditableDesignerRegion : System.Web.UI.Design.DesignerRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditableDesignerRegion extends System.Web.UI.Design.DesignerRegion" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.EditableDesignerRegion" />
  <TypeSignature Language="VB.NET" Value="Public Class EditableDesignerRegion&#xA;Inherits DesignerRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditableDesignerRegion : System::Web::UI::Design::DesignerRegion" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerRegion</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje region edytowalny zawartości znacznika czasu projektowania formantu skojarzony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Design.EditableDesignerRegion> klasę, aby ułatwić zarządzanie szablonów w czasie projektowania. A <xref:System.Web.UI.Design.ControlDesigner> użyje wystąpienia tej klasy z jego <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> metodę, aby wygenerować kod znaczników HTML zawartości regionu.  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak utworzyć formant z dwóch regionach aktywne i <xref:System.Web.UI.Design.EditableDesignerRegion> obiektu z dwóch widoków i szablonów. Skompiluj projekt, otwórz stronę w wizualnego projektanta i Przełącz do widoku (WYSIWYG) projektu. Istnieją dwa widoki aktywne, **Widok1** i **Widok2**. Kliknij przycisk **Widok1** i przeciągnij <xref:System.Web.UI.WebControls.CheckBox> kontroli w dolnej części strony do obszaru projektanta pusty poniżej aktywne regionów. Kliknij przycisk **Widok2** i przeciągnij <xref:System.Web.UI.WebControls.RadioButton> kontroli do pustego region projektanta. Kliknij przycisk **Widok1** ponownie i regionu z <xref:System.Web.UI.WebControls.CheckBox> pojawi się ponownie. Kliknij przycisk **Widok2** i region z <xref:System.Web.UI.WebControls.RadioButton> pojawi się ponownie. Przełącz do widoku źródła, aby zobaczyć, jak zmiany są zachowywane w kod znaczników HTML  
  
> [!NOTE]
>  Projekt musi mieć odwołanie do zestawu System.Design.dll.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#1)]
 [!code-vb[SimpleMultiRegionControlDesigner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#1)]  
[!code-aspx-csharp[SimpleMultiRegionControlDesigner#8](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.aspx#8)]
[!code-aspx-vb[SimpleMultiRegionControlDesigner#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner owner, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ControlDesigner, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditableDesignerRegion(System::Web::UI::Design::ControlDesigner ^ owner, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu lub projektanta, która jest pochodną <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <param name="name">Nazwa regionu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> przy użyciu podanego właściciela i nazwy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner owner, string name, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ControlDesigner, name As String, serverControlsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditableDesignerRegion(System::Web::UI::Design::ControlDesigner ^ owner, System::String ^ name, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu lub projektanta, która jest pochodną <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <param name="name">Nazwa regionu.</param>
        <param name="serverControlsOnly">
          <see langword="true" /> Aby region akceptować tylko formanty serwera sieci Web dla zawartości; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> przy użyciu podanego właściciela i nazwy i początkowej wartości <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod znaczników HTML dla zawartości regionu.</summary>
        <value>Kod znaczników HTML reprezentujący zawartość <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildViewRendering">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ViewRendering GetChildViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ViewRendering GetChildViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ViewRendering ^ GetChildViewRendering(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant, dla którego można pobrać <see cref="T:System.Web.UI.Design.ViewRendering" /> obiektu dla bieżącego obszaru.</param>
        <summary>Zwraca <see cref="T:System.Web.UI.Design.ViewRendering" /> obiekt zawierający kod znaczników HTML czasu projektowania danego formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerControlsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerControlsOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obszar może akceptować tylko formanty serwera sieci Web.</summary>
        <value>
          <see langword="true" /> Jeśli region może zawierać tylko formanty serwera sieci Web; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SupportsDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obszar może być powiązana ze źródłem danych.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> zawartości obsługuje powiązanie ze źródłem danych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>