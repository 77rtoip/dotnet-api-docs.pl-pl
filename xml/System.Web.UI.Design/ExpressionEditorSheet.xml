<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d03571457cd704c114939358e83035b77f58fcd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39978611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje arkusz Edytor czasu projektowania dla wyrażenia niestandardowego. Ta klasa musi być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Arkusz edytora wyrażeń niestandardowych umożliwia deweloperem, ustaw właściwości niestandardowe wyrażenie w czasie projektowania. Można ustawić wartości właściwości kontroli przy użyciu wyrażenia ciągów; ciągi wyrażenia są oceniane w czasie wykonywania przez Konstruktor wyrażeń i w czasie projektowania, przez Edytor wyrażeń.  
  
 Po przejściu <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> właściwości kontrolki w siatce właściwości czasu projektowania wizualnego projektanta wyświetlane jest okno dialogowe, można ustawić wyrażenia, które zapewniają wartość dla właściwości formantu. Można wybrać typ wyrażenia, w oparciu o listę prefiksów wyrażenia. Po wybraniu prefiksu wyrażenia z listy skojarzonej korzysta z projektanta wizualnego <xref:System.Web.UI.Design.ExpressionEditor> i <xref:System.Web.UI.Design.ExpressionEditorSheet> obiektów, aby ocenić i przekonwertować ciąg wyrażenia na podstawie składni dla tego typu wyrażenia. Projektant wizualny używa wyrażenia Edytor arkusza właściwości na monitowanie o jeden lub więcej ciągów, które łączą się do wyrażenia niestandardowego ciągu.  
  
 Zazwyczaj, aby przekazać nowy typ wyrażenia w czasie projektowania, możesz zdefiniowania prefiksu unikatowych wyrażenia i dostarczyć niestandardowe <xref:System.Web.Compilation.ExpressionBuilder> i <xref:System.Web.UI.Design.ExpressionEditor> implementacji. Opcjonalnie można podać niestandardowy <xref:System.Web.UI.Design.ExpressionEditorSheet> implementację, która definiuje właściwości, które są używane w celu utworzenia wyrażenia. Aby skojarzyć prefiks wyrażenie za pomocą Kreatora wyrażeń i Edytor wyrażeń, zastosuj <xref:System.Web.Compilation.ExpressionEditorAttribute> atrybutu i <xref:System.Web.Compilation.ExpressionPrefixAttribute> atrybutu niestandardowego <xref:System.Web.Configuration.ExpressionBuilder> klasy, a następnie skonfiguruj prefiks wyrażenia dla Konstruktora wyrażeń w `expressionBuilders` elementu w pliku konfiguracji sieci Web.  
  
 Domyślna implementacja klasy <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metoda zwraca arkuszu Edytor języka basic używa pojedynczego ciągu wejściowego w celu utworzenia wyrażenia. Edytorów niestandardowe wyrażenie, które są uzyskiwane z <xref:System.Web.UI.Design.ExpressionEditor> można zastąpić <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metodę, aby zwrócić niestandardowy Edytor implementacji arkusza. Zazwyczaj niestandardowy Edytor arkusz zawiera wiele właściwości, które są używane do tworzenia ciąg wyrażenia. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca wynikowy ciąg wyrażenia na podstawie bieżącej właściwości wyrażenia.  
  
 Na przykład <xref:System.Web.UI.Design.ResourceExpressionEditor> klasa pochodzi od <xref:System.Web.UI.Design.ExpressionEditor> klasy i dostarcza implementację oceniania i kojarzenie odwołanie do ciągu zasobu z właściwości formantu w czasie projektowania. <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasy jest skojarzony z prefiksem wyrażenie `Resources` i <xref:System.Web.UI.Design.ResourceExpressionEditor> implementacji. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Metoda zwraca <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, która definiuje poszczególne właściwości, które tworzą wyrażenia odwołania do zasobu.  
  
 Przy dziedziczeniu z <xref:System.Web.UI.Design.ExpressionEditorSheet> klasy, konieczne jest przesłonięcie następujących składowych:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Metodę, aby zwrócić niestandardowy Edytor implementacji arkusza.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktora do zaimplementowania akcji niestandardowej inicjalizacji implementacji arkusza edytora wyrażeń.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Pochodzi z arkusz edytora wyrażeń niestandardowych <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli określasz nowy typ wyrażenia dla wartości właściwości kontrolki i chcesz utworzyć ciąg wyrażenia na podstawie wielu wyrażenia wartości właściwości. Implementacja klasy pochodnej może zawierać następujące czynności:-Właściwość publiczna dla każdej unikatowej wartości ciągu wyrażenia, który można ustawić w czasie projektowania.  -Implementację <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody, który wchodzi w skład ciąg wyrażenia niestandardowego z wartości właściwości arkusza edytora.  — Opcjonalnie implementacji konstruktora, ustawia wartość początkową edytora arkusza właściwości.  Klasy edytora wyrażeń niestandardowych skojarzone tworzy wystąpienie edytora pochodnej arkusza w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metody inicjuje tego wystąpienia przy użyciu bieżącego ciąg wyrażenia, ustaw dla właściwości kontrolki i zwraca wystąpienie do projektanta wizualnego. Projektant wizualny pozwala ustawić wyrażenia arkusza właściwości, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody w celu utworzenia ciąg wyrażenia od wartości wyrażenia wejściowego arkusza właściwości.</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Implementacja dostawcy usług dostarczanych przez projektanta hosta, używane do uzyskiwania dodatkowych usług pomocy technicznej czasu projektowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.Design.ExpressionEditorSheet> klasa jest klasą abstrakcyjną, nie można utworzyć wystąpienia <xref:System.Web.UI.Design.ExpressionEditorSheet> bezpośrednio przy użyciu <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas wyprowadzania z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, Zastąp <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> konstruktora do zaimplementowania akcji niestandardowej inicjalizacji implementacji arkusza edytora wyrażeń.  Na przykład zdefiniować klasę arkusza edytora wyrażeń niestandardowych, która implementuje właściwości wyrażenia dodatkowe wartości domyślne dla właściwości wyrażenia w <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> konstruktora. Klasa arkusza edytora wyrażeń niestandardowych można zdefiniować przeciążenia dodatkowe Konstruktor publiczny, które umożliwiają Ustaw początkowe wartości właściwości wyrażenia wartości parametru wejściowego.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca ciąg wyrażenia, który jest tworzony przez wartości właściwości arkusza edytora wyrażeń.</summary>
        <returns>Ciąg wyrażenia niestandardowego dla bieżącej wartości właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Arkusz edytora wyrażeń niestandardowych zawiera ustawienia wielu właściwości wyrażenia, które są łączone w celu utworzenia ciąg wyrażenia czasu projektowania. Można ustawić wartości właściwości kontroli przy użyciu wyrażenia ciągów; ciągi wyrażenia są obliczane w czasie wykonywania przez Konstruktor wyrażeń.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca ciąg wyrażenia, który jest zbudowany z bieżącej właściwości wyrażenia. Projektant wizualny pozwala ustawić wyrażenia arkusza właściwości, a następnie wywołuje <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metodę, aby uzyskać ciąg wyrażenia, a następnie ustaw wartość właściwości formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pochodzi z arkusz edytora wyrażeń niestandardowych <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli określasz nowy typ wyrażenia dla wartości właściwości kontrolki i chcesz utworzyć ciąg wyrażenia na podstawie wielu wyrażenia wartości właściwości. Implementacja klasy pochodnej może zawierać następujące czynności:-Właściwość publiczna dla każdej unikatowej wartości ciągu wyrażenia, który można ustawić w czasie projektowania.  -Implementację <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody, który wchodzi w skład ciąg wyrażenia niestandardowego z wartości właściwości arkusza edytora.  — Opcjonalnie implementacji konstruktora, ustawia wartość początkową edytora arkusza właściwości.  Klasy edytora wyrażeń niestandardowych skojarzone tworzy wystąpienie edytora pochodnej arkusza w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metody inicjuje tego wystąpienia przy użyciu bieżącego ciąg wyrażenia, ustaw dla właściwości kontrolki, a następnie zwraca wystąpienie do wizualizacji Projektant. Projektant wizualny pozwala ustawić wyrażenia arkusza właściwości, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody w celu utworzenia ciąg wyrażenia od wartości wyrażenia wejściowego arkusza właściwości.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ciąg wyrażenia jest nieprawidłowa.</summary>
        <value>
          <see langword="true" />, jeśli ciąg wyrażenia są prawidłowe; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawsze Podstawowa implementacja zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera implementację dostawcy usługi używanego przez arkusz edytora wyrażeń.</summary>
        <value>
          <see cref="T:System.IServiceProvider" />, Zwykle podana przez hosta projekt, który może służyć do uzyskiwania dodatkowych usług pomocy technicznej czasu projektowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> konstruktora, aby ustawić <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementacji arkusza edytora wyrażeń niestandardowych.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Właściwości można uzyskać dostęp do usług, które są dostarczane przez hosta projektanta. Na przykład wywołać <xref:System.IServiceProvider.GetService%2A> metody z <xref:System.Web.UI.Design.IWebApplication> interfejsu na uzyskiwanie dostępu do elementów projektu, dokumentów lub szczegółów pliku konfiguracji, które są dostępne za pośrednictwem projektanta wizualnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>