<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00a92c41d6071763aeacc5cf80675a148295e317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje arkusz Edytor czasu projektowania dla wyrażenia niestandardowego. Ta klasa musi być dziedziczone.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Arkusz wyrażenia niestandardowego edytora umożliwia dewelopera, ustaw właściwości niestandardowe wyrażenie w czasie projektowania. Można ustawić wartości właściwości formantu za pomocą wyrażenia ciągi; ciągi wyrażenia są oceniane w czasie wykonywania przez Konstruktor wyrażeń i w czasie projektowania przez Edytor wyrażeń.  
  
 Po przejściu <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> właściwości formantu w siatce właściwości czasu projektowania, Projektant wizualny Wyświetla okno dialogowe można ustawić wyrażenia, które Podaj wartość dla właściwości formantu. Można wybrać typ wyrażenia na podstawie listy prefiksu wyrażenia. Po wybraniu prefiksu wyrażenia z listy, Projektant wizualny używa skojarzony <xref:System.Web.UI.Design.ExpressionEditor> i <xref:System.Web.UI.Design.ExpressionEditorSheet> obiekty do oceny i przekonwertować ciągu wyrażenia na podstawie składni dla tego typu wyrażenia. Projektant wizualny używa wyrażenia Edytor arkusz właściwości z monitem o jeden lub więcej ciągów, łączące w ciągu wyrażenia niestandardowego.  
  
 Zazwyczaj aby przekazać nowy typ wyrażenia w czasie projektowania, można zdefiniować prefiksu wyrażenia unikatowy i podać niestandardowy <xref:System.Web.Compilation.ExpressionBuilder> i <xref:System.Web.UI.Design.ExpressionEditor> implementacji. Opcjonalnie możesz podać niestandardowy <xref:System.Web.UI.Design.ExpressionEditorSheet> implementację, która definiuje właściwości, które są używane do tworzenia wyrażenia. Aby skojarzyć prefiksu wyrażenia z Konstruktor wyrażeń i edytora wyrażeń, zastosuj <xref:System.Web.Compilation.ExpressionEditorAttribute> atrybutu i <xref:System.Web.Compilation.ExpressionPrefixAttribute> atrybutu niestandardowego <xref:System.Web.Configuration.ExpressionBuilder> klasy, a następnie skonfiguruj prefiksu wyrażenia dla Konstruktora wyrażeń w `expressionBuilders` w pliku konfiguracji sieci Web.  
  
 Domyślna implementacja <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metoda zwraca arkuszu podstawowego edytora używa jednego ciągu wejściowego do tworzenia wyrażenia. Edytory wyrażenia niestandardowego, pochodzących z <xref:System.Web.UI.Design.ExpressionEditor> można zastąpić <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metody do zwracania niestandardowego edytora implementacji arkusza. Zwykle arkusz niestandardowego edytora zawiera wiele właściwości, które są używane do tworzenia wyrażenia ciągu. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca wynikowy ciąg wyrażenia na podstawie bieżącej właściwości wyrażenia.  
  
 Na przykład <xref:System.Web.UI.Design.ResourceExpressionEditor> pochodną klasy <xref:System.Web.UI.Design.ExpressionEditor> klasy i udostępnia implementację dla oceny i kojarzenie odwołania ciągu zasobu z właściwości formantu w czasie projektowania. <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasy jest skojarzone z prefiksu wyrażenia `Resources` i <xref:System.Web.UI.Design.ResourceExpressionEditor> implementacji. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Metoda zwraca <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, który definiuje poszczególnych właściwości, które tworzą wyrażenia odwołania do zasobów.  
  
 Przy dziedziczeniu z <xref:System.Web.UI.Design.ExpressionEditorSheet> klasy, konieczne jest przesłonięcie następujących członków:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Metody do zwracania niestandardowego edytora implementacji arkusza.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktora, aby zaimplementować akcje niestandardowe inicjowania implementacji arkusza edytora wyrażeń.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Pochodzi arkusz wyrażenia niestandardowego edytora z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli definiujesz nowy typ wyrażenia dla wartości właściwości formantu i chcesz skompilować ciąg wyrażenia na podstawie wielu wyrażenia wartości właściwości. Implementacja klasy pochodnej powinny zawierać następujące informacje:  
  
-   Właściwość publiczna dla każdej różne wartości w ciągu wyrażenie, które można ustawić w czasie projektowania.  
  
-   Implementacja interfejsu <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodę, która formularzy wyrażenia niestandardowego ciągu wartości właściwości arkusza edytora.  
  
-   Opcjonalnie implementacji konstruktora, który ustawia wartości początkowe edytora arkusza właściwości.  
  
 Klasy edytora skojarzone wyrażenie niestandardowe tworzy wystąpienie arkusza pochodnej edytora w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metody inicjuje tego wystąpienia z bieżącym ciągiem wyrażenia właściwości formantu i zwraca wystąpienie do projektanta wizualnego. Projektant wizualny można ustawić wyrażenia arkusza właściwości, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody do utworzenia ciągowi wyrażenia z wartości wyrażenia wejściowego arkusza właściwości.</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Implementacja dostawcy usługi dostarczone przez hosta projektanta, używany do uzyskania dodatkowych usług czasu projektowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.Design.ExpressionEditorSheet> klasa jest abstrakcyjna, nie można utworzyć wystąpienia <xref:System.Web.UI.Design.ExpressionEditorSheet> bezpośrednio przy użyciu <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas tworzenia klasy pochodnej z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, Zastąp <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> konstruktora, aby zaimplementować akcje niestandardowe inicjowania implementacji arkusza edytora wyrażeń.  
  
 Na przykład klasy arkusza wyrażenia niestandardowego edytora, która implementuje właściwości dodatkowe wyrażenia można zdefiniować wartości domyślne dla właściwości wyrażenia w <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> konstruktora. Wyrażenia niestandardowego edytora arkusza klasy można zdefiniować dodatkowe Konstruktor publiczny przeciążeń, które umożliwia ustawienie właściwości wyrażenia wartości początkowej wartości parametru wejściowego.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca ciąg wyrażenia, który jest tworzony przez wartości właściwości arkusza edytora wyrażeń.</summary>
        <returns>Ciąg wyrażenia niestandardowego dla bieżącej wartości właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Arkusz wyrażenia niestandardowego edytora zawiera ustawienia czasu projektowania dla wielu właściwości wyrażenie, które są łączone do tworzenia wyrażenia ciągu. Można ustawić wartości właściwości formantu za pomocą wyrażenia ciągi; ciągi wyrażenia są oceniane w czasie wykonywania przez Konstruktor wyrażeń.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca ciąg wyrażenia skompilowanego z bieżącej właściwości wyrażenia. Projektant wizualny można ustawić wyrażenia arkusza właściwości, a następnie wywołuje <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metodę, aby uzyskać ciąg wyrażenia i ustaw wartość właściwości formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pochodzi arkusz wyrażenia niestandardowego edytora z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli definiujesz nowy typ wyrażenia dla wartości właściwości formantu i chcesz skompilować ciąg wyrażenia na podstawie wielu wyrażenia wartości właściwości. Implementacja klasy pochodnej powinny zawierać następujące informacje:  
  
-   Właściwość publiczna dla każdej różne wartości w ciągu wyrażenie, które można ustawić w czasie projektowania.  
  
-   Implementacja interfejsu <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodę, która formularzy wyrażenia niestandardowego ciągu wartości właściwości arkusza edytora.  
  
-   Opcjonalnie implementacji konstruktora, który ustawia wartości początkowe edytora arkusza właściwości.  
  
 Klasy edytora skojarzone wyrażenie niestandardowe tworzy wystąpienie arkusza pochodnej edytora w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metody inicjuje tego wystąpienia z bieżącym ciągiem wyrażenia właściwości formantu, a następnie zwraca wystąpienie do elementu wizualnego Projektant. Projektant wizualny można ustawić wyrażenia arkusza właściwości, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody do utworzenia ciągowi wyrażenia z wartości wyrażenia wejściowego arkusza właściwości.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ciąg wyrażenia jest nieprawidłowa.</summary>
        <value>
          <see langword="true" />, jeśli ciąg wyrażenia jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawsze Podstawowa implementacja zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera implementację dostawcy usługi, która jest używana przez arkusz edytora wyrażeń.</summary>
        <value>
          <see cref="T:System.IServiceProvider" />, Zwykle podana przez hosta projektu, który może zostać użyty do uzyskania dodatkowych usług czasu projektowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> konstruktora, aby ustawić <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementacji arkusza Edytor wyrażenia niestandardowego.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Właściwości można uzyskać dostępu do usług, które są udostępniane przez projektanta hosta. Na przykład wywołać <xref:System.IServiceProvider.GetService%2A> metody z <xref:System.Web.UI.Design.IWebApplication> interfejsu dostęp do elementów projektu, dokumentów lub szczegóły pliku konfiguracji, które są realizowane za pośrednictwem projektanta wizualnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>