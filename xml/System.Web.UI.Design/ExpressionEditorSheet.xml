<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="997f9e8e7cd826820dd4eee3904701d0e7714eaf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69044549" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje arkusz edytora czasu projektowania dla niestandardowego wyrażenia. Ta klasa musi być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niestandardowy arkusz edytora wyrażeń umożliwia deweloperom Ustawianie właściwości w niestandardowym wyrażeniu w czasie projektowania. Wartości właściwości kontrolki można ustawiać przy użyciu ciągów wyrażeń. ciągi wyrażeń są oceniane w czasie wykonywania przez konstruktora wyrażeń i w czasie projektowania przez Edytor wyrażeń.  
  
 Podczas przeglądania <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> właściwości kontrolki w siatce właściwości czasu projektowania projektant wizualny wyświetli okno dialogowe, w którym można ustawić wyrażenia, które zawierają wartość właściwości kontrolki. Typ wyrażenia można wybrać na podstawie listy prefiksów wyrażeń. Po wybraniu prefiksu wyrażenia z listy, projektant wizualny używa skojarzonych <xref:System.Web.UI.Design.ExpressionEditor> i <xref:System.Web.UI.Design.ExpressionEditorSheet> obiektów do obliczenia i przekonwertowania ciągu wyrażenia na podstawie składni tego typu wyrażenia. Projektant wizualny używa właściwości arkusza edytora wyrażeń do wyświetlania monitu o jeden lub więcej ciągów, które łączą się z niestandardowym ciągiem wyrażenia.  
  
 Zazwyczaj, aby podać nowy typ wyrażenia w czasie projektowania, należy zdefiniować unikatowy prefiks wyrażenia i udostępnić niestandardowe <xref:System.Web.Compilation.ExpressionBuilder> i <xref:System.Web.UI.Design.ExpressionEditor> implementacje. Opcjonalnie można podać implementację niestandardową <xref:System.Web.UI.Design.ExpressionEditorSheet> , która definiuje właściwości, które są używane do tworzenia wyrażenia. Aby skojarzyć prefiks wyrażenia z konstruktorem wyrażeń i edytorem wyrażeń, Zastosuj <xref:System.Web.Compilation.ExpressionEditorAttribute> atrybut <xref:System.Web.Compilation.ExpressionPrefixAttribute> i atrybut do klasy niestandardowej <xref:System.Web.Configuration.ExpressionBuilder> , a następnie skonfiguruj prefiks wyrażenia dla konstruktora wyrażeń w `expressionBuilders` element w pliku konfiguracji sieci Web.  
  
 Domyślna implementacja <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> metody zwraca podstawowy arkusz edytora, który używa jednego ciągu wejściowego do utworzenia wyrażenia. Niestandardowe edytory wyrażeń, które pochodzą z <xref:System.Web.UI.Design.ExpressionEditor> klasy mogą <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> przesłaniać metodę w celu zwrócenia niestandardowej implementacji arkusza edytora. Zwykle niestandardowy arkusz edytora zawiera wiele właściwości, które są używane do tworzenia ciągu wyrażenia. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca wynikowy ciąg wyrażenia na podstawie bieżących właściwości wyrażenia.  
  
 Na przykład <xref:System.Web.UI.Design.ResourceExpressionEditor> Klasa pochodzi <xref:System.Web.UI.Design.ExpressionEditor> z klasy i zawiera implementację do oceny i kojarzenia odwołania do ciągu zasobu z właściwością kontrolki w czasie projektowania. Klasa jest skojarzona z prefiksem `Resources` wyrażenia i <xref:System.Web.UI.Design.ResourceExpressionEditor> implementacją. <xref:System.Web.Compilation.ResourceExpressionBuilder> <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Metoda<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>zwraca, który definiuje poszczególne właściwości, które tworzą wyrażenie odwołania do zasobu.  
  
 W przypadku dziedziczenia z <xref:System.Web.UI.Design.ExpressionEditorSheet> klasy należy zastąpić następujące elementy członkowskie:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Metoda zwracająca niestandardową implementację arkusza edytora.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor implementujący niestandardowe akcje inicjowania dla implementacji arkusza edytora wyrażeń.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Utwórz niestandardowy arkusz edytora wyrażeń z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli definiujesz nowy typ wyrażenia dla wartości właściwości kontrolki i chcesz utworzyć ciąg wyrażenia na podstawie wielu wartości właściwości wyrażenia. Implementacja klasy pochodnej powinna zawierać następujące elementy: 
-Właściwość publiczna dla każdej unikatowej wartości w ciągu wyrażenia, który można ustawić w czasie projektowania.  
  
-Implementacja <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody, która tworzy ciąg wyrażenia niestandardowego z wartości właściwości arkusza edytora.  
  
— Opcjonalnie implementacja konstruktora, która ustawia początkowe wartości właściwości arkusza edytora.  
  
Skojarzona z niestandardowym edytorem wyrażeń tworzy wystąpienie pochodnego arkusza edytora w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metodzie, inicjuje to wystąpienie z bieżącym ciągiem wyrażenia ustawionym dla właściwości kontrolki i zwraca wystąpienie do projektanta wizualnego. Projektant wizualny pozwala ustawić właściwości arkusza wyrażeń, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodę w celu utworzenia ciągu wyrażenia z wartości właściwości arkusza wyrażeń wejściowych.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Implementacja dostawcy usług dostarczana przez hosta projektanta, używana do uzyskiwania dodatkowych usług czasu projektowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ Klasa jest abstrakcyjna, nie można utworzyć wystąpienia <xref:System.Web.UI.Design.ExpressionEditorSheet> bezpośrednio przy użyciu <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> konstruktora. <xref:System.Web.UI.Design.ExpressionEditorSheet>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas wyprowadzania z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Przesłoń konstruktora, aby zaimplementować niestandardowe akcje inicjowania dla implementacji arkusza edytora wyrażeń.  
  
Na przykład Klasa niestandardowego arkusza edytora wyrażeń, która implementuje dodatkowe właściwości wyrażenia, może definiować wartości domyślne dla właściwości wyrażenia w <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> konstruktorze. Klasa niestandardowego arkusza edytora wyrażeń może definiować dodatkowe przeciążenia konstruktora publicznego, które używają wartości parametrów wejściowych do ustawiania początkowych wartości właściwości wyrażenia.</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca ciąg wyrażenia, który jest sformułowany przez wartości właściwości arkusza edytora wyrażeń.</summary>
        <returns>Ciąg wyrażenia niestandardowego dla bieżących wartości właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niestandardowy arkusz edytora wyrażeń zawiera ustawienia czasu projektowania dla wielu właściwości wyrażenia, które są łączone w celu utworzenia ciągu wyrażenia. Wartości właściwości kontrolki można ustawiać przy użyciu ciągów wyrażeń. ciągi wyrażeń są oceniane w czasie wykonywania przez konstruktora wyrażeń.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Metoda zwraca ciąg wyrażenia, który jest zbudowany na podstawie bieżących właściwości wyrażenia. Projektant wizualny umożliwia ustawienie właściwości arkusza wyrażeń, a następnie wywołanie <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> metody w celu uzyskania ciągu wyrażenia i ustawienia wartości właściwości formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Utwórz niestandardowy arkusz edytora wyrażeń z <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> klasy, jeśli definiujesz nowy typ wyrażenia dla wartości właściwości kontrolki i chcesz utworzyć ciąg wyrażenia na podstawie wielu wartości właściwości wyrażenia. Implementacja klasy pochodnej powinna zawierać następujące elementy: 
-Właściwość publiczna dla każdej unikatowej wartości w ciągu wyrażenia, który można ustawić w czasie projektowania.  
  
-Implementacja <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metody, która tworzy ciąg wyrażenia niestandardowego z wartości właściwości arkusza edytora.  
  
— Opcjonalnie implementacja konstruktora, która ustawia początkowe wartości właściwości arkusza edytora.  
  
Skojarzona z niestandardowym edytorem wyrażeń tworzy wystąpienie pochodnego arkusza edytora w <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> metodzie, inicjuje to wystąpienie z bieżącym ciągiem wyrażenia ustawionym dla właściwości kontrolki, a następnie zwraca wystąpienie do wizualizacji projektantów. Projektant wizualny pozwala ustawić właściwości arkusza wyrażeń, a następnie wywołuje <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> metodę w celu utworzenia ciągu wyrażenia z wartości właściwości arkusza wyrażeń wejściowych.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ciąg wyrażenia jest prawidłowy.</summary>
        <value><see langword="true" />, jeśli ciąg wyrażenia jest prawidłowy; w <see langword="false" />przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta podstawowa implementacja zawsze zwraca `true`wartość.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera implementację dostawcy usług, która jest używana przez arkusz edytora wyrażeń.</summary>
        <value>Jest <see cref="T:System.IServiceProvider" />to zazwyczaj udostępniane przez hosta projektu, który może służyć do uzyskiwania dodatkowych usług czasu projektowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, aby ustawić implementację niestandardowego arkusza edytora wyrażeń. <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Właściwość może służyć do uzyskiwania dostępu do usług udostępnianych przez hosta projektanta. Na przykład Wywołaj <xref:System.IServiceProvider.GetService%2A> metodę <xref:System.Web.UI.Design.IWebApplication> z interfejsem, aby uzyskać dostęp do szczegółów elementów projektu, dokumentów lub pliku konfiguracji, które są dostępne za pomocą projektanta wizualnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>
