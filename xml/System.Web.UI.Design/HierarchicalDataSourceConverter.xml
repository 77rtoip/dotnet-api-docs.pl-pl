<Type Name="HierarchicalDataSourceConverter" FullName="System.Web.UI.Design.HierarchicalDataSourceConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2126a98b1815b86685dc198f2902359d54a09882" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataSourceConverter : System.Web.UI.Design.DataSourceConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataSourceConverter extends System.Web.UI.Design.DataSourceConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.HierarchicalDataSourceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataSourceConverter&#xA;Inherits DataSourceConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceConverter : System::Web::UI::Design::DataSourceConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DataSourceConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów, które można pobrać listy źródeł danych hierarchiczne, które są dostępne dla bieżącego składnika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.HierarchicalDataSourceConverter> Klasa dostarcza metody, które mogą służyć do pobierania listy źródeł danych hierarchiczne, które są dostępne dla bieżącego składnika czasu projektowania.  
  
 <xref:System.Web.UI.Design.HierarchicalDataSourceConverter> Konwerter typów jest używany przez program Microsoft Visual Studio do Podaj wartości, które znajdują się na liście danych źródeł w **właściwości** okna.  
  
> [!CAUTION]
>  Konwerter typów nigdy nie powinien bezpośredni dostęp. Zamiast tego wywołać przy użyciu odpowiedniego konwertera <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady w <xref:System.ComponentModel.TypeConverter>.  
  
 Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: implementacji konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak skojarzyć <xref:System.Web.UI.Design.HierarchicalDataSourceConverter> z właściwością źródła hierarchiczne dane zawarte w kontrolkę niestandardową.  
  
 [!code-csharp[HierarchicalDataSourceConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HierarchicalDataSourceConverter/CS/HierarchicalDataSourceControl.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
    <altmember cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataSourceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataSourceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected override bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Składnik, aby sprawdzić jako poprawnego źródła danych.</param>
        <summary>Wskazuje, czy określony składnik jest poprawnego źródła danych dla tego konwertera.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="component" /> implementuje <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A> Używa metody <xref:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource%2A> metodę, aby określić, które składniki są dostępne jako standardowe dostępne źródła danych. Aby uzyskać <xref:System.Web.UI.Design.HierarchicalDataSourceConverter> klasy poprawnego źródła danych jest składnik, który implementuje <xref:System.Web.UI.IHierarchicalEnumerable> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.DataSourceConverter.GetStandardValues" />
      </Docs>
    </Member>
  </Members>
</Type>