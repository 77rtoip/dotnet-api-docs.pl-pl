<Type Name="XmlDataFileEditor" FullName="System.Web.UI.Design.XmlDataFileEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c11d55a467876f183d9c63705bcd460c5ba7ab5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30587467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs użytkownika w czasie projektowania dla Wybieranie pliku danych XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor> Obiekt jest używany w czasie projektowania, aby wybrać i Edytuj adres URL dla pliku danych XML (.xml), a następnie przypisz adres URL do właściwości formantu. Na przykład <xref:System.Web.UI.WebControls.XmlDataSource> kontrolować używa <xref:System.Web.UI.Design.XmlDataFileEditor> klasy w czasie projektowania można ustawić wartości <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości.  
  
 Użyj <xref:System.ComponentModel.EditorAttribute> atrybutu, aby skojarzyć <xref:System.Web.UI.Design.XmlDataFileEditor> z właściwością. Podczas edytowania właściwości skojarzonej, ponieważ na powierzchni projektu, host projektanta wywołuje <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> metody. <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> Używa metody <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> metodę, która z kolei wyświetla interfejs użytkownika wyboru adres URL, a następnie zwraca adres URL, który jest wybierany przez użytkownika. <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> Metody wskazuje na styl wyświetlania interfejsu użytkownika.  
  
 Klasa wyprowadzona z <xref:System.Web.UI.Design.XmlDataFileEditor> do definiowania niestandardowego edytora właściwości danych XML. Na przykład można przesłonić klasy pochodnej <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> metody, a następnie wywołania <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> metody za pomocą niestandardowego <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> lub <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> wartość.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak skojarzyć wystąpienia <xref:System.Web.UI.Design.XmlDataFileEditor> z właściwością, zawarty w kontrolkę niestandardową. Podczas edytowania właściwości formantu na powierzchni projektowej <xref:System.Web.UI.Design.XmlDataFileEditor> klasy udostępnia interfejs użytkownika, aby wybrać i Edytuj nazwę pliku XML dla wartości właściwości.  
  
 [!code-csharp[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podpis do wyświetlenia w oknie dialogowym zaznaczenia.</summary>
        <value>Tekst podpisu do wyświetlenia w oknie dialogowym zaznaczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> Jest używana przez <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> metody podczas wywoływania metody <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> metodę, która wyświetla okno dialogowe Wybór adresu URL dla użytkownika w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL opcje filtru edytora, który służy do filtrowania elementów, które są wyświetlane w oknie dialogowym Wybieranie adresu URL.</summary>
        <value>Ciąg reprezentujący co najmniej jeden adres URL opcje filtrowania okna dialogowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> Jest używana przez <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> metody podczas wywoływania metody <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> metodę, która wyświetla okno dialogowe Wybór adresu URL dla użytkownika w czasie projektowania.  
  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> Wartość domyślna właściwości wskazuje dwa filtry adresu URL dla okna dialogowego: jeden dla plików danych XML (*.xml) i drugi dla wszystkich plików (\*.\*).  
  
 Ciąg filtru zawiera jedną lub więcej opcji filtru. Każda opcja filtra zawiera opis filtru zakończony pionowy pasek (&#124;) i wzorzec filtru. Ciągi dla różnych opcji filtrowania są oddzielone pionowy pasek.  
  
 Poniżej przedstawiono przykład ciąg filtru, który zawiera dwie opcje filtrowania:  
  
 "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 Można określić kilka wzorców filtru w opcji filtru oddzielając wzorce filtru średnikami. Poniżej przedstawiono przykład ciąg filtru, w którym pierwsza opcja filtru określa dwa wzorce filtru:  
  
 "`Custom XML Files (*.xd1; *.xd2)|*.xd1;*.xd2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>