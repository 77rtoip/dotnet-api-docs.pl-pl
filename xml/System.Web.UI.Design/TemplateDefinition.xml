<Type Name="TemplateDefinition" FullName="System.Web.UI.Design.TemplateDefinition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3e4c5e3be4452391c650259f2857ab360c8d1c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateDefinition : System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateDefinition extends System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TemplateDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateDefinition&#xA;Inherits DesignerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateDefinition : System::Web::UI::Design::DesignerObject" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości i metody definiujące element szablonu w kontrolki serwera sieci Web w czasie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.TemplateDefinition> Klasy udostępnia klasę definicji szablon podstawowy, które mogą być dziedziczone z i rozszerzony na użytek projektanta formantów, do użycia w takich jak zapewniania obsługi opartego na szablonie formantów w hoście projektowania [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Host projekt używa właściwości i metody <xref:System.Web.UI.Design.TemplateDefinition> klasy w celu ułatwienia tworzenia i edytowania szablonu w czasie projektowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pochodzi z klasy niestandardowej <xref:System.Web.UI.Design.ControlDesigner> klasy. Tego projektanta formantów obsługuje formantu o czterech możliwe szablonów.  
  
 Wypróbuj ją, Dodaj odwołanie do zestawu System.Design.dll skompilować kod i następnie, w projekcie hosta takich jak [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], sprawdź na stronie w widoku Projekt. Wybierz kontrolkę, kliknij listę akcji, aby wybrać szablon do zmodyfikowania, a następnie funkcja przeciągania i upuszczania umożliwia przenoszenie formantów do szablonu.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
    <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.TemplateDefinition" /> klasy.</summary>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designer">Element nadrzędny <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu.</param>
        <param name="name">Nazwa szablonu.</param>
        <param name="templatedObject">Obiekt, który zawiera szablon.</param>
        <param name="templatePropertyName">Nazwy właściwości, która reprezentuje tego szablonu w **właściwości** listy hoście projektowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.TemplateDefinition" /> przy użyciu podanego projektanta, nazwy szablonu, szablon i nazwa właściwości.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> jest <see langword="null" />,  
  
 —lub—  
  
 <paramref name="templatedObject" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String, serverControlsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Element nadrzędny <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu.</param>
        <param name="name">Nazwa szablonu.</param>
        <param name="templatedObject">Obiekt, który zawiera szablon.</param>
        <param name="templatePropertyName">Nazwy właściwości, która reprezentuje tego szablonu w **właściwości** listy hoście projektowania.</param>
        <param name="serverControlsOnly">Wartość logiczna wskazująca, czy zawartość szablonu powinien zezwalać tylko formanty serwera sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.TemplateDefinition" /> przy użyciu podanego projektanta, nazwa szablonu szablonu, nazwy właściwości i czy ograniczyć zawartość szablonu do kontrolki serwera sieci Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> jest <see langword="null" />,  
  
 —lub—  
  
 <paramref name="templatedObject" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="designer">Element nadrzędny <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu.</param>
        <param name="name">Nazwa szablonu.</param>
        <param name="templatedObject">Obiekt, który zawiera szablon.</param>
        <param name="templatePropertyName">Nazwy właściwości, która reprezentuje tego szablonu w **właściwości** listy hoście projektowania.</param>
        <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> obiekt do zastosowania do każdego szablonu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.TemplateDefinition" /> przy użyciu podanego projektanta, nazwy szablonu, szablon, nazwa właściwości, oraz <see cref="T:System.Web.UI.WebControls.Style" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> jest <see langword="null" />,  
  
 —lub—  
  
 <paramref name="templatedObject" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Element nadrzędny <see cref="T:System.Web.UI.Design.ControlDesigner" /> obiektu.</param>
        <param name="name">Nazwa szablonu.</param>
        <param name="templatedObject">Obiekt, który zawiera szablon.</param>
        <param name="templatePropertyName">Nazwy właściwości, która reprezentuje tego szablonu w **właściwości** listy hoście projektowania.</param>
        <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> obiekt do zastosowania do każdego szablonu.</param>
        <param name="serverControlsOnly">Wartość logiczna wskazująca, czy szablon powinien ograniczenie zawartości do kontrolki serwera sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Design.TemplateDefinition" /> przy użyciu podanego projektanta, nazwy szablonu, szablon, nazwa właściwości <see cref="T:System.Web.UI.WebControls.Style" /> obiektu oraz czy ograniczenie zawartości do kontrolki serwera sieci Web.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> jest <see langword="null" />,  
  
 —lub—  
  
 <paramref name="templatedObject" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="AllowEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEditing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.AllowEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy szablon powinien umożliwić edytowanie jego zawartość.</summary>
        <value>
          <see langword="true" /> Jeśli edycja jest dozwolony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zmienić domyślny, klasy pochodne muszą przesłaniać <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod znaczników HTML reprezentujący zawartości szablonu.</summary>
        <value>Kod znaczników HTML dla zawartości szablonu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerControlsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerControlsOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy szablon powinien ograniczenie zawartości do kontrolki serwera sieci Web, zgodnie z <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> konstruktora. Ta właściwość jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli zawartość jest ograniczona do kontrolki serwera sieci Web; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ Style { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera styl, który ma zostać zastosowany do szablonu jako zestaw w <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> konstruktora. Ta właściwość jest tylko do odczytu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że <xref:System.Web.UI.WebControls.Style> właściwość jest tylko do odczytu, właściwości <xref:System.Web.UI.WebControls.Style> można ustawić.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy szablon obsługuje powiązanie danych.</summary>
        <value>
          <see langword="true" /> Jeśli szablon obsługuje powiązanie danych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedObject">
      <MemberSignature Language="C#" Value="public object TemplatedObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TemplatedObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TemplatedObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składnik, w której znajduje się szablon. Ta właściwość jest tylko do odczytu.</summary>
        <value>Składnika, zgodnie z ustaw, kiedy to <see cref="T:System.Web.UI.Design.TemplateDefinition" /> został utworzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to <xref:System.Web.UI.Design.TemplateDefinition.TemplatedObject%2A> właściwość jest tylko do odczytu, można ustawić właściwości oraz jeśli <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> ma wartość true, zawartość można edytować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyName">
      <MemberSignature Language="C#" Value="public string TemplatePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę właściwości dla szablonu hosta projekt powinien być wyświetlany w siatce właściwości.</summary>
        <value>Nazwa szablonu w postaci, w jakiej powinny być wyświetlane w **właściwości** listy hostów projektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>