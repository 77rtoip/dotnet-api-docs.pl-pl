<Type Name="XamlLoadPermission" FullName="System.Xaml.Permissions.XamlLoadPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53a726397dd6f2e53dbe169ce267158e6d91070c" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52341886" /></Metadata><TypeSignature Language="C#" Value="public sealed class XamlLoadPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit XamlLoadPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlLoadPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XamlLoadPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlLoadPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type XamlLoadPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Deklaruje uprawnienia podczas ładowania typów z zestawów, które są używane przez czytnik XAML lub składnika zapisywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Permissions.XamlLoadPermission> ma zastosowanie w przypadku scenariuszy, takich jak tego, czy typy wewnętrzne są dozwolone do załadowania w częściowej relacji zaufania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As IEnumerable(Of XamlAccessLevel))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Collections::Generic::IEnumerable&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ allowedAccess);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : seq&lt;System.Xaml.Permissions.XamlAccessLevel&gt; -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission allowedAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Wyliczalny zestaw określonych <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> klasy przy użyciu wyliczalny zestaw określonych <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjuje wywołanie do tego konstruktora <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> kolekcji z poszczególnymi `allowedAccess` wpis jako element i ustawia zwrotu dla <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> do `false` w utworzone wystąpienie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="allowedAccess" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="allowedAccess" /> zawiera nieprawidłowe informacje, takie jak elementu o wartości null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : System.Security.Permissions.PermissionState -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> wartość wyliczenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> klasy przy użyciu istniejących uprawnień.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState.Unrestricted> Ustawia zwrotu dla <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> do `true` w utworzone wystąpienie. Każde wywołanie do tego konstruktora ustawia <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> kolekcji `null` ponieważ nie jest istotne, jeśli uprawnienia są zgłaszane zamiast <xref:System.Xaml.Permissions.XamlAccessLevel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Xaml.Permissions.XamlAccessLevel allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.Permissions.XamlAccessLevel allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Xaml::Permissions::XamlAccessLevel ^ allowedAccess);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : System.Xaml.Permissions.XamlAccessLevel -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission allowedAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Definiowanie <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> klasy przy użyciu pojedynczej <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjuje wywołanie do tego konstruktora <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> kolekcji z `allowedAccess` jako jedynym elementem i ustawia zwrotu dla <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> do `false` w utworzone wystąpienie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="allowedAccess" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedAccess">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedAccess As IList(Of XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ AllowedAccess { System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedAccess : System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" Usage="System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartości, że <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> reprezentuje.</summary>
        <value>Lista tylko do odczytu do <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> wartości lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżący <xref:System.Xaml.Permissions.XamlLoadPermission> jest inicjowany tak, aby <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> jest `true`, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> może być `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczną kopię bieżącego <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
        <returns>Kopię bieżącego <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na kontrakt interfejsu <xref:System.Security.IPermission> ta wartość jest <xref:System.Security.IPermission> w podpisie, ale mogą być rzutowane na <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="xamlLoadPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">Kodowanie XML na potrzeby rekonstrukcji obiektu zabezpieczeń.</param>
        <summary>Rekonstruuje obiektu zabezpieczeń przy użyciu określonego stanu z Kodowanie XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="elem" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="elem" /> nie zawiera kodowanie XML dla <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
—lub— 
Atrybut version w ramach <paramref name="elem" /> nie jest obsługiwane.</exception>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public bool Includes (System.Xaml.Permissions.XamlAccessLevel requestedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Includes(class System.Xaml.Permissions.XamlAccessLevel requestedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Includes (requestedAccess As XamlAccessLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Includes(System::Xaml::Permissions::XamlAccessLevel ^ requestedAccess);" />
      <MemberSignature Language="F#" Value="member this.Includes : System.Xaml.Permissions.XamlAccessLevel -&gt; bool" Usage="xamlLoadPermission.Includes requestedAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="requestedAccess">Konkretne <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> do wyszukania.</param>
        <summary>Zwraca czy ten <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> obejmuje określoną <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> w jego <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> listy.</summary>
        <returns><see langword="true" /> Jeśli <paramref name="requestedAccess" /> istnieje jako element w <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> listę bieżących <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. W przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestedAccess" /> ma wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> do przecięcia z bieżącymi <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Może być <see langword="null" />.</param>
        <summary>Tworzy i zwraca <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> czyli wspólną bieżącego <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> i określone uprawnienie.</summary>
        <returns>Nowe uprawnienia, które reprezentuje część wspólną bieżącego <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> , a określony <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Jest to nowe uprawnienie <see langword="null" /> Jeśli część wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla union, intersect i logiki podzbioru <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> zaznaczono najpierw i może zwrócić wynik oparte wyłącznie na sprawdzanie. Następnie <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> jest zaznaczone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> nie jest <see langword="null" /> lub nie jest <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="xamlLoadPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma zostać przetestowana dla relacji podzbioru. Może być <see langword="null" />.</param>
        <summary>Określa, czy bieżący <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> jest podzbiorem określone uprawnienie.</summary>
        <returns><see langword="true" /> Jeśli bieżący <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> jest podzbiorem określone uprawnienie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla union, intersect i logiki podzbioru <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> zaznaczono najpierw i może zwrócić wynik oparte wyłącznie na sprawdzanie. Następnie <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> jest zaznaczone.  
  
 Jeśli `target` jest `null` i bieżący <xref:System.Xaml.Permissions.XamlLoadPermission> jest zarówno <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> `false` i ma pustą <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> listy, Metoda ta zwraca `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> nie jest <see langword="null" /> lub nie jest <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="xamlLoadPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy ten <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> oznacza nieograniczonych uprawnień.</summary>
        <returns><see langword="true" /> Jeśli ten <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> oznacza nieograniczonych uprawnień. <see langword="false" /> Jeśli ten <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ma ograniczenia dotyczące poziomów dostępu określonych w <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, lub nie ma uprawnień.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="xamlLoadPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie XML to <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> i bieżącego stanu.</summary>
        <returns>Kodowanie XML to <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, w tym wszelkich informacji o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">A <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> połączyć się z bieżącym <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Może być <see langword="null" />.</param>
        <summary>Tworzy uprawnienia, które sumę bieżącą <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> i określone uprawnienie.</summary>
        <returns>Nowy <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> reprezentujący sumę bieżącą <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> , a określony <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla union, intersect i logiki podzbioru <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> zaznaczono najpierw i może zwrócić wynik oparte wyłącznie na sprawdzanie. Następnie <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> jest zaznaczone.  
  
 Jeśli `other` jest `null`, bieżący <xref:System.Xaml.Permissions.XamlLoadPermission> jest zwracana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" /> nie jest <see langword="null" /> lub nie jest <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>