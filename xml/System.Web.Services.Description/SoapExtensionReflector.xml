<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bdaa22b0a02a98ab2b7be6813340865189c2125" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30584521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia wspólnego interfejsu i funkcje dla klas dodać rozszerzenie SOAP informacji <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiekt na podstawie-method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abstract <xref:System.Web.Services.Description.SoapExtensionReflector> klasa opisuje metody abstrakcyjnej <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>. Ta metoda abstrakcyjna umożliwia klasy pochodnej w celu dodanie opisy rozszerzeń SOAP odzwierciedlające metody sieci Web do obiektów, które są umieszczane w <xref:System.Web.Services.Description.ServiceDescription> obiektu. Tej metody nie jest wejściem. Opisy są dodawane wszystkie metody sieci Web należących do określonego powiązania, który spowoduje utworzenie <xref:System.Web.Services.Description.ServiceDescription>.  
  
 Można użyć <xref:System.Web.Services.Description.ServiceDescription> do generowania dokumentu Web Services Description Language (WSDL) za pośrednictwem <xref:System.Web.Services.Description.ServiceDescription.Write%2A> metody. <xref:System.Web.Services.Description.ServiceDescriptionImporter> Klasa i klasy pokrewne można również użyć <xref:System.Web.Services.Description.ServiceDescription> do generowania proxy klienta kodu lub abstrakcyjny kod serwera.  
  
 Użyj klasy pochodzącej od <xref:System.Web.Services.Description.SoapExtensionReflector> klasy w połączeniu z klasy pochodnej z klasy abstrakcyjnej <xref:System.Web.Services.Protocols.SoapExtension> klasy do rozszerzania środowiska wykonawczego przetwarzania protokołu SOAP wiadomości na klienta lub usługi.  
  
 Można określić <xref:System.Web.Services.Description.SoapExtensionReflector> w pliku konfiguracji za pomocą [ \<soapExtensionReflectorTypes > Element](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c) elementu i jego podrzędny **dodać** elementu. Można także zastosować konfigurację do aplikacji sieci Web ASP.NET, która publikuje usługi sieci Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> — klasa</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generuje informacje specyficzne dla usługi opis, który pobiera umieścić w <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiektu odpowiadającego powiązania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wystąpienie klasy pochodnej z klasy abstrakcyjnej <see cref="T:System.Web.Services.Description.ProtocolReflector" /> klasy, która wywołuje <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> metody.</summary>
        <value>Wystąpienie klasy pochodnej z klasy abstrakcyjnej <see cref="T:System.Web.Services.Description.ProtocolReflector" /> klasy, która wywołuje <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zastosowaniu klasy, która jest pochodną <xref:System.Web.Services.Description.SoapExtensionReflector> `abstract` klasa, nie trzeba zaimplementować klasę, która jest pochodną <xref:System.Web.Services.Description.ProtocolReflector> do wywołania <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> metody lub ustawić <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="Abstract" /> Metoda, która Klasa pochodna musi implementować, aby dodać rozszerzenie SOAP informacji <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiekt na podstawie-method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> Metoda jest wywoływana dla każdej metody sieci Web, który należy do powiązania który <xref:System.Web.Services.Description.ServiceDescription> reprezentuje. <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> — Metoda nie używa metody sieci Web bezpośrednio. Informacje rozszerzenie SOAP pobiera dodawane wszystkie metody sieci Web w powiązaniu odzwierciedlonej z klasy usługi sieci Web.  
  
 Implementacja interfejsu <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> mogą generować informacje, na przykład powiązanie operacji `abstract` operacji i komunikatów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>