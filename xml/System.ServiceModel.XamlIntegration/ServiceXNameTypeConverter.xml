<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceXNameTypeConverter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5594af2719b8dfcc5485f97650c85c75270ce5d90.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">594af2719b8dfcc5485f97650c85c75270ce5d90</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter">
          <source>A WCF-specific implementation of a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> type converter that does not require <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> instances to specify a namespace.</source>
          <target state="translated">Implementacja specyficzna WCF <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> konwerter typów, które nie wymaga <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> wystąpień, aby określić przestrzeń nazw.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type descriptor context</source>
          <target state="translated">Kontekst deskryptor typu</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type to convert from.</source>
          <target state="translated">Typ do przekonwertowania z.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value that indicates whether this converter can convert an object of one type to an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu typu do <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type descriptor context.</source>
          <target state="translated">Kontekst deskryptor typu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type to convert to.</source>
          <target state="translated">Typ docelowy konwersji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value that indicates whether this converter can convert an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> instance to an object of the specified type.</source>
          <target state="translated">Pobiera wartość wskazującą, czy można przekonwertować tego konwertera <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> wystąpienia obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The type descriptor context.</source>
          <target state="translated">Kontekst deskryptor typu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The current culture.</source>
          <target state="translated">Bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The object to convert.</source>
          <target state="translated">Obiekt do przekonwertowania.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the specified value to a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> instance.</source>
          <target state="translated">Konwertuje określoną wartość na <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The converted value.</source>
          <target state="translated">Przekonwertowana wartość.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This method will not add a default namespace if one is not specified in the object being converted.</source>
          <target state="translated">Ta metoda nie doda domyślnej przestrzeni nazw, jeśli nie został określony w obiekcie konwersji.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type descriptor context.</source>
          <target state="translated">Kontekst deskryptor typu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The current culture.</source>
          <target state="translated">Bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The value to convert.</source>
          <target state="translated">Wartość do konwersji.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type to convert the value to.</source>
          <target state="translated">Typ, który można przekonwertować wartości na.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> instance to an object of the specified type.</source>
          <target state="translated">Konwertuje <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> wystąpienia obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The converted value.</source>
          <target state="translated">Przekonwertowana wartość.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This method returns an unqualified local name if no namespace has been provided in the <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> being converted.</source>
          <target state="translated">Ta metoda zwraca niekwalifikowane nazwy lokalnego, jeśli podano bez przestrzeni nazw w <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> konwersji.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An unqualified local name is a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> that contains no namespace.</source>
          <target state="translated">Niekwalifikowana nazwa lokalna jest <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> zawierający bez przestrzeni nazw.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>