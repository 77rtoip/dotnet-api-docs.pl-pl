<Type Name="RoutingConfiguration" FullName="System.ServiceModel.Routing.RoutingConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd84b6826a4cc66c5b9f9d0a70ceef50780b1de5" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32086864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RoutingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.RoutingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutingConfiguration sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje informacji konfiguracyjnych używanych przez <see cref="T:System.ServiceModel.Routing.RoutingExtension" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutingConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutingConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutingConfiguration (System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt; filterTable, bool routeOnHeadersOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Dispatcher.MessageFilterTable`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt;&gt; filterTable, bool routeOnHeadersOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filterTable As MessageFilterTable(Of IEnumerable(Of ServiceEndpoint)), routeOnHeadersOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutingConfiguration(System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ filterTable, bool routeOnHeadersOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterTable" Type="System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt;" />
        <Parameter Name="routeOnHeadersOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filterTable">Tabela Filtr komunikatu do użycia dla tej konfiguracji.</param>
        <param name="routeOnHeadersOnly">
          <see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> można sprawdzić tylko nagłówki komunikatów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> przy użyciu określonego <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> i routeOnHeadersOnly parametru.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy komunikaty są wysyłane w kolejności, które zostały wysłane.</summary>
        <value>
          <see langword="true" /> Jeśli komunikaty są wysyłane w kolejności zostały wysłane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTable">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt; FilterTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilterTable`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt;&gt; FilterTable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTable As MessageFilterTable(Of IEnumerable(Of ServiceEndpoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ FilterTable { System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> używany przez tę konfigurację.</summary>
        <value>Tabela Filtr komunikatu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteOnHeadersOnly">
      <MemberSignature Language="C#" Value="public bool RouteOnHeadersOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteOnHeadersOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteOnHeadersOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteOnHeadersOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy filtr można sprawdzić treść komunikatu.</summary>
        <value>
          <see langword="true" /> Jeśli filtr można sprawdzić tylko nagłówki komunikatów; w przeciwnym razie <see langword="false" />. Wartość domyślna to **true**.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapProcessingEnabled">
      <MemberSignature Language="C#" Value="public bool SoapProcessingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoapProcessingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapProcessingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SoapProcessingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiadomości powinna zostać przetworzona między SOAP <see cref="T:System.ServiceModel.Channels.MessageVersion" />s.</summary>
        <value>
          <see langword="true" /> Jeśli wiadomości powinna zostać przetworzona; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przetwarzania protokołu SOAP to proces, w którym wiadomości są konwertowane między SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.  
  
 Ustawienie tej wartości na `false` oznacza to, że <xref:System.ServiceModel.Routing.RoutingBehavior> nie należy instalować <xref:System.ServiceModel.Routing.SoapProcessingBehavior> w punktach końcowych klienta. Jeśli ustawiono `false`, należy dodać własne inspektora wiadomości lub inny kod do obsługi niektórych aspektów komunikatów przed ich wysłaniem. Istnieje również możliwość wyłączania przetwarzania dla każdego punktu końcowego protokołu SOAP. Aby uzyskać więcej informacji, zobacz <xref:System.ServiceModel.Routing.SoapProcessingBehavior> klasy.  
  
 Domyślnie <xref:System.ServiceModel.Routing.RoutingBehavior> tworzy i dołącza nowy <xref:System.ServiceModel.Routing.SoapProcessingBehavior> z <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> ustawioną `true` dla każdego punktu końcowego klienta. Jeśli nie chcesz używać <xref:System.ServiceModel.Routing.SoapProcessingBehavior> w określonym punkcie końcowym, Utwórz nową <xref:System.ServiceModel.Routing.SoapProcessingBehavior> z ustawioną wartością `false` i dołącz je do punktu końcowego, na którym nie ma przetwarzania występuje. Jeśli <xref:System.ServiceModel.Routing.RoutingBehavior> przestrzega, że klient ma już <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, nie próbuje dołączyć do innego.  
  
 Aby wyłączyć stosowania <xref:System.ServiceModel.Routing.SoapProcessingBehavior> na żadnych punktów końcowych, wyłącz SOAP przetwarzania na <xref:System.ServiceModel.Routing.RoutingBehavior> i <xref:System.ServiceModel.Routing.RoutingConfiguration>.  
  
 Jeśli <xref:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled%2A> jest `true`, <xref:System.ServiceModel.Routing.SoapProcessingBehavior> jest dodawany do punktu końcowego klienta <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>