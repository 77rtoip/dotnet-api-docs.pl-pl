<Type Name="ISimplexDatagramRouter" FullName="System.ServiceModel.Routing.ISimplexDatagramRouter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f48510a2ff7cd0e2051c2a5f92e0dd35c6faac7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30575146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISimplexDatagramRouter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISimplexDatagramRouter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.ISimplexDatagramRouter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISimplexDatagramRouter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISimplexDatagramRouter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Allowed)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje interfejs wymaganego do przetwarzania komunikatów z jednostronne datagram.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten kontrakt ma następujące ustawienia:  
  
-   Sesje są dozwolone, ale nie jest wymagane.  
  
-   Jednym ze sposobów wiadomości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginProcessMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessMessage(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginProcessMessage(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Action="*", AsyncPattern=true, IsOneWay=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat do przetworzenia.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który jest wywoływany po zakończeniu przetwarzania komunikatów.</param>
        <param name="state">Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego.</param>
        <summary>Inicjuje asynchroniczne przetwarzania komunikatu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki lub obu; ta wartość jest także potrzebne podczas wywoływania <see cref="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessMessage">
      <MemberSignature Language="C#" Value="public void EndProcessMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndProcessMessage (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndProcessMessage(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchroniczny zwrócony przez wywołanie <see cref="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
        <summary>Kończy działanie asynchronicznego przetwarzania wiadomości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>