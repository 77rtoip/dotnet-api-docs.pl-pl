<Type Name="SoapProcessingBehavior" FullName="System.ServiceModel.Routing.SoapProcessingBehavior">
  <TypeSignature Language="C#" Value="public class SoapProcessingBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapProcessingBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapProcessingBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapProcessingBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="27d2b-101">Określa zachowanie punktu końcowego klienta używany do organizowania wiadomości między inne powiązanie typy i wersje komunikatów.</span><span class="sxs-lookup"><span data-stu-id="27d2b-101">Defines the client endpoint behavior used to marshal messages between different binding types and message versions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27d2b-102">Przetwarzania protokołu SOAP to proces, w których wiadomości są konwertowane między wersjami wiadomości.</span><span class="sxs-lookup"><span data-stu-id="27d2b-102">SOAP processing is the process where messages are converted between message versions.</span></span>  
  
 <span data-ttu-id="27d2b-103">Przetwarzanie komunikatów z jednym <xref:System.ServiceModel.Channels.MessageVersion> do innego odbywa się przez utworzenie nowej wiadomości WCF, która zawiera część treści i odpowiednie nagłówków z komunikatu przychodzącego WCF.</span><span class="sxs-lookup"><span data-stu-id="27d2b-103">Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message.</span></span> <span data-ttu-id="27d2b-104">Nagłówki specyficznych dla adresowania lub które są zrozumiałe na poziomie routera, nie są używane podczas tworzenia nowej wiadomości WCF, ponieważ te nagłówki są albo inną wersję (w przypadku adresowania nagłówki) lub są przetwarzane w ramach Komunikacja między klientem a router.</span><span class="sxs-lookup"><span data-stu-id="27d2b-104">Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.</span></span>  
  
 <span data-ttu-id="27d2b-105">Określa, czy nagłówek jest umieszczany w wiadomości wychodzącej jest określana przez czy została oznaczona jako rozumieć przeszła przychodzące warstwie kanału.</span><span class="sxs-lookup"><span data-stu-id="27d2b-105">Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer.</span></span> <span data-ttu-id="27d2b-106">Nagłówki, które nie są zrozumiałe (np. nagłówki niestandardowe) nie są usuwane, a więc przekazywane za pośrednictwem usługi routingu.</span><span class="sxs-lookup"><span data-stu-id="27d2b-106">Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapProcessingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapProcessingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27d2b-107">Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceModel.Routing.SoapProcessingBehavior" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="27d2b-107">Creates a new instance of the <see cref="T:System.ServiceModel.Routing.SoapProcessingBehavior" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="27d2b-108">Punkt końcowy usługi do powiązania elementów do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="27d2b-108">The service endpoint to apply the binding elements to.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="27d2b-109">Powiązanie parametru kolekcji do zastosowania do punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="27d2b-109">The binding parameter collection to apply to the endpoint.</span></span></param>
        <summary><span data-ttu-id="27d2b-110">Dodaje nowe elementy powiązania punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="27d2b-110">Adds new binding elements to an endpoint.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="27d2b-111">Punkt końcowy usługi do zastosowania do klienta.</span><span class="sxs-lookup"><span data-stu-id="27d2b-111">The service endpoint to apply to the client.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="27d2b-112">Środowisko uruchomieniowe na kliencie.</span><span class="sxs-lookup"><span data-stu-id="27d2b-112">The runtime on the client.</span></span></param>
        <summary><span data-ttu-id="27d2b-113">Stosuje zachowanie określonego punktu końcowego do klienta.</span><span class="sxs-lookup"><span data-stu-id="27d2b-113">Applies the specified endpoint behavior to the client.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="27d2b-114">Punkt końcowy usługi do zastosowania do klienta.</span><span class="sxs-lookup"><span data-stu-id="27d2b-114">The service endpoint to apply to the client.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="27d2b-115">Dyspozytor punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="27d2b-115">The endpoint dispatcher.</span></span></param>
        <summary><span data-ttu-id="27d2b-116">Dyspozytor punktu końcowego dotyczy zachowanie określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="27d2b-116">Applies the specified endpoint behavior to the endpoint dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessages">
      <MemberSignature Language="C#" Value="public bool ProcessMessages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProcessMessages" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessMessages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProcessMessages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27d2b-117">Pobiera lub ustawia wartość wskazującą, czy wiadomości powinna zostać przetworzona.</span><span class="sxs-lookup"><span data-stu-id="27d2b-117">Gets or sets a value that indicates whether messages should be processed.</span></span></summary>
        <value><span data-ttu-id="27d2b-118">**wartość true,** Jeśli wiadomości powinna być organizowane; w przeciwnym razie **false**.</span><span class="sxs-lookup"><span data-stu-id="27d2b-118">**true** if messages should be marshaled; otherwise, **false**.</span></span> <span data-ttu-id="27d2b-119">Wartość domyślna to **true**.</span><span class="sxs-lookup"><span data-stu-id="27d2b-119">The default value is **true**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27d2b-120">Domyślnie <xref:System.ServiceModel.Routing.RoutingBehavior> tworzy i dołącza nowy <xref:System.ServiceModel.Routing.SoapProcessingBehavior> z <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> ustawioną `true` dla każdego punktu końcowego klienta.</span><span class="sxs-lookup"><span data-stu-id="27d2b-120">By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> set to `true` for each client endpoint.</span></span> <span data-ttu-id="27d2b-121">Jeśli nie chcesz używać <xref:System.ServiceModel.Routing.SoapProcessingBehavior> w określonym punkcie końcowym, Utwórz nową <xref:System.ServiceModel.Routing.SoapProcessingBehavior> z ustawioną wartością `false`i dołącz je do punktu końcowego, na którym nie ma przetwarzania występuje.</span><span class="sxs-lookup"><span data-stu-id="27d2b-121">If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false`, and then attach it to the endpoint on which you do not want processing to occur.</span></span> <span data-ttu-id="27d2b-122">Jeśli <xref:System.ServiceModel.Routing.RoutingBehavior> przestrzega, że klient ma już <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, nie próbuje dołączyć do innego.</span><span class="sxs-lookup"><span data-stu-id="27d2b-122">If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.</span></span>  
  
 <span data-ttu-id="27d2b-123">Aby wyłączyć stosowania <xref:System.ServiceModel.Routing.SoapProcessingBehavior> na żadnych punktów końcowych, wyłącz SOAP przetwarzania na <xref:System.ServiceModel.Routing.RoutingBehavior> i <xref:System.ServiceModel.Routing.RoutingConfiguration>.</span><span class="sxs-lookup"><span data-stu-id="27d2b-123">To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="27d2b-124">Punkt końcowy usługi do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="27d2b-124">The service endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="27d2b-125">Weryfikuje punktu końcowego usługi.</span><span class="sxs-lookup"><span data-stu-id="27d2b-125">Validates the service endpoint.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>