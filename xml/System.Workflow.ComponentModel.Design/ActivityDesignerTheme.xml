<Type Name="ActivityDesignerTheme" FullName="System.Workflow.ComponentModel.Design.ActivityDesignerTheme">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1fc34bbd5351f62bdf6e8356e9e85e7f5c94d6e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69430335" /></Metadata><TypeSignature Language="C#" Value="public class ActivityDesignerTheme : System.Workflow.ComponentModel.Design.DesignerTheme" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityDesignerTheme extends System.Workflow.ComponentModel.Design.DesignerTheme" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesignerTheme&#xA;Inherits DesignerTheme" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesignerTheme : System::Workflow::ComponentModel::Design::DesignerTheme" />
  <TypeSignature Language="F#" Value="type ActivityDesignerTheme = class&#xA;    inherit DesignerTheme" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.DesignerTheme</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia ustawienia właściwości wyglądu i działania w projektancie w środowisku czasu projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Motywy projektanta definiują wygląd i działanie projektanta. Obejmuje to wszystkie style tła, style pierwszego planu, czcionki i ikony zdefiniowane dla projektanta.  
  
 Niestandardowy motyw projektanta można utworzyć, jeśli chcesz zapewnić możliwości konfiguracji dla właściwości unikatowych dla Twojego projektanta. Jeśli nie określisz motywu projektanta dla projektanta niestandardowego, zostanie użyty motyw z klasy bazowej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesignerTheme (System.Workflow.ComponentModel.Design.WorkflowTheme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Design.WorkflowTheme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (theme As WorkflowTheme)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesignerTheme(System::Workflow::ComponentModel::Design::WorkflowTheme ^ theme);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Design.ActivityDesignerTheme : System.Workflow.ComponentModel.Design.WorkflowTheme -&gt; System.Workflow.ComponentModel.Design.ActivityDesignerTheme" Usage="new System.Workflow.ComponentModel.Design.ActivityDesignerTheme theme" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="theme" Type="System.Workflow.ComponentModel.Design.WorkflowTheme" />
      </Parameters>
      <Docs>
        <param name="theme">A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> , który zawiera informacje o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />motywie.</param>
        <summary>Inicjuje wystąpienie <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColorEnd">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColorEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColorEnd" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColorEnd As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColorEnd { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColorEnd : System.Drawing.Color with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.ColorPickerEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ColorPickerConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Drawing.Color" /> końcową przy użyciu gradientu koloru dla koloru tła.</summary>
        <value>Zakończenie <see cref="T:System.Drawing.Color" />w tle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd%2A>wskazuje kolor końcowy gradientu tła. Aby użyć koloru gradientu tła, ustaw <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart%2A> właściwości <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd%2A> i. Tło zmieni kolor koloru początkowego na kolor końcowy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColorStart">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColorStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColorStart" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColorStart As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColorStart { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColorStart : System.Drawing.Color with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.ColorPickerEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ColorPickerConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor początkowy tła w przypadku używania gradientu koloru w tle.</summary>
        <value>Rozpoczęcie <see cref="T:System.Drawing.Color" />w tle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart%2A>Określa kolor tła lub początkowy kolor gradientu tła. Aby użyć koloru gradientu tła, ustaw <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart%2A> właściwości <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd%2A> i. Tło zmieni kolor z początkowego koloru na kolor końcowy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Drawing2D.LinearGradientMode BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LinearGradientMode BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundStyle As LinearGradientMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Drawing2D::LinearGradientMode BackgroundStyle { System::Drawing::Drawing2D::LinearGradientMode get(); void set(System::Drawing::Drawing2D::LinearGradientMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundStyle : System.Drawing.Drawing2D.LinearGradientMode with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LinearGradientMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl tła.</summary>
        <value>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> który opisuje styl tła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle%2A> , aby uzyskać lub określić sposób wyświetlania koloru w tle. <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle%2A> Można ustawić jeden z czterech trybów:  
  
 `BackwardDiagonal`  
 Określa gradient od lewego górnego rogu do lewego dolnego rogu.  
  
 `ForwardDiagonal`  
 Określa gradient od lewego górnego rogu do dolnego prawej.  
  
 `Horizontal`  
 Określa gradient od lewej do prawej.  
  
 `Vertical`  
 Określa gradient od góry do dołu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font BoldFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font BoldFont" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BoldFont" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoldFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ BoldFont { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoldFont : System.Drawing.Font" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BoldFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czcionkę motywu.</summary>
        <value><see cref="T:System.Drawing.Font" /> Motyw.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BoldFont%2A>reprezentuje czcionkę używaną dla wyróżnionego tekstu motywu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.ColorPickerEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ColorPickerConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" /> dla motywu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący<see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" /> motyw.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor%2A> Jest kolorem używanym do rysowania obramowań dla kształtów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderPen">
      <MemberSignature Language="C#" Value="public System.Drawing.Pen BorderPen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Pen BorderPen" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BorderPen As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Pen ^ BorderPen { System::Drawing::Pen ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BorderPen : System.Drawing.Pen" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera BorderPen dla motywu.</summary>
        <value><see cref="T:System.Drawing.Pen" /> Reprezentujący<see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen" /> motyw.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen%2A> Jest piórem używanym do rysowania obramowań dla kształtów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Drawing2D.DashStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Drawing2D::DashStyle BorderStyle { System::Drawing::Drawing2D::DashStyle get(); void set(System::Drawing::Drawing2D::DashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Drawing.Drawing2D.DashStyle with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.FilteredEnumConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl używany dla obramowania.</summary>
        <value><see cref="T:System.Drawing.Drawing2D.DashStyle" /> Wyliczenie, które reprezentuje styl używany dla obramowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderStyle%2A> Jest styl linii do rysowania dla obramowania kształtów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość obramowania (w pikselach).</summary>
        <value>Szerokość obramowania w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderWidth%2A> Jest to szerokość (w pikselach) dla obramowania kształtów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerGeometry">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.DesignerGeometry DesignerGeometry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.Design.DesignerGeometry DesignerGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerGeometry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerGeometry As DesignerGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::DesignerGeometry DesignerGeometry { System::Workflow::ComponentModel::Design::DesignerGeometry get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerGeometry : System.Workflow.ComponentModel.Design.DesignerGeometry" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.DesignerGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera geometrię projektanta.</summary>
        <value>Wyliczenie, które opisuje geometrię projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerGeometry%2A>reprezentuje domyślną geometrię kształtów motywu.  
  
 `Rectangle`  
 Rysuje kształty z rogami prostokątnymi w kwadracie.  
  
 `RoundedRectangle`  
 Rysuje kształty z zaokrąglonymi rogami.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image DesignerImage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image DesignerImage" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ DesignerImage { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerImage : System.Drawing.Image" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obraz skojarzony z projektantem.</summary>
        <value><see cref="T:System.Drawing.Image" /> Do wyświetlenia dla projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImage%2A> Jest to domyślny obraz wyświetlany dla projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerImagePath">
      <MemberSignature Language="C#" Value="public virtual string DesignerImagePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DesignerImagePath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImagePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DesignerImagePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DesignerImagePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DesignerImagePath : string with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImagePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.ImageBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę obrazu dla projektanta.</summary>
        <value>Ścieżka obrazu dla projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImagePath%2A> Jest to ścieżka do pliku obrazu, który ma być używany jako domyślny obraz do wyświetlania dla projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="activityDesignerTheme.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zarządzane zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W takim przypadku `disposing` ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do których odwołuje się. <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> `true` Ta metoda wywołuje `Dispose` metodę każdego przywoływanego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czcionkę tekstu używanego przez motyw.</summary>
        <value>Czcionka motywu projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Font`służy do wyświetlania tekstu w projektancie. `Font` Właściwość określa czcionkę, która ma być używana do zwykłego tekstu wyświetlanego w projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.ColorPickerEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ColorPickerConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Reprezentujący kolor pierwszego planu motywu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForeColor%2A> Użyj właściwości, aby określić kolor pierwszego planu motywu. Kolor pierwszego planu jest zazwyczaj kolorem tekstu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> , wyprowadzając <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> z klasy i ustawiając odpowiednie właściwości dla nowego motywu.  
  
 [!code-csharp[WF_Samples#80](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#80)]
 [!code-vb[WF_Samples#80](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#80)]  
  
 Aby użyć motywu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute> Zastosuj do <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy.  
  
 [!code-csharp[WF_Samples#79](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#79)]
 [!code-vb[WF_Samples#79](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundBrush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush ForegroundBrush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Brush ForegroundBrush" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundBrush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForegroundBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Brush ^ ForegroundBrush { System::Drawing::Brush ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundBrush : System.Drawing.Brush" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Drawing.Brush" /> Pobiera obiekt skojarzony z motywem.</summary>
        <value><see cref="T:System.Drawing.Brush" /> Obiekt skojarzony z motywem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przypisanie tej właściwości powoduje, że pędzel skojarzony z motywem rysuje wypełnione linie i krzywe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundPen">
      <MemberSignature Language="C#" Value="public System.Drawing.Pen ForegroundPen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Pen ForegroundPen" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundPen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForegroundPen As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Pen ^ ForegroundPen { System::Drawing::Pen ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundPen : System.Drawing.Pen" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundPen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Drawing.Pen" /> Pobiera używany do rysowania pierwszego planu motywu.</summary>
        <value><see cref="T:System.Drawing.Pen" /> , Który jest używany do rysowania pierwszego planu motywu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Pen> Służy do rysowania linii o określonej szerokości i stylu. Wiersz rysowany przez `Pen` obiekt może być wypełniony różnymi stylami wypełnienia, w tym pełnymi kolorami i teksturami. Styl wypełnienia zależy od tego, jakiego pędzla lub tekstury użyto jako obiektu wypełnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundBrush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush GetBackgroundBrush (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Brush GetBackgroundBrush(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.GetBackgroundBrush(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Brush ^ GetBackgroundBrush(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundBrush : System.Drawing.Rectangle -&gt; System.Drawing.Brush" Usage="activityDesignerTheme.GetBackgroundBrush rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><see cref="T:System.Drawing.Rectangle" /> Określa lokalizację i rozmiar obszaru w tle.</param>
        <summary>Pobiera Pędzel używany do malowania obszaru określonego przez przekazaną wartość prostokąta.</summary>
        <returns><see cref="T:System.Drawing.Brush" /> , Który jest używany do wypełniania wnętrza kształtów graficznych, takich jak prostokąty, wielokropek, ciasta, wielokąty i ścieżki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pędzel tła służy do wypełnienia wnętrza tła projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ImageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ImageSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ImageSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ImageSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ImageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar obrazu motywu.</summary>
        <value><see cref="T:System.Drawing.Size" /> Reprezentujący rozmiar obrazu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ImageSize%2A> Jesttodomyślnyobraz<xref:System.Drawing.Size> używany przez motyw projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="activityDesignerTheme.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje motyw projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme> Inicjuje z motywem otoczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAmbientPropertyChanged">
      <MemberSignature Language="C#" Value="public override void OnAmbientPropertyChanged (System.Workflow.ComponentModel.Design.AmbientProperty ambientProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnAmbientPropertyChanged(valuetype System.Workflow.ComponentModel.Design.AmbientProperty ambientProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnAmbientPropertyChanged(System::Workflow::ComponentModel::Design::AmbientProperty ambientProperty);" />
      <MemberSignature Language="F#" Value="override this.OnAmbientPropertyChanged : System.Workflow.ComponentModel.Design.AmbientProperty -&gt; unit" Usage="activityDesignerTheme.OnAmbientPropertyChanged ambientProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ambientProperty" Type="System.Workflow.ComponentModel.Design.AmbientProperty" />
      </Parameters>
      <Docs>
        <param name="ambientProperty">Właściwość, która została zmieniona.</param>
        <summary>Wywołuje się, by sygnalizować zmiany ustawień otoczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.OnAmbientPropertyChanged%2A>służy do powiadamiania motywu w celu zastosowania zmian właściwości otoczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar projektanta.</summary>
        <value><see cref="T:System.Drawing.Size" /> Reprezentujący rozmiar projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość Size reprezentuje <xref:System.Drawing.Size> projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
