<Type Name="ITypeFilterProvider" FullName="System.Workflow.ComponentModel.Design.ITypeFilterProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6d60f2e8e4fd07ba2a65b0d213d78ecac907743" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69429659" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeFilterProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeFilterProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeFilterProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeFilterProvider" />
  <TypeSignature Language="F#" Value="type ITypeFilterProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia członkom, których klasy używają do filtrowania typów, które są wyświetlane w oknach dialogowych przeglądarki klas, które są wyświetlane przez projektanta przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanFilterType">
      <MemberSignature Language="C#" Value="public bool CanFilterType (Type type, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanFilterType(class System.Type type, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanFilterType(Type ^ type, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member CanFilterType : Type * bool -&gt; bool" Usage="iTypeFilterProvider.CanFilterType (type, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Aby sprawdzić filtrowanie.</param>
        <param name="throwOnError"><see langword="true" />Aby zgłosić wyjątek podczas <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> przetwarzania; w przeciwnym razie,. <see langword="false" /></param>
        <summary>Zwraca wartość wskazującą, czy określony typ może być filtrowany.</summary>
        <returns><see langword="true" />Jeśli określony typ może być filtrowany; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterDescription">
      <MemberSignature Language="C#" Value="public string FilterDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterDescription" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterDescription : string" Usage="System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis filtru, który ma być wyświetlany w oknie dialogowym Przeglądarka klas.</summary>
        <value>Wartość ciągu, która zawiera opis filtra.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
