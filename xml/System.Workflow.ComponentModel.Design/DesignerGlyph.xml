<Type Name="DesignerGlyph" FullName="System.Workflow.ComponentModel.Design.DesignerGlyph">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a6a8a44bf9ba8f9f883c152123a03dafe0a77fc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69442461" /></Metadata><TypeSignature Language="C#" Value="public abstract class DesignerGlyph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerGlyph extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerGlyph" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerGlyph abstract" />
  <TypeSignature Language="F#" Value="type DesignerGlyph = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rysuje symbol w górnej kolejności Z góry na osi Z w projektancie aktywności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> Klasa jest klasą bazową dla wszystkich glifów projektanta używanych na powierzchni projektowej przepływu pracy.  
  
 Deweloperzy projektanta działań mogą używać klas, które dziedziczą z <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> do rysowania niestandardowych glifów na powierzchni. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> <xref:System.Workflow.ComponentModel.Design.DesignerGlyph>klasy rysują takie glify w kolejności z górnego poziomu, która umieszcza symbol niestandardowy wizualnie na wszystkich innych glifach projektanta na podstawie <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> wartości niestandardowego symbolu. Dolna wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości wskazuje wyższy priorytet i w związku z tym rysuje symbol w górnej kolejności z góry z w projektancie działań.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje klasę symboli, która pochodzi od <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> klasy.  Kod zastępuje <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> metody i <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A> .  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK monitora przepływu pracy z pliku DesignerGlyphProvider.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#132](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#132)]
 [!code-vb[WF_Samples#132](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#132)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />z należy zastąpić następujące elementy członkowskie:. <see cref="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" /></para></block>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Monitor przepływu pracy</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerGlyph ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerGlyph();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeActivated">
      <MemberSignature Language="C#" Value="public virtual bool CanBeActivated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeActivated" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanBeActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanBeActivated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeActivated : bool" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> może uzyskać fokus na, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> z którym jest skojarzony.</summary>
        <value><see langword="true" />Jeśli można aktywować symbol projektanta; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje implementację właściwości CanBeActivated.  Ten przykład pochodzi z przykładu zestawu SDK projektanta profilu śledzenia.  Aby uzyskać więcej informacji, zobacz [przykładowy Projektant profilów śledzenia](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).  
  
 [!code-csharp[WF_Samples#119](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#119)]
 [!code-vb[WF_Samples#119](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle GetBounds (System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetBounds(class System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBounds (designer As ActivityDesigner, activated As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Rectangle GetBounds(System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer, bool activated);" />
      <MemberSignature Language="F#" Value="abstract member GetBounds : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; System.Drawing.Rectangle&#xA;override this.GetBounds : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; System.Drawing.Rectangle" Usage="designerGlyph.GetBounds (designer, activated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="activated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Z którym skojarzony jest symbol.</param>
        <param name="activated"><see langword="true" />, aby wskazać, czy glif pojawia się na powierzchni projektanta aktywności; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zwraca granice dla glifu określonego <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> Reprezentujący granice dla glifu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiony w <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> klasie pochodnej, zwraca granice projektanta działań, z którym jest skojarzony symbol.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> jak można zastąpić metodę. Kod ustawia rozmiar i lokalizację niestandardowego obiektu symbolu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK monitora przepływu pracy z pliku DesignerGlyphProvider.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designer" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Monitor przepływu pracy</related>
      </Docs>
    </Member>
    <Member MemberName="HighestPriority">
      <MemberSignature Language="C#" Value="public const int HighestPriority = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HighestPriority = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const HighestPriority As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int HighestPriority = 0;" />
      <MemberSignature Language="F#" Value="val mutable HighestPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Reprezentuje najwyższy priorytet możliwy dla elementu <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. Ta wartość jest stałą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dolna wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości wskazuje wyższy priorytet i w związku z tym rysuje symbol w górnej kolejności z góry z w projektancie działań. Wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority> pola jest równa 0.  
  
> [!NOTE]
>  Ta stała wartość służy jako wytyczna podczas tworzenia symboli niestandardowych. Podczas projektowania niestandardowego symbolu możesz używać różnych wartości <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowestPriority">
      <MemberSignature Language="C#" Value="public const int LowestPriority = 1000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LowestPriority = (1000000)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const LowestPriority As Integer  = 1000000" />
      <MemberSignature Language="C++ CLI" Value="public: int LowestPriority = 1000000;" />
      <MemberSignature Language="F#" Value="val mutable LowestPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1000000</MemberValue>
      <Docs>
        <summary>Reprezentuje najniższy priorytet możliwy dla elementu <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. Ta wartość jest stałą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wysoka wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości wskazuje niższy priorytet i w związku z tym rysuje symbol w górnej kolejności z porządku osi z w projektancie aktywności. Wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority> pola to 1000000.  
  
> [!NOTE]
>  Ta stała wartość służy jako wytyczna podczas tworzenia symboli niestandardowych. Podczas projektowania niestandardowego symbolu możesz używać różnych wartości <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPriority">
      <MemberSignature Language="C#" Value="public const int NormalPriority = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NormalPriority = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const NormalPriority As Integer  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: int NormalPriority = 10000;" />
      <MemberSignature Language="F#" Value="val mutable NormalPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>Reprezentuje normalny priorytet dla <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. Ta wartość jest stałą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niższa wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości wskazuje wyższy priorytet, a wyższa wartość oznacza niższy priorytet. Wartość <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority> pola to 10000.  
  
> [!NOTE]
>  Ta stała wartość służy jako wytyczna podczas tworzenia symboli niestandardowych. Podczas projektowania niestandardowego symbolu możesz używać różnych wartości <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnActivate (System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivate(class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivate (designer As ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivate(System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="abstract member OnActivate : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit&#xA;override this.OnActivate : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="designerGlyph.OnActivate designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="designer"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Na którym jest rysowany symbol.</param>
        <summary>Wskazuje symbol, który wykonał akcję, która aktywuje symbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje implementację metody OnActivate.  Ten przykład pochodzi z przykładu zestawu SDK projektanta profilu śledzenia.  Aby uzyskać więcej informacji, zobacz [przykładowy Projektant profilów śledzenia](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).  
  
 [!code-csharp[WF_Samples#119](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#119)]
 [!code-vb[WF_Samples#119](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected abstract void OnPaint (System.Drawing.Graphics graphics, bool activated, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Drawing.Graphics graphics, bool activated, class System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnPaint(System::Drawing::Graphics ^ graphics, bool activated, System::Workflow::ComponentModel::Design::AmbientTheme ^ ambientTheme, System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Drawing.Graphics * bool * System.Workflow.ComponentModel.Design.AmbientTheme * System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="designerGlyph.OnPaint (graphics, activated, ambientTheme, designer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="activated" Type="System.Boolean" />
        <Parameter Name="ambientTheme" Type="System.Workflow.ComponentModel.Design.AmbientTheme" />
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Drawing.Graphics" /> Do wykonywania zadań wypełnienia i rysowania.</param>
        <param name="activated"><see langword="true" />Aby wskazać, że glif pojawia się na powierzchni projektowej; w przeciwnym razie. <see langword="false" /></param>
        <param name="ambientTheme">Wartość <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> do użycia w celu uzyskania dostępu do ustawień właściwości otoczenia.</param>
        <param name="designer"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Z którego można uzyskać informacje o akcjach użytkownika.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, wykonuje wszelkie zadania wymagane do renderowania glifów na powierzchni projektanta aktywności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A>używa <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorPen%2A> do rysowania granic symbolu komentarza i <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorBrush%2A> wypełnienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A> jak można zastąpić metodę. Kod dostosowuje sposób rysowania obiektu glifów w projektancie działań, z którym skojarzony jest symbol.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK monitora przepływu pracy z pliku DesignerGlyphProvider.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#134](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#134)]
 [!code-vb[WF_Samples#134](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#134)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Monitor przepływu pracy</related>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ustawienie priorytetu dla symbolu projektanta na powierzchni projektowej działania.</summary>
        <value>Wartość całkowita reprezentująca ustawienie <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> priorytetu na powierzchni projektanta aktywności. Niższa wartość wskazuje wyższy priorytet i w związku z tym rysuje symbol w górnej kolejności Z góry na osi Z w projektancie działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
