<Type Name="IMemberCreationService" FullName="System.Workflow.ComponentModel.Design.IMemberCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="401b14e76fdc7cddd13e210cd939b578cf56c2de" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52246855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMemberCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemberCreationService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IMemberCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemberCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemberCreationService" />
  <TypeSignature Language="F#" Value="type IMemberCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="67a6b-101">Definiuje metody służące do dynamicznie tworzenie, aktualizowanie i usuwanie elementów kodu dla typu w czasie projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67a6b-101">Defines methods to dynamically create, update and remove code elements for a type at design time.</span>
      </span>
      <span data-ttu-id="67a6b-102">Metody znajdują się również, która pozwala wyświetlić kod w czasie projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67a6b-102">Methods are also provided that allow you to display code at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public void CreateEvent (string className, string eventName, Type eventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateEvent(string className, string eventName, class System.Type eventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateEvent (className As String, eventName As String, eventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="F#" Value="abstract member CreateEvent : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool -&gt; unit" Usage="iMemberCreationService.CreateEvent (className, eventName, eventType, attributes, emitDependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-103">Ciąg, który zawiera nazwę klasy, aby dodać zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-103">A string that contains the class name to add the event to.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="67a6b-104">Ciąg, który definiuje nazwę zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-104">A string that defines the name of the event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="67a6b-105">
            <see cref="T:System.Type" /> Przypisany do zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-105">The <see cref="T:System.Type" /> assigned to the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="67a6b-106">
            <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> Tablica, która zawiera informacje na temat wszystkich atrybutów, które można przypisać do zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-106">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the event.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="67a6b-107">
            <see langword="true" /> Aby emitować żadnych właściwości zależności skojarzone ze zdarzeniem; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-107">
              <see langword="true" /> to emit any dependency properties associated with the event; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-108">Tworzy zdarzenie dla określonej klasy przy użyciu określonej nazwy zdarzenia, typ zdarzenia i atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-108">Creates an event on the specified class by using the specified event name, event type and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="public void CreateField (string className, string fieldName, Type fieldType, Type[] genericParameterTypes, System.CodeDom.MemberAttributes attributes, System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateField(string className, string fieldName, class System.Type fieldType, class System.Type[] genericParameterTypes, valuetype System.CodeDom.MemberAttributes attributes, class System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateField (className As String, fieldName As String, fieldType As Type, genericParameterTypes As Type(), attributes As MemberAttributes, initializationExpression As CodeSnippetExpression, overwriteExisting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateField(System::String ^ className, System::String ^ fieldName, Type ^ fieldType, cli::array &lt;Type ^&gt; ^ genericParameterTypes, System::CodeDom::MemberAttributes attributes, System::CodeDom::CodeSnippetExpression ^ initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * string * Type * Type[] * System.CodeDom.MemberAttributes * System.CodeDom.CodeSnippetExpression * bool -&gt; unit" Usage="iMemberCreationService.CreateField (className, fieldName, fieldType, genericParameterTypes, attributes, initializationExpression, overwriteExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fieldType" Type="System.Type" />
        <Parameter Name="genericParameterTypes" Type="System.Type[]" />
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
        <Parameter Name="initializationExpression" Type="System.CodeDom.CodeSnippetExpression" />
        <Parameter Name="overwriteExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-109">Ciąg, który definiuje nazwę klasy, aby dodać pole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-109">A string that defines the name of the class to add the field.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="67a6b-110">Ciąg, który definiuje nazwę pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-110">A string that defines the name of the field.</span>
          </span>
        </param>
        <param name="fieldType">
          <span data-ttu-id="67a6b-111">
            <see cref="T:System.Type" /> Nowego pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-111">The <see cref="T:System.Type" /> of the new field.</span>
          </span>
        </param>
        <param name="genericParameterTypes">
          <span data-ttu-id="67a6b-112">A <see cref="T:System.Type" /> tablicy parametrów, który został skojarzony z polem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-112">A <see cref="T:System.Type" /> array of any parameters associated with the field.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="67a6b-113">A <see cref="T:System.CodeDom.MemberAttributes" /> definiujący identyfikator atrybutu elementu członkowskiego dla pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-113">A <see cref="T:System.CodeDom.MemberAttributes" /> that defines the member attribute identifier for the field.</span>
          </span>
        </param>
        <param name="initializationExpression">
          <span data-ttu-id="67a6b-114">Element <see cref="T:System.CodeDom.CodeSnippetExpression" /> , który zawiera wyrażenie literału tego pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-114">A <see cref="T:System.CodeDom.CodeSnippetExpression" /> that contains the literal expression of the field.</span>
          </span>
        </param>
        <param name="overwriteExisting">
          <span data-ttu-id="67a6b-115">
            <see langword="true" /> Aby usunąć wszystkie istniejące pola na <paramref name="className" /> podczas tworzenia nowego pola; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-115">
              <see langword="true" /> to delete any existing fields on <paramref name="className" /> when creating the new field; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-116">Tworzy pole w określonej klasie przy użyciu określonego pola Nazwa, typ pola, typy parametrów, atrybuty i wyrażenia inicjowania literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-116">Creates a field on the specified class by using the specified field name, field type, parameter types, attributes and literal initialization expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public void CreateProperty (string className, string propertyName, Type propertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ownerType, bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateProperty(string className, string propertyName, class System.Type propertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, class System.Type ownerType, bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProperty (className As String, propertyName As String, propertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean, isAttached As Boolean, ownerType As Type, isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ^ ownerType, bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member CreateProperty : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool * bool * Type * bool -&gt; unit" Usage="iMemberCreationService.CreateProperty (className, propertyName, propertyType, attributes, emitDependencyProperty, isMetaProperty, isAttached, ownerType, isReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
        <Parameter Name="isAttached" Type="System.Boolean" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-117">Ciąg, który definiuje nazwę klasy, aby dodać pole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-117">A string that defines the name of the class to add the field.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="67a6b-118">Ciąg, który definiuje nazwę pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-118">A string that defines the name of the field.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="67a6b-119">
            <see cref="T:System.Type" /> Nowej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-119">The <see cref="T:System.Type" /> of the new property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="67a6b-120">
            <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> Tablica, która zawiera informacje na temat wszystkich atrybutów do przypisania do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-120">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the property.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="67a6b-121">
            <see langword="true" /> Aby emitować żadnych właściwości zależności skojarzony z właściwością; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-121">
              <see langword="true" /> to emit any dependency properties associated with the property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="67a6b-122">
            <see langword="true" /> Aby utworzyć właściwość jako właściwość meta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-122">
              <see langword="true" /> to create the property as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isAttached">
          <span data-ttu-id="67a6b-123">
            <see langword="true" /> Aby wskazać, czy ma właściwość zależności emitowany jego <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> właściwością <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-123">
              <see langword="true" /> to indicate that the emitted dependency property has its <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="67a6b-124">
            <see cref="T:System.Type" /> , Jest deklarowanie właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-124">The <see cref="T:System.Type" /> that is declaring the dependency property.</span>
          </span>
        </param>
        <param name="isReadOnly">
          <span data-ttu-id="67a6b-125">
            <see langword="true" /> Aby utworzyć właściwość jako właściwość tylko do odczytu; <see langword="false" /> do tworzenia właściwości jako właściwości odczytu / zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-125">
              <see langword="true" /> to create the property as a read-only property; <see langword="false" /> to create the property as a read-write property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-126">Tworzy w określonej klasie właściwość, przy użyciu nazwy określonej właściwości, typ właściwości i atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-126">Creates a property on the specified class by using the specified property name, property type and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEvent">
      <MemberSignature Language="C#" Value="public void RemoveEvent (string className, string eventName, Type eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEvent(string className, string eventName, class System.Type eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEvent (className As String, eventName As String, eventType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEvent : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveEvent (className, eventName, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-127">Ciąg, który zawiera nazwę klasy, z którego chcesz usunąć zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-127">A string that contains the name of the class from which to remove the event.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="67a6b-128">Ciąg, który zawiera nazwę zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-128">A string that contains the name of the event to remove.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="67a6b-129">
            <see cref="T:System.Type" /> Skojarzony ze zdarzeniem można usunąć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-129">The <see cref="T:System.Type" /> associated with the event to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-130">Usuwa określone zdarzenie z określonej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-130">Removes the specified event from the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (string className, string propertyName, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProperty(string className, string propertyName, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveProperty (className As String, propertyName As String, propertyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveProperty (className, propertyName, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-131">Ciąg, który zawiera nazwę klasy, z którego chcesz usunąć właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-131">A string that contains the name of the class from which to remove the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="67a6b-132">Ciąg, który zawiera nazwę właściwości do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-132">A string that contains the name of the property to remove.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="67a6b-133">
            <see cref="T:System.Type" /> Właściwości do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-133">The <see cref="T:System.Type" /> of the property to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-134">Usuwa określoną właściwość z określonej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-134">Removes the specified property from the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67a6b-135">Wyświetla kod dla nowego elementu członkowskiego na powierzchni projektowej przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-135">Displays code for the new member on a workflow design surface.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; unit" Usage="iMemberCreationService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67a6b-136">Wyświetla kod dla nowego elementu członkowskiego na powierzchni projektowej przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-136">Displays code for the new member on a workflow design surface.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode (System.Workflow.ComponentModel.Activity activity, string methodName, Type delegateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode(class System.Workflow.ComponentModel.Activity activity, string methodName, class System.Type delegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ methodName, Type ^ delegateType);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.Workflow.ComponentModel.Activity * string * Type -&gt; unit" Usage="iMemberCreationService.ShowCode (activity, methodName, delegateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="delegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="67a6b-137">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Skojarzone z kodem, aby wyświetlić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-137">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the code to display.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="67a6b-138">Nazwa metody do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-138">The name of the method to display.</span>
          </span>
        </param>
        <param name="delegateType">
          <span data-ttu-id="67a6b-139">
            <see cref="T:System.Type" /> Delegata skojarzonego z metodą do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-139">The <see cref="T:System.Type" /> of the delegate associated with the method to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-140">Wyświetla kod dla nowego elementu członkowskiego na powierzchni projektowej przepływu pracy przy użyciu określonego <see cref="T:System.Workflow.ComponentModel.Activity" />, określonej metody i typu określonego delegata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-140">Displays code for the new member on a workflow design surface by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />, the specified method and the specified delegate type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBaseType">
      <MemberSignature Language="C#" Value="public void UpdateBaseType (string className, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateBaseType(string className, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBaseType (className As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBaseType(System::String ^ className, Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member UpdateBaseType : string * Type -&gt; unit" Usage="iMemberCreationService.UpdateBaseType (className, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-141">Ciąg, który zawiera nazwę klasy, aby zaktualizować nowy typ podstawowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-141">A string that contains the name of the class to update with a new base type.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="67a6b-142">
            <see cref="T:System.Type" /> Jako nowy typ podstawowy dla tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-142">The <see cref="T:System.Type" /> to be the new base type for the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-143">Aktualizacje typu podstawowego do skojarzenia z określonej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-143">Updates the base type to associate with the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEvent">
      <MemberSignature Language="C#" Value="public void UpdateEvent (string className, string oldEventName, Type oldEventType, string newEventName, Type newEventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateEvent(string className, string oldEventName, class System.Type oldEventType, string newEventName, class System.Type newEventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateEvent (className As String, oldEventName As String, oldEventType As Type, newEventName As String, newEventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateEvent(System::String ^ className, System::String ^ oldEventName, Type ^ oldEventType, System::String ^ newEventName, Type ^ newEventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateEvent : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateEvent (className, oldEventName, oldEventType, newEventName, newEventType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldEventName" Type="System.String" />
        <Parameter Name="oldEventType" Type="System.Type" />
        <Parameter Name="newEventName" Type="System.String" />
        <Parameter Name="newEventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-144">Ciąg, który zawiera nazwę klasy, która zawiera aktualizowane zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-144">A string that contains the name of the class that contains the event to update.</span>
          </span>
        </param>
        <param name="oldEventName">
          <span data-ttu-id="67a6b-145">Ciąg, który zawiera nazwę istniejącego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-145">A string that contains the name of the existing event.</span>
          </span>
        </param>
        <param name="oldEventType">
          <span data-ttu-id="67a6b-146">
            <see cref="T:System.Type" /> Skojarzony ze zdarzeniem istniejących.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-146">The <see cref="T:System.Type" /> associated with the existing event.</span>
          </span>
        </param>
        <param name="newEventName">
          <span data-ttu-id="67a6b-147">Ciąg, który zawiera nową nazwę zaktualizowane zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-147">A string that contains the new name of the updated event.</span>
          </span>
        </param>
        <param name="newEventType">
          <span data-ttu-id="67a6b-148">
            <see cref="T:System.Type" /> Do skojarzenia z zaktualizowane zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-148">The <see cref="T:System.Type" /> to associate with the updated event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="67a6b-149">
            <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> Tablica, która zawiera informacje na temat wszystkich atrybutów, które można przypisać do zaktualizowane zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-149">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated event.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="67a6b-150">
            <see langword="true" /> Aby zaktualizować zdarzenie, aby było wyemitować właściwość zależności; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-150">
              <see langword="true" /> to update the event to emit a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="67a6b-151">
            <see langword="true" /> Aby ustawić zdarzenia jako właściwość meta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-151">
              <see langword="true" /> to set the event as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-152">Określa nową nazwę i typ do zdarzenia istniejącego w określonej klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-152">Sets a new name and type to an existing event on the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperty">
      <MemberSignature Language="C#" Value="public void UpdateProperty (string className, string oldPropertyName, Type oldPropertyType, string newPropertyName, Type newPropertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateProperty(string className, string oldPropertyName, class System.Type oldPropertyType, string newPropertyName, class System.Type newPropertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateProperty (className As String, oldPropertyName As String, oldPropertyType As Type, newPropertyName As String, newPropertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateProperty(System::String ^ className, System::String ^ oldPropertyName, Type ^ oldPropertyType, System::String ^ newPropertyName, Type ^ newPropertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateProperty : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateProperty (className, oldPropertyName, oldPropertyType, newPropertyName, newPropertyType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldPropertyName" Type="System.String" />
        <Parameter Name="oldPropertyType" Type="System.Type" />
        <Parameter Name="newPropertyName" Type="System.String" />
        <Parameter Name="newPropertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="67a6b-153">Ciąg, który zawiera nazwę klasy, na którym znajduje się właściwość do aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-153">A string that contains the name of the class on which the property to update resides.</span>
          </span>
        </param>
        <param name="oldPropertyName">
          <span data-ttu-id="67a6b-154">Ciąg, który zawiera nazwę istniejącej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-154">A string that contains the existing name of the property.</span>
          </span>
        </param>
        <param name="oldPropertyType">
          <span data-ttu-id="67a6b-155">
            <see cref="T:System.Type" /> Skojarzone z istniejącej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-155">The <see cref="T:System.Type" /> associated with the existing property.</span>
          </span>
        </param>
        <param name="newPropertyName">
          <span data-ttu-id="67a6b-156">Ciąg, który zawiera nową nazwę właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-156">A string that contains the new name of the property.</span>
          </span>
        </param>
        <param name="newPropertyType">
          <span data-ttu-id="67a6b-157">
            <see cref="T:System.Type" /> Do skojarzenia z zaktualizowaną wersję właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-157">The <see cref="T:System.Type" /> to associate with the updated version of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="67a6b-158">
            <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> Tablica, która zawiera informacje na temat wszystkich atrybutów, które można przypisać do zaktualizowana wartość właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-158">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated property.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="67a6b-159">
            <see langword="true" /> Aby zaktualizować właściwość było wyemitować właściwość zależności; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-159">
              <see langword="true" /> to update the property emit a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="67a6b-160">
            <see langword="true" /> Aby ustawić właściwość jako właściwość meta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-160">
              <see langword="true" /> to set the property as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-161">Ustawia nową nazwę i typ właściwości w określonej klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-161">Sets a new name and type to a property on the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTypeName">
      <MemberSignature Language="C#" Value="public void UpdateTypeName (string oldClassName, string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTypeName(string oldClassName, string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTypeName (oldClassName As String, newClassName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTypeName(System::String ^ oldClassName, System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="abstract member UpdateTypeName : string * string -&gt; unit" Usage="iMemberCreationService.UpdateTypeName (oldClassName, newClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldClassName" Type="System.String" />
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldClassName">
          <span data-ttu-id="67a6b-162">Ciąg, który zawiera nazwę istniejącej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-162">A string that contains the existing name of the class.</span>
          </span>
        </param>
        <param name="newClassName">
          <span data-ttu-id="67a6b-163">Ciąg, który zawiera nową nazwę, aby przypisać do tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-163">A string that contains the new name to assign to the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67a6b-164">Aktualizuje nazwę określonej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67a6b-164">Updates the name of the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>