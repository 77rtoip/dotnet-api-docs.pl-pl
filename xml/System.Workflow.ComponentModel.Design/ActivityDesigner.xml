<Type Name="ActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ActivityDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a72c83bb0dfb54ebfe2c0ba080813e6e7fafa73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30715796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActivityDesigner : IDisposable, System.ComponentModel.Design.IDesignerFilter, System.Drawing.Design.IToolboxUser, System.Workflow.ComponentModel.Design.IPersistUIState, System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityDesigner extends System.Object implements class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.IRootDesigner, class System.Drawing.Design.IToolboxUser, class System.IDisposable, class System.Workflow.ComponentModel.Design.IPersistUIState, class System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesigner&#xA;Implements IDesignerFilter, IDisposable, IPersistUIState, IToolboxUser, IWorkflowRootDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesigner : IDisposable, System::ComponentModel::Design::IDesignerFilter, System::Drawing::Design::IToolboxUser, System::Workflow::ComponentModel::Design::IPersistUIState, System::Workflow::ComponentModel::Design::IWorkflowRootDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Drawing.Design.IToolboxUser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IPersistUIState</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IWorkflowRootDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerTheme))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia klasę podstawową obowiązkowe dla wszystkich działań projektanta składników.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Wszystkie składniki projektanta działania pochodzi od <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> Udostępnia prosty projektanta, który umożliwia użytkownikowi wizualne projektowanie działania w trybie projektowania.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> udostępnia prosty mechanizm dla działań, dlatego mogą uczestniczyć w renderowania przepływu pracy na powierzchni projektu.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> Umożliwia użytkownikowi dostosowywanie układu i rysowanie skojarzone z działaniem.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> Umożliwia użytkownikowi rozszerzenie metadane skojarzone z działaniem.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono pełną implementację <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> dla działań niestandardowych. Projektant zawiera flagi, które mogą być przełączana w celu umożliwienia klasy podstawowej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> do kontrolowania rysowania lub korzystanie z różnych metod <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> klasy do rysowania działania.  
  
 [!code-csharp[WF_Samples#72](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#72)]
 [!code-vb[WF_Samples#72](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#72)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.AccessibleObject" /> aplikacji ułatwień dostępu umożliwia dostosowanie interfejsu użytkownika aplikacji dla użytkowników, którzy mają wzroku.</summary>
        <value>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> Skojarzony z formantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie <xref:System.Windows.Forms.AccessibleObject> jest aktualnie przypisany do kontrolki, utworzeniu nowego wystąpienia jednego.  
  
> [!NOTE]
>  Można pobrać lub ustawić <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject%2A> właściwość, należy dodać odwołanie do zestawu dostępności zainstalowany w środowisku .NET Framework.  
  
 Aby uzyskać więcej informacji na temat dostępnych obiektów Zobacz sekcję Active Accessibility w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Activity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Activity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activity As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ Activity { System::Workflow::ComponentModel::Activity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Workflow.ComponentModel.Activity" /> skojarzone z projektantem.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Activity" /> Skojarzone z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Activity> dostępu do właściwości i zdarzenia działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Rectangle" /> zawierającą wartość prostokąta otaczającego projektanta we współrzędnych logiczne.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> który umieszcza projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt zwracany przez metodę granice służy do określenia obszar otoczony projektanta plus obszaru zaznaczenia.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak używasz <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds%2A> właściwości, aby określić nowy prostokąt ograniczający dla symbolu wyświetlany na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 Ten przykładowy kod jest częścią przykład zestawu SDK Monitor przepływu pracy z pliku DesignerGlyphProvider.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](http://msdn.microsoft.com/library/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentActivityDesigner As CompositeActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ parentActivityDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner">
          <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Które potencjalnie można ustawić jako element nadrzędny.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> można ustawić jako element nadrzędny działania skojarzone z projektantem.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> może być ustawiona jako element nadrzędny działania skojarzonego z projektanta; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna przy testowaniu czy określonego może być elementem nadrzędnym projektanta <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 Ta metoda jest wywoływana, gdy użytkownik inicjuje operację wstawiania, np. przeciągnij i upuść lub Wklej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób upewnić się, że o typy określonego działania jest elementem nadrzędnym działania niestandardowego. W tym przypadku działania niestandardowego można tylko być elementem nadrzędnym w `ParallelIfActivity`.  
  
 [!code-csharp[WF_Samples#23](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#23)]
 [!code-vb[WF_Samples#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnect">
      <MemberSignature Language="C#" Value="protected virtual bool CanConnect (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanConnect(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanConnect (source As ConnectionPoint, target As ConnectionPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanConnect(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> Aby sprawdzić bieżące Projektant działań.</param>
        <param name="target">
          <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> Sprawdzenia Projektant działań docelowej.</param>
        <summary>Zwraca wartość wskazującą, czy można utworzyć połączenia między punktem określonego połączenia w bieżącym Projektant działań i punkt połączenia określony w Projektancie działania docelowego.</summary>
        <returns>
          <see langword="true" /> Aby wskazać, że można tworzyć połączenia między źródłem a celem; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile przesłonięcia w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect%2A> zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.WorkflowView CreateView (System.ComponentModel.Design.ViewTechnology viewTechnology);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.WorkflowView CreateView(valuetype System.ComponentModel.Design.ViewTechnology viewTechnology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Workflow::ComponentModel::Design::WorkflowView ^ CreateView(System::ComponentModel::Design::ViewTechnology viewTechnology);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewTechnology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="viewTechnology">ViewTechnology używać do tworzenia widoku przepływu pracy.</param>
        <summary>Tworzy widok przepływu pracy dla bieżącego Projektant działań przy użyciu określonego ViewTechnology.</summary>
        <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> zawierający bieżącego Projektant działań.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile przesłonięcia w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView%2A> Wyświetla domyślny układ czasu projektowania dla działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DesignerActions As ReadOnlyCollection(Of DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ DesignerActions { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę akcji skojarzonych z błędów konfiguracji.</summary>
        <value>Tylko do odczytu tablicy z <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę tylko do odczytu akcji skojarzonych z błędów konfiguracji. Ta lista zawiera wszystkie błędy konfiguracji i sprawdzania poprawności dla działań, które mogą być widoczne dla użytkownika końcowego lub używana programowo, obsługując systemu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerTheme As ActivityDesignerTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ DesignerTheme { System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący motyw projektanta Projektant działań.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> Zawierający ustawienia motywu Projektant działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Jeśli <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> jest usuwany; <see langword="false" /> Jeśli <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> jest zatwierdzony.</param>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="protected virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślne działanie interfejsu użytkownika, skojarzone z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do wykonania domyślnej akcji interfejsu użytkownika, skojarzone z projektantem. Akcje domyślne interfejsu użytkownika może zawierać emitowania metody skojarzone ze zdarzeniem domyślnej w kodzie obok pliku, gdy dwukrotnie kliknięty powierzchnię projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualResizing">
      <MemberSignature Language="C#" Value="protected internal virtual bool EnableVisualResizing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualResizing" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property EnableVisualResizing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool EnableVisualResizing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy Projektant działań można zmieniać w Projektancie dowolnej postaci.</summary>
        <value>
          <see langword="true" /> Jeśli Projektant działań można zmieniać w <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile przesłonięcia w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing%2A> zawsze zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przenosi obszaru ekranu, aby zagwarantować, że określony Projektant jest widoczny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby przenieść obszaru powierzchni projektanta można wyświetlić projektanta zainteresowań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivityDesigner ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia obiekt, aby wyczyścić wszystkie zasoby w sposób niejednoznaczny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa zasoby przez wywołanie metody <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A>(`false`). Zastąpienie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A> dostosować czyszczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionPoints (edges As DesignerEdges) As ReadOnlyCollection(Of ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ConnectionPoint ^&gt; ^ GetConnectionPoints(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">
          <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> Na której można zebrać punkty połączenia.</param>
        <summary>Zwraca kolekcję tylko do odczytu punkty połączenia dla Projektant działań wzdłuż określonego <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />.</summary>
        <returns>A <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> ogólnej kolekcji tylko do odczytu, używany jako punktów, w których Projektant działań mogą łączyć się z innych projektantów działań.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie punkty połączenia są we współrzędnych logiczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnections">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetConnections (edges As DesignerEdges) As ReadOnlyCollection(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Drawing::Point&gt; ^ GetConnections(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">
          <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> Na których chcesz wykonywać kwerendę o punkty.</param>
        <summary>Zwraca kolekcję tylko do odczytu punkty używane przez projektanta dla połączenia.</summary>
        <returns>Punkt tylko do odczytu kolekcji zawierającej połączeń do użycia na potrzeby Projektant działań.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetPreviewImage (System.Drawing.Graphics compatibleGraphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetPreviewImage(class System.Drawing.Graphics compatibleGraphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviewImage (compatibleGraphics As Graphics) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetPreviewImage(System::Drawing::Graphics ^ compatibleGraphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibleGraphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="compatibleGraphics">
          <see cref="T:System.Drawing.Graphics" /> Obiekt używany do rysowania obrazu.</param>
        <summary>Pobiera obraz Projektant działań na określonym <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Obiekt, który zawiera mapę bitową użyty jako obraz podglądu w operacji przeciągania i upuszczania, a w <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> okienko podglądu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootDesigner">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootDesigner (serviceProvider As IServiceProvider) As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::ActivityDesigner ^ GetRootDesigner(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który implementuje <see cref="T:System.IServiceProvider" />.</param>
        <summary>Zwraca projektanta skojarzonego z powierzchnią projektu przepływu pracy.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Czyli <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> hosta projektanta.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Typ usługi do żądania.</param>
        <summary>Próbuje pobrać z witryny tryb projektowania dla działania skojarzone z projektantem określonego typu usługi.</summary>
        <returns>Obiekt zawierający implementację żądanej usługi lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) Jeśli usługa nie jest możliwe.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję symboli, z którą ma zostać adorn projektanta.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> Zawierający symboli do wyświetlenia w projektancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs%2A> dostęp tylko do odczytu listy projektanta symboli. Tych symboli może służyć do graficznego przedstawienia składniki <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> w środowisku graficznym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> reprezentujący single x i y współrzędną.</param>
        <summary>Pobiera informacje o ActivityDesigner w określonym punkcie na ekranie.</summary>
        <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> zawierający informacje o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> w określonym punkcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.HitTestInfo>, Wraz z <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> metody <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> kontroli służy do określania część <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> po kliknięciu formantu. <xref:System.Workflow.ComponentModel.Design.HitTestInfo> Zawiera logicznej współrzędne punktu na <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> gdy kliknięto przycisk myszy.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> Metoda <xref:System.Drawing.Point> zawierający x i y współrzędną.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Drawing::Image ^ Image {  public:&#xA;System::Drawing::Image ^ get(); protected:&#xA; void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Image" /> skojarzone z projektantem.</summary>
        <value>
          <see cref="T:System.Drawing.Image" /> Skojarzone z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A> Właściwość jest ustawiona na <xref:System.Drawing.Image> do wyświetlenia. Można to zrobić w czasie projektowania lub w czasie wykonywania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano ładowania <xref:System.Drawing.Bitmap> obiektu z zasobu osadzonego. W takim przypadku `ToolboxImage` jest taki sam obraz, który jest używany podczas podstawowym <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy rysuje niestandardowego <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość dla otaczającego granice skojarzone z projektantem we współrzędnych logicznej obrazu.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> obrazu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> można pobrać współrzędne prostokąt ograniczający obrazu skojarzonego z nim. Łączniki lub nakładanie grafiki, można użyć tych współrzędnych.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> właściwości. W tym przykładzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> jest obliczana przy użyciu granice <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> z którego powinien być inicjowany projektanta.</param>
        <summary>Inicjuje projektanta z skojarzony <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjowanie ładuje projektanta z działaniem określony. Projektant ładuje działanie usługi, aktualizuje zleceń skojarzone z działaniem i przypisuje domyślny tekst i obraz do projektanta.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia implementację klasy podstawowej metody Initialize. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize%2A> Ładuje metody w tym przykładzie <xref:System.Drawing.Bitmap> obiektu z zasobu osadzonego. `ToolboxImage` Zasób jest <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A> czyli używane podczas podstawowym <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> klasy rysuje niestandardowego <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unieważnia projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj Invalidate projektanta, aby wyświetlony ponownie, tak aby.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj Invalidate, aby spowodować projektanta, aby wyświetlony ponownie, tak.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> określający obszar na unieważnienie przepływu pracy.</param>
        <summary>Unieważnia prostokąt określony w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidate umożliwia projektanta, aby wyświetlony ponownie, tak, że określony prostokąta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia projektanta działanie, które wywołuje aktywność skojarzone z bieżącym projektantem działania.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Do wywołania bieżącego Projektant działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile przesłonięcia w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner%2A> get zwraca operacji odwołanie o wartości null (`Nothing` w języku Visual Basic) i zgłasza operacji set <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Próbowano wykonać operację na <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommentedActivity">
      <MemberSignature Language="C#" Value="public static bool IsCommentedActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCommentedActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCommentedActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> W Projektancie bieżącego działania.</param>
        <summary>Zwraca wartość wskazującą, czy działanie biezacym projektantem jest oznaczone jako lub znajduje się wewnątrz działania komentarze.</summary>
        <returns>
          <see langword="true" /> Jeśli działanie jest oznaczone jako lub znajduje się wewnątrz działania komentarze; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie skojarzone z projektantem może być modyfikowana.</summary>
        <value>
          <see langword="true" /> Jeśli można modyfikować działanie skojarzone z projektantem; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked%2A> Określa, czy działanie może być modyfikowana. To wpływa na operacji przeciągania, zmiany właściwości i zmienia się na pozycji działania w oknie projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimarySelection">
      <MemberSignature Language="C#" Value="public bool IsPrimarySelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimarySelection" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimarySelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimarySelection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie skojarzone z projektantem jest zaznaczenia głównego.</summary>
        <value>
          <see langword="true" /> Jeśli działanie skojarzone z projektantem jest wybór podstawowego; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection%2A> wpływają na wyróżnianie lub aktualizacji arkuszy właściwości w Twojej graficzną reprezentację przepływu pracy. IsPrimarySelection jest przydatne, jeśli wybrano wiele działań jako IsPrimarySelection wskazuje początkowy punkt wyboru wielokrotnego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy projektant jest projektanta głównego.</summary>
        <value>
          <see langword="true" /> Jeśli projektant jest projektanta głównego; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektant główny nie odniesie nie projektantów jako klasy nadrzędnej. Projektant główny działa jako projektant ukończenia przepływu pracy jako wszystkie składniki przepływu pracy będą elementów podrzędnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wybrano działanie skojarzone z projektantem.</summary>
        <value>
          <see langword="true" /> Jeżeli działania związane z projektanta jest zaznaczone. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected%2A> właściwości dla operacji, takich jak wycinanie i wklejanie lub aktualizowanie właściwości działania podczas wprowadzania zmian w oknie właściwości, na przykład.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedActivityType">
      <MemberSignature Language="C#" Value="protected virtual bool IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSupportedActivityType (activityType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSupportedActivityType(Type ^ activityType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">Typ działania, która jest obsługiwana.</param>
        <summary>Zwraca wartość wskazującą, czy typ określonego działania jest obsługiwane, jeśli projektant działań jest projektanta głównego.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="activityType" /> jest obsługiwany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType%2A> jest wywoływana tylko wtedy, gdy Projektant działań projektanta głównego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie skojarzone z projektanta jest widoczna w przepływie pracy.</summary>
        <value>
          <see langword="true" /> Jeśli działanie skojarzone z projektanta jest widoczna w przepływie pracy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> do ustalenia, czy działanie jest widoczny w projektancie. Dla dużych przepływów pracy można mechanizm wyszukiwania i Znajdź, wybierz i przenieść do obszaru wyświetlanego obecnie nie są widoczne działanie znalezione przez użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">A <see cref="T:System.IO.BinaryReader" /> używane w celu przywrócenia stanu projektanta.</param>
        <summary>Ładuje stan widoku Projektanta strumienia binarnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację projektanta we współrzędnych logiczne.</summary>
        <value>Lokalizacja projektanta we współrzędnych logiczne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Location%2A> właściwości pozycji projektanta na powierzchni projektu w czasie projektowania lub czasu wykonywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu filtry komunikatów, które są skojarzone z Projektant działań.</summary>
        <value>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> kolekcji tylko do odczytu, która zawiera wszystkie filtry standardowy komunikat do skojarzenia z Projektant działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalny rozmiar Projektant działań.</summary>
        <value>Minimalny rozmiar Projektant działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize%2A> zależy od ustawienia rozmiaru dostępny za pośrednictwem <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> podczas działania jest skojarzony z zmiany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e` zawiera dane o jakie zmiany zostały wprowadzone w <xref:System.Workflow.ComponentModel.Activity>. Ta metoda służy do aktualizowania stanu projektanta oraz interfejsu użytkownika wyświetlane w Projektancie przepływów pracy, gdy użytkownik wprowadzi zmiany do działania w czasie projektowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> po uruchomieniu wizualnie zmiany rozmiaru Projektant działań, gdy projektant jest w <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing%2A> do wykonania jakiegokolwiek czasu projektowania przetwarzania <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> po uruchomieniu przez użytkownika zmiany rozmiaru Projektant działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnConnected (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnected(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnected (source As ConnectionPoint, target As ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnected(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">Źródłowy Element ConnectionPoint w Projektancie bieżącego działania.</param>
        <param name="target">Docelowy element ConnectionPoint na Projektant działań, aby nawiązać połączenie.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> po nawiązaniu połączenia między dwoma punktami połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected%2A> nie zachowanie domyślne. Należy przesłonić tę metodę w klasie, która pochodzi z <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> zapewnienie przetwarzania po nawiązaniu połączenia między projektantami dwa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje po zakończeniu operacji Przeciągnij upuść wewnątrz granic projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje, gdy operacja Przeciągnij upuść kończy się w granicach projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy trwa operacja Przeciągnij upuść, a wskaźnik myszy jest przesuwany granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> Zdarzenie jest wywoływane, gdy wskaźnik myszy zostanie przeciągnięty do projektanta.  
  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
 Zmiany w pozycję wskaźnika stanu klawiatury i myszy komentarz stanu są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, wartość efekt listy jest zwracana do źródła, dzięki czemu aplikacja źródła można wykonywać odpowiednich operacji na źródle danych; na przykład zobacz komentarz danych, jeśli operacja zakończyła się ruchu.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy trwa operacja Przeciągnij upuść, a wskaźnik myszy opuści granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> Zdarzenie jest zgłaszane, gdy użytkownik przeciąga wskaźnik poza projektantem lub użytkownik anulował operację przeciągania i upuszczania.  
  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
 Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy trwa operacja Przeciągnij upuść, a wskaźnik myszy znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> Zdarzenie jest wywoływane, gdy użytkownik przeciąga wskaźnik myszy nad projektanta.  
  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnEndResizing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndResizing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndResizing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndResizing();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowDesignerMessageSink.OnEndResizing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> po zakończeniu użytkownika w wizualnie zmiana rozmiaru Projektant działań, gdy projektant jest w <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteDesignerAction">
      <MemberSignature Language="C#" Value="protected internal virtual void OnExecuteDesignerAction (System.Workflow.ComponentModel.Design.DesignerAction designerAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnExecuteDesignerAction(class System.Workflow.ComponentModel.Design.DesignerAction designerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnExecuteDesignerAction(System::Workflow::ComponentModel::Design::DesignerAction ^ designerAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerAction" Type="System.Workflow.ComponentModel.Design.DesignerAction" />
      </Parameters>
      <Docs>
        <param name="designerAction">
          <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> Skojarzone z powodu błędu konfiguracji.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> po kliknięciu przez użytkownika na błędy konfiguracji skojarzone z projektantem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designerAction" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Aktualizuje wizualnych opinii dostarczony do użytkownika podczas wykonywania operacji przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje po naciśnięciu klawisza, gdy projektant ma fokus klawiatury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje po zwolnieniu klawisza, gdy projektant ma fokus klawiatury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik zmienia położenie jego wizualnych lub projektantów działań podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy przesłonić tę metodę do wykonania dowolnego przetwarzania układu wymagana, gdy użytkownik zmienia położenie elementów na powierzchni projektowej działania w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zwraca rozmiar wizualnych lub podrzędny projektantów działań na <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>Nowe ustawienia rozmiaru wizualnych lub projektantów działań podrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize%2A> metody. Na przykład rozmiar `Activity` pozostaje statyczna z wysokość i szerokość 64.  
  
 [!code-csharp[WF_Samples#77](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#77)]
 [!code-vb[WF_Samples#77](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy przechwytywanie myszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseCaptureChanged występuje, gdy użytkownik wybierze liczbę obiektów w projektancie, przeciągając wskaźnik myszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy przycisk myszy zostanie kliknięty wiele razy w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseDoubleClick występuje po kliknięciu przycisku myszy dwa razy pod rząd powyżej projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy zostanie naciśnięty przycisk myszy, gdy kursor znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (System.Drawing.Point initialDragPoint, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(valuetype System.Drawing.Point initialDragPoint, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (initialDragPoint As Point, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(System::Drawing::Point initialDragPoint, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialDragPoint" Type="System.Drawing.Point" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="initialDragPoint">A <see cref="T:System.Drawing.Point" /> reprezentujący single x i y współrzędną.</param>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy użytkownik rozpocznie przeciąganie myszy w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy użytkownik przestanie przeciągać wskaźnik myszy w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje każdego przepływu myszy jako użytkownik przeciąga wskaźnik myszy nad projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy mysz przejdzie najpierw granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy wskaźnik znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy wskaźnik myszy opuści granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy wskaźnik myszy jest przenoszenie w granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje po zwolnieniu przycisku myszy, gdy kursor znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Rysuje wizualną reprezentację działania w czasie projektowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono niestandardowego <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> deleguje odpowiedzialność rysowania klasę podstawową albo rysuje oparty na wartość logiczną. Jeśli `useBasePaint` ma wartość false, to niestandardowe działanie narysuje przy użyciu różnych metod <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> klasy.  
  
 [!code-csharp[WF_Samples#78](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#78)]
 [!code-vb[WF_Samples#78](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnProcessMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnProcessMessage (System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProcessMessage(valuetype System.Windows.Forms.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProcessMessage(System::Windows::Forms::Message message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="message">Win32 <see cref="T:System.Windows.Forms.Message" /> zawierający dane zdarzenia.</param>
        <summary>Umożliwia projektanta do przetwarzania komunikatów Win32 raw.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Określa, czy operacja przeciągania powinno być kontynuowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są wywoływane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowy miejsca docelowego, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z mocą przeciągania i upuszczania określony. Aby uzyskać listę efekty przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
-   Zmiany w pozycję wskaźnika stanu klawiatury i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza granicami projektanta <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny Projektant <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> dla tego projektanta jest wywoływane.  
  
-   Jeśli myszy przenosi, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenia.  
  
-   Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości właściwości akcji zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik jest dostarczany z najbardziej aktualnej daty opinię na pozycji myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt Usuń w źródle, umożliwiając aplikacji źródła wykonanie odpowiednich operacji na źródle danych; na przykład Wytnij danych jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik jest wizualnie zmiany rozmiaru w czasie projektowania. Metoda jest wywoływana tylko, gdy Projektant działań jest elementem podrzędnym <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e` Określa <xref:System.Workflow.ComponentModel.Design.DesignerEdges> i nowych granic używane dla po zmianie rozmiaru <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollBar sender, int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollBar sender, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (sender As ScrollBar, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollBar ^ sender, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Windows.Forms.ScrollBar" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Windows.Forms.ScrollBar" /> Na którym użytkownik zmienił pozycji.</param>
        <param name="value">Nowa wartość pozycji przewijania.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik zmienia jego położenie przewijania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll%2A> Podaj nie zachowanie domyślne. Należy go zastąpić w klasie, która jest pochodną <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> udzielać logika przetwarzania pozycja przewijania zostanie zmieniona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowSmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnShowSmartTagVerbs (System.Drawing.Point smartTagPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowSmartTagVerbs(valuetype System.Drawing.Point smartTagPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowSmartTagVerbs (smartTagPoint As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowSmartTagVerbs(System::Drawing::Point smartTagPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartTagPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="smartTagPoint">A <see cref="T:System.Drawing.Point" /> który wskazuje lokalizację, aby pokazać tagów inteligentnych.</param>
        <summary>Wyświetla projektanta zlecenia, które są skojarzone z tagów inteligentnych w określonym momencie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSmartTagVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSmartTagVisibilityChanged(bool visible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" /> Aby wskazać, że powinien być wyświetlany tagów inteligentnych; <see langword="false" /> aby wskazać, że tagów inteligentnych powinien być ukryty.</param>
        <summary>Powiadamia <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> czy wyświetlić lub ukryć tagów inteligentnych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThemeChange (newTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ newTheme);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="newTheme">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia projektanta, że zmieniono motyw skojarzone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ ParentDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera projektanta nadrzędną istniejącej projektanta.</summary>
        <value>Projektant nadrzędnego istniejących projektanta. Jeśli <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> jest projektanta głównego, a następnie <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> zwracane są <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; w przeciwnym razie <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> będzie nadrzędna <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner%2A> do Przenieś w górę drzewa zagnieżdżone <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> obiektów lub znajdować projektanta głównego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentView">
      <MemberSignature Language="C#" Value="protected internal System.Workflow.ComponentModel.Design.WorkflowView ParentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowView ParentView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ParentView As WorkflowView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Workflow::ComponentModel::Design::WorkflowView ^ ParentView { System::Workflow::ComponentModel::Design::WorkflowView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Widok przepływu pracy, który zawiera bieżący Projektant działań.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> Zawierający bieżącego Projektant działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="protected void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PerformLayout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje układu projektanta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToLogical (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToLogical(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToLogical(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> zawiera współrzędne do przekształcenia.</param>
        <summary>Przekształca z współrzędnych ekranu wskaż działania projektanta współrzędnych.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> zawierający przekształcone x i y współrzędnych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToScreen (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> zawiera współrzędne do przekształcenia.</param>
        <summary>Przekształca z działania projektanta współrzędnych wskaż współrzędnych ekranu.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> zawierający przekształcone x i y współrzędnych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Collections.IDictionary" /> Zawierający wartości TypeID atrybutów.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu atrybutów, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.Collections.IDictionary" /> Zawierający zdarzenia nazwy klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta, aby zmienić lub usunąć elementy z zestawu zdarzeń, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.Collections.IDictionary" /> Zawierający nazwy właściwości klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zbiór właściwości, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Collections.IDictionary" /> Zawierający wartości TypeID atrybutów.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zestawu atrybutów, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.Collections.IDictionary" /> Zawierający zdarzenia nazwy klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zbioru zdarzeń, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.Collections.IDictionary" /> Zawierający nazwy właściwości klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zbiór właściwości, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> opisujący współrzędne do przekształcenia.</param>
        <summary>Przekształca prostokąt współrzędnych ekranu działania projektanta współrzędnych.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> opisujący przekształcone współrzędnych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> opisujący współrzędne do przekształcenia.</param>
        <summary>Przekształca prostokąt z działania projektanta współrzędnych współrzędnych ekranu.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> opisujący przekształcone współrzędnych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual void RefreshDesignerActions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RefreshDesignerActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RefreshDesignerActions ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RefreshDesignerActions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odświeża błędy konfiguracji skojarzone z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Akcje projektanta reprezentuje błędy możliwych konfiguracji skojarzone z projektantem. Wywoływanie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions%2A> aktualizuje te błędy o wprowadzonych niedawno zmianach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerVerbs">
      <MemberSignature Language="C#" Value="protected void RefreshDesignerVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RefreshDesignerVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RefreshDesignerVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RefreshDesignerVerbs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odświeża zleceń projektanta działanie skojarzone z projektantem przez wywołanie metody obsługi stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W menu kontekstowe i paski menu przedstawiono zleceń projektanta. Wywoływanie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs%2A> odświeży menu, aby wyświetlić wszystkie ostatnie zmiany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.BinaryWriter" /> Do jest przechowywany stan widoku.</param>
        <summary>Przechowuje stan widoku projektanta do strumienia binarnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest sumą wartości właściwości projektanta. Gdy stan widoku jest zapisywany w strumieniu, wartości projektanta i ustawienia można przywrócić za pomocą <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla poradę określonych informacji dla <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile przesłonięcia w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> używa <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip%2A?displayProperty=nameWithType> logiki, aby wyświetlić informacje o porady.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ infoTip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="infoTip">Tekst do wyświetlenia w porady.</param>
        <summary>Znajduje określony informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> pokazanie prostokąt tekst, który może służyć do wyświetlenia rozszerzone informacje o projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string title, string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string title, string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (title As String, infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ infoTip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">Ciąg, który zawiera tytuł Porada informacji.</param>
        <param name="infoTip">Ciąg, który zawiera informacje o poradę tekst do wyświetlenia.</param>
        <summary>Wyświetla informacje o poradę dla <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> podany tytuł i tekst.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceTip">
      <MemberSignature Language="C#" Value="protected void ShowInPlaceTip (string infoTip, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInPlaceTip(string infoTip, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInPlaceTip(System::String ^ infoTip, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="infoTip">Ciąg, który zawiera etykietka narzędzia do wyświetlenia.</param>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> określający lokalizację, w której można wyświetlić etykietka narzędzia.</param>
        <summary>Wyświetla etykietka narzędzia określony w lokalizacji określonej prostokąta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected virtual bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowSmartTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowSmartTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działania powinny być widoczne tagów inteligentnych.</summary>
        <value>
          <see langword="true" /> Jeśli działanie powinno pokazać SmartTag; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> ustalenie, czy pokazywać tagów inteligentnych, gdy działanie ma fokus w projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> reprezentujący obszar <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj rozmiar, aby dostosować wysokość i szerokość Projektant działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle SmartTagRectangle { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt, w której powinien być wyświetlany tagów inteligentnych.</summary>
        <value>Prostokąt, w której powinien być wyświetlany tagów inteligentnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy użyć razem z <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> do wyświetlenia tagów inteligentnych projektanta działań dostępne w lokalizacji określonej przez <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagVerbs As ReadOnlyCollection(Of ActivityDesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ SmartTagVerbs { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu akcje projektanta do skojarzenia z tagów inteligentnych na Projektant działań.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> Kolekcji tylko do odczytu do skojarzenia z tagów inteligentnych projektanta działania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Component">
      <MemberSignature Language="C#" Value="System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Component As IComponent Implements IDesigner.Component" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::IComponent ^ System.ComponentModel.Design.IDesigner.Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podstawowy składnik, z którym jest skojarzona Projektant działań.</summary>
        <value>
          <see cref="T:System.ComponentModel.IComponent" /> Z Projektant działań jest skojarzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IDesigner%23Component> reprezentuje działanie projektuje Projektant działań na powierzchni projektu przepływu pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <MemberSignature Language="C#" Value="void IDesigner.DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Sub DoDefaultAction () Implements IDesigner.DoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.DoDefaultAction() = System::ComponentModel::Design::IDesigner::DoDefaultAction;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślne działanie skojarzone z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction%2A> powoduje, że domyślne działanie skojarzone z projektantem do wykonania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Initialize">
      <MemberSignature Language="C#" Value="void IDesigner.Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (component As IComponent) Implements IDesigner.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.Initialize(System::ComponentModel::IComponent ^ component) = System::ComponentModel::Design::IDesigner::Initialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">IComponent zainicjować Projektant z.</param>
        <summary>Inicjuje Projektant z skojarzonym działaniu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Verbs">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Verbs As DesignerVerbCollection Implements IDesigner.Verbs" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::DesignerVerbCollection ^ System.ComponentModel.Design.IDesigner.Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera skojarzone z projektantem działania zleceń czasu projektowania.</summary>
        <value>Skojarzone z projektantem działania zleceń czasu projektowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Collections.IDictionary" /> Zawiera identyfikatory typów atrybutów klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu atrybutów, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.Collections.IDictionary" /> Zawierający zdarzenia nazwy klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zestawu zdarzeń, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.Collections.IDictionary" /> Zawierający nazwy właściwości klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta zmienić lub usunąć elementy z zbiór właściwości, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Collections.IDictionary" /> Zawiera identyfikatory typów atrybutów klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zestawu atrybutów, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.Collections.IDictionary" /> Zawierający zdarzenia nazwy klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zbioru zdarzeń, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.Collections.IDictionary" /> Zawierający nazwy właściwości klasy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta dodać elementy do zbiór właściwości, które udostępnia ona za pośrednictwem deskryptora typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.GetView">
      <MemberSignature Language="C#" Value="object IRootDesigner.GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.IRootDesigner.GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (technology As ViewTechnology) As Object Implements IRootDesigner.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.IRootDesigner.GetView(System::ComponentModel::Design::ViewTechnology technology) = System::ComponentModel::Design::IRootDesigner::GetView;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> dla których ma zostać zwrócony obiekt widoku.</param>
        <summary>Zwraca obiekt widoku technologii określony widok.</summary>
        <returns>Obiekt reprezentujący widok dla tego projektanta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> jest rzutowane na <xref:System.ComponentModel.Design.IRootDesigner> interfejsu.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportedTechnologies As ViewTechnology() Implements IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę technologii, których Projektant działań może obsługiwać do jego wyświetlenia.</summary>
        <value>Obsługiwana tablica <see cref="T:System.ComponentModel.Design.ViewTechnology" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zastąpiona w klasach pochodnych, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IRootDesigner%23SupportedTechnologies> zwraca tablicę pojedynczego elementu członkowskiego, który zawiera <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.GetToolSupported">
      <MemberSignature Language="C#" Value="bool IToolboxUser.GetToolSupported (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Drawing.Design.IToolboxUser.GetToolSupported(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Drawing.Design.IToolboxUser.GetToolSupported(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::GetToolSupported;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> Do testowania obsługi.</param>
        <summary>Określa, czy określony element przybornika jest obsługiwana przez bieżący Projektant działań.</summary>
        <returns>
          <see langword="true" /> Jeśli narzędzie jest obsługiwana przez przybornika i można ją włączyć; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.ToolPicked">
      <MemberSignature Language="C#" Value="void IToolboxUser.ToolPicked (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Drawing.Design.IToolboxUser.ToolPicked(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Drawing.Design.IToolboxUser.ToolPicked(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::ToolPicked;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> Do wybrania.</param>
        <summary>Wybiera element przybornika określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (reader As BinaryReader) Implements IPersistUIState.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System::IO::BinaryReader ^ reader) = System::Workflow::ComponentModel::Design::IPersistUIState::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.IO.BinaryReader" /> Ładowania stanu widoku z.</param>
        <summary>Przywraca stan widoku strumienia binarnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub SaveViewState (writer As BinaryWriter) Implements IPersistUIState.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System::IO::BinaryWriter ^ writer) = System::Workflow::ComponentModel::Design::IPersistUIState::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.IO.BinaryWriter" /> do zapisany stan widoku.</param>
        <summary>Zapisuje stan widoku do strumienia danych binarnych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value=" Property InvokingDesigner As CompositeActivityDesigner Implements IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> , która zażądała Projektant działań można zainicjować.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> , Która zażądała Projektant działań można zainicjować.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType">
      <MemberSignature Language="C#" Value="bool IWorkflowRootDesigner.IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function IsSupportedActivityType (activityType As Type) As Boolean Implements IWorkflowRootDesigner.IsSupportedActivityType" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(Type ^ activityType) = System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::IsSupportedActivityType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">
          <see cref="T:System.Type" /> Działania, aby sprawdzić, aby uzyskać pomoc dotyczącą Projektant działań.</param>
        <summary>Zwraca wartość wskazującą, czy określony typ jest obsługiwany na bieżącej <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>
          <see langword="true" /> Jeśli typ jest obsługiwany w bieżącym projektancie przepływów pracy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsSupportedActivityType jest wywoływana tylko wtedy, gdy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> jest projektanta głównego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter) Implements IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie filtry komunikatów skojarzone z projektantem działania.</summary>
        <value>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> kolekcji tylko do odczytu, która zawiera wszystkie filtry komunikat skojarzony z projektanta głównego przepływu pracy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <MemberSignature Language="C#" Value="bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsLayoutPersistence As Boolean Implements IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy projektanta głównego przepływu pracy w rzeczywistych obsługuje funkcji trwałości układu.</summary>
        <value>
          <see langword="true" /> Jeśli projektanta obsługuje funkcji trwałości układu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::String ^ Text {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst do skojarzenia z projektanta.</summary>
        <value>Tekst do skojarzenia z projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy do kojarzenia ciągu tekstowego przy użyciu projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość prostokąta tekst we współrzędnych logiczne.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> zawierający tekst skojarzony z projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy do określenia lokalizacji w Projektancie gdzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Text%2A> będą wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> właściwości. W tym przykładzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> jest obliczana przy użyciu granice <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> oraz lokalizacja i rozmiar <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A>.  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Verbs As ActivityDesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ Verbs { System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zlecenia, które mają być skojarzone z projektanta.</summary>
        <value>Kolekcja zlecenia, które mają być skojarzone z projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zleceń ustalenie zleceń do wyświetlenia w Menu kontekstowym.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób przesłonięcia <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A> właściwości, aby wstawić akcje niestandardowe zlecenie dla <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner>. `CreateActivityVerbs` Tworzy nowy <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> o nazwie `"Add New Parallel Branch"` i kojarzy program obsługi zdarzeń o nazwie `OnAddParallelBranch`. Po kliknięciu zlecenie w Projektancie przepływów pracy programu obsługi zdarzeń jest wywoływana.  
  
 [!code-csharp[WF_Samples#73](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>