<Type Name="ActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5194ac465fdd327252bb1cb223593efc810b4cf6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69430399" /></Metadata><TypeSignature Language="C#" Value="public class ActivityDesigner : IDisposable, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.IRootDesigner, System.Drawing.Design.IToolboxUser, System.Workflow.ComponentModel.Design.IPersistUIState, System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityDesigner extends System.Object implements class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.IRootDesigner, class System.Drawing.Design.IToolboxUser, class System.IDisposable, class System.Workflow.ComponentModel.Design.IPersistUIState, class System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesigner&#xA;Implements IDesignerFilter, IDisposable, IPersistUIState, IRootDesigner, IToolboxUser, IWorkflowRootDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesigner : IDisposable, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::IRootDesigner, System::Drawing::Design::IToolboxUser, System::Workflow::ComponentModel::Design::IPersistUIState, System::Workflow::ComponentModel::Design::IWorkflowRootDesigner" />
  <TypeSignature Language="F#" Value="type ActivityDesigner = class&#xA;    interface IDisposable&#xA;    interface IDesignerFilter&#xA;    interface IDesigner&#xA;    interface IToolboxUser&#xA;    interface IPersistUIState&#xA;    interface IWorkflowRootDesigner&#xA;    interface IRootDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IRootDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Drawing.Design.IToolboxUser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IPersistUIState</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IWorkflowRootDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerTheme))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Custom)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia obowiązkową klasę bazową dla wszystkich składników projektanta działań.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Wszystkie składniki projektanta działań pochodzą z <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>programu. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> Zapewnia prosty Projektant, który umożliwia użytkownikowi wizualne projektowanie działań w trybie projektowania.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>zapewnia prosty mechanizm dla działań, dzięki czemu mogą oni uczestniczyć w renderowaniu przepływu pracy na powierzchni projektowej.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>umożliwia użytkownikowi dostosowanie układu i rysunku skojarzonego z działaniem.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>umożliwia użytkownikowi rozszerzonie metadanych skojarzonych z działaniem.  
  
   
  
## Examples  
 Poniższy przykład pokazuje kompletną implementację <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> dla działania niestandardowego. Projektant ma flagę, która może być przełączana, aby umożliwić klasie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> bazowej kontrolowanie malowania lub wykorzystać różne metody do rysowania <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> działania przez klasę.  
  
 [!code-csharp[WF_Samples#72](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#72)]
 [!code-vb[WF_Samples#72](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#72)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.AccessibleObject" /> Pobiera aplikacje ułatwień dostępu używane do dostosowywania interfejsu użytkownika aplikacji dla użytkowników, którzy mają niesparowane.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleObject" /> Skojarzone z kontrolką.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.Windows.Forms.AccessibleObject> nie jest obecnie przypisana do kontrolki, tworzone jest nowe wystąpienie jednego z nich.  
  
> [!NOTE]
>  Aby uzyskać lub ustawić <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject%2A> właściwość, należy dodać odwołanie do zestawu ułatwień dostępu zainstalowanego z .NET Framework.  
  
 Aby uzyskać więcej informacji na temat dostępnych obiektów, zobacz sekcję Active Accessibility (dostępność) w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Activity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Activity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activity As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ Activity { System::Workflow::ComponentModel::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Activity : System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Activity" /> Pobiera skojarzone z projektantem.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Activity" /> Skojarzona z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj, <xref:System.Workflow.ComponentModel.Activity> Aby uzyskać dostęp do właściwości i zdarzeń działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="T:System.Drawing.Rectangle" /> który zawiera wartość otaczającego prostokąta projektanta we współrzędnych logicznych.</summary>
        <value>Obiekt <see cref="T:System.Drawing.Rectangle" /> , który jest otaczający projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć prostokąta zwróconego przez metodę Bounds, aby określić obszar otoczony przez projektanta i obszar zaznaczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds%2A> właściwości, aby określić nowy prostokąt ograniczający dla glifu wyświetlanego <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>w.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK monitora przepływu pracy z pliku DesignerGlyphProvider.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Monitor przepływu pracy</related>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentActivityDesigner As CompositeActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ parentActivityDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool&#xA;override this.CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool" Usage="activityDesigner.CanBeParentedTo parentActivityDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Który może być prawdopodobnie ustawiony jako element nadrzędny.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> można ustawić jako element nadrzędny działania skojarzonego z projektantem.</summary>
        <returns><see langword="true" />Jeśli można ustawić jako element nadrzędny działania skojarzonego z projektantem; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przydatna do testowania, czy projektant może być określony <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>jako nadrzędny.  
  
 Ta metoda jest wywoływana, gdy użytkownik inicjuje operację wstawiania, na przykład przeciąganie i upuszczanie lub wklejanie.  
  
   
  
## Examples  
 Poniższy przykład ilustruje, jak upewnić się, że działanie niestandardowe jest nadrzędne dla określonych typów działań. W takim przypadku działanie niestandardowe może być tylko nadrzędne dla `ParallelIfActivity`elementu.  
  
 [!code-csharp[WF_Samples#23](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#23)]
 [!code-vb[WF_Samples#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnect">
      <MemberSignature Language="C#" Value="protected virtual bool CanConnect (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanConnect(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanConnect (source As ConnectionPoint, target As ConnectionPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanConnect(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CanConnect : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; bool&#xA;override this.CanConnect : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; bool" Usage="activityDesigner.CanConnect (source, target)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> Aby sprawdzić bieżącą projektanta działań.</param>
        <param name="target">W <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> celu sprawdzenia docelowego projektanta działań.</param>
        <summary>Zwraca wartość wskazującą, czy można utworzyć połączenie między określonym punktem połączenia w bieżącym projektancie działań a określonym punktem połączenia w docelowym projektancie działań.</summary>
        <returns><see langword="true" />Aby wskazać, że można utworzyć połączenie między źródłem a celem; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiony w <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect%2A> klasie pochodnej `true`, zawsze zwraca wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.WorkflowView CreateView (System.ComponentModel.Design.ViewTechnology viewTechnology);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.WorkflowView CreateView(valuetype System.ComponentModel.Design.ViewTechnology viewTechnology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Workflow::ComponentModel::Design::WorkflowView ^ CreateView(System::ComponentModel::Design::ViewTechnology viewTechnology);" />
      <MemberSignature Language="F#" Value="abstract member CreateView : System.ComponentModel.Design.ViewTechnology -&gt; System.Workflow.ComponentModel.Design.WorkflowView&#xA;override this.CreateView : System.ComponentModel.Design.ViewTechnology -&gt; System.Workflow.ComponentModel.Design.WorkflowView" Usage="activityDesigner.CreateView viewTechnology" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewTechnology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="viewTechnology">ViewTechnology do użycia w celu utworzenia widoku przepływu pracy.</param>
        <summary>Tworzy widok przepływu pracy dla bieżącego projektanta działań przy użyciu określonego ViewTechnology.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> Zawierający bieżącą projektanta działań.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiony w <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView%2A> klasie pochodnej, program wyświetla domyślny układ czasu projektowania dla działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DesignerActions As ReadOnlyCollection(Of DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ DesignerActions { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerActions : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę akcji skojarzonych z błędami konfiguracji.</summary>
        <value>Tablica tylko do odczytu <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę "tylko do odczytu" akcji skojarzonych z błędami konfiguracji. Ta lista zawiera wszystkie błędy związane z konfiguracją i walidacją dla działania, które mogą być prezentowane użytkownikowi końcowemu lub używane programowo przez system <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>obsługujący.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerTheme As ActivityDesignerTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ DesignerTheme { System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerTheme : System.Workflow.ComponentModel.Design.ActivityDesignerTheme" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący motyw projektanta dla projektanta działań.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> Zawiera ustawienia kompozycji dla projektanta działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> program i opcjonalnie zwalnia zarządzane zasoby.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activityDesigner.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> program i opcjonalnie zwalnia zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="activityDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> jeśli jest usuwany; <see langword="false" /> Jeśli<see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Trwa finalizowanie.</param>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> klasę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="protected virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="activityDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.DoDefaultAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślną akcję interfejsu użytkownika skojarzoną z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wykonać domyślną akcję interfejsu użytkownika skojarzoną z projektantem. Domyślne akcje interfejsu użytkownika mogą obejmować emitowanie metody skojarzonej ze zdarzeniem domyślnym w pliku znajdującym się obok kodu, gdy użytkownik kliknie dwukrotnie powierzchnię projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualResizing">
      <MemberSignature Language="C#" Value="protected internal virtual bool EnableVisualResizing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualResizing" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property EnableVisualResizing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool EnableVisualResizing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableVisualResizing : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy można zmienić rozmiar projektanta działań w niezależnym projektancie formularzy.</summary>
        <value><see langword="true" />Jeśli można zmienić rozmiar projektanta działań w <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />; w przeciwnym razie,. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiony w <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing%2A> klasie pochodnej `false`, zawsze zwraca wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="activityDesigner.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przesuwa widoczny obszar ekranu, aby zagwarantować widoczność określonego projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby przenieść widoczny obszar powierzchni projektanta, aby pokazać projektanta zainteresowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivityDesigner ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activityDesigner.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia obiektowi czyszczenie wszystkich zasobów deterministycznie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda czyści zasoby przez wywołanie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A>(`false`). Przesłoń <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A> , aby dostosować oczyszczanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionPoints (edges As DesignerEdges) As ReadOnlyCollection(Of ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ConnectionPoint ^&gt; ^ GetConnectionPoints(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionPoints : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;&#xA;override this.GetConnectionPoints : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;" Usage="activityDesigner.GetConnectionPoints edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">, <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> Na którym należy zebrać punkty połączenia.</param>
        <summary>Zwraca kolekcję punktów połączenia tylko do odczytu dla projektanta działań w określonym <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> Ogólna kolekcja tylko do odczytu, która jest używana jako punkty, w których Projektant działań może połączyć się z innymi projektantami działań.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie punkty połączenia są w logicznych współrzędnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnections">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetConnections (edges As DesignerEdges) As ReadOnlyCollection(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Drawing::Point&gt; ^ GetConnections(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="abstract member GetConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;&#xA;override this.GetConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;" Usage="activityDesigner.GetConnections edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges"><see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> Na którym mają być wyszukiwane punkty.</param>
        <summary>Zwraca kolekcję punktów, które są używane przez projektanta do połączeń.</summary>
        <returns>Kolekcja w trybie tylko do odczytu, która zawiera połączenia do użycia dla projektanta działań.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetPreviewImage (System.Drawing.Graphics compatibleGraphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetPreviewImage(class System.Drawing.Graphics compatibleGraphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviewImage (compatibleGraphics As Graphics) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetPreviewImage(System::Drawing::Graphics ^ compatibleGraphics);" />
      <MemberSignature Language="F#" Value="member this.GetPreviewImage : System.Drawing.Graphics -&gt; System.Drawing.Image" Usage="activityDesigner.GetPreviewImage compatibleGraphics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibleGraphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="compatibleGraphics"><see cref="T:System.Drawing.Graphics" /> Obiekt używany do rysowania obrazu.</param>
        <summary>Pobiera obraz projektanta działań na określonym <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Obiekt, który zawiera mapę bitową używaną jako obraz podglądu w operacjach przeciągania i upuszczania oraz <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> w okienku podglądu. <see cref="T:System.Drawing.Image" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootDesigner">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootDesigner (serviceProvider As IServiceProvider) As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::ActivityDesigner ^ GetRootDesigner(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetRootDesigner : IServiceProvider -&gt; System.Workflow.ComponentModel.Design.ActivityDesigner" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który implementuje <see cref="T:System.IServiceProvider" />.</param>
        <summary>Zwraca projektanta skojarzonego z powierzchnią projektową przepływu pracy.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Jest<see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> to host projektanta.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="activityDesigner.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Typ usługi do żądania.</param>
        <summary>Próbuje pobrać określony typ usługi z witryny trybu projektowania dla działania skojarzonego z projektantem.</summary>
        <returns>Obiekt implementujący żądaną usługę lub odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic), jeśli nie można rozpoznać usługi.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję symboli, za pomocą których ma zostać poddany Projektant.</summary>
        <value>Zawierający <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> symbole, które mają być wyświetlane w projektancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs%2A> do uzyskiwania dostępu do listy symboli projektanta w trybie tylko do odczytu. Te glify mogą służyć do graficznego reprezentowania składników <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> w środowisku graficznym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo&#xA;override this.HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo" Usage="activityDesigner.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Drawing.Point" /> Reprezentujący pojedynczą współrzędną x i y.</param>
        <summary>Pobiera informacje o ActivityDesigner w określonym punkcie na ekranie.</summary>
        <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> , który zawiera informacje <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> o w określonym punkcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.HitTestInfo>Wraz <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> z metodą kontrolki<xref:System.Workflow.ComponentModel.Design.ActivityDesigner> służy do określenia, która część kontrolki kliknięto. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> Zawiera współrzędne logiczne punktu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> w miejscu kliknięcia myszą. <xref:System.Workflow.ComponentModel.Design.HitTestInfo>  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A> Metoda<xref:System.Drawing.Point> odbiera, która zawiera współrzędne x i y.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Drawing::Image ^ Image {  public:&#xA;System::Drawing::Image ^ get(); protected:&#xA; void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Image" /> skojarzoną z projektantem.</summary>
        <value><see cref="T:System.Drawing.Image" /> Skojarzona z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest ustawiona <xref:System.Drawing.Image> na wartość do wyświetlenia. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A> Można to zrobić w czasie projektowania lub w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje ładowanie <xref:System.Drawing.Bitmap> obiektu z osadzonego zasobu. W tym przypadku `ToolboxImage` jest to ten sam obraz, który jest używany, gdy Klasa <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> bazowa rysuje niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość otaczających granic obrazu skojarzonego z projektantem we współrzędnych logicznych.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Obraz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> aby pobrać współrzędne dla prostokąta otaczającego obraz skojarzony z projektantem. Można użyć tych współrzędnych do rysowania łączników lub nakładania się grafiki.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> jak zastąpić właściwość. W tym przykładzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> jest obliczana przy użyciu granic <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>obiektu.  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.Initialize : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityDesigner.Initialize activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">, <see cref="T:System.Workflow.ComponentModel.Activity" /> Z którym ma zostać zainicjowany Projektant.</param>
        <summary>Inicjuje projektanta przy użyciu skojarzonego <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjacja ładuje projektanta z określonym działaniem. Projektant ładuje usługę działania, aktualizuje czasowniki skojarzone z działaniem i przypisuje domyślny tekst i obraz do projektanta.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zastąpić implementację klasy bazowej metody Initialize. Metoda w tym przykładzie <xref:System.Drawing.Bitmap> ładuje obiekt z osadzonego zasobu. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize%2A> Zasób jest używany, gdy klasa bazowa <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> rysuje niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>. `ToolboxImage` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A>  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unieważnia projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj unieważnienia, aby spowodować odświeżenie projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="activityDesigner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj unieważnienia, aby spowodować odświeżenie projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="activityDesigner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Element <see cref="T:System.Drawing.Rectangle" /> określający obszar w przepływie pracy do unieważnienia.</param>
        <summary>Unieważnia określony prostokąt w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj unieważnienia, aby spowodować odświeżenie określonego prostokąta w projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InvokingDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia projektanta działania, które wywołuje działanie skojarzone z bieżącym projektantem działań.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Do wywołania bieżącego projektanta działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie zastąpiona w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner%2A> , operacja get zwraca odwołanie o wartości`Nothing` null (w Visual Basic), a operacja Set <xref:System.NotSupportedException>zgłasza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Podjęto próbę wykonania operacji na <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />zestawie.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommentedActivity">
      <MemberSignature Language="C#" Value="public static bool IsCommentedActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCommentedActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCommentedActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member IsCommentedActivity : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><see cref="T:System.Workflow.ComponentModel.Activity" /> W bieżącym projektancie działań.</param>
        <summary>Zwraca wartość wskazującą, czy bieżące działanie projektanta jest oznaczone jako komentarz lub znajduje się w działaniu z komentarzem.</summary>
        <returns><see langword="true" />Jeśli działanie jest oznaczone jako komentarz lub jest wewnątrz działania z komentarzem; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocked : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie skojarzone z projektantem może być modyfikowane.</summary>
        <value><see langword="true" />Jeśli działanie skojarzone z projektantem może być modyfikowane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked%2A>Określa, czy można modyfikować działanie. Ma to wpływ na operacje przeciągania, zmiany właściwości i zmiany położenia działania w oknie projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimarySelection">
      <MemberSignature Language="C#" Value="public bool IsPrimarySelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimarySelection" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimarySelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimarySelection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimarySelection : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie skojarzone z projektantem jest wyborem podstawowym.</summary>
        <value><see langword="true" />Jeśli działanie skojarzone z projektantem jest wyborem głównym; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection%2A> , aby mieć wpływ na wyróżnianie lub aktualizowanie arkuszy właściwości w graficznej reprezentacji przepływu pracy. IsPrimarySelection jest przydatne w przypadku wybrania wielu działań, ponieważ IsPrimarySelection będzie wskazywać punkt początkowy wyboru wielokrotnego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRootDesigner : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy projektant jest projektantem głównym.</summary>
        <value><see langword="true" />Jeśli projektant jest projektantem głównym; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektant główny nie będzie miał żadnych projektantów jako jego elementu nadrzędnego. Projektant główny działa jako projektant dla całego przepływu pracy, ponieważ wszystkie składniki przepływu pracy będą elementami podrzędnymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest zaznaczona aktywność skojarzona z projektantem.</summary>
        <value><see langword="true" />Jeśli wybrano działanie skojarzone z projektantem; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected%2A> Użyj właściwości dla operacji, takich jak wycinanie i wklejanie, lub aktualizowanie właściwości działania po wprowadzeniu zmian w oknie właściwości, na przykład.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedActivityType">
      <MemberSignature Language="C#" Value="protected virtual bool IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSupportedActivityType (activityType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSupportedActivityType(Type ^ activityType);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedActivityType : Type -&gt; bool&#xA;override this.IsSupportedActivityType : Type -&gt; bool" Usage="activityDesigner.IsSupportedActivityType activityType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">Typ obsługiwanego działania.</param>
        <summary>Zwraca wartość wskazującą, czy określony typ działania jest obsługiwany, jeśli Projektant działań jest projektantem głównym.</summary>
        <returns><see langword="true" />Jeśli jest obsługiwany; w przeciwnym razie <see langword="false" />. <paramref name="activityType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType%2A>jest wywoływana tylko wtedy, gdy Projektant działań jest projektantem głównym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aktywność skojarzona z projektantem jest widoczna w przepływie pracy.</summary>
        <value><see langword="true" />Jeśli działanie skojarzone z projektantem jest widoczne w przepływie pracy; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> , aby określić, czy działanie jest widoczne w projektancie. W przypadku dużych przepływów pracy można zapewnić mechanizm wyszukiwania i zlokalizować, zaznaczyć i przenieść do obszaru możliwego do wyświetlenia działania aktualnie niewidocznego dla użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : System.IO.BinaryReader -&gt; unit&#xA;override this.LoadViewState : System.IO.BinaryReader -&gt; unit" Usage="activityDesigner.LoadViewState reader" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.IO.BinaryReader" /> Używany do przywracania stanu projektanta.</param>
        <summary>Ładuje stan widoku projektanta ze strumienia binarnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizację projektanta we współrzędnych logicznych.</summary>
        <value>Lokalizacja projektanta we współrzędnych logicznych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Location%2A> , aby ustawić projektanta na powierzchni projektowej w czasie projektowania lub w czasie wykonywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageFilters : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję komunikatów w trybie tylko do odczytu, które są skojarzone z projektantem działań.</summary>
        <value>Kolekcja tylko do odczytu obejmująca wszystkie standardowe filtry komunikatów do skojarzenia z projektantem działań. <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalny rozmiar projektanta działań.</summary>
        <value>Minimalny rozmiar projektanta działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize%2A>zależy od ustawień rozmiaru dostępnych za pomocą <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit&#xA;override this.OnActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit" Usage="activityDesigner.OnActivityChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy działanie, które jest skojarzone ze zmianami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e`zawiera dane o zmianach wprowadzonych <xref:System.Workflow.ComponentModel.Activity>w programie. Ta metoda służy do aktualizowania stanu projektanta i interfejsu użytkownika wyświetlanego w Projektancie przepływu pracy, gdy użytkownik wprowadza zmiany w działaniu w czasie projektowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit&#xA;override this.OnBeginResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit" Usage="activityDesigner.OnBeginResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik rozpocznie zmianę rozmiaru projektanta działań, gdy projektant znajduje się <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />w.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Programu można użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing%2A> do przeprowadzenia dowolnego przetwarzania w czasie projektowania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> gdy użytkownik rozpocznie zmianę rozmiarów projektanta działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnConnected (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnected(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnected (source As ConnectionPoint, target As ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnected(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberSignature Language="F#" Value="abstract member OnConnected : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; unit&#xA;override this.OnConnected : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; unit" Usage="activityDesigner.OnConnected (source, target)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">Źródło ConnectionPoint w bieżącym projektancie działań.</param>
        <param name="target">Docelowy ConnectionPoint w projektancie działań, z którym ma zostać nawiązane połączenie.</param>
        <summary>Powiadamia o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> ustanowieniu połączenia między dwoma punktami połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected%2A>nie ma zachowania domyślnego. Należy przesłonić tę metodę w klasie, która pochodzi <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> od, aby zapewnić przetwarzanie, gdy nastąpi połączenie między dwoma projektantami.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje po zakończeniu operacji przeciągania i upuszczania wewnątrz granic projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje, gdy operacja przeciągania i upuszczania zostanie zakończona w granicach projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy operacja przeciągania i upuszczania jest w toku, a wskaźnik przechodzi do granicy projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> Zdarzenie jest wywoływane, gdy mysz zostanie przeciągnięta do projektanta.  
  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
 Śledzone są zmiany położenia wskaźnika, stanu klawiatury i stanu komentarza myszy.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość jest `DragAction.Drop`równa, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych. na przykład, zobacz komentarz dotyczący danych, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : unit -&gt; unit&#xA;override this.OnDragLeave : unit -&gt; unit" Usage="activityDesigner.OnDragLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy operacja przeciągania i upuszczania jest w toku, a wskaźnik opuszcza granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> Zdarzenie jest zgłaszane, gdy użytkownik przeciągnie wskaźnik poza projektanta lub użytkownik anuluje bieżącą operację przeciągania i upuszczania.  
  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
 Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy operacja przeciągania i upuszczania jest w toku, a wskaźnik znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> Zdarzenie jest zgłaszane, gdy użytkownik przeciągnie wskaźnik myszy nad projektantem.  
  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnEndResizing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndResizing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndResizing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndResizing();" />
      <MemberSignature Language="F#" Value="abstract member OnEndResizing : unit -&gt; unit&#xA;override this.OnEndResizing : unit -&gt; unit" Usage="activityDesigner.OnEndResizing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowDesignerMessageSink.OnEndResizing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik zakończy zmianę rozmiarów projektanta działań, gdy projektant znajduje się <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />w.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteDesignerAction">
      <MemberSignature Language="C#" Value="protected internal virtual void OnExecuteDesignerAction (System.Workflow.ComponentModel.Design.DesignerAction designerAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnExecuteDesignerAction(class System.Workflow.ComponentModel.Design.DesignerAction designerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnExecuteDesignerAction(System::Workflow::ComponentModel::Design::DesignerAction ^ designerAction);" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteDesignerAction : System.Workflow.ComponentModel.Design.DesignerAction -&gt; unit&#xA;override this.OnExecuteDesignerAction : System.Workflow.ComponentModel.Design.DesignerAction -&gt; unit" Usage="activityDesigner.OnExecuteDesignerAction designerAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerAction" Type="System.Workflow.ComponentModel.Design.DesignerAction" />
      </Parameters>
      <Docs>
        <param name="designerAction"><see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> Skojarzona z błędem konfiguracji.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik kliknie opcję błędy konfiguracji skojarzone z projektantem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designerAction" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="activityDesigner.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Aktualizuje podpowiedzi wizualne dla opinii dostarczonych użytkownikowi podczas wykonywania operacji przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="activityDesigner.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje po naciśnięciu klawisza, gdy projektant ma fokus klawiatury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="activityDesigner.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje po wydaniu klucza, gdy projektant ma fokus klawiatury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit&#xA;override this.OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit" Usage="activityDesigner.OnLayoutPosition e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik zmienia pozycję podpowiedzi wizualnych lub projektantów działań podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy zastąpić tę metodę, aby wykonać dowolne przetwarzanie układu wymagane, gdy użytkownik zmienia położenie elementów na powierzchni projektanta aktywności w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size&#xA;override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="activityDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zwraca rozmiar wizualizacji wizualnych lub podrzędnych projektantów działań na <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns>Nowe ustawienia rozmiaru dla wizualizacji wizualnych lub dla projektantów działań podrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize%2A> jak zastąpić metodę. W tym przykładzie rozmiar `Activity` pozostaje statyczny z wysokością i szerokością 64.  
  
 [!code-csharp[WF_Samples#77](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#77)]
 [!code-vb[WF_Samples#77](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : unit -&gt; unit&#xA;override this.OnMouseCaptureChanged : unit -&gt; unit" Usage="activityDesigner.OnMouseCaptureChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy wskaźnik myszy zostanie zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseCaptureChanged występuje, gdy użytkownik wybierze kilka obiektów w projektancie, przeciągając wskaźnik myszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje po dwukrotnym kliknięciu przycisku myszy w projektancie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseDoubleClick występuje po dwukrotnym kliknięciu przycisku myszy nad projektantem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje po naciśnięciu przycisku myszy, gdy wskaźnik znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (System.Drawing.Point initialDragPoint, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(valuetype System.Drawing.Point initialDragPoint, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (initialDragPoint As Point, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(System::Drawing::Point initialDragPoint, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragBegin : System.Drawing.Point * System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDragBegin : System.Drawing.Point * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDragBegin (initialDragPoint, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialDragPoint" Type="System.Drawing.Point" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="initialDragPoint"><see cref="T:System.Drawing.Point" /> Reprezentujący pojedynczą współrzędną x i y.</param>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje, gdy użytkownik rozpocznie przeciąganie myszy do projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragEnd : unit -&gt; unit&#xA;override this.OnMouseDragEnd : unit -&gt; unit" Usage="activityDesigner.OnMouseDragEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy użytkownik zatrzyma przeciąganie myszy przez projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDragMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDragMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje na każdym przesunięciu myszy, gdy użytkownik przeciągnie wskaźnik myszy nad projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje, gdy mysz najpierw przejdzie do granicy projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseHover : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje, gdy wskaźnik znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : unit -&gt; unit&#xA;override this.OnMouseLeave : unit -&gt; unit" Usage="activityDesigner.OnMouseLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Występuje, gdy wskaźnik opuszcza granice projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje, gdy wskaźnik zostanie przenoszony w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Występuje po wydaniu przycisku myszy, gdy wskaźnik znajduje się w granicach projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="activityDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Rysuje reprezentację wizualną działania w czasie projektowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono niestandardowe <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> , które deleguje odpowiedzialność za malowanie do klasy bazowej lub rysuje na podstawie wartości logicznej. Jeśli `useBasePaint` ma wartość false, działanie niestandardowe zostanie narysowane przy użyciu różnych metod <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint> klasy.  
  
 [!code-csharp[WF_Samples#78](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#78)]
 [!code-vb[WF_Samples#78](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnProcessMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnProcessMessage (System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProcessMessage(valuetype System.Windows.Forms.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProcessMessage(System::Windows::Forms::Message message);" />
      <MemberSignature Language="F#" Value="abstract member OnProcessMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnProcessMessage : System.Windows.Forms.Message -&gt; unit" Usage="activityDesigner.OnProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="message">Win32 <see cref="T:System.Windows.Forms.Message" /> zawierający dane zdarzenia.</param>
        <summary>Umożliwia projektantowi przetwarzanie nieprzetworzonych komunikatów Win32.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="activityDesigner.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Określa, czy operacja przeciągania powinna być kontynuowana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej opisano, jak i kiedy są zgłaszane zdarzenia związane z operacjami przeciągania i upuszczania.  
  
 Jeśli projektant jest prawidłowym obiektem docelowym upuszczania, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> zdarzenie jest wywoływane z określonym efektem przeciągania i upuszczania. Aby zapoznać się z listą efektów przeciągania i upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
-   Zmiany położenia wskaźnika, stanu klawiatury i stanu przycisku myszy są śledzone.  
  
-   Jeśli użytkownik przejdzie poza granice projektanta, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> zdarzenie jest zgłaszane.  
  
-   Jeśli mysz przechodzi przez inny Projektant, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> zostanie podniesiony dla tego projektanta.  
  
-   Jeśli mysz jest przenoszona, ale pozostaje w tym samym projektancie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest zgłaszane.  
  
-   W przypadku zmiany stanu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> przycisku klawiatury lub myszy zdarzenie jest wywoływane i określa, czy kontynuować przeciąganie, porzucić dane, czy anulować operację na podstawie wartości właściwości Akcja zdarzenia. <xref:System.Windows.Forms.QueryContinueDragEventArgs>  
  
 Jeśli wartość to `DragAction.Continue` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> , zdarzenie jest wywoływane w celu <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> kontynuowania operacji, a zdarzenie jest zgłaszane z nowym efektem, dzięki czemu można ustawić odpowiednie opinie wizualne. Aby uzyskać listę prawidłowych efektów upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> Wyliczenie.  
  
> [!NOTE]
>  Zdarzenia i są sparowane, dzięki czemu wskaźnik myszy porusza się nad elementem docelowym upuszczania, a <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> użytkownik jest dostarczany z najbardziej aktualnymi opiniami dotyczącymi pozycji myszy. <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>  
  
 Jeśli wartość to `DragAction.Drop`, wartość efektu upuszczania jest zwracana do źródła, dzięki czemu aplikacja źródłowa może wykonać odpowiednią operację na danych źródłowych, na przykład wyciąć dane, jeśli operacja była przenoszona.  
  
 Jeśli wartość to `DragAction.Cancel` <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> , zdarzenie jest zgłaszane.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit&#xA;override this.OnResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit" Usage="activityDesigner.OnResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> gdy użytkownik zmienia jego rozmiar w czasie projektowania. Metoda jest wywoływana tylko wtedy, gdy Projektant działań jest elementem podrzędnym <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e`Określa nowe ograniczenia, które są używane dla <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>zmiany rozmiaru. <xref:System.Workflow.ComponentModel.Design.DesignerEdges>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollBar sender, int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollBar sender, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (sender As ScrollBar, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollBar ^ sender, int value);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollBar * int -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollBar * int -&gt; unit" Usage="activityDesigner.OnScroll (sender, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Windows.Forms.ScrollBar" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Windows.Forms.ScrollBar" /> Na którym użytkownik zmienił pozycję.</param>
        <param name="value">Nowa wartość pozycji przewijania.</param>
        <summary>Powiadamia o <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> zmianie położenia przewijania przez użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll%2A>Nie udostępniaj zachowania domyślnego. Należy je zastąpić w klasie, która pochodzi od <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> , aby zapewnić logikę przetwarzania po zmianie położenia przewijania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowSmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnShowSmartTagVerbs (System.Drawing.Point smartTagPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowSmartTagVerbs(valuetype System.Drawing.Point smartTagPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowSmartTagVerbs (smartTagPoint As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowSmartTagVerbs(System::Drawing::Point smartTagPoint);" />
      <MemberSignature Language="F#" Value="abstract member OnShowSmartTagVerbs : System.Drawing.Point -&gt; unit&#xA;override this.OnShowSmartTagVerbs : System.Drawing.Point -&gt; unit" Usage="activityDesigner.OnShowSmartTagVerbs smartTagPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartTagPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="smartTagPoint">Element <see cref="T:System.Drawing.Point" /> określający lokalizację, w której ma zostać wyświetlony tag inteligentny.</param>
        <summary>Wyświetla czasowniki projektanta skojarzone z tagiem inteligentnym w określonym punkcie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSmartTagVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSmartTagVisibilityChanged(bool visible);" />
      <MemberSignature Language="F#" Value="abstract member OnSmartTagVisibilityChanged : bool -&gt; unit&#xA;override this.OnSmartTagVisibilityChanged : bool -&gt; unit" Usage="activityDesigner.OnSmartTagVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible"><see langword="true" />Aby wskazać, że powinien być wyświetlany tag inteligentny; <see langword="false" /> , aby wskazać, że tag inteligentny ma być ukryty.</param>
        <summary>Powiadamia, <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> czy tag inteligentny powinien być wyświetlany czy ukryty.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThemeChange (newTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ newTheme);" />
      <MemberSignature Language="F#" Value="abstract member OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit&#xA;override this.OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit" Usage="activityDesigner.OnThemeChange newTheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="newTheme"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> Zawierający dane zdarzenia.</param>
        <summary>Powiadamia projektanta o zmianie skojarzonego motywu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ ParentDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera projektanta nadrzędnego istniejącego projektanta.</summary>
        <value>Projektant nadrzędny istniejącego projektanta. <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Jeśli jest projektantem głównym, <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> zwrócona wartość to; w przeciwnym razie będzie to element nadrzędny. <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner%2A> aby przenieść drzewo obiektów zagnieżdżonych <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> lub znaleźć projektanta głównego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentView">
      <MemberSignature Language="C#" Value="protected internal System.Workflow.ComponentModel.Design.WorkflowView ParentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowView ParentView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ParentView As WorkflowView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Workflow::ComponentModel::Design::WorkflowView ^ ParentView { System::Workflow::ComponentModel::Design::WorkflowView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentView : System.Workflow.ComponentModel.Design.WorkflowView" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera widok przepływu pracy zawierający bieżącą projektanta działań.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> Zawiera bieżącą projektanta działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="protected void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="activityDesigner.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje układ projektanta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToLogical (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToLogical(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToLogical(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="activityDesigner.PointToLogical point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> , który zawiera współrzędne do przekształcenia.</param>
        <summary>Przekształca punkt z układu współrzędnych ekranu do systemu współrzędnych projektanta działań.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> , który zawiera przekształcone współrzędne x i y.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToScreen (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="activityDesigner.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> , który zawiera współrzędne do przekształcenia.</param>
        <summary>Przekształca punkt z systemu współrzędnych projektanta aktywności do układu współrzędnych ekranu.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> , który zawiera przekształcone współrzędne x i y.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Collections.IDictionary" /> Zawiera wartości typeid atrybutów.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu atrybutów, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy zdarzeń klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu zdarzeń, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy właściwości klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu właściwości, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Collections.IDictionary" /> Zawiera wartości typeid atrybutów.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu atrybutów, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy zdarzeń klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu zdarzeń, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy właściwości klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu właściwości, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.RectangleToLogical : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="activityDesigner.RectangleToLogical rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> , który opisuje współrzędne do przekształcenia.</param>
        <summary>Przekształca prostokąt z układu współrzędnych ekranu do systemu współrzędnych projektanta działań.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który opisuje przekształcone współrzędne.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="activityDesigner.RectangleToScreen rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> , który opisuje współrzędne do przekształcenia.</param>
        <summary>Przekształca prostokąt z systemu współrzędnych projektanta aktywności do układu współrzędnych ekranu.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który opisuje przekształcone współrzędne.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual void RefreshDesignerActions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RefreshDesignerActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RefreshDesignerActions ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RefreshDesignerActions();" />
      <MemberSignature Language="F#" Value="abstract member RefreshDesignerActions : unit -&gt; unit&#xA;override this.RefreshDesignerActions : unit -&gt; unit" Usage="activityDesigner.RefreshDesignerActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odświeża błędy konfiguracji skojarzone z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Akcje projektanta reprezentują możliwe błędy konfiguracji związane z projektantem. Wywołanie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions%2A> aktualizacji tych błędów z uwzględnieniem najnowszych zmian.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerVerbs">
      <MemberSignature Language="C#" Value="protected void RefreshDesignerVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RefreshDesignerVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RefreshDesignerVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RefreshDesignerVerbs();" />
      <MemberSignature Language="F#" Value="member this.RefreshDesignerVerbs : unit -&gt; unit" Usage="activityDesigner.RefreshDesignerVerbs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odświeża czasowniki projektanta działań skojarzone z projektantem, wywołując procedurę obsługi stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zlecenia projektanta są wyświetlane w menu kontekstowym i na paskach menu. Wywołanie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs%2A> spowoduje odświeżenie menu w celu wyświetlenia wszystkich ostatnich zmian.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : System.IO.BinaryWriter -&gt; unit&#xA;override this.SaveViewState : System.IO.BinaryWriter -&gt; unit" Usage="activityDesigner.SaveViewState writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.IO.BinaryWriter" /> W którym jest przechowywany stan widoku.</param>
        <summary>Zapisuje stan widoku projektanta w strumieniu binarnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest akumulacją wartości właściwości projektanta. Gdy stan widoku jest zapisywany w strumieniu, wartości i ustawienia projektanta można przywrócić przy użyciu polecenia <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla podaną poradę informacyjną <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />dla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiony w <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> klasie pochodnej <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip%2A?displayProperty=nameWithType> , program używa logiki, aby wyświetlić porady dotyczące informacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ infoTip);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string -&gt; unit" Usage="activityDesigner.ShowInfoTip infoTip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="infoTip">Tekst, który ma być wyświetlany w poradach.</param>
        <summary>Pokazuje podaną wskazówkę dotyczącą informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> do wyświetlania prostokąta tekstu, który może służyć do wyświetlania rozszerzonych informacji o projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string title, string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string title, string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (title As String, infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ infoTip);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string * string -&gt; unit" Usage="activityDesigner.ShowInfoTip (title, infoTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">Ciąg zawierający tytuł porady dotyczącej informacji.</param>
        <param name="infoTip">Ciąg, który zawiera tekst etykietki informacji do wyświetlenia.</param>
        <summary>Wyświetla Porada informacji dla elementu <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> z określonym tytułem i tekstem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceTip">
      <MemberSignature Language="C#" Value="protected void ShowInPlaceTip (string infoTip, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInPlaceTip(string infoTip, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInPlaceTip(System::String ^ infoTip, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.ShowInPlaceTip : string * System.Drawing.Rectangle -&gt; unit" Usage="activityDesigner.ShowInPlaceTip (infoTip, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="infoTip">Ciąg, który zawiera etykietkę narzędzia do wyświetlenia.</param>
        <param name="rectangle">Określa <see cref="T:System.Drawing.Rectangle" /> lokalizację, w której ma zostać wyświetlona etykietka narzędzia.</param>
        <summary>Wyświetla etykietkę określonego narzędzia w określonej lokalizacji prostokąta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected virtual bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowSmartTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowSmartTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowSmartTag : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy działanie powinno wyświetlać tag inteligentny.</summary>
        <value><see langword="true" />Jeśli działanie powinno zawierać tag inteligentny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> , aby określić, czy ma być wyświetlany tag inteligentny, gdy działanie ma fokus w projektancie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <value>Reprezentujący obszar <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />. <see cref="T:System.Drawing.Size" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj rozmiaru, aby dostosować wysokość i szerokość projektanta działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle SmartTagRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt, w którym ma być wyświetlany tag inteligentny.</summary>
        <value>Prostokąt, w którym powinien zostać wyświetlony tag inteligentny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj razem z <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> , aby wyświetlić inteligentny tag dostępnych akcji projektanta w lokalizacji określonej przez <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagVerbs As ReadOnlyCollection(Of ActivityDesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ SmartTagVerbs { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagVerbs : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję akcji projektanta służących tylko do odczytu, które mają być skojarzone z tagiem inteligentnym w projektancie działań.</summary>
        <value>Kolekcja tylko do odczytu, która ma zostać skojarzona z tagiem inteligentnym projektanta aktywności. <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Component">
      <MemberSignature Language="C#" Value="System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Component As IComponent Implements IDesigner.Component" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::IComponent ^ System::ComponentModel::Design::IDesigner::Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IDesigner.Component" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IDesigner.Component</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera składnik podstawowy, z którym jest skojarzony Projektant działań.</summary>
        <value><see cref="T:System.ComponentModel.IComponent" /> Z którym jest skojarzony Projektant działań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IDesigner%23Component>reprezentuje działanie, które Projektant działań projektuje na powierzchni projektowej przepływu pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <MemberSignature Language="C#" Value="void IDesigner.DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Sub DoDefaultAction () Implements IDesigner.DoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.DoDefaultAction() = System::ComponentModel::Design::IDesigner::DoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.DoDefaultAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje domyślną akcję skojarzoną z projektantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction%2A>powoduje, że akcja domyślna skojarzona z projektantem ma zostać wykonana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Initialize">
      <MemberSignature Language="C#" Value="void IDesigner.Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (component As IComponent) Implements IDesigner.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.Initialize(System::ComponentModel::IComponent ^ component) = System::ComponentModel::Design::IDesigner::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">IComponent, aby zainicjować projektanta przy użyciu programu.</param>
        <summary>Inicjuje projektanta ze skojarzonym działaniem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Verbs">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Verbs As DesignerVerbCollection Implements IDesigner.Verbs" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::DesignerVerbCollection ^ System::ComponentModel::Design::IDesigner::Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IDesigner.Verbs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zlecenia czasu projektowania powiązane z projektantem działań.</summary>
        <value>Zlecenia czasu projektowania skojarzone z projektantem działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Collections.IDictionary" /> , Który zawiera parametry typeid klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu atrybutów, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy zdarzeń klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu zdarzeń, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy właściwości klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi zmianę lub usunięcie elementów z zestawu właściwości, które uwidacznia za pośrednictwem klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><see cref="T:System.Collections.IDictionary" /> , Który zawiera parametry typeid klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu atrybutów, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy zdarzeń klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu zdarzeń, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.Collections.IDictionary" /> Zawiera nazwy właściwości klasy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia projektantowi Dodawanie elementów do zestawu właściwości, które uwidacznia za pomocą klasy TypeDescriptor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.GetView">
      <MemberSignature Language="C#" Value="object IRootDesigner.GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.IRootDesigner.GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (technology As ViewTechnology) As Object Implements IRootDesigner.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.IRootDesigner.GetView(System::ComponentModel::Design::ViewTechnology technology) = System::ComponentModel::Design::IRootDesigner::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> , dla którego ma zostać zwrócony obiekt widoku.</param>
        <summary>Zwraca obiekt widoku dla określonej technologii widoku.</summary>
        <returns>Obiekt, który reprezentuje widok dla tego projektanta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> gdy jest rzutowane <xref:System.ComponentModel.Design.IRootDesigner> do interfejsu.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportedTechnologies As ViewTechnology() Implements IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ System::ComponentModel::Design::IRootDesigner::SupportedTechnologies { cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę technologii, które Projektant działań może obsłużyć na potrzeby wyświetlania.</summary>
        <value>Tablica obsługiwanych <see cref="T:System.ComponentModel.Design.ViewTechnology" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie zastąpiona w klasie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IRootDesigner%23SupportedTechnologies> pochodnej, zwraca tablicę zawierającą jeden <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType>element członkowski, która zawiera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.GetToolSupported">
      <MemberSignature Language="C#" Value="bool IToolboxUser.GetToolSupported (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Drawing.Design.IToolboxUser.GetToolSupported(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Drawing.Design.IToolboxUser.GetToolSupported(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::GetToolSupported;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem"><see cref="T:System.Drawing.Design.ToolboxItem" /> Aby sprawdzić pomoc techniczną.</param>
        <summary>Określa, czy określony element przybornika jest obsługiwany przez bieżącego projektanta działań.</summary>
        <returns><see langword="true" />Jeśli narzędzie jest obsługiwane przez Przybornik i można je włączyć; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.ToolPicked">
      <MemberSignature Language="C#" Value="void IToolboxUser.ToolPicked (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Drawing.Design.IToolboxUser.ToolPicked(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Drawing.Design.IToolboxUser.ToolPicked(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::ToolPicked;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem"><see cref="T:System.Drawing.Design.ToolboxItem" /> Do wybrania.</param>
        <summary>Wybiera określony element przybornika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (reader As BinaryReader) Implements IPersistUIState.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System::IO::BinaryReader ^ reader) = System::Workflow::ComponentModel::Design::IPersistUIState::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">W <see cref="T:System.IO.BinaryReader" /> celu załadowania stanu widoku z.</param>
        <summary>Przywraca stan widoku ze strumienia binarnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub SaveViewState (writer As BinaryWriter) Implements IPersistUIState.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System::IO::BinaryWriter ^ writer) = System::Workflow::ComponentModel::Design::IPersistUIState::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.IO.BinaryWriter" /> , aby zapisać stan widoku.</param>
        <summary>Zapisuje stan widoku w strumieniu binarnym.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value=" Property InvokingDesigner As CompositeActivityDesigner Implements IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> żądany czas inicjalizacji projektanta działań.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Zażądano zainicjowania projektanta działań.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType">
      <MemberSignature Language="C#" Value="bool IWorkflowRootDesigner.IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function IsSupportedActivityType (activityType As Type) As Boolean Implements IWorkflowRootDesigner.IsSupportedActivityType" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(Type ^ activityType) = System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::IsSupportedActivityType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType"><see cref="T:System.Type" /> Działanie do sprawdzenia obsługi w projektancie działań.</param>
        <summary>Zwraca wartość wskazującą, czy określony typ jest obsługiwany w bieżącym <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
        <returns><see langword="true" />Jeśli typ jest obsługiwany przez bieżącego projektanta przepływu pracy; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsSupportedActivityType jest wywoływana tylko wtedy, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> gdy jest projektantem głównym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter) Implements IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie filtry komunikatów skojarzone z projektantem działań.</summary>
        <value>Kolekcja <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> tylko do odczytu zawierająca wszystkie filtry komunikatów skojarzonych z głównym projektantem przepływu pracy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <MemberSignature Language="C#" Value="bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsLayoutPersistence As Boolean Implements IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::SupportsLayoutPersistence { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy rzeczywisty Projektant główny przepływu pracy obsługuje trwałość układu.</summary>
        <value><see langword="true" />Jeśli projektant obsługuje trwałość układu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::String ^ Text {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który ma zostać skojarzony z projektantem.</summary>
        <value>Tekst, który ma zostać skojarzony z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy do kojarzenia ciągu tekstowego z projektantem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.TextRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość prostokąta tekstowego we współrzędnych logicznych.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> , który zawiera tekst skojarzony z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy do określania lokalizacji projektanta, gdzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Text%2A> będzie wyświetlana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> jak zastąpić właściwość. W tym przykładzie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> jest obliczany przy użyciu granic <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> , a także <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A>lokalizacji i rozmiaru.  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Verbs As ActivityDesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ Verbs { System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zleceń do skojarzenia z projektantem.</summary>
        <value>Kolekcja zleceń do skojarzenia z projektantem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody czasowniki, aby określić czasowniki do wyświetlenia w menu kontekstowym.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A> jak zastąpić właściwość, aby wstawić niestandardowe akcje zlecenia dla elementu. <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner> `OnAddParallelBranch`Tworzy nową <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> nazwę`"Add New Parallel Branch"` i kojarzy procedurę obsługi zdarzeń o nazwie. `CreateActivityVerbs` Po kliknięciu zlecenia w Projektancie przepływu pracy jest wywoływana procedura obsługi zdarzeń.  
  
 [!code-csharp[WF_Samples#73](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
