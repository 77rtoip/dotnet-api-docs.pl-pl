<Type Name="WorkflowDesignerLoader" FullName="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2f87611929c5d1523a85857812788c4feafe07b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69442191" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowDesignerLoader&#xA;Inherits BasicDesignerLoader" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader" />
  <TypeSignature Language="F#" Value="type WorkflowDesignerLoader = class&#xA;    inherit BasicDesignerLoader" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia wspólną funkcję modułu ładującego projektanta, która może służyć do implementowania niestandardowych modułów ładowania projektanta przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Klasy modułów ładujących projektanta są używane do ładowania projektanta i zapisywania zmian w stanie projektanta, gdy użytkownik nakazuje. <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> Klasę można zaimplementować do obsługi niestandardowego ładowania składników projektanta przepływu pracy i projektanta przepływu pracy. Program ładujący projektanta przepływu pracy jest również odpowiedzialny za zapisanie zmian w otwartym dokumencie z powrotem do magazynu, który jest używany podczas <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> ładowania dokumentu po wywołaniu metody.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />z, należy zastąpić następujące elementy członkowskie: <see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> i <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> obiektu. W tym przypadku `WorkflowLoader` Klasa pochodzi od <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>. Gdy jest tworzony <xref:System.ComponentModel.Design.DesignSurface> , jest również <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> tworzony i `BeginLoad` kojarzony z użyciem metody. <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>  
  
 [!code-csharp[WF_Samples#47](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#47)]
 [!code-vb[WF_Samples#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActivityToDesigner">
      <MemberSignature Language="C#" Value="public void AddActivityToDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivityToDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddActivityToDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.AddActivityToDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.AddActivityToDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><see cref="T:System.Workflow.ComponentModel.Activity" />do dodania.</param>
        <summary>Dodaje działanie do hosta projektanta po dodaniu go do kolekcji działań nadrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.Activities.CodeActivity> jak dodać do projektanta. Przed dodaniem działania do projektanta przy użyciu <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> metody, jest ono najpierw dodawane do kolekcji działania głównego działania w ramach przepływu pracy.  
  
 [!code-csharp[WF_Samples#55](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#55)]
 [!code-vb[WF_Samples#55](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="workflowDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>Zwalnia wszystkie usługi używane przez hosta projektanta, ale nie zapisuje oczekujących zmian w module ładującym projektanta. Jeśli chcesz zapisać wszystkie oczekujące zmiany przed zwolnieniem wszystkich zasobów, wywołaj <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> przed wywołaniem <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje implementację <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> metody. W tej implementacji różne usługi, które zostały dodane do obiektu LoaderHost, są usuwane w ramach przygotowania do zamykania aplikacji. Ten przykład pochodzi z przykładu zestawu SDK projektanta profilu śledzenia. Aby uzyskać więcej informacji, zobacz [przykładowy Projektant profilów śledzenia](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).  
  
 [!code-csharp[WF_Samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[WF_Samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public abstract string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera nazwę pliku projektanta do załadowania.</summary>
        <value>Ciąg, który zawiera nazwę pliku projektanta do załadowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zastąpić <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A> właściwość w celu zwrócenia ścieżki aktualnie załadowanego pliku przepływu pracy używanego <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>przez.  
  
 [!code-csharp[WF_Samples#32](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#32)]
 [!code-vb[WF_Samples#32](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="workflowDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje oczekujące zmiany w lokalizacji, z której został załadowany Projektant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób przesłania <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> metody serializacji przepływu pracy <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>przy użyciu. W tym przykładzie zastąpione <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> Delegaty <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> do metody zdefiniowanej w <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> klasie pochodnej.  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReload">
      <MemberSignature Language="C#" Value="public virtual void ForceReload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceReload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceReload();" />
      <MemberSignature Language="F#" Value="abstract member ForceReload : unit -&gt; unit&#xA;override this.ForceReload : unit -&gt; unit" Usage="workflowDesignerLoader.ForceReload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> powoduje ponowne załadowanie projektanta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileReader">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextReader GetFileReader (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetFileReader(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileReader (filePath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextReader ^ GetFileReader(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileReader : string -&gt; System.IO.TextReader" Usage="workflowDesignerLoader.GetFileReader filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Ciąg, który zawiera ścieżkę do pliku, z którego ma zostać odczytany.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera obiekt, <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> który używa do odczytu z określonego pliku.</summary>
        <returns>A <see cref="T:System.IO.TextReader" /> , aby odczytać określony plik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć i zwrócić `TextReader` obiekt <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> po wywołaniu przeciążonej metody.  
  
 [!code-csharp[WF_Samples#33](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#33)]
 [!code-vb[WF_Samples#33](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileWriter">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextWriter GetFileWriter (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextWriter GetFileWriter(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileWriter (filePath As String) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextWriter ^ GetFileWriter(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileWriter : string -&gt; System.IO.TextWriter" Usage="workflowDesignerLoader.GetFileWriter filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Ciąg, który zawiera ścieżkę do pliku do zapisu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera obiekt, którego <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> używa do zapisu w określonym pliku.</summary>
        <returns>A <see cref="T:System.IO.TextWriter" /> do zapisu w pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład pokazuje, jak utworzyć i zwrócić `TextWriter` obiekt <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> po wywołaniu przeciążonej metody.  
  
 [!code-csharp[WF_Samples#34](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#34)]
 [!code-vb[WF_Samples#34](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDebugMode">
      <MemberSignature Language="C#" Value="public virtual bool InDebugMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDebugMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InDebugMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InDebugMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InDebugMode : bool" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy przepływ pracy powinien być załadowany w trybie debugowania.</summary>
        <value><see langword="true" />Jeśli przepływ pracy powinien być załadowany w trybie debugowania; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższa metoda określa, czy projektant przepływu pracy jest blokowany przez debuger, jeśli <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A> Właściwość aktualnie `WorkflowDesignerLoader` zwraca `true`.  
  
 [!code-csharp[WF_Samples#54](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#54)]
 [!code-vb[WF_Samples#54](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="workflowDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> Inicjuje program z wszystkimi usługami wymaganymi przez hosta programu ładującego projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> jak zastąpić metodę w klasie pochodnej w celu dodania usług wymaganych przez projektanta. Usługi mogą się różnić w zależności od poziomu obsługi usług wymaganej przez aplikację.  
  
 [!code-csharp[WF_Samples#31](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayout">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayout (System.Xml.XmlReader layoutReader, out System.Collections.IList layoutLoadErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayout(class System.Xml.XmlReader layoutReader, [out] class System.Collections.IList&amp; layoutLoadErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadDesignerLayout (layoutReader As XmlReader, ByRef layoutLoadErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayout(System::Xml::XmlReader ^ layoutReader, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutLoadErrors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayout : System.Xml.XmlReader *  -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayout (layoutReader, layoutLoadErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutReader" Type="System.Xml.XmlReader" />
        <Parameter Name="layoutLoadErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutReader"><see cref="T:System.Xml.XmlReader" /> Tworzony dla serializowanego układu.</param>
        <param name="layoutLoadErrors">Lista błędów, które wystąpiły podczas deserializacji.</param>
        <summary>Stosuje serializowany układ do projektanta głównego na bieżącym hoście projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład pokazuje sposób ładowania układu dla określonej definicji przepływu pracy przy użyciu <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> metody. Obiekt jest tworzony przy użyciu nazwy pliku układu projektanta, który został utworzony przy użyciu <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A>. <xref:System.Xml.XmlReader> Po zakończeniu ładowania układu wszystkie błędy, które mogły wystąpić, są wyświetlane użytkownikowi.  
  
 [!code-csharp[WF_Samples#39](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#39)]
 [!code-vb[WF_Samples#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayoutFromResource">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayoutFromResource (Type type, string manifestResourceName, out System.Collections.IList errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayoutFromResource(class System.Type type, string manifestResourceName, [out] class System.Collections.IList&amp; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayoutFromResource(Type ^ type, System::String ^ manifestResourceName, [Runtime::InteropServices::Out] System::Collections::IList ^ % errors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayoutFromResource : Type * string *  -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayoutFromResource (type, manifestResourceName, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="manifestResourceName" Type="System.String" />
        <Parameter Name="errors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" />z którym jest skojarzony zasób.</param>
        <param name="manifestResourceName">Nazwa zasobu.</param>
        <param name="errors">Napotkano błędy podczas wywołania <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />.</param>
        <summary>Pobiera określony zasób i wywołuje <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> metodę, która stosuje układ Zserializowany do głównego projektanta na bieżącym hoście projektanta.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="workflowDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><see langword="true" />Jeśli operacja ładowania zakończyła się pomyślnie; w przeciwnym razie. <see langword="false" /></param>
        <param name="errors">Zawiera błędy ładowania.</param>
        <summary>Wywoływana podczas kończenia ładowania projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> metodę w celu wyświetlenia błędów, które mogły wystąpić podczas ładowania przepływu pracy.  
  
 [!code-csharp[WF_Samples#36](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#36)]
 [!code-vb[WF_Samples#36](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Klasa, która implementuje <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejs, który zarządza serializacji czasu projektowania.</param>
        <summary>Zapisuje buforowane zmiany w lokalizacji, z której został załadowany Projektant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób przesłania <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> metody serializacji przepływu pracy <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>przy użyciu.  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Klasa, która implementuje <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejs, który zarządza serializacji czasu projektowania.</param>
        <summary>Ładuje projektanta z dokumentu projektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, `PerformLoad` jak zastąpić metodę w celu deserializacji przepływu pracy i załadować ją w projektancie `AddObjectGraphToDesignerHost` przy użyciu metody pomocnika.  
  
 [!code-csharp[WF_Samples#37](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#37)]
 [!code-vb[WF_Samples#37](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivityFromDesigner">
      <MemberSignature Language="C#" Value="public void RemoveActivityFromDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveActivityFromDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveActivityFromDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.RemoveActivityFromDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.RemoveActivityFromDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Działanie, które ma zostać usunięte z projektanta.</param>
        <summary>Usuwa działanie z hosta projektanta po dodaniu go do kolekcji działań nadrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>jak usunąć działanie z. Przed usunięciem <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>ostatniego działania podrzędnego w przepływie pracy jest ono najpierw usuwane z kolekcji przepływu pracy <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> .  
  
 [!code-csharp[WF_Samples#40](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#40)]
 [!code-vb[WF_Samples#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDesignerLayout">
      <MemberSignature Language="C#" Value="protected void SaveDesignerLayout (System.Xml.XmlWriter layoutWriter, System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, out System.Collections.IList layoutSaveErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveDesignerLayout(class System.Xml.XmlWriter layoutWriter, class System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, [out] class System.Collections.IList&amp; layoutSaveErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveDesignerLayout (layoutWriter As XmlWriter, rootDesigner As ActivityDesigner, ByRef layoutSaveErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SaveDesignerLayout(System::Xml::XmlWriter ^ layoutWriter, System::Workflow::ComponentModel::Design::ActivityDesigner ^ rootDesigner, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutSaveErrors);" />
      <MemberSignature Language="F#" Value="member this.SaveDesignerLayout : System.Xml.XmlWriter * System.Workflow.ComponentModel.Design.ActivityDesigner *  -&gt; unit" Usage="workflowDesignerLoader.SaveDesignerLayout (layoutWriter, rootDesigner, layoutSaveErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="rootDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="layoutSaveErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutWriter"><see langword="XmlWriter" />służy do serializacji układu do programu.</param>
        <param name="rootDesigner">Działanie główne, z którego są uzyskiwane informacje o układzie.</param>
        <param name="layoutSaveErrors">Napotkano błędy podczas serializacji.</param>
        <summary>Serializacja układu projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób zapisywania informacji o układzie projektu przepływu pracy przy użyciu <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> metody. `RootComponent` <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> Po utworzeniu <xref:System.Xml.XmlWriter> obiektu zostanie pobrany dlaprzepływupracyiprzesłany<xref:System.Workflow.ComponentModel.Design.ActivityDesigner> do metody. Aby załadować plik układu generowany przez tę metodę, zobacz <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>.  
  
 [!code-csharp[WF_Samples#38](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#38)]
 [!code-vb[WF_Samples#38](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkTypeDescriptionProvider">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TargetFrameworkTypeDescriptionProvider As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::TypeDescriptionProvider ^ TargetFrameworkTypeDescriptionProvider { System::ComponentModel::TypeDescriptionProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkTypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metadane obiektu docelowego [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. <see cref="T:System.ComponentModel.TypeDescriptor" /></summary>
        <value>Metadane obiektu docelowego [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. <see cref="T:System.ComponentModel.TypeDescriptor" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
