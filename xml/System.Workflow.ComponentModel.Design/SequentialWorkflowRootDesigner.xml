<Type Name="SequentialWorkflowRootDesigner" FullName="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b59ae1aaa47afa26206a6c70ff885061e591d0c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39977642" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SequentialWorkflowRootDesigner : System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SequentialWorkflowRootDesigner extends System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class SequentialWorkflowRootDesigner&#xA;Inherits SequentialActivityDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class SequentialWorkflowRootDesigner : System::Workflow::ComponentModel::Design::SequentialActivityDesigner" />
  <TypeSignature Language="F#" Value="type SequentialWorkflowRootDesigner = class&#xA;    inherit SequentialActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.SequentialActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera właściwości i metody, aby zapewnić spójny wygląd i zachowanie wszystkich projektantów głównego na powierzchni projektowej przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Zazwyczaj gdy przepływ pracy zostanie utworzona w Projektancie przepływów pracy i reprezentuje powierzchni projektowej, w którym użytkownicy mogą dodawać i edytować działań, tworzone jest wystąpienie klasy projektanta głównego sekwencyjnego przepływu pracy. Projektanta głównego przepływu pracy nie ma projektanta nadrzędne, o ile nie jest elementem podrzędnym elementu <xref:System.Workflow.Activities.InvokeWorkflowActivity> działania. Wszystkich projektantów głównego przepływu pracy musi pochodzić od klasy <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequentialWorkflowRootDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequentialWorkflowRootDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public override bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBeParentedTo (parentActivityDesigner As CompositeActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanBeParentedTo(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ parentActivityDesigner);" />
      <MemberSignature Language="F#" Value="override this.CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool" Usage="sequentialWorkflowRootDesigner.CanBeParentedTo parentActivityDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner">
          <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> Do sprawdzenia.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> można ustawić jako element nadrzędny elementu działanie skojarzone z projektanta.</summary>
        <returns>
          <see langword="true" /> Aby zezwolić na działanie skojarzone z <paramref name="parentActivityDesigner" /> jako nadrzędną działanie skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektanci głównego nie może mieć projektanta działań nadrzędnego na powierzchni projektowej przepływu pracy. Chyba że zastąpione w klasie dziedziczącej <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo%2A> zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExpandCollapse">
      <MemberSignature Language="C#" Value="public override bool CanExpandCollapse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanExpandCollapse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanExpandCollapse : bool" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy Projektant może być rozwinięty i zwinięty.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> może być rozwinięty i zwinięty; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zastąpiona w klasach pochodnych <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse%2A> ma zawsze wartość `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Footer">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Footer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Footer" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Footer As SequentialWorkflowHeaderFooter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ Footer { System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Footer : System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stopki skojarzone z projektantem głównego.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> Reprezentujący stopki skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer%2A> są wyświetlane w dolnej części projektanta głównego na powierzchni projektowej przepływu pracy. Ikon i tekstu mogą być wyświetlane w stopce, w tym ikony przycisku, które zmieniają Widok projektanta, gdy użytkownik wybierze jeden z nich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerConnections">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetInnerConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetInnerConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerConnections (edges As DesignerEdges) As ReadOnlyCollection(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Drawing::Point&gt; ^ GetInnerConnections(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="override this.GetInnerConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;" Usage="sequentialWorkflowRootDesigner.GetInnerConnections edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">
          <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> Na którym należy zebrać kolekcję punktów połączenia.</param>
        <summary>Zwraca kolekcję tylko do odczytu punktów, które reprezentują wewnętrzne połączenia projektanta.</summary>
        <returns>Kolekcja zawierająca <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> obiekty używane dla składnika projektanta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektant może mieć łączników w nim.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję symbole, które są wyświetlane na <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> Zawiera symbole wyświetlane na <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter Header" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Header As SequentialWorkflowHeaderFooter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ Header { System::Workflow::ComponentModel::Design::SequentialWorkflowHeaderFooter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Header : System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nagłówek skojarzone z projektantem głównego.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> Reprezentujący nagłówek skojarzonej z <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A> są wyświetlane w górnej części projektanta głównego na powierzchni projektowej przepływu pracy. Ikon i tekstu mogą być wyświetlane w nagłówku, łącznie z tekstem, który wskazuje widok projektanta, który jest aktualnie wyświetlany na powierzchni projektowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obraz związany z projektanta.</summary>
        <value>
          <see cref="T:System.Drawing.Image" /> Do skojarzenia z projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image%2A> Właściwość jest ustawiona na <xref:System.Drawing.Image> do wyświetlenia. Można to zrobić w czasie projektowania lub w czasie wykonywania.  
  
 Chyba że zastąpione w klasie pochodnej <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image%2A> zwraca odwołanie o wartości null (`Nothing` w języku Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość dla otaczającego granice obrazu skojarzonego z projektanta we współrzędnych logiczne.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> który otacza <see cref="T:System.Drawing.Image" /> wyświetlane <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> można pobrać współrzędne prostokąt, który zawiera obraz systemu Windows za pomocą projektanta. Rysowanie łączników lub nałożenie grafiki, można użyć tych współrzędnych.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> właściwości. W tym przykładzie <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle%2A> jest obliczany przy użyciu granice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 [!code-csharp[wf_samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[wf_samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InvokingDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> , która zażądała Projektant główny sekwencyjnego przepływu pracy do zainicjowania.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> , Która zażądała projektanta głównego przepływu pracy do zainicjowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalny rozmiar <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> reprezentujący minimalny rozmiar projektanta sekwencyjnego przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize%2A> reprezentuje najmniejszy rozmiar, do którego rozmiar można zmieniać użytkownika <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="sequentialWorkflowRootDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> Zawiera argumenty układu.</param>
        <summary>Ustawia rozmiar podpowiedzi wizualne projektantów zawartych w <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" /> Reprezentujący rozmiar podpowiedzi wizualne na <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="sequentialWorkflowRootDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Pobiera wszelkie nagłówki i stopki skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint%2A> Rysuje dowolny tekst, aby uwzględnić w nagłówkach i stopkach stron przy użyciu ustawień odpowiednich motywu. Rysuje go również wszystkie obrazy, aby uwzględnić w nagłówkach i stopkach stron.  
  
 **Uwaga** podczas zastąpienia <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint%2A> w klasie pochodnej, upewnij się wywołać <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint%2A> metody klasy bazowej, która zarejestrowana delegaci otrzymają zdarzenie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected override void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSmartTagVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSmartTagVisibilityChanged(bool visible);" />
      <MemberSignature Language="F#" Value="override this.OnSmartTagVisibilityChanged : bool -&gt; unit" Usage="sequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" /> Aby wyświetlić tagi inteligentne na powierzchni projektanta; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powiadamia projektanta, czy tagi inteligentne są pokazane lub ukryte na <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged%2A> unieważnia prostokąt tekst skojarzony z <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A>.  
  
 **Uwaga** podczas zastąpienia <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged%2A> w klasie pochodnej, pamiętaj wywołać klasy bazowej <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged%2A> metody, która zarejestrowana delegaci otrzymają zdarzenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected override bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ShowSmartTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowSmartTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowSmartTag : bool" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy Projektant główny Wyświetla tagów inteligentnych.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> Wyświetla tagi inteligentne; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A> nie ustawiono właściwości odwołanie o wartości null (`Nothing` w języku Visual Basic) i odpowiedni <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text%2A> właściwość nie jest pusty ciąg lub ustawić odwołanie o wartości null (`Nothing`), <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag%2A> zwraca `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property SmartTagRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle SmartTagRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt na powierzchni projektowej, w której chcesz wyświetlić tagu inteligentnego.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> definiujący granice, w której chcesz wyświetlić tagu inteligentnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> i <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> do wyświetlenia tagów inteligentnych dostępnych <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions%2A> w lokalizacji określonej przez <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis, skojarzone z projektanta.</summary>
        <value>Ciąg, który zawiera opis, skojarzone z projektanta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chyba że zastąpione w klasie dziedziczącej <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text%2A> zwraca <xref:System.String.Empty?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleHeight">
      <MemberSignature Language="C#" Value="protected override int TitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TitleHeight" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TitleHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TitleHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleHeight : int" Usage="System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość obszaru tytułu projektanta.</summary>
        <value>Liczba całkowita, która przedstawia wysokość obszaru tytułu <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obszar projektanta tytułu głównego zazwyczaj zawiera nagłówek i ikon, wszelkich skojarzonych z projektanta.  
  
 <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight%2A> Oblicza liczbę całkowitą, zwraca pobierania wartości jego implementację podstawową i dodając liczba całkowita wysokość zdefiniowane dla <xref:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>