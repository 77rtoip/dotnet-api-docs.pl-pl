<Type Name="WorkflowView" FullName="System.Workflow.ComponentModel.Design.WorkflowView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1dbf21777adc68936bb349a9054c6db3f30ac1f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36449545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowView : System.Windows.Forms.UserControl, IServiceProvider, System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowView extends System.Windows.Forms.UserControl implements class System.IServiceProvider, class System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowView" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowView&#xA;Inherits UserControl&#xA;Implements IMessageFilter, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowView : System::Windows::Forms::UserControl, IServiceProvider, System::Windows::Forms::IMessageFilter" />
  <TypeSignature Language="F#" Value="type WorkflowView = class&#xA;    inherit UserControl&#xA;    interface IServiceProvider&#xA;    interface IMessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IMessageFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.AmbientTheme), Xml="&lt;AmbientTheme xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" ApplyTo="System.Workflow.ComponentModel.Design.WorkflowView" ShowConfigErrors="True" DrawShadow="False" DrawGrayscale="False" DropIndicatorColor="0xFF006400" SelectionForeColor="0xFF0000FF" SelectionPatternColor="0xFF606060" ForeColor="0xFF808080" BackColor="0xFFFFFFFF" ShowGrid="False" GridColor="0xFFC0C0C0" TextQuality="Aliased" DrawRounded="True" ShowDesignerBorder="True" /&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia powierzchni projektu, który renderuje wizualną reprezentację przepływ procesu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> jest powierzchni projektu, który renderuje wizualną reprezentację przepływ procesu opisanego w znaczniku przepływu pracy. <xref:System.Workflow.ComponentModel.Design.WorkflowView> oferuje bogaty zestaw funkcji interfejsu użytkownika wymagane przez projektantów działań do renderowania i reagowania na różnych zdarzeń generowanych przez system Windows. Ponadto <xref:System.Workflow.ComponentModel.Design.WorkflowView> oferuje zestaw typowych funkcji, które mogą być używane przez projektantów wszystkie do wykonywania pewnych działań.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można uzyskać wystąpienia <xref:System.Workflow.ComponentModel.Design.WorkflowView> przy użyciu <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> metody. Następnie kod ustawia kilka <xref:System.Workflow.ComponentModel.Design.WorkflowView> właściwości, w tym <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>i wywołuje <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> metody.  
  
 Ten przykładowy kod jest częścią przepływu pracy śledzenia profilu projektanta SDK próbki z pliku WorkflowDesignerControl.cs. Aby uzyskać więcej informacji, zobacz [projektanta profilu śledzenia przepływów pracy](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8).  
  
 [!code-csharp[wf_samples#126](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#126)]
 [!code-vb[wf_samples#126](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#126)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Design.WorkflowView : IServiceProvider -&gt; System.Workflow.ComponentModel.Design.WorkflowView" Usage="new System.Workflow.ComponentModel.Design.WorkflowView serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który implementuje <see cref="T:System.IServiceProvider" /> interfejsu.</param>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> z określonego usługodawcę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu. W tym przykładzie nową <xref:System.ComponentModel.Design.DesignSurface> obiekt jest tworzony i `BeginLoad` metoda jest wywoływana przekazywanie <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> obiektu jako parametr. Po utworzeniu nowego <xref:System.Workflow.Activities.SequentialWorkflowActivity>, <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiekt jest tworzony przy użyciu <xref:System.ComponentModel.Design.DesignSurface> utworzony wcześniej jako parametr do konstruktora.  
  
 Ten przykładowy kod jest częścią przykład Outlook przepływ pracy Kreatora zestawu SDK z pliku WorkflowViewWrapper.cs. Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy Kreatora próbki](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[wf_samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[wf_samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void AddDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.AddDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.AddDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter">
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> Do dodania do <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</param>
        <summary>Dodaje <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> do <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> jest składnikiem obsługi wiadomości z <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 Przy użyciu `Strategy` wzorca projektowego <xref:System.Workflow.ComponentModel.Design.WorkflowView> przekazywać komunikaty, aby <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> mają być obsługiwane.  
  
 Zdarzenia myszy, zdarzenia klawiatury malowania i układu zdarzenia są przekazywane do <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> skojarzone z <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> jest tworzony i <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiekt jest skojarzony z powierzchni projektu przepływu pracy. Aby można było pobrać powiadomień wiadomości, <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> jest tworzony i dodawany do <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu.  
  
 Ten przykładowy kod jest częścią przykład Outlook przepływ pracy Kreatora zestawu SDK z pliku WorkflowViewWrapper.cs. Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy Kreatora próbki](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[wf_Samples#102](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#102)]
 [!code-vb[wf_Samples#102](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#102)]  
  
 `MessageFilter` Obiektu utworzonego w poprzednim kodzie jest pochodną <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> klasy.  Przez zastąpienie metody tej klasy, filtr komunikatu jest powiadomienie, gdy zdarzenie interfejsu użytkownika występuje na <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu.  
  
 [!code-csharp[wf_samples#104](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#104)]
 [!code-vb[wf_samples#104](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientPointToLogical (System.Drawing.Point clientPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ClientPointToLogical(valuetype System.Drawing.Point clientPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientPointToLogical (clientPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ClientPointToLogical(System::Drawing::Point clientPoint);" />
      <MemberSignature Language="F#" Value="member this.ClientPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ClientPointToLogical clientPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="clientPoint">
          <see cref="T:System.Drawing.Point" /> Do Konwertuj współrzędne klienta na współrzędne logiczne.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Point" /> współrzędne klienta do logicznego współrzędnych.</summary>
        <returns>
          <see cref="T:System.Drawing.Point" /> Przekonwertować współrzędne klienta do logicznego współrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
-   W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientRectangleToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle ClientRectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientRectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle ClientRectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.ClientRectangleToLogical : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.ClientRectangleToLogical rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Do przekonwertowania z klienta do logicznego współrzędnych.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Rectangle" /> współrzędne klienta do logicznego współrzędnych.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> Przekonwertować współrzędne klienta do logicznego współrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSizeToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSizeToLogical (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size ClientSizeToLogical(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientSizeToLogical(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientSizeToLogical (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size ClientSizeToLogical(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="member this.ClientSizeToLogical : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.ClientSizeToLogical clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="clientSize">
          <see cref="T:System.Drawing.Size" /> Do przekonwertowania z klienta do logicznego współrzędnych.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Size" /> od klienta do logicznego współrzędnych.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" /> Przekonwertować współrzędne klienta do logicznego współrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="workflowView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Windows.Forms.AccessibleObject" /> dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <returns>Nowy <see cref="T:System.Windows.Forms.AccessibleObject" /> dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie jawnie wywołana <xref:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance%2A> metody, będzie ona wywoływana podczas <xref:System.Windows.Forms.AccessibleObject> odwołuje się do właściwości.  
  
> [!NOTE]
>  Aby utworzyć <xref:System.Windows.Forms.AccessibleObject>, należy dodać odwołanie do `Accessibility` zestawie zainstalowanym w środowisku .NET Framework.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> w klasie pochodnej nie powinny wywoływać klasę podstawową <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> metody.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="workflowView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest parametr disposing `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Workflow.ComponentModel.Design.WorkflowView> odwołania. Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.  
  
 Aby uzyskać więcej informacji na temat `Dispose` i `Finalize`, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableFitToScreen">
      <MemberSignature Language="C#" Value="public bool EnableFitToScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFitToScreen" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFitToScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFitToScreen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableFitToScreen : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Włącza przycisk w projekcie powierzchni które, po kliknięciu zmiany powierzchni poziom powiększenia projektu przepływu pracy, aby całego przepływu pracy jest wyświetlany w <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>
          <see langword="true" /> Jeśli jest włączony przycisk dynamiczny; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób włączania ekranu przycisku Dopasuj do. Metoda najpierw uzyskuje <xref:System.ComponentModel.Design.IDesignerHost> interfejsu designer, a następnie pobiera <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu za pomocą <xref:System.IServiceProvider.GetService%2A> metoda przed zmodyfikowaniem <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> właściwości.  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (object selectableObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(object selectableObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (selectableObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(System::Object ^ selectableObject);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : obj -&gt; unit" Usage="workflowView.EnsureVisible selectableObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectableObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectableObject">Obiekt, aby były widoczne.</param>
        <summary>Zapewnia, że <see cref="T:System.Object" /> przekazany jest widoczne, rozwijając obiektów nadrzędnych i przewijanie <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> odpowiednio do potrzeb.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> podczas pracy z obiektem w przepływie pracy, który wymaga wskaźników interfejsu użytkownika. <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> rozwinie obiektów nadrzędnych i przewijania <xref:System.Workflow.ComponentModel.Design.WorkflowView> niezbędne do uwidaczniania obiektu w projektancie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> metody <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu do zwrócenia <xref:System.ComponentModel.Design.ISelectionService> interfejsu. Jeśli usługa jest zainstalowana, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> nosi nazwę przekazywanie za pomocą aktualnie wybrane działanie `PrimarySelection` właściwość <xref:System.ComponentModel.Design.ISelectionService> obiektu.  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="selectableObject" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="FitToScreenSize">
      <MemberSignature Language="C#" Value="public void FitToScreenSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToScreenSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToScreenSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToScreenSize();" />
      <MemberSignature Language="F#" Value="member this.FitToScreenSize : unit -&gt; unit" Usage="workflowView.FitToScreenSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmienia poziom powiększenia powierzchnię projektu przepływu pracy, tak aby całego przepływu pracy jest wyświetlany w <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom powiększenia rzeczywisty zależy od ustawienia projektanta przepływów pracy użytkownika.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób włączania ekranu przycisku Dopasuj do. Metoda najpierw uzyskuje <xref:System.ComponentModel.Design.IDesignerHost> interfejsu designer, a następnie pobiera <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu za pomocą <xref:System.IServiceProvider.GetService%2A> metoda przed zmodyfikowaniem <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> właściwości. Na koniec <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> do wyświetlenia całego przepływu pracy w granicach obszaru wyświetlanej wywoływana jest metoda <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FitToWorkflowSize">
      <MemberSignature Language="C#" Value="public void FitToWorkflowSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToWorkflowSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToWorkflowSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToWorkflowSize();" />
      <MemberSignature Language="F#" Value="member this.FitToWorkflowSize : unit -&gt; unit" Usage="workflowView.FitToWorkflowSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmienia poziom powiększenia do 100 procent do wyświetlenia pełnego rozmiaru przepływu pracy w <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie inicjowane właściwości <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu można ustawić właściwości kilku. <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> Powoduje, że <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu do wyświetlenia pełnego rozmiaru przepływu pracy w ramach <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A>.  
  
 [!code-csharp[wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowView.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <see cref="T:System.Type" /> Usługi do pobrania.</param>
        <summary>Pobiera obiekt usługi określonego typu, jeśli jest dostępna.</summary>
        <returns>Jeśli <paramref name="serviceType" /> jest <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" /> następnie <see langword="GetService" /> zwraca określonego <see cref="T:System.ComponentModel.Design.CommandID" />; w przeciwnym razie <see langword="GetService" /> zwraca <see cref="T:System.Object" /> wykonania żądanej usługi lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) Jeśli usługa nie jest możliwe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetService` Zwraca <xref:System.Object> wykonania żądanej usługi lub odwołanie o wartości null (`Nothing`) Jeśli usługa nie jest możliwe.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> metody <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu do zwrócenia <xref:System.ComponentModel.Design.ISelectionService> interfejsu. Jeśli usługa jest zainstalowana, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> nosi nazwę przekazywanie za pomocą aktualnie wybrane działanie `PrimarySelection` właściwość <xref:System.ComponentModel.Design.ISelectionService> obiektu.  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HScrollBar HScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HScrollBar HScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HScrollBar As HScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HScrollBar ^ HScrollBar { System::Windows::Forms::HScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HScrollBar : System.Windows.Forms.HScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poziomy pasek przewijania dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.ScrollBar" /> służy do dostosowywania ustawień i widoczność poziomy pasek przewijania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można uzyskać wystąpienia <xref:System.Workflow.ComponentModel.Design.WorkflowView> klasy.  Następnie kod ustawia kilka <xref:System.Workflow.ComponentModel.Design.WorkflowView> właściwości, w tym <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>i wywołuje <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> metody.  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public event EventHandler Idle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Idle" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Idle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Idle;" />
      <MemberSignature Language="F#" Value="member this.Idle : EventHandler " Usage="member this.Idle : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see langword="WorkflowView" /> zakończy przetwarzanie i ma wprowadzić w stan bezczynności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli masz zadania do wykonania przed wątek staje się w stanie bezczynności, dołącz je do tego zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateClientRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateClientRectangle (System.Drawing.Rectangle clientRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateClientRectangle(valuetype System.Drawing.Rectangle clientRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateClientRectangle (clientRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateClientRectangle(System::Drawing::Rectangle clientRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateClientRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateClientRectangle clientRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="clientRectangle">
          <see cref="T:System.Drawing.Rectangle" />, We współrzędnych klienta, aby unieważnić i spowodować wyświetlony ponownie, tak.</param>
        <summary>Unieważnia określonego <see cref="T:System.Drawing.Rectangle" /> i powodującą wyświetlony ponownie, tak.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle%2A> spowodować <xref:System.Drawing.Rectangle>, we współrzędnych klienta, można dodawać do regionu aktualizacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateLogicalRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateLogicalRectangle (System.Drawing.Rectangle logicalRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateLogicalRectangle(valuetype System.Drawing.Rectangle logicalRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateLogicalRectangle (logicalRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateLogicalRectangle(System::Drawing::Rectangle logicalRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateLogicalRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateLogicalRectangle logicalRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="logicalRectangle">
          <see cref="T:System.Drawing.Rectangle" />, We współrzędnych logicznych, aby unieważnić i spowodować wyświetlony ponownie, tak.</param>
        <summary>Unieważnia określonego <see cref="T:System.Drawing.Rectangle" /> i powodującą wyświetlony ponownie, tak.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle%2A> spowodować <xref:System.Drawing.Rectangle>, we współrzędnych logiczne, do dodania do regionu aktualizacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="public void LoadViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.LoadViewState : System.IO.Stream -&gt; unit" Usage="workflowView.LoadViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState">A <see cref="T:System.IO.BinaryReader" /> używane w celu przywrócenia stanu widoku.</param>
        <summary>Przywraca stan widoku informacje ze strumienia binarnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> Przywraca stan widoku informacji zapisanych przez wywołanie <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> metody.  
  
 Należy przesłonić tę metodę, gdy konieczne jest dostosowanie, jak niestandardowe projektanta przywraca stan widoku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób ładowania stanu widoku <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu tworząc <xref:System.IO.FileStream> obiekt z `FileMode.Open` Flaga i nastąpiło przejście do <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> metody. Wyświetl stan plik został utworzony przy użyciu <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> metody.  
  
 [!code-csharp[wf_samples#60](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#60)]
 [!code-vb[wf_samples#60](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#60)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToClient (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToClient(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToClient (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToClient(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToClient logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint">
          <see cref="T:System.Drawing.Point" /> Do przekonwertowania na współrzędne klienta.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Point" /> z logiczną na współrzędne klienta.</summary>
        <returns>
          <see cref="T:System.Drawing.Point" /> Przekonwertować z logiczną współrzędne klienta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToScreen (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToScreen(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToScreen (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToScreen(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToScreen logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint">
          <see cref="T:System.Drawing.Point" /> Do przekonwertowania na współrzędne ekranu.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Point" /> z logiczną na współrzędne ekranu.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> skonwertowane z logiczną na współrzędne ekranu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalRectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle LogicalRectangleToClient (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle LogicalRectangleToClient(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalRectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle LogicalRectangleToClient(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.LogicalRectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.LogicalRectangleToClient rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> Do przekonwertowania na współrzędne klienta.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Rectangle" /> z logiczną na współrzędne klienta.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> przekonwertować z logiczną współrzędne klienta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalSizeToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalSizeToClient (System.Drawing.Size logicalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalSizeToClient(valuetype System.Drawing.Size logicalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalSizeToClient(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalSizeToClient (logicalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalSizeToClient(System::Drawing::Size logicalSize);" />
      <MemberSignature Language="F#" Value="member this.LogicalSizeToClient : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.LogicalSizeToClient logicalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="logicalSize">
          <see cref="T:System.Drawing.Size" /> Do przekonwertowania na współrzędne klienta.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Size" /> z logiczną na współrzędne klienta.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> przekonwertować z logiczną współrzędne klienta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
-   Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected override void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="workflowView.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Występuje, gdy formant został dodany do <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded%2A> jest wywoływana, gdy kontrolka podrzędna zostanie dodany do <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Formanty podrzędne tylko dozwolone są <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> kontrolki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Jeśli formant dodać nie jest <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> lub <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" /></exception>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected override void OnDragDrop (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragDrop dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje po upuszczeniu przeciąganego elementu na <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop%2A> występuje, gdy użytkownik zwolni przycisk myszy nad <xref:System.Workflow.ComponentModel.Design.WorkflowView> podczas operacji przeciągania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragEnter dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje, gdy element zostanie przeciągnięty do <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> granic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> występuje, gdy użytkownik przeciąga najpierw kursor myszy nad <xref:System.Workflow.ComponentModel.Design.WorkflowView> podczas operacji przeciągania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : EventArgs -&gt; unit" Usage="workflowView.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje, gdy kursor opuszcza <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> podczas operacji przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> występuje, gdy użytkownik przeciąga kursora myszy poza <xref:System.Workflow.ComponentModel.Design.WorkflowView> podczas operacji przeciągania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragOver dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje, gdy trwa operacja Przeciągnij upuść, a wskaźnik myszy znajduje się w <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> granic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> występuje, gdy wskaźnik myszy porusza się w granicach <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="workflowView.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje podczas operacji przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> występuje, gdy rozpoczęto operację przeciągania. <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> Umożliwia źródło operacji przeciągania, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje po naciśnięciu klawisza, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown%2A> występuje po naciśnięciu klawisza, gdy <xref:System.Workflow.ComponentModel.Design.WorkflowView> ma fokus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> udostępniające dane o zdarzeniu.</param>
        <summary>Występuje po zwolnieniu klawisza, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp%2A> występuje po zwolnieniu klawisza, gdy <xref:System.Workflow.ComponentModel.Design.WorkflowView> ma fokus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="workflowView.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> udostępniające dane dla zdarzenia.</param>
        <summary>Występuje, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> należy zmienić położenie formantów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout%2A> występuje, gdy formantów podrzędnych są dodawane lub usuwane, gdy granice <xref:System.Workflow.ComponentModel.Design.WorkflowView> zmiany, i innych zmianach które wpływają na układ <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected override void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="workflowView.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> udostępniające dane o zdarzeniu.</param>
        <summary>Występuje, gdy elementy wybrane przez przeciąganie myszy ulega zmianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged%2A> występuje po dokonaniu wyboru przy użyciu myszy, który różni się od wszystkie zaznaczone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> jest podwójnie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kliknij dwukrotnie zależy od ustawień myszy systemu operacyjnego. Użytkownik może ustawić czas od kliknięcia przycisku myszy, który powinien być uznawany za dwukrotne zamiast dwóch kliknięć.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy wskaźnik myszy znajduje się nad <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> i zostanie naciśnięty przycisk myszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> /  <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 `OnMouseEnter` występuje, gdy wskaźnik myszy zostanie umieszczony <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 `OnMouseDown` występuje, gdy wskaźnik myszy znajduje się nad <xref:System.Workflow.ComponentModel.Design.WorkflowView> i zostanie naciśnięty przycisk myszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="workflowView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy wskaźnik myszy zostanie umieszczony <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A> występuje, gdy wskaźnik myszy zostanie umieszczony <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="workflowView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy wskaźnik myszy jest przesuwany nad <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> występuje, gdy wskaźnik myszy jest przesuwany nad <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="workflowView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy wskaźnik myszy opuści <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A> występuje, gdy wskaźnik myszy opuści <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy wskaźnik myszy przesuwa się nad <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A> występuje, gdy wskaźnik myszy przesuwa się nad <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje po zwolnieniu przycisku myszy nad <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A> występuje, gdy wskaźnik myszy znajduje się nad <xref:System.Workflow.ComponentModel.Design.WorkflowView> i zwolnieniu przycisku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje po przemieszczeniu kółka myszy, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia myszy zachodzą w następującej kolejności:  
  
 1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A>  
  
 2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A>  
  
 3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> lub <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A>  
  
 4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A>  
  
 5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A>  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A> występuje, gdy kółko myszy jest przesuwany nad <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="workflowView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Występuje, gdy <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> jest rysowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint%2A> występuje, gdy <xref:System.Workflow.ComponentModel.Design.WorkflowView> jest rysowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="workflowView.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> zawierający informacje o zdarzeniu.</param>
        <summary>Podczas operacji przeciągania i umożliwia źródła przeciągania określić, czy opcja przeciągania powinno być anulowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> Zdarzenie jest zgłaszane, gdy istnieje zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania. <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> Zdarzeń umożliwia źródła przeciągania określić, czy można anulować operacji przeciągania.  
  
 Zdarzenia związane z operacje "przeciągnij" są wywoływane, gdy formant jest nieprawidłowy miejsca docelowego. <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> Zdarzenie jest wywoływane z mocą przeciągania określony. Lista efekty przeciągania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
 Zmiany w pozycji kursora myszy, klawiatury stan i stan przycisku myszy są śledzone.  
  
-   Jeśli użytkownik zostanie przeniesiona poza oknem, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> zdarzenia.  
  
-   Jeśli mysz przejdzie inny formant <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> dla tego formantu jest wywoływane.  
  
-   Gdy wskaźnik myszy przesuwa się, ale pozostaje w ramach tej samej kontrolki <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> zdarzenia.  
  
 Po zmianie stanu przycisku klawiatury lub myszy <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> zdarzenie jest zgłaszane oraz określa, czy kontynuować przeciągnij, aby usunąć dane, lub aby anulować operację na podstawie wartości `Action` właściwości zdarzenia <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Jeśli wartość jest `DragAction.Continue`, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> zdarzenie jest wywoływane, aby kontynuować operację i <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> zdarzenie jest wywoływane z nowy efekt, można ustawić odpowiednich wizualne. Lista efekty prawidłowy upuszczania, zobacz <xref:System.Windows.Forms.DragDropEffects> wyliczenia.  
  
> [!NOTE]
>  <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> zdarzenia są skojarzone tak, aby jako wskaźnik myszy porusza się na element docelowy upuszczania, użytkownik otrzymuje aktualną opinii położenia kursora myszy.  
  
 Jeśli wartość jest `DragAction.Drop`, zwracana jest wartość efekt upuszczania do źródła, więc źródłowej aplikacji można wykonać odpowiednie działania na źródle danych; na przykład Wytnij danych, jeśli operacja zakończyła się przenoszenie.  
  
 Jeśli wartość jest `DragAction.Cancel`, <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> zdarzenia.  
  
 Domyślnie <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> zestawów zdarzeń `Action` do `DragAction.Cancel` Jeśli został naciśnięty klawisz ESC i ustawia `Action` do `DragAction.Drop` Jeśli zostanie naciśnięty przycisk myszy po lewej stronie, środka lub prawej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRootDesignerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRootDesignerChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRootDesignerChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnRootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRootDesignerChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRootDesignerChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnRootDesignerChanged : unit -&gt; unit&#xA;override this.OnRootDesignerChanged : unit -&gt; unit" Usage="workflowView.OnRootDesignerChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywoływane, gdy inny Projektant jest ustawiony jako nowe Projektant główny powierzchnię projektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnZoomChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnZoomChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnZoomChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnZoomChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnZoomChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnZoomChanged : unit -&gt; unit&#xA;override this.OnZoomChanged : unit -&gt; unit" Usage="workflowView.OnZoomChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywoływane, gdy poziom powiększenia zostanie zmieniona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (bool immediateUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(bool immediateUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (immediateUpdate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(bool immediateUpdate);" />
      <MemberSignature Language="F#" Value="override this.PerformLayout : bool -&gt; unit" Usage="workflowView.PerformLayout immediateUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="immediateUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="immediateUpdate">
          <see langword="true" /> powoduje układu zaktualizować natychmiast; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wymusza <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> aby zastosował logikę układu do wszystkich jej kontrolek podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout%2A> Aktualizuje wszystkie formanty podrzędne w <xref:System.Workflow.ComponentModel.Design.WorkflowView>, zmienianie rozmiaru i przenieść je w razie potrzeby.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintDocument PrintDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintDocument PrintDocument" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintDocument As PrintDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintDocument ^ PrintDocument { System::Drawing::Printing::PrintDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintDocument : System.Drawing.Printing.PrintDocument" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Printing.PrintDocument" /> skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>A <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> obiektu, który wysyła dane wyjściowe do drukarki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument%2A> obiekt do ustawiania właściwości, które opisują sposób wydruku i Wywołaj `Print` metodę, aby rozpocząć proces drukowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać <xref:System.Drawing.Printing.PrintDocument> obiektów, wyświetlać <xref:System.Windows.Forms.PrintDialog> i skojarz <xref:System.Drawing.Printing.PrinterSettings> zaznaczonych przez użytkownika przed wydrukowaniem dokumentu.  
  
 [!code-csharp[Wf_samples#56](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#56)]
 [!code-vb[Wf_samples#56](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#56)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreviewMode">
      <MemberSignature Language="C#" Value="public bool PrintPreviewMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintPreviewMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintPreviewMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintPreviewMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreviewMode : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb podglądu wydruku <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>
          <see langword="true" /> Jeśli tryb podglądu wydruku jest aktywna; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób zmiany obiektu widoku WorkflowView wstawianie, tak aby wyświetlone bieżącego przepływu pracy w trybie podglądu wydruku.  
  
 [!code-csharp[wf_samples#57](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#57)]
 [!code-vb[wf_samples#57](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#57)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void RemoveDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.RemoveDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.RemoveDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.RemoveDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter">
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> Do usunięcia z <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</param>
        <summary>Usuwa skojarzone <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> celu reagowania na zdarzenia projektanta, takich jak przeciągnij zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property RootDesigner As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesigner ^ RootDesigner { System::Workflow::ComponentModel::Design::ActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::ActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Projektant główny <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> Skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projektant główny przepływu pracy jest projektanta skojarzonego z powierzchnią projektu przepływu pracy. Zawiera wszystkie podrzędne projektantów, a następnie wszystkie działania w przepływie pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak pobrać RootDesigner obiektu widoku WorkflowView wstawianie. Pole workflowPanel zawiera metodę o nazwie GetWorkflowView, która zwraca aktywnego wystąpienia widoku WorkflowView wstawianie. RootDesigner następnie jest rzutowane na SequentialWorkflowRootDesigner, przed wykonaniem na nim żadnych akcji.  
  
 Ten przykładowy kod jest częścią podstawowy przykład zestawu SDK DesignerHosting z pliku DesignerShell.cs. Aby uzyskać więcej informacji, zobacz [podstawowy przykład hostingu projektanta](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf_samples#236](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#236)]
 [!code-vb[wf_samples#236](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#236)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesignerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootDesignerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootDesignerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.RootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event RootDesignerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RootDesignerChanged;" />
      <MemberSignature Language="F#" Value="member this.RootDesignerChanged : EventHandler " Usage="member this.RootDesignerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane, gdy Projektant główny zostanie zmieniona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="public void SaveViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.SaveViewState : System.IO.Stream -&gt; unit" Usage="workflowView.SaveViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState">A <see cref="T:System.IO.BinaryReader" /> używany do przechowywania stanu widoku.</param>
        <summary>Zapisuje stan widoku do strumienia danych binarnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest sumą wartości właściwości i formantów podrzędnych w widoku. Wartości właściwości są zachowywane w strumieniu po zapisaniu i przywrócić za pomocą <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, Zapisywanie stanu widoku <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu tworząc <xref:System.IO.FileStream> przy użyciu `FileMode.Create` Flaga i nastąpiło przejście do <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> metody. Aby załadować ten stan widoku w późniejszym czasie, zobacz <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A>.  
  
 [!code-csharp[wf_samples#59](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#59)]
 [!code-vb[wf_samples#59](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveWorkflowImage">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje obraz <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> na podstawie formatu określonego obrazu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (stream, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> Można zapisać obrazu Widok przepływu pracy.</param>
        <param name="imageFormat">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> Używany do zapisania obrazu Widok przepływu pracy.</param>
        <summary>Zapisuje obraz <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> do określonego obiektu stream przy użyciu formatu określonego obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetl obraz przepływ pracy zostanie utworzona jako mapy bitowej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można zapisać w aktualnie załadowanych przepływów pracy obrazu przy użyciu <xref:System.IO.Stream>. W tym przykładzie <xref:System.Windows.Forms.SaveFileDialog> jest tworzony na monit o podanie nazwy pliku obrazu, aby zapisać. A <xref:System.IO.FileStream> obiekt jest następnie utworzone za pomocą nazwy pliku i następnie przekazywane do <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> metody.  
  
 [!code-csharp[wf_samples#63](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#63)]
 [!code-vb[wf_samples#63](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> lub <paramref name="imageFormat" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (string imageFile, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(string imageFile, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::String ^ imageFile, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (imageFile, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFile">Ścieżka do pliku, w którym do przechowywania obrazu Widok przepływu pracy.</param>
        <param name="imageFormat">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> Używany do zapisania obrazu Widok przepływu pracy.</param>
        <summary>Zapisuje obraz <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> do określonego pliku w formacie określonego obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetl obraz przepływ pracy zostanie utworzona jako mapy bitowej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można zapisać w aktualnie załadowanych przepływów pracy obrazu przy użyciu <xref:System.String>. W tym przykładzie <xref:System.Windows.Forms.SaveFileDialog> jest tworzony na monit o podanie nazwy pliku obrazu, aby zapisać. Nazwa pliku i `ImageFormat.Bmp` flagi są następnie przekazywane do <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> metody.  
  
 [!code-csharp[wf_samples#62](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#62)]
 [!code-vb[wf_samples#62](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="imageFile" /> lub <paramref name="imageFormat" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImageToClipboard">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImageToClipboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImageToClipboard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImageToClipboard" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkflowImageToClipboard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImageToClipboard();" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImageToClipboard : unit -&gt; unit" Usage="workflowView.SaveWorkflowImageToClipboard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje obraz widoku WorkflowView wstawianie do Schowka.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScreenPointToLogical (System.Drawing.Point screenPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ScreenPointToLogical(valuetype System.Drawing.Point screenPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ScreenPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScreenPointToLogical (screenPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ScreenPointToLogical(System::Drawing::Point screenPoint);" />
      <MemberSignature Language="F#" Value="member this.ScreenPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ScreenPointToLogical screenPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="screenPoint">
          <see cref="T:System.Drawing.Point" /> Przekonwertować z współrzędne ekranu na współrzędne logiczne.</param>
        <summary>Konwertuje <see cref="T:System.Drawing.Point" /> współrzędne ekranu na współrzędne logiczne.</summary>
        <returns>
          <see cref="T:System.Drawing.Point" /> Przekonwertować z współrzędne ekranu logicznej współrzędnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> używa dwóch przestrzeni współrzędnych: logicznych i klienta:  
  
 Współrzędne klienta są względem lewego górnego rogu <xref:System.Workflow.ComponentModel.Design.WorkflowView>. Lewy górny róg jest 0,0; x i y współrzędne zwiększyć w pionie i w poziomie w obszarze możliwych do wyświetlenia. Wpływ na układ współrzędnych klienta poziom powiększenia <xref:System.Workflow.ComponentModel.Design.WorkflowView> i pozycja paska przewijania.  
  
 W układzie współrzędnych logicznej każdy obiekt zawsze jest mapowana na 0,0. Pozycja w poziomie i w pionie nie wpływa na według położenia powiększenia lub scrollbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScrollPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ScrollPosition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollPosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ScrollPosition { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPosition : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia położenie paska przewijania na <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>Punkt opisujące lokalizację scrollbar we współrzędnych ekranu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition%2A> do pobrania lub dostosować położenie paska przewijania w powierzchnię projektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, ustawienie właściwości ScrollPosition wewnątrz implementacja <xref:System.Windows.Forms.Panel> metody OnMouseMove formantu.  W tym przykładzie jest z próbki zestawu SDK programu Outlook przepływ pracy kreatora.  Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy Kreatora próbki](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[wf_samples#105](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#105)]
 [!code-vb[wf_samples#105](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowDepth">
      <MemberSignature Language="C#" Value="public int ShadowDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowDepth" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowDepth : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" /> dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>Głębokość cienia w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> do pobrania lub Dostosuj głębokość cienia tekst wyświetlany na powierzchni projektu przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można uzyskać wystąpienia <xref:System.Workflow.ComponentModel.Design.WorkflowView> przy użyciu <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> metody. Następnie kod ustawia kilka <xref:System.Workflow.ComponentModel.Design.WorkflowView> właściwości, w tym <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A>i wywołuje <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> metody.  
  
 [!code-csharp[Wf_samples#48](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#48)]
 [!code-vb[Wf_samples#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#48)]  
  
 `UnloadWorkflow` Metodę, która jest wywoływana w powyższym kodzie usuwa aktualnie załadowanych przepływów pracy w celu przygotowania do załadowania nowego przepływu pracy i jest zaimplementowana w następujący sposób:  
  
 [!code-csharp[Wf_samples#49](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#49)]
 [!code-vb[Wf_samples#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla ** Porada ** dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetla **Porada** dla <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string -&gt; unit" Usage="workflowView.ShowInfoTip text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia na ** porada **.</param>
        <summary>Pokazuje ** Porada ** dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> określonym tekstem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pokazuje **Porada** dla <xref:System.Workflow.ComponentModel.Design.WorkflowView> określonym tekstem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="infoTipText" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string title, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string title, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (title As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string * string -&gt; unit" Usage="workflowView.ShowInfoTip (title, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">Tytuł ** Porada ** do wyświetlenia.</param>
        <param name="text">Tekst ** Porada ** do wyświetlenia.</param>
        <summary>Pokazuje ** Porada ** dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> podany tytuł i tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pokazuje **Porada** dla <xref:System.Workflow.ComponentModel.Design.WorkflowView> podany tytuł i tekst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="title" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).  - lub - <paramref name="infoTipText" /> jest odwołanie o wartości null (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceToolTip">
      <MemberSignature Language="C#" Value="public void ShowInPlaceToolTip (string toolTipText, System.Drawing.Rectangle toolTipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInPlaceToolTip(string toolTipText, valuetype System.Drawing.Rectangle toolTipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInPlaceToolTip (toolTipText As String, toolTipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInPlaceToolTip(System::String ^ toolTipText, System::Drawing::Rectangle toolTipRectangle);" />
      <MemberSignature Language="F#" Value="member this.ShowInPlaceToolTip : string * System.Drawing.Rectangle -&gt; unit" Usage="workflowView.ShowInPlaceToolTip (toolTipText, toolTipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolTipText" Type="System.String" />
        <Parameter Name="toolTipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="toolTipText">Tekst do wyświetlenia.</param>
        <param name="toolTipRectangle">
          <see cref="T:System.Drawing.Rectangle" /> Określający lokalizację na ekranie, aby umieścić <see langword="ToolTip" />.</param>
        <summary>Pokazuje <see langword="ToolTip" /> w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToolTips` są przydatne uwagi dotyczące użytkownika, które wyświetlania przydatnych informacji dotyczących obiektu pod kursorem.  
  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip%2A> do wyświetlenia `ToolTip` określony tekst i żądaną lokalizację.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <see cref="T:System.Type" /> Usługi do pobrania.</param>
        <summary>Pobiera usługę określonego typu, jeśli jest dostępna.</summary>
        <returns>
          <see cref="T:System.Object" /> Wykonania żądanej usługi lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) Jeśli usługa nie jest możliwe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `serviceType` jest `CommandID` ta metoda zwróci określony `CommandID`. Dla żadnych innych `Type`, `GetService` zwraca obiekt, który implementuje żądanej usługi lub odwołanie o wartości null (`Nothing`) Jeśli usługa nie jest możliwe.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> metody <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu do zwrócenia <xref:System.ComponentModel.Design.ISelectionService> interfejsu. Jeśli usługa jest zainstalowana, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> nosi nazwę przekazywanie za pomocą aktualnie wybrane działanie `PrimarySelection` właściwość <xref:System.ComponentModel.Design.ISelectionService> obiektu.  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IMessageFilter.PreFilterMessage">
      <MemberSignature Language="C#" Value="bool IMessageFilter.PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Forms.IMessageFilter.PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Function PreFilterMessage (ByRef m As Message) As Boolean Implements IMessageFilter.PreFilterMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Forms.IMessageFilter.PreFilterMessage(System::Windows::Forms::Message % m) = System::Windows::Forms::IMessageFilter::PreFilterMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Komunikat do wysłania. Nie można zmodyfikować tej wiadomości.</param>
        <summary>Odfiltrowuje komunikat, zanim wywoływane jest.</summary>
        <returns>
          <see langword="true" /> do filtrowania wiadomości i zatrzymaj ją z wysyłane; <see langword="false" /> zezwalająca na komunikat, aby kontynuować do następnego filtru lub kontrolki.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ViewPortRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ViewPortRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ViewPortRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" /> dla <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> opisujący obszar na ekranie, który jest widoczny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> Zawiera obszaru przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono metodę obsługi zdarzenia Paint <xref:System.Workflow.ComponentModel.Design.WorkflowView> obiektu do rysowania obrazu bezpośrednio na <xref:System.Workflow.ComponentModel.Design.WorkflowView>. <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> Właściwość zwraca obszar wyświetlany na powierzchni projektu, aby ograniczyć poprawnie sformułowane obrazu.  
  
 [!code-csharp[wf_samples#58](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#58)]
 [!code-vb[wf_samples#58](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ViewPortSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ViewPortSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ViewPortSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar obszaru do <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>A <see langword="Size" /> opisujący widoczny obszar <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera rozmiar widoczny obszar <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VScrollBar VScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.VScrollBar VScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VScrollBar As VScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::VScrollBar ^ VScrollBar { System::Windows::Forms::VScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VScrollBar : System.Windows.Forms.VScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pionowy pasek przewijania skojarzone z <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>A <see cref="T:System.Windows.Forms.ScrollBar" /> służy do dostosowywania ustawień i widoczność poziomy pasek przewijania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> uzyskać pionowy pasek przewijania <xref:System.Workflow.ComponentModel.Design.WorkflowView>, który służy do dostosowywania interfejsu użytkownika.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można uzyskać wystąpienia <xref:System.Workflow.ComponentModel.Design.WorkflowView> klasy.  Następnie kod ustawia kilka <xref:System.Workflow.ComponentModel.Design.WorkflowView> właściwości, w tym <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> i <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>i wywołuje <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> metody.  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="workflowView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Komunikat systemu Windows do przetworzenia.</param>
        <summary>Przetwarza wiadomości systemu Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie komunikaty są wysyłane do <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> metody.  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> Metody dokładnie odpowiada na systemu Windows `WindowProc` funkcji. Aby uzyskać więcej informacji na temat przetwarzania komunikatów systemu Windows, temacie `WindowProc` dokumentacji funkcji w dokumentacji zestawu SDK platformy Windows znajdujący się w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klasy pochodne powinny wywoływać klasę podstawową <see langword="WndProc" /> metody w celu przetworzenia komunikaty nie jest obsługiwane.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public int Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Zoom { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Zoom : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom powiększenia <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
        <value>Poziom powiększenia <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj funkcji powiększenia w celu zwiększenia lub zmniejszenia rozmiaru składników wewnątrz <xref:System.Workflow.ComponentModel.Design.WorkflowView>. <xref:System.Workflow.ComponentModel.Design.AmbientTheme> Ustawia poziom powiększenia minimalną i maksymalną dla <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Workflow.ComponentModel.Design.WorkflowView.Zoom%2A> właściwość <xref:System.Workflow.ComponentModel.Design.WorkflowView>.  
  
 Ten przykładowy kod jest częścią przykład zestawu SDK Monitor przepływu pracy z pliku MainForm.cs. Aby uzyskać więcej informacji, zobacz [próbki Monitor przepływu pracy](http://msdn.microsoft.com/library/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  
  
 [!code-csharp[wf_samples#138](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#138)]
 [!code-vb[wf_samples#138](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Jeśli poziom powiększenia jest mniejszy niż minimalny poziom powiększenia z <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> — lub — jeśli poziom powiększenia przekracza maksymalny poziom powiększenia <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ZoomChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ZoomChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ZoomChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ZoomChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ZoomChanged;" />
      <MemberSignature Language="F#" Value="member this.ZoomChanged : EventHandler " Usage="member this.ZoomChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ustawienie powiększenia <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> zmiany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetl obraz przepływ pracy zostanie utworzona jako mapy bitowej.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można przypisać do obsługi <xref:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged> zdarzeń.  
  
 Ten przykładowy kod jest częścią przykład zestawu SDK Monitor przepływu pracy z pliku ViewHost.cs. Aby uzyskać więcej informacji, zobacz [Monitor przepływu pracy](http://msdn.microsoft.com/library/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  
  
 [!code-csharp[wf_samples#136](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#136)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>