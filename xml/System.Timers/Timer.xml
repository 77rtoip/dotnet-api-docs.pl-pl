<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="618b69c9a4d91151391fe5e2c79054e0441f4aec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cf629-101">Generuje zdarzenie po upływie czasu zestawu z opcją generowanie zdarzeń cyklicznego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf629-101">Generates an event after a set interval, with an option to generate recurring events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-102"><xref:System.Timers.Timer> Składnik jest czasomierza na serwerze, który wywołuje <xref:System.Timers.Timer.Elapsed> zdarzeń aplikacji po liczbę milisekund <xref:System.Timers.Timer.Interval%2A> upłynął właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf629-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="cf629-103">Można skonfigurować <xref:System.Timers.Timer> obiekt, aby zgłosić zdarzenie tylko raz lub wielokrotnie przy użyciu <xref:System.Timers.Timer.AutoReset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf629-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="cf629-104">Zazwyczaj <xref:System.Timers.Timer> obiektu jest zadeklarowane na poziomie klasy tak, aby pozostaje w zakresie tak długo, jak jest to potrzebne.</span><span class="sxs-lookup"><span data-stu-id="cf629-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="cf629-105">Następnie można obsługiwać jego <xref:System.Timers.Timer.Elapsed> zdarzeń, aby zapewnić prawidłowe przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="cf629-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="cf629-106">Na przykład, załóżmy, że krytyczne serwer, który musi znajdować się systemem 24 godziny na dobę, 7 dni w tygodniu.</span><span class="sxs-lookup"><span data-stu-id="cf629-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="cf629-107">Można utworzyć usługi, która używa <xref:System.Timers.Timer> obiekt, aby okresowo Sprawdź serwer i upewnij się, że system jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="cf629-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="cf629-108">Jeśli system nie odpowiada, usługa może próbować ponownie uruchomić serwer lub zawiadomić administratora.</span><span class="sxs-lookup"><span data-stu-id="cf629-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="cf629-109"><xref:System.Timers.Timer> Klasa nie jest dostępna dla wszystkich implementacje .NET i wersji, takie jak standardowe 1.6 .NET i niższych wersjach.</span><span class="sxs-lookup"><span data-stu-id="cf629-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="cf629-110">W takich przypadkach można użyć <xref:System.Threading.Timer?displayProperty=nameWithType> zamiast klasy.</span><span class="sxs-lookup"><span data-stu-id="cf629-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="cf629-111">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cf629-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="cf629-112">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</span><span class="sxs-lookup"><span data-stu-id="cf629-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="cf629-113">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="cf629-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="cf629-114">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cf629-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="cf629-115">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.</span><span class="sxs-lookup"><span data-stu-id="cf629-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="cf629-116">Na serwerze <xref:System.Timers.Timer?displayProperty=nameWithType> klasy jest przeznaczony do użytku z wątków roboczych w środowisku wielowątkowym.</span><span class="sxs-lookup"><span data-stu-id="cf629-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="cf629-117">Czasomierze serwera można przenosić między wątków do obsługi zgłoszono <xref:System.Timers.Timer.Elapsed> zdarzenie powodujące dokładności więcej niż czasomierze systemu Windows w wywołaniem zdarzenia w czasie.</span><span class="sxs-lookup"><span data-stu-id="cf629-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="cf629-118"><xref:System.Timers.Timer?displayProperty=nameWithType> Składnik wywołuje <xref:System.Timers.Timer.Elapsed> zdarzenia na podstawie wartości (w milisekundach) z <xref:System.Timers.Timer.Interval%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf629-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="cf629-119">Może obsłużyć tego zdarzenia do przetwarzania, które są potrzebne.</span><span class="sxs-lookup"><span data-stu-id="cf629-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="cf629-120">Na przykład załóżmy, że masz aplikację sprzedaży online stale ogłoszeń zamówień z bazą danych.</span><span class="sxs-lookup"><span data-stu-id="cf629-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="cf629-121">Usługi, który kompiluje się instrukcje dotyczące wysyłania działa na partię zamówienia, a nie poszczególnych kolejność przetwarzania indywidualnie.</span><span class="sxs-lookup"><span data-stu-id="cf629-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="cf629-122">Można użyć <xref:System.Timers.Timer> można uruchomić co 30 minut przetwarzania wsadowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cf629-123">Klasa System.Timers.Timer ma taką samą rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="cf629-124">Oznacza to, że <xref:System.Timers.Timer.Elapsed> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych uzyskuje się poprzez rozpoznanie zegar systemowy, jeśli <xref:System.Timers.Timer.Interval%2A> właściwości jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="cf629-125">Aby uzyskać więcej informacji, zobacz <xref:System.Timers.Timer.Interval%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf629-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="cf629-126">Gdy <xref:System.Timers.Timer.AutoReset%2A> ma ustawioną wartość `false`, <xref:System.Timers.Timer?displayProperty=nameWithType> obiekt zgłasza <xref:System.Timers.Timer.Elapsed> zdarzeń tylko jeden raz, po pierwszym <xref:System.Timers.Timer.Interval%2A> upłynął.</span><span class="sxs-lookup"><span data-stu-id="cf629-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="cf629-127">Aby zachować wywoływanie <xref:System.Timers.Timer.Elapsed> zdarzeń regularnie w odstępach czasu zdefiniowanych przez <xref:System.Timers.Timer.Interval%2A>ustaw <xref:System.Timers.Timer.AutoReset%2A> do `true`, która jest wartością domyślną.</span><span class="sxs-lookup"><span data-stu-id="cf629-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="cf629-128"><xref:System.Timers.Timer> Składnika przechwytuje i pomija wszystkie wyjątki zgłaszane przez programy obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="cf629-129">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cf629-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="cf629-130">Należy jednak pamiętać, że nie jest to wartość true, programów obsługi zdarzeń, które asynchroniczne i obejmują `await` — operator (w języku C#) lub `Await` — operator (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cf629-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="cf629-131">Wyjątki zgłaszane w tych programów obsługi zdarzeń są propagowane do wątek wywołujący, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cf629-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="cf629-132">Aby uzyskać więcej informacji na wyjątki zgłaszane w metodach asynchronicznych, zobacz [obsługi wyjątków](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="cf629-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="cf629-133">Jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzenie jest zgłaszane przy <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="cf629-134">Jeśli przetwarzanie <xref:System.Timers.Timer.Elapsed> zdarzenia okresu dłuższego niż <xref:System.Timers.Timer.Interval%2A>, zdarzenie może zostać wywołane ponownie na innym <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="cf629-135">W takiej sytuacji należy współużytkowane programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-136">Metoda obsługi zdarzeń może działać w jednym wątku, w tym samym czasie, który wywołuje inny wątek <xref:System.Timers.Timer.Stop%2A> metody lub zestawy <xref:System.Timers.Timer.Enabled%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="cf629-137">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po czasomierz jest zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="cf629-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="cf629-138">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metody przedstawia sposób, aby uniknąć tej sytuacji wyścigu.</span><span class="sxs-lookup"><span data-stu-id="cf629-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="cf629-139">Nawet jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzeń może wystąpić po <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> została wywołana metoda lub po <xref:System.Timers.Timer.Enabled%2A> ustawioną właściwość `false`, ponieważ sygnału, aby podnieść <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cf629-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="cf629-140">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń ignorowanie kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="cf629-141">Jeśli używasz <xref:System.Timers.Timer?displayProperty=nameWithType> klasy z elementu interfejsu użytkownika, takich jak formularz lub formant bez wprowadzania czasomierza na ten element interfejsu użytkownika, przypisać do formularza lub kontrolki, która zawiera <xref:System.Timers.Timer> do <xref:System.Timers.Timer.SynchronizingObject%2A> właściwości, tak, aby zdarzenia przekazywane do wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cf629-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="cf629-142">Aby uzyskać listę domyślnych wartości właściwości dla wystąpienia <xref:System.Timers.Timer>, zobacz <xref:System.Timers.Timer.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cf629-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="cf629-143">Należy pamiętać, że .NET zawiera cztery klasy o nazwie `Timer`, każdy z którym znajdują się różne funkcje:</span><span class="sxs-lookup"><span data-stu-id="cf629-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="cf629-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (w tym temacie): wyzwala zdarzenie w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="cf629-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="cf629-145">Klasa jest przeznaczony do użycia jako oparte na serwerze lub składnik usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cf629-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="cf629-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: wykonuje metodę jednego wywołania zwrotnego w wątku puli wątków w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="cf629-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="cf629-147">Metody wywołania zwrotnego jest zdefiniowany, gdy zegar zostanie uruchomiony i nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="cf629-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="cf629-148">Podobnie jak <xref:System.Timers.Timer?displayProperty=nameWithType> klasy, ta klasa jest przeznaczona do użycia jako składnik serwera lub usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cf629-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="cf629-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Tylko w programie .NET framework): składnik formularzy systemu Windows, który wyzwala zdarzenie w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="cf629-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="cf629-150">Składnik nie ma interfejsu użytkownika i jest przeznaczony do użytku w środowisku jednowątkowy.</span><span class="sxs-lookup"><span data-stu-id="cf629-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="cf629-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Tylko w programie .NET framework): składnik ASP.NET, który wykonuje asynchroniczne i synchroniczne strony sieci web ogłaszania zwrotnego w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="cf629-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="cf629-152">Poniższy przykład tworzy `System.Timers.Timer` obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="cf629-153">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="cf629-154">Wszystkie publiczne <see langword="static" /> elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf629-154">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="cf629-155">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf629-155">Any instance members are not guaranteed to be thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-156">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy, a następnie ustawia wszystkie właściwości ich wartości początkowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-158">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="cf629-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="cf629-159">Właściwość</span><span class="sxs-lookup"><span data-stu-id="cf629-159">Property</span></span>|<span data-ttu-id="cf629-160">Wartość początkowa</span><span class="sxs-lookup"><span data-stu-id="cf629-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="cf629-161">100 milisekund</span><span class="sxs-lookup"><span data-stu-id="cf629-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="cf629-162">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cf629-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cf629-163">Poniższy przykład tworzy <xref:System.Timers.Timer> obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="cf629-164">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="cf629-165">Czas w milisekundach między zdarzeniami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-165">The time, in milliseconds, between events.</span>
          </span>
          <span data-ttu-id="cf629-166">Wartość musi być większa niż zero i mniejsza niż lub równa <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf629-167">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy i zestawy <see cref="P:System.Timers.Timer.Interval" /> właściwości na określoną liczbę milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-168">Ten konstruktor ustawia <xref:System.Timers.Timer.Interval%2A> właściwości nowe wystąpienie czasomierza, ale nie obsługuje czasomierza.</span><span class="sxs-lookup"><span data-stu-id="cf629-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-169">Poniższy przykład tworzy <xref:System.Timers.Timer> obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="cf629-170">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf629-171">Wartość <paramref name="interval" /> parametr jest większa od zera lub większej niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-172">Pobiera lub ustawia wartość logiczna wskazującą czy <see cref="T:System.Timers.Timer" /> należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń tylko raz (<see langword="false" />) lub wielokrotnie (<see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf629-173">
            <see langword="true" /> Jeśli <see cref="T:System.Timers.Timer" /> należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń zawsze czasu; <see langword="false" /> powinien on podniesieniu <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń tylko raz, po raz pierwszy czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-173">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span>
          </span>
          <span data-ttu-id="cf629-174">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-175">Jeśli <xref:System.Timers.Timer> jest już włączona, gdy <xref:System.Timers.Timer.Start%2A> metoda jest wywoływana, interwał zostanie zresetowana.</span><span class="sxs-lookup"><span data-stu-id="cf629-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="cf629-176">Jeśli <xref:System.Timers.Timer.AutoReset%2A> jest `false`, <xref:System.Timers.Timer.Start%2A> można wywołać metody, aby można było rozpocząć obliczanie ponownie.</span><span class="sxs-lookup"><span data-stu-id="cf629-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="cf629-177">Resetowanie interwał wpływa na kiedy <xref:System.Timers.Timer.Elapsed> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cf629-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="cf629-178">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik, który rozpoczyna się w czasie <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cf629-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="cf629-179">Jeśli zresetujesz interwał na 10 sekund, jeśli licznik osiągnie wartość 3 sekundy <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <xref:System.Timers.Timer.Enabled%2A> ustawiono właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-180">Poniższy przykład tworzy <xref:System.Timers.Timer> którego <xref:System.Timers.Timer.Elapsed> zdarzenie wyzwalane po 1,5 s.</span><span class="sxs-lookup"><span data-stu-id="cf629-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="cf629-181">Jej procedura obsługi zdarzeń następnie wyświetla "Witaj świecie!"</span><span class="sxs-lookup"><span data-stu-id="cf629-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="cf629-182">w konsoli.</span><span class="sxs-lookup"><span data-stu-id="cf629-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-183">Rozpoczyna inicjowanie środowiska wykonawczego <see cref="T:System.Timers.Timer" /> używany w formularzu lub przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-184">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt środowiska korzystania z tej metody można uruchomić inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="cf629-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="cf629-185"><xref:System.Timers.Timer.EndInit%2A> Metoda kończy się inicjowania.</span><span class="sxs-lookup"><span data-stu-id="cf629-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="cf629-186">Przy użyciu <xref:System.Timers.Timer.BeginInit%2A> i <xref:System.Timers.Timer.EndInit%2A> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="cf629-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-187">Zwalnia zasoby używane przez <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-188"><xref:System.Timers.Timer.Close%2A> Metoda z kolei wywołuje `Dispose` metody.</span><span class="sxs-lookup"><span data-stu-id="cf629-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cf629-189">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-189">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf629-190">Zwalnia wszelkie zasoby używane przez bieżące <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-191">Występuje, gdy upłynie interwał.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-191">Occurs when the interval elapses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-192"><xref:System.Timers.Timer.Elapsed> Zdarzenie jest wywoływane, gdy <xref:System.Timers.Timer.Enabled%2A> właściwość jest `true` i przedział czasu (w milisekundach) zdefiniowanych przez <xref:System.Timers.Timer.Interval%2A> upłynie właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf629-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="cf629-193">Jeśli <xref:System.Timers.Timer.AutoReset%2A> właściwość jest `true`, zdarzenie jest wywoływane wielokrotnie w odstępach czasu zdefiniowanych przez <xref:System.Timers.Timer.Interval%2A> właściwość; w przeciwnym razie zdarzenie jest wywoływane tylko raz, po raz pierwszy <xref:System.Timers.Timer.Interval%2A> wartość upłynie.</span><span class="sxs-lookup"><span data-stu-id="cf629-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="cf629-194">Jeśli <xref:System.Timers.Timer.Interval%2A> jest ustawiany po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="cf629-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="cf629-195">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> do `true`, licznik, który rozpoczyna się w czasie <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cf629-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="cf629-196">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <xref:System.Timers.Timer.Enabled%2A> ustawiono `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="cf629-197">Jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzenie jest zgłaszane przy <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="cf629-198">Jeśli przetwarzanie <xref:System.Timers.Timer.Elapsed> zdarzenia okresu dłuższego niż <xref:System.Timers.Timer.Interval%2A>, zdarzenie może zostać wywołane ponownie na innym <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="cf629-199">W takiej sytuacji należy współużytkowane programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-200">Metoda obsługi zdarzeń może działać w jednym wątku, w tym samym czasie, który wywołuje inny wątek <xref:System.Timers.Timer.Stop%2A> metody lub zestawy <xref:System.Timers.Timer.Enabled%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="cf629-201">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po czasomierz jest zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="cf629-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="cf629-202">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metody przedstawia sposób, aby uniknąć tej sytuacji wyścigu.</span><span class="sxs-lookup"><span data-stu-id="cf629-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="cf629-203">Nawet jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzeń może wystąpić po <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> została wywołana metoda lub po <xref:System.Timers.Timer.Enabled%2A> ustawioną właściwość `false`, ponieważ sygnału, aby podnieść <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cf629-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="cf629-204">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń ignorowanie kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="cf629-205"><xref:System.Timers.Timer> Składnika przechwytuje i pomija wszystkie wyjątki zgłaszane przez programy obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="cf629-206">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cf629-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-207">Poniższy przykład tworzy <xref:System.Timers.Timer> obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="cf629-208">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-209">Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Timers.Timer" /> należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf629-210">
            <see langword="true" /> Jeśli <see cref="T:System.Timers.Timer" /> należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-210">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cf629-211">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-211">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-212">Ustawienie <xref:System.Timers.Timer.Enabled%2A> do `true` jest taka sama jak wywołanie <xref:System.Timers.Timer.Start%2A>, podczas gdy ustawienie <xref:System.Timers.Timer.Enabled%2A> do `false` jest taka sama jak wywołanie <xref:System.Timers.Timer.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf629-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-213">Sygnał podnieść <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze umieszczonych w kolejce do wykonania na <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="cf629-214">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po <xref:System.Timers.Timer.Enabled%2A> właściwość jest ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="cf629-215">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metody przedstawia sposób obejścia sytuacja wyścigu.</span><span class="sxs-lookup"><span data-stu-id="cf629-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="cf629-216">Jeśli <xref:System.Timers.Timer.Enabled%2A> ustawiono `true` i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="cf629-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="cf629-217">Jeśli interwał jest ustawiany po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="cf629-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="cf629-218">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik, który rozpoczyna się w czasie <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cf629-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="cf629-219">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <xref:System.Timers.Timer.Enabled%2A> ustawiono `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-220">Niektóre wizualnych projektantów, takich jak w programie Microsoft Visual Studio, ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true` przy wstawianiu nowy <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="cf629-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-221">Poniższy przykład tworzy <xref:System.Timers.Timer> obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="cf629-222">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cf629-223">Nie można ustawić tej właściwości, ponieważ zegar został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-223">This property cannot be set because the timer has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf629-224">
            <see cref="P:System.Timers.Timer.Interval" /> Właściwość została ustawiona na wartość większą niż <see cref="F:System.Int32.MaxValue" /> przed włączeniem czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-225">Kończy się inicjowanie środowiska wykonawczego <see cref="T:System.Timers.Timer" /> używany w formularzu lub przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-226">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt środowiska korzystania z tej metody do zakończenia inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="cf629-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="cf629-227"><xref:System.Timers.Timer.BeginInit%2A> Metoda uruchamia inicjowania.</span><span class="sxs-lookup"><span data-stu-id="cf629-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="cf629-228">Przy użyciu <xref:System.Timers.Timer.BeginInit%2A> i <xref:System.Timers.Timer.EndInit%2A> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="cf629-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-229">Pobiera lub ustawia interwał wyrażony w milisekundach, w którym należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf629-230">Czas w milisekundach między <see cref="E:System.Timers.Timer.Elapsed" /> zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span>
          </span>
          <span data-ttu-id="cf629-231">Wartość musi być większa niż zero i mniejsza niż lub równa <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="cf629-232">Wartość domyślna to 100 milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-232">The default is 100 milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-233">Możesz użyć <xref:System.Timers.Timer.Interval%2A> właściwość, aby ustalić częstotliwość, z jaką <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="cf629-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="cf629-234">Ponieważ <xref:System.Timers.Timer> klasy zależy zegar systemowy, ma taką samą rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="cf629-235">Oznacza to, że <xref:System.Timers.Timer.Elapsed> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych uzyskuje się poprzez rozpoznanie zegar systemowy, jeśli <xref:System.Timers.Timer.Interval%2A> właściwości jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="cf629-236">W poniższym przykładzie <xref:System.Timers.Timer.Interval%2A> właściwości do 5 w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="cf629-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="cf629-237">Uruchomienia [!INCLUDE[win7](~/includes/win7-md.md)] systemu, w których zegara systemowego ma rozdzielczość około 15 milisekund, generowane zdarzenie co około 15 milisekund niż co 5 milisekund.</span><span class="sxs-lookup"><span data-stu-id="cf629-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="cf629-238">Poniższy kod umożliwia określenie rozdzielczości zegara systemowego w bieżącym systemie:</span><span class="sxs-lookup"><span data-stu-id="cf629-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="cf629-239">Jeśli aplikacja wymaga rozpoznawania większa niż oferowane przez <xref:System.Timers.Timer> klasy lub zegar systemowy, użyj wysokiej rozdzielczości czasomierze multimediów; zobacz [porady: Użyj czasomierza rozdzielczości](http://msdn.microsoft.com/library/aa964692.aspx).</span><span class="sxs-lookup"><span data-stu-id="cf629-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](http://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="cf629-240">Jeśli interwał jest ustawiany po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="cf629-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="cf629-241">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik, który rozpoczyna się w czasie <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cf629-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="cf629-242">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <xref:System.Timers.Timer.Enabled%2A> ustawiono `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="cf629-243">Jeśli <xref:System.Timers.Timer.Enabled%2A> ustawiono `true` i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="cf629-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="cf629-244"><xref:System.Timers.Timer.Enabled%2A> następnie ustawiono `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-245">Jeśli <xref:System.Timers.Timer.Enabled%2A> i <xref:System.Timers.Timer.AutoReset%2A> są ustawione na `false`, i czasomierza wcześniej została włączona, ustawienie <xref:System.Timers.Timer.Interval%2A> powoduje, że właściwość <xref:System.Timers.Timer.Elapsed> się jeden raz, zdarzenia tak, jakby <xref:System.Timers.Timer.Enabled%2A> właściwość ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="cf629-246">Aby ustawić interwał bez wywołaniem zdarzenia, można tymczasowo ustawić <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, ustaw <xref:System.Timers.Timer.Interval%2A> przedział czasu odpowiednią dla właściwości, a następnie ustaw natychmiast <xref:System.Timers.Timer.Enabled%2A> właściwości z powrotem do `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-247">Poniższy przykład tworzy <xref:System.Timers.Timer> obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="cf629-248">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf629-249">Interwał jest mniejsza lub równa zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-249">The interval is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="cf629-250">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-250">-or-</span>
          </span>
          <span data-ttu-id="cf629-251">Interwał jest większa niż <see cref="F:System.Int32.MaxValue" />, a czasomierz jest aktualnie włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-251">The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span>
          </span>
          <span data-ttu-id="cf629-252">(Jeśli licznik nie jest aktualnie włączone, nie jest zwracany wyjątek, dopóki nie zostanie włączona.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-252">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-253">Pobiera lub ustawia lokacji, która jest powiązywana <see cref="T:System.Timers.Timer" /> do jego kontenera w trybie projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-253">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf629-254">
            <see cref="T:System.ComponentModel.ISite" /> Interfejs reprezentujący lokacji, która jest powiązywana <see cref="T:System.Timers.Timer" /> obiektu do jego kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-254">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-255">Powiązania witryny <xref:System.ComponentModel.Component> do <xref:System.ComponentModel.Container> i umożliwić komunikację między nimi, dzięki czemu kontener, aby zarządzać jego składniki.</span><span class="sxs-lookup"><span data-stu-id="cf629-255">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-256">Uruchamia wywoływanie <see cref="E:System.Timers.Timer.Elapsed" /> zdarzenia przez ustawienie <see cref="P:System.Timers.Timer.Enabled" /> do <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-256">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-257">Jeśli <xref:System.Timers.Timer.Start%2A> nosi nazwę i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="cf629-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="cf629-258">Jeśli <xref:System.Timers.Timer.Start%2A> nosi nazwę i <xref:System.Timers.Timer.AutoReset%2A> jest `true`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> czas trwania zdarzenia pierwszy interwał upływa i będzie nadal występować wywołać zdarzenia w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="cf629-258">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="cf629-259">Można także uruchomić przez ustawienie czasu <xref:System.Timers.Timer.Enabled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="cf629-259">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-260">Jeśli <xref:System.Timers.Timer.AutoReset%2A> jest `false`, <xref:System.Timers.Timer.Start%2A> można wywołać metody, aby można było rozpocząć obliczanie ponownie.</span><span class="sxs-lookup"><span data-stu-id="cf629-260">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="cf629-261">Wywołanie <xref:System.Timers.Timer.Start%2A> metody włączenie czasomierza nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="cf629-261">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cf629-262">
            <see cref="T:System.Timers.Timer" /> Utworzeniu interwał równy lub większy niż <see cref="F:System.Int32.MaxValue" /> + 1 lub ustaw interwał mniejsze od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-262">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf629-263">Zatrzymuje wywoływanie <see cref="E:System.Timers.Timer.Elapsed" /> zdarzenia przez ustawienie <see cref="P:System.Timers.Timer.Enabled" /> do <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-263">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-264">Można również zatrzymać chronometrażu przez ustawienie <xref:System.Timers.Timer.Enabled%2A> do `false`.</span><span class="sxs-lookup"><span data-stu-id="cf629-264">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-265">Sygnał podnieść <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze umieszczonych w kolejce do wykonania na <xref:System.Threading.ThreadPool> wątku, co metoda obsługi zdarzeń może być uruchamiane w jeden wątek, w tym samym czasie, który wywołanie <xref:System.Timers.Timer.Stop%2A> metoda jest uruchamiana w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="cf629-265">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="cf629-266">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po <xref:System.Timers.Timer.Stop%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cf629-266">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="cf629-267">W następnej sekcji przykładowy kod przedstawia sposób obejścia sytuacja wyścigu.</span><span class="sxs-lookup"><span data-stu-id="cf629-267">The code example in the next section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-268">Poniższy przykład tworzy `System.Timers.Timer` obiekt, który uruchamia się jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="cf629-268">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="cf629-269">Program obsługi zdarzeń zawiera wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość zawsze jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="cf629-269">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="cf629-270">Gdy użytkownik naciśnie klawisz Enter, <xref:System.Timers.Timer.Stop%2A> metoda przed zakończeniem aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cf629-270">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="cf629-271">Poniższy przykładowy kod przedstawia sposób zapobiec wątku, który wywołuje <xref:System.Timers.Timer.Stop%2A> metoda przed kontynuowaniem do aktualnie wykonywanych <xref:System.Timers.Timer.Elapsed> zakończenia zdarzenia i również dwa zapobiec <xref:System.Timers.Timer.Elapsed> zdarzenia wykonywanie programu obsługi zdarzeń w tym samym czas (nazywanej często ponownego rozpoczęcia).</span><span class="sxs-lookup"><span data-stu-id="cf629-271">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="cf629-272">Przykład wykonuje 100 uruchomień testów.</span><span class="sxs-lookup"><span data-stu-id="cf629-272">The example executes 100 test runs.</span></span> <span data-ttu-id="cf629-273">Zawsze, gdy test jest uruchomiony, czasomierza została uruchomiona z interwałem równym 150 milisekund.</span><span class="sxs-lookup"><span data-stu-id="cf629-273">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="cf629-274">Program obsługi zdarzeń używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodę, aby symulować zadanie, które losowo różni się o długości od 50 do 200 ms.</span><span class="sxs-lookup"><span data-stu-id="cf629-274">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="cf629-275">Metoda testowa uruchamia również wątku formant, który oczekuje na sekundę, a następnie zatrzymuje czasomierza.</span><span class="sxs-lookup"><span data-stu-id="cf629-275">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="cf629-276">Jeśli zdarzenie jest obsługiwane czasomierza zatrzymania wątku kontroli, wątek kontroli musi poczekać na zdarzenie zostało zakończone przed kontynuowaniem.</span><span class="sxs-lookup"><span data-stu-id="cf629-276">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="cf629-277"><xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Przeciążenie metody jest używana w celu uniknięcia ponownego rozpoczęcia i uniemożliwić wątku kontroli kontynuowana do czasu zakończenia wykonywania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cf629-277">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="cf629-278">Program obsługi zdarzeń używa <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodę, aby ustawić formantu zmiennej na wartość 1, ale tylko wtedy, gdy wartość jest obecnie zero.</span><span class="sxs-lookup"><span data-stu-id="cf629-278">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="cf629-279">Jest to niepodzielną operację.</span><span class="sxs-lookup"><span data-stu-id="cf629-279">This is an atomic operation.</span></span> <span data-ttu-id="cf629-280">Jeśli wartość zwracana jest wartość zero, 1 została ustawiona zmienna kontroli i obsługi zdarzeń będzie kontynuowana.</span><span class="sxs-lookup"><span data-stu-id="cf629-280">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="cf629-281">Jeśli wartość zwracana jest niezerowa, zdarzenie jest po prostu odrzucony Aby uniknąć ponownego rozpoczęcia.</span><span class="sxs-lookup"><span data-stu-id="cf629-281">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="cf629-282">(Jakby wykonać każde zdarzenie <xref:System.Threading.Monitor> klasy będzie lepszym sposobem zdarzenia synchronizacji.) Po zakończeniu obsługi zdarzeń, ustawia zmienna sterująca wstecz na zero.</span><span class="sxs-lookup"><span data-stu-id="cf629-282">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="cf629-283">Przykład rejestruje łączną liczbę zdarzeń, które wykonane, które zostały odrzucone z powodu ponownego rozpoczęcia i które wystąpiły po <xref:System.Timers.Timer.Stop%2A> wywołano metodę.</span><span class="sxs-lookup"><span data-stu-id="cf629-283">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="cf629-284">Wątek kontroli używa <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodę, aby ustawić formant zmiennej na wartość -1 (minus jeden), ale tylko wtedy, gdy wartość jest obecnie zero.</span><span class="sxs-lookup"><span data-stu-id="cf629-284">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="cf629-285">Jeśli niepodzielną operację zwraca wartość inną niż zero, zdarzenie jest obecnie wykonywane.</span><span class="sxs-lookup"><span data-stu-id="cf629-285">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="cf629-286">Wątek kontroli czeka i próbuje ponownie.</span><span class="sxs-lookup"><span data-stu-id="cf629-286">The control thread waits and tries again.</span></span> <span data-ttu-id="cf629-287">Przykład rejestruje liczbę razy wątku formant miał oczekiwania na zdarzenie zakończyć.</span><span class="sxs-lookup"><span data-stu-id="cf629-287">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf629-288">Pobiera lub ustawia obiekt używany do organizowania wywołań obsługi zdarzeń, które są wydawane po upłynięciu interwału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-288">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf629-289">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> Reprezentujący obiekt używany do organizowania wywołań obsługi zdarzeń, które są wydawane po upłynięciu interwału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-289">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span>
          </span>
          <span data-ttu-id="cf629-290">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf629-290">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf629-291">Gdy <xref:System.Timers.Timer.SynchronizingObject%2A> jest `null`, metoda obsługująca <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane w wątku z puli wątków systemu.</span><span class="sxs-lookup"><span data-stu-id="cf629-291">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="cf629-292">Aby uzyskać więcej informacji na pule wątków systemu, zobacz <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="cf629-292">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="cf629-293">Gdy <xref:System.Timers.Timer.Elapsed> zdarzenie jest obsługiwane przez składnik visual formularzy systemu Windows, takie jak przycisk, uzyskiwanie dostępu do składnika za pośrednictwem puli wątków systemu może wynik wyjątku lub po prostu mogą nie działać.</span><span class="sxs-lookup"><span data-stu-id="cf629-293">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="cf629-294">Ustawiając uniknąć tego efektu <xref:System.Timers.Timer.SynchronizingObject%2A> składnika formularzy systemu Windows, co powoduje, że metoda obsługująca <xref:System.Timers.Timer.Elapsed> zdarzeń ma być wywołane na tym samym wątku, który składnik został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="cf629-294">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf629-295">Nawet jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzeń może wystąpić po <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> została wywołana metoda lub po <xref:System.Timers.Timer.Enabled%2A> ustawioną właściwość `false`, ponieważ sygnału, aby wywołać <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cf629-295">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="cf629-296">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń ignorowanie kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cf629-296">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="cf629-297">Jeśli <xref:System.Timers.Timer> jest używany w programie Visual Studio za pomocą projektanta formularzy systemu Windows <xref:System.Timers.Timer.SynchronizingObject%2A> jest automatycznie ustawiana formant, który zawiera <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="cf629-297">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="cf629-298">Na przykład, jeśli zostanie <xref:System.Timers.Timer> na projektanta dla `Form1` (który dziedziczy z <xref:System.Windows.Forms.Form>), <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość <xref:System.Timers.Timer> ustawiono wystąpienie `Form1`.</span><span class="sxs-lookup"><span data-stu-id="cf629-298">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf629-299">Poniższy przykład jest aplikacji formularzy systemu Windows, która służy jako edytora tekstu bardzo proste.</span><span class="sxs-lookup"><span data-stu-id="cf629-299">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="cf629-300">Gdy tekst w polu tekstowym nie został zapisany, aplikacja pyta użytkownika w odstępach jednej minuty czy chce można zapisać zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="cf629-300">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="cf629-301">Aby to zrobić, <xref:System.Timers.Timer.Interval%2A> właściwość jest ustawiona na minutę (60 000 w milisekundach) i <xref:System.Timers.Timer.SynchronizingObject%2A> ma ustawioną właściwość <xref:System.Windows.Forms.Form> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf629-301">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="cf629-302">Przykład wymaga, Dodaj następujące formanty do formularza:</span><span class="sxs-lookup"><span data-stu-id="cf629-302">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="cf629-303">A <xref:System.Windows.Forms.TextBox> formantu o nazwie `TextBox1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="cf629-303">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="cf629-304">A <xref:System.Windows.Forms.Button> formantu o nazwie `Button1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="cf629-304">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="cf629-305">A <xref:System.Windows.Forms.SaveFileDialog> formantu o nazwie `SaveSaveFileDialog1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="cf629-305">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>