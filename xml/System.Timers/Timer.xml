<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85e0c0d7fac03c6196d3ad44416b613fe20113c1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="024b3-101">Generuje zdarzenie po Ustaw interwał, z opcją do generowania zdarzeń cyklicznych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="024b3-101">Generates an event after a set interval, with an option to generate recurring events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-102"><xref:System.Timers.Timer> Składnik to czasomierza na serwerze, który wywołuje <xref:System.Timers.Timer.Elapsed> zdarzenie w aplikacji po liczbę milisekund w <xref:System.Timers.Timer.Interval%2A> upłynął właściwości.</span><span class="sxs-lookup"><span data-stu-id="024b3-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="024b3-103">Można skonfigurować <xref:System.Timers.Timer> obiektu, aby zgłosić zdarzenie, tylko raz lub wielokrotnie przy użyciu <xref:System.Timers.Timer.AutoReset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="024b3-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="024b3-104">Zazwyczaj <xref:System.Timers.Timer> obiekt nie został zadeklarowany na poziomie klasy, tak aby pozostaje w zakresie, tak długo, jak jest to konieczne.</span><span class="sxs-lookup"><span data-stu-id="024b3-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="024b3-105">Może następnie obsłużyć jego <xref:System.Timers.Timer.Elapsed> zdarzenia w celu zapewnienia zwykłego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="024b3-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="024b3-106">Załóżmy na przykład, posiadasz serwera o krytycznym znaczeniu, które muszą być przechowywane systemem 24 godziny na dobę, 7 dni w tygodniu.</span><span class="sxs-lookup"><span data-stu-id="024b3-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="024b3-107">Można utworzyć usługę, która używa <xref:System.Timers.Timer> obiekt, aby okresowo Sprawdź serwer i upewnij się, że system działa.</span><span class="sxs-lookup"><span data-stu-id="024b3-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="024b3-108">Jeśli system nie odpowiada, usługa może spróbować ponownie uruchomić serwer lub Powiadom administratora.</span><span class="sxs-lookup"><span data-stu-id="024b3-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="024b3-109"><xref:System.Timers.Timer> Klasy nie jest dostępna dla wszystkich implementacje platformy .NET i wersji, takich jak .NET Standard w wersji 1.6 i niższych wersji.</span><span class="sxs-lookup"><span data-stu-id="024b3-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="024b3-110">W takich przypadkach można użyć <xref:System.Threading.Timer?displayProperty=nameWithType> klasy zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="024b3-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="024b3-111">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="024b3-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="024b3-112">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="024b3-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="024b3-113">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="024b3-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="024b3-114">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="024b3-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="024b3-115">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="024b3-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="024b3-116">Na serwerze <xref:System.Timers.Timer?displayProperty=nameWithType> klasy jest przeznaczony do użytku z wątków roboczych w środowisku wielowątkowym.</span><span class="sxs-lookup"><span data-stu-id="024b3-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="024b3-117">Czasomierze serwera można poruszać się między wątków do obsługi wpuszczonych <xref:System.Timers.Timer.Elapsed> zdarzeń, wynikowa dokładność więcej niż Windows czasomierzy w podnoszonego zdarzenia w czasie.</span><span class="sxs-lookup"><span data-stu-id="024b3-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="024b3-118"><xref:System.Timers.Timer?displayProperty=nameWithType> Składnik wywołuje <xref:System.Timers.Timer.Elapsed> , oparte na zdarzeniach na wartości (w milisekundach) <xref:System.Timers.Timer.Interval%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="024b3-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="024b3-119">Może obsługiwać to zdarzenie w celu wykonywania przetwarzania, których potrzebujesz.</span><span class="sxs-lookup"><span data-stu-id="024b3-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="024b3-120">Na przykład załóżmy, że masz aplikację sprzedaży online, która stale wysyła zamówień sprzedaży z bazą danych.</span><span class="sxs-lookup"><span data-stu-id="024b3-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="024b3-121">Usługa, która kompiluje instrukcje dotyczące wysyłania działa w zadaniu wsadowym zamówienia, a nie indywidualnie przetwarzania każdego zamówienia.</span><span class="sxs-lookup"><span data-stu-id="024b3-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="024b3-122">Można użyć <xref:System.Timers.Timer> można uruchomić wsadowo co 30 minut.</span><span class="sxs-lookup"><span data-stu-id="024b3-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="024b3-123">Klasa System.Timers.Timer ma taką samą rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="024b3-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="024b3-124">Oznacza to, że <xref:System.Timers.Timer.Elapsed> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Timers.Timer.Interval%2A> właściwość jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="024b3-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="024b3-125">Aby uzyskać więcej informacji, zobacz <xref:System.Timers.Timer.Interval%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="024b3-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="024b3-126">Gdy <xref:System.Timers.Timer.AutoReset%2A> jest ustawiona na `false`, <xref:System.Timers.Timer?displayProperty=nameWithType> obiektu zgłasza <xref:System.Timers.Timer.Elapsed> zdarzeń tylko raz, po pierwszym <xref:System.Timers.Timer.Interval%2A> upłynął.</span><span class="sxs-lookup"><span data-stu-id="024b3-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="024b3-127">Aby zachować wywoływanie <xref:System.Timers.Timer.Elapsed> zdarzeń regularnie w odstępach czasu zdefiniowanych przez <xref:System.Timers.Timer.Interval%2A>ustaw <xref:System.Timers.Timer.AutoReset%2A> do `true`, która jest wartością domyślną.</span><span class="sxs-lookup"><span data-stu-id="024b3-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="024b3-128"><xref:System.Timers.Timer> Składnika przechwytuje i pomija wszystkie wyjątki generowane przez programy obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="024b3-129">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="024b3-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="024b3-130">Należy jednak pamiętać, że nie jest to prawdą programu obsługi zdarzeń, które są wykonywane asynchronicznie i obejmują `await` — operator (w języku C#) lub `Await` operatora (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="024b3-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="024b3-131">Wyjątki zgłaszane w tych programów obsługi zdarzeń jest propagowany z powrotem do wywołanego wątku, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="024b3-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="024b3-132">Aby uzyskać więcej informacji na temat wyjątki zgłaszane w metodach asynchronicznych, zobacz [wyjątków](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="024b3-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="024b3-133">Jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość `null`, <xref:System.Timers.Timer.Elapsed> zdarzenie jest zgłaszane w <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="024b3-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="024b3-134">Jeśli przetwarzanie <xref:System.Timers.Timer.Elapsed> zdarzeń, jest dostępna więcej niż <xref:System.Timers.Timer.Interval%2A>, zdarzenie może zostać wywołane ponownie na innym <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="024b3-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="024b3-135">W takiej sytuacji program obsługi zdarzeń powinny być współużytkowane.</span><span class="sxs-lookup"><span data-stu-id="024b3-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-136">Metoda obsługi zdarzeń mogą być uruchamiane w jednym wątku, w tym samym czasie, który wywołuje inny wątek <xref:System.Timers.Timer.Stop%2A> metody lub zestawy <xref:System.Timers.Timer.Enabled%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="024b3-137">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po Czasomierz został zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="024b3-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="024b3-138">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metoda pokazano jeden ze sposobów, aby uniknąć tej sytuacji wyścigu.</span><span class="sxs-lookup"><span data-stu-id="024b3-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="024b3-139">Nawet jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzenia mogą wystąpić po wywołaniu <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> metody lub po ustawieniu <xref:System.Timers.Timer.Enabled%2A> właściwości `false`, ponieważ sygnał do podniesienia <xref:System.Timers.Timer.Elapsed> zdarzenia jest zawsze umieszczany w kolejce do wykonania w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="024b3-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="024b3-140">Jednym ze sposobów, aby rozwiązać sytuacja wyścigu jest ustawiona flaga, która informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzenie, aby zignorować kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="024b3-141">Jeśli używasz <xref:System.Timers.Timer?displayProperty=nameWithType> klasy za pomocą elementu interfejsu użytkownika, takie jak formularza lub formantu, bez pogarszania czasomierza na ten element interfejsu użytkownika, przypisz formularza lub formantu, który zawiera <xref:System.Timers.Timer> do <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość tak, aby zdarzenia przekazywane do wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="024b3-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="024b3-142">Aby uzyskać listę domyślnych wartości właściwości wystąpienia <xref:System.Timers.Timer>, zobacz <xref:System.Timers.Timer.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="024b3-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="024b3-143">Należy pamiętać, że .NET zawiera cztery klasy o nazwie `Timer`, każdy z której oferuje różne funkcje:</span><span class="sxs-lookup"><span data-stu-id="024b3-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="024b3-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (w tym temacie): uruchamia zdarzenie w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="024b3-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="024b3-145">Klasa jest przeznaczone do użytku jako na serwerze lub składnik usługi w środowisku wielowątkowym. go nie ma interfejsu użytkownika i nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="024b3-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="024b3-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: wykonuje metodę pojedynczego wywołania zwrotnego w wątku z puli wątków w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="024b3-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="024b3-147">Metoda wywołania zwrotnego jest określona, gdy czasomierz zostanie uruchomiony i nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="024b3-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="024b3-148">Podobnie jak <xref:System.Timers.Timer?displayProperty=nameWithType> klasy, ta klasa jest przeznaczona do użytku jako składnik serwera lub usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="024b3-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="024b3-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Tylko program .NET framework): składnik Windows Forms, który uruchamia zdarzenie w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="024b3-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="024b3-150">Składnik nie ma interfejsu użytkownika i jest przeznaczony do użytku w środowisku apartamentem.</span><span class="sxs-lookup"><span data-stu-id="024b3-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="024b3-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Tylko program .NET framework): składnik ASP.NET, który wykonuje ogłaszania zwrotnego asynchronicznego lub synchronicznego strony sieci web w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="024b3-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="024b3-152">Poniższy przykład tworzy wystąpienie `System.Timers.Timer` obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="024b3-153">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="024b3-154">Wszystkie publiczne <see langword="static" /> elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="024b3-154">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="024b3-155">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="024b3-155">Any instance members are not guaranteed to be thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-156">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy i ustawia wszystkie właściwości do wartości początkowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-158">W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="024b3-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="024b3-159">Właściwość</span><span class="sxs-lookup"><span data-stu-id="024b3-159">Property</span></span>|<span data-ttu-id="024b3-160">Wartość początkowa</span><span class="sxs-lookup"><span data-stu-id="024b3-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="024b3-161">100 MS</span><span class="sxs-lookup"><span data-stu-id="024b3-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="024b3-162">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="024b3-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="024b3-163">Poniższy przykład tworzy wystąpienie <xref:System.Timers.Timer> obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="024b3-164">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberSignature Language="F#" Value="new System.Timers.Timer : double -&gt; System.Timers.Timer" Usage="new System.Timers.Timer interval" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="024b3-165">Czas w milisekundach między zdarzeniami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-165">The time, in milliseconds, between events.</span>
          </span>
          <span data-ttu-id="024b3-166">Wartość musi być większa od zera i mniejszy niż lub równe <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="024b3-167">Inicjuje nowe wystąpienie klasy <see cref="T:System.Timers.Timer" /> klasy i zestawy <see cref="P:System.Timers.Timer.Interval" /> właściwość określoną liczbę milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-168">Ten konstruktor ustawia <xref:System.Timers.Timer.Interval%2A> właściwości nowego wystąpienia czasomierza, ale nie uwzględnia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="024b3-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-169">Poniższy przykład tworzy wystąpienie <xref:System.Timers.Timer> obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="024b3-170">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="024b3-171">Wartość <paramref name="interval" /> parametr jest mniejsza lub równa zero, lub większa od <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReset : bool with get, set" Usage="System.Timers.Timer.AutoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-172">Pobiera lub ustawia wartość logiczna wskazującą czy <see cref="T:System.Timers.Timer" /> powinny wywoływać <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń tylko raz (<see langword="false" />) lub wielokrotnie (<see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="024b3-173">
            <see langword="true" /> Jeśli <see cref="T:System.Timers.Timer" /> powinny wywoływać <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń każdorazowo czasu; <see langword="false" /> Jeśli go, powinny wywoływać <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń tylko raz, po raz pierwszy czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-173">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span>
          </span>
          <span data-ttu-id="024b3-174">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-175">Jeśli <xref:System.Timers.Timer> jest już włączona po <xref:System.Timers.Timer.Start%2A> metoda jest wywoływana, interwał zostanie zresetowana.</span><span class="sxs-lookup"><span data-stu-id="024b3-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="024b3-176">Jeśli <xref:System.Timers.Timer.AutoReset%2A> jest `false`, <xref:System.Timers.Timer.Start%2A> można wywołać metody, aby ponownie uruchomić liczba.</span><span class="sxs-lookup"><span data-stu-id="024b3-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="024b3-177">Interwał resetowania wpływa na kiedy <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="024b3-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="024b3-178">Na przykład, jeśli ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik rozpoczyna się od czasu <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="024b3-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="024b3-179">Jeśli zresetujesz interwał to 10 sekund po 3 sekundach, liczba <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekundach, po <xref:System.Timers.Timer.Enabled%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-180">Poniższy przykład tworzy <xref:System.Timers.Timer> którego <xref:System.Timers.Timer.Elapsed> generowane zdarzenie po 1,5 s.</span><span class="sxs-lookup"><span data-stu-id="024b3-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="024b3-181">Jego obsługa zdarzeń wyświetla "Hello World!"</span><span class="sxs-lookup"><span data-stu-id="024b3-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="024b3-182">w konsoli.</span><span class="sxs-lookup"><span data-stu-id="024b3-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="timer.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-183">Rozpoczyna się zainicjowanie środowiska wykonawczego <see cref="T:System.Timers.Timer" /> używanego w formularzu lub przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-184">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt środowiska korzystania z tej metody można uruchomić inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="024b3-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="024b3-185"><xref:System.Timers.Timer.EndInit%2A> Metoda kończy się inicjowanie.</span><span class="sxs-lookup"><span data-stu-id="024b3-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="024b3-186">Za pomocą <xref:System.Timers.Timer.BeginInit%2A> i <xref:System.Timers.Timer.EndInit%2A> metody zapobiega używana przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="024b3-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="timer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-187">Zwalnia zasoby używane przez <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-188"><xref:System.Timers.Timer.Close%2A> Metoda z kolei wywołuje `Dispose` metody.</span><span class="sxs-lookup"><span data-stu-id="024b3-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="024b3-189">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-189">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="024b3-190">Zwalnia wszelkie zasoby używane przez bieżące <see cref="T:System.Timers.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberSignature Language="F#" Value="member this.Elapsed : System.Timers.ElapsedEventHandler " Usage="member this.Elapsed : System.Timers.ElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-191">Występuje, gdy on upłynie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-191">Occurs when the interval elapses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-192"><xref:System.Timers.Timer.Elapsed> Zdarzenie jest zgłaszane w przypadku <xref:System.Timers.Timer.Enabled%2A> właściwość `true` i przedział czasu (w milisekundach), zdefiniowane przez <xref:System.Timers.Timer.Interval%2A> upłynie właściwości.</span><span class="sxs-lookup"><span data-stu-id="024b3-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="024b3-193">Jeśli <xref:System.Timers.Timer.AutoReset%2A> właściwość `true`, zdarzenie jest wywoływane wielokrotnie w odstępach czasu zdefiniowanych przez <xref:System.Timers.Timer.Interval%2A> właściwości; w przeciwnym razie zdarzenie jest zgłaszane tylko raz, po raz pierwszy <xref:System.Timers.Timer.Interval%2A> wartość upłynie.</span><span class="sxs-lookup"><span data-stu-id="024b3-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="024b3-194">Jeśli <xref:System.Timers.Timer.Interval%2A> jest ustawiany po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="024b3-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="024b3-195">Na przykład, jeśli ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> do `true`, licznik rozpoczyna się od czasu <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="024b3-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="024b3-196">Jeśli zresetujesz interwał to 10 sekund po 3 sekundach, liczba <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekundach, po <xref:System.Timers.Timer.Enabled%2A> została ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="024b3-197">Jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość `null`, <xref:System.Timers.Timer.Elapsed> zdarzenie jest zgłaszane w <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="024b3-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="024b3-198">Jeśli przetwarzanie <xref:System.Timers.Timer.Elapsed> zdarzeń, jest dostępna więcej niż <xref:System.Timers.Timer.Interval%2A>, zdarzenie może zostać wywołane ponownie na innym <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="024b3-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="024b3-199">W takiej sytuacji program obsługi zdarzeń powinny być współużytkowane.</span><span class="sxs-lookup"><span data-stu-id="024b3-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-200">Metoda obsługi zdarzeń mogą być uruchamiane w jednym wątku, w tym samym czasie, który wywołuje inny wątek <xref:System.Timers.Timer.Stop%2A> metody lub zestawy <xref:System.Timers.Timer.Enabled%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="024b3-201">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po Czasomierz został zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="024b3-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="024b3-202">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metoda pokazano jeden ze sposobów, aby uniknąć tej sytuacji wyścigu.</span><span class="sxs-lookup"><span data-stu-id="024b3-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="024b3-203">Nawet jeśli <xref:System.Timers.Timer.SynchronizingObject%2A> nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzenia mogą wystąpić po wywołaniu <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> metody lub po ustawieniu <xref:System.Timers.Timer.Enabled%2A> właściwości `false`, ponieważ sygnał do podniesienia <xref:System.Timers.Timer.Elapsed> zdarzenia jest zawsze umieszczany w kolejce do wykonania w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="024b3-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="024b3-204">Jednym ze sposobów, aby rozwiązać sytuacja wyścigu jest ustawiona flaga, która informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzenie, aby zignorować kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="024b3-205"><xref:System.Timers.Timer> Składnika przechwytuje i pomija wszystkie wyjątki generowane przez programy obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="024b3-206">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="024b3-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-207">Poniższy przykład tworzy wystąpienie <xref:System.Timers.Timer> obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="024b3-208">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Timers.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-209">Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Timers.Timer" /> powinny wywoływać <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="024b3-210">
            <see langword="true" /> Jeśli <see cref="T:System.Timers.Timer" /> powinny wywoływać <see cref="E:System.Timers.Timer.Elapsed" /> zdarzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-210">
              <see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="024b3-211">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-211">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-212">Ustawienie <xref:System.Timers.Timer.Enabled%2A> do `true` jest taka sama jak wywołanie <xref:System.Timers.Timer.Start%2A>, podczas gdy ustawienie <xref:System.Timers.Timer.Enabled%2A> do `false` jest taka sama jak wywołania <xref:System.Timers.Timer.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="024b3-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-213">Sygnał do pozyskania <xref:System.Timers.Timer.Elapsed> zdarzeń jest zawsze w kolejce do wykonania na <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="024b3-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="024b3-214">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po <xref:System.Timers.Timer.Enabled%2A> właściwość jest ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="024b3-215">Przykład kodu dla <xref:System.Timers.Timer.Stop%2A> metoda pokazano jeden ze sposobów obejścia tego wyścigu.</span><span class="sxs-lookup"><span data-stu-id="024b3-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="024b3-216">Jeśli <xref:System.Timers.Timer.Enabled%2A> jest ustawiona na `true` i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="024b3-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="024b3-217">Jeśli ustawiono interwał po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="024b3-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="024b3-218">Na przykład, jeśli ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik rozpoczyna się od czasu <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="024b3-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="024b3-219">Jeśli zresetujesz interwał to 10 sekund po 3 sekundach, liczba <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekundach, po <xref:System.Timers.Timer.Enabled%2A> została ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-220">Ustaw niektórych projektantów wizualnych, takich jak w programie Microsoft Visual Studio <xref:System.Timers.Timer.Enabled%2A> właściwości `true` podczas wstawiania nowego <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="024b3-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-221">Poniższy przykład tworzy wystąpienie <xref:System.Timers.Timer> obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="024b3-222">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="024b3-223">Nie można ustawić tę właściwość, ponieważ Czasomierz został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-223">This property cannot be set because the timer has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="024b3-224">
            <see cref="P:System.Timers.Timer.Interval" /> Właściwość została ustawiona na wartość większą niż <see cref="F:System.Int32.MaxValue" /> przed włączeniem czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="timer.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-225">Kończy się zainicjowanie środowiska wykonawczego <see cref="T:System.Timers.Timer" /> używanego w formularzu lub przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-226">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt środowiska korzystania z tej metody do zakończenia inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="024b3-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="024b3-227"><xref:System.Timers.Timer.BeginInit%2A> Metoda uruchamia inicjowania.</span><span class="sxs-lookup"><span data-stu-id="024b3-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="024b3-228">Za pomocą <xref:System.Timers.Timer.BeginInit%2A> i <xref:System.Timers.Timer.EndInit%2A> metody zapobiega używana przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="024b3-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Timers.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-229">Pobiera lub ustawia interwał wyrażony w milisekundach, od którego należy podnieść <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="024b3-230">Czas w milisekundach między <see cref="E:System.Timers.Timer.Elapsed" /> zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span>
          </span>
          <span data-ttu-id="024b3-231">Wartość musi być większa od zera i mniejszy niż lub równe <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="024b3-232">Wartość domyślna to 100 milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-232">The default is 100 milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-233">Możesz użyć <xref:System.Timers.Timer.Interval%2A> własność, aby określić częstotliwość, z jaką <xref:System.Timers.Timer.Elapsed> jest wyzwalane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="024b3-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="024b3-234">Ponieważ <xref:System.Timers.Timer> klasy zależy od zegara systemowego, ma taką samą rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="024b3-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="024b3-235">Oznacza to, że <xref:System.Timers.Timer.Elapsed> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Timers.Timer.Interval%2A> właściwość jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="024b3-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="024b3-236">Poniższy przykład ustawia <xref:System.Timers.Timer.Interval%2A> właściwość 5 milisekund.</span><span class="sxs-lookup"><span data-stu-id="024b3-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="024b3-237">Kiedy uruchomiona na [!INCLUDE[win7](~/includes/win7-md.md)] systemu, w których zegar systemowy ma rozdzielczość około 15 milisekund, generowane zdarzenie, co około 15 milisekund, a nie co 5 milisekund.</span><span class="sxs-lookup"><span data-stu-id="024b3-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="024b3-238">Można określić rozdzielczość zegara systemowego w bieżącym systemie, można użyć następującego kodu:</span><span class="sxs-lookup"><span data-stu-id="024b3-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="024b3-239">Jeśli aplikacja wymaga większej rozdzielczości niż oferowane przez <xref:System.Timers.Timer> klasy lub zegar systemowy, używaj wysokiej rozdzielczości multimediów czasomierzy; zobacz [jak: Wykorzystaj właściwość czasomierza rozdzielczości](http://msdn.microsoft.com/library/aa964692.aspx).</span><span class="sxs-lookup"><span data-stu-id="024b3-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](http://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="024b3-240">Jeśli ustawiono interwał po <xref:System.Timers.Timer> została uruchomiona, zostanie zresetowany.</span><span class="sxs-lookup"><span data-stu-id="024b3-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="024b3-241">Na przykład, jeśli ustawić interwał wynoszący 5 sekund, a następnie ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości `true`, licznik rozpoczyna się od czasu <xref:System.Timers.Timer.Enabled%2A> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="024b3-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="024b3-242">Jeśli zresetujesz interwał to 10 sekund po 3 sekundach, liczba <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po raz pierwszy 13 sekundach, po <xref:System.Timers.Timer.Enabled%2A> została ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="024b3-243">Jeśli <xref:System.Timers.Timer.Enabled%2A> jest ustawiona na `true` i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="024b3-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="024b3-244"><xref:System.Timers.Timer.Enabled%2A> następnie jest ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-245">Jeśli <xref:System.Timers.Timer.Enabled%2A> i <xref:System.Timers.Timer.AutoReset%2A> są ustawione na `false`, i czasomierza wcześniej została włączona, ustawienie <xref:System.Timers.Timer.Interval%2A> powoduje, że właściwość <xref:System.Timers.Timer.Elapsed> zdarzenia raz, tak jakby <xref:System.Timers.Timer.Enabled%2A> właściwość ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="024b3-246">Aby ustawić interwał bez wywoływania zdarzenia, można tymczasowo ustawić <xref:System.Timers.Timer.Enabled%2A> właściwości `true`ustaw <xref:System.Timers.Timer.Interval%2A> właściwość interwał żądany czas, a następnie od razu ustaw <xref:System.Timers.Timer.Enabled%2A> właściwości z powrotem do `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-247">Poniższy przykład tworzy wystąpienie <xref:System.Timers.Timer> obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="024b3-248">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="024b3-249">Interwał jest mniejsza lub równa zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-249">The interval is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="024b3-250">Interwał jest większy niż - lub - <see cref="F:System.Int32.MaxValue" />, a licznik czasu jest aktualnie włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-250">-or-  The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span>
          </span>
          <span data-ttu-id="024b3-251">(Jeśli czasomierz nie jest obecnie włączona, jest zgłaszany żaden wyjątek, dopóki nie zostanie ono włączone.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-251">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Timers.Timer.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-252">Pobiera lub ustawia witryny, która jest powiązywana <see cref="T:System.Timers.Timer" /> z jego kontenerem w trybie projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-252">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="024b3-253">
            <see cref="T:System.ComponentModel.ISite" /> Interfejs reprezentujący witryny, która jest powiązywana <see cref="T:System.Timers.Timer" /> obiekt z jego kontenerem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-253">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-254">Powiązania witryny <xref:System.ComponentModel.Component> do <xref:System.ComponentModel.Container> i umożliwić komunikację między nimi, dzięki czemu kontener, aby zarządzać jego składniki.</span><span class="sxs-lookup"><span data-stu-id="024b3-254">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-255">Rozpoczyna się wywoływanie <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń, ustawiając <see cref="P:System.Timers.Timer.Enabled" /> do <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-255">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-256">Jeśli <xref:System.Timers.Timer.Start%2A> nosi nazwę i <xref:System.Timers.Timer.AutoReset%2A> ustawiono `false`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> upływa zdarzeń tylko raz, po raz pierwszy interwał.</span><span class="sxs-lookup"><span data-stu-id="024b3-256">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="024b3-257">Jeśli <xref:System.Timers.Timer.Start%2A> nosi nazwę i <xref:System.Timers.Timer.AutoReset%2A> jest `true`, <xref:System.Timers.Timer> zgłasza <xref:System.Timers.Timer.Elapsed> czas trwania zdarzenia pierwszy interwał upływa i nadal zgłaszać zdarzenia w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="024b3-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="024b3-258">Możesz także uruchomić czasu, przez ustawienie <xref:System.Timers.Timer.Enabled%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="024b3-258">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-259">Jeśli <xref:System.Timers.Timer.AutoReset%2A> jest `false`, <xref:System.Timers.Timer.Start%2A> można wywołać metody, aby ponownie uruchomić liczba.</span><span class="sxs-lookup"><span data-stu-id="024b3-259">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="024b3-260">Wywołanie <xref:System.Timers.Timer.Start%2A> metoda po włączeniu Czasomierz nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="024b3-260">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="024b3-261">
            <see cref="T:System.Timers.Timer" /> Utworzeniu interwał równy lub większy niż <see cref="F:System.Int32.MaxValue" /> + 1 lub równa przerwą mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-261">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="024b3-262">Zatrzymuje wywołanie <see cref="E:System.Timers.Timer.Elapsed" /> zdarzeń, ustawiając <see cref="P:System.Timers.Timer.Enabled" /> do <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-262">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-263">Można je również zatrzymać czasu, przez ustawienie <xref:System.Timers.Timer.Enabled%2A> do `false`.</span><span class="sxs-lookup"><span data-stu-id="024b3-263">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-264">Sygnał do pozyskania <xref:System.Timers.Timer.Elapsed> zdarzeń jest zawsze w kolejce do wykonania na <xref:System.Threading.ThreadPool> wątku, dlatego metoda obsługi zdarzeń mogą być uruchamiane w jednym wątku, w tym samym czasie, po wywołaniu <xref:System.Timers.Timer.Stop%2A> metoda uruchamia się na inny wątek.</span><span class="sxs-lookup"><span data-stu-id="024b3-264">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="024b3-265">Może to spowodować <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane po wykonaniu <xref:System.Timers.Timer.Stop%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="024b3-265">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="024b3-266">Przykładowy kod, w następnej sekcji przedstawia jeden ze sposobów obejścia sytuacja wyścigu.</span><span class="sxs-lookup"><span data-stu-id="024b3-266">The code example in the next section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-267">Poniższy przykład tworzy wystąpienie `System.Timers.Timer` obiektu, który jest uruchamiany jego <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzeń co 2 sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia, a następnie uruchamia czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-267">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="024b3-268">Obsługa zdarzeń wyświetla wartość <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> właściwość każdorazowo, jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="024b3-268">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="024b3-269">Gdy użytkownik naciśnie klawisz Enter, aplikacja wywołuje <xref:System.Timers.Timer.Stop%2A> metoda przed zakończeniem aplikacji.</span><span class="sxs-lookup"><span data-stu-id="024b3-269">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="024b3-270">Poniższy przykładowy kod przedstawia sposób zapobiec wątek, który wywołuje <xref:System.Timers.Timer.Stop%2A> metody z kontynuując do aktualnie wykonywanych <xref:System.Timers.Timer.Elapsed> zakończenia zdarzenia, a także uniknąć dwóch <xref:System.Timers.Timer.Elapsed> zdarzenia z wykonywania programu obsługi zdarzeń w tym samym czas (często określanymi jako współużytkowania wątkowości).</span><span class="sxs-lookup"><span data-stu-id="024b3-270">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="024b3-271">Przykład wykonuje 100 przebiegów testów.</span><span class="sxs-lookup"><span data-stu-id="024b3-271">The example executes 100 test runs.</span></span> <span data-ttu-id="024b3-272">Każdorazowo, gdy test jest uruchomiony, czasomierz zostanie uruchomiony przy użyciu interwału wynoszącego 150 milisekund.</span><span class="sxs-lookup"><span data-stu-id="024b3-272">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="024b3-273">Obsługa zdarzeń używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodę symulacji zadanie, które losowo zmienia się w długości od 50 do 200 ms.</span><span class="sxs-lookup"><span data-stu-id="024b3-273">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="024b3-274">Metoda testowa również rozpoczyna się wątek kontroli, który oczekuje na sekundę, a następnie zatrzymuje czasomierz.</span><span class="sxs-lookup"><span data-stu-id="024b3-274">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="024b3-275">Jeśli zdarzenie jest obsługiwane podczas kontroli wątku zatrzymuje timer, wątek kontroli musi czekać do momentu zakończenia zdarzenia przed kontynuowaniem.</span><span class="sxs-lookup"><span data-stu-id="024b3-275">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="024b3-276"><xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Przeciążenie metody jest używana w celu uniknięcia współużytkowania wątkowości i uniemożliwić wątek kontroli kontynuowana do czasu zakończenia wykonywania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="024b3-276">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="024b3-277">Obsługa zdarzeń używa <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodę, aby ustawić kontrolkę zmiennej na wartość 1, ale tylko wtedy, gdy ta wartość wynosi obecnie zero.</span><span class="sxs-lookup"><span data-stu-id="024b3-277">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="024b3-278">To jest operacją niepodzielną.</span><span class="sxs-lookup"><span data-stu-id="024b3-278">This is an atomic operation.</span></span> <span data-ttu-id="024b3-279">Jeśli wartość zwracana wynosi zero, 1 została ustawiona zmienna sterowania, a następnie przechodzi przez program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-279">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="024b3-280">Jeśli wartość zwracana jest różna od zera, zdarzenie jest po prostu odrzucone w celu uniknięcia ponownego rozpoczęcia.</span><span class="sxs-lookup"><span data-stu-id="024b3-280">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="024b3-281">(Gdyby konieczne, aby wykonać każde zdarzenie <xref:System.Threading.Monitor> klasy będzie lepszy sposób, aby zsynchronizować zdarzenia.) Po zakończeniu program obsługi zdarzeń, ustawia zmienna sterująca powrót do zera.</span><span class="sxs-lookup"><span data-stu-id="024b3-281">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="024b3-282">Przykład rejestruje łączna liczba zdarzeń, które wykonywane, które zostały odrzucone z powodu współużytkowania wątkowości, a które wystąpiły po <xref:System.Timers.Timer.Stop%2A> metoda została wywołana.</span><span class="sxs-lookup"><span data-stu-id="024b3-282">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="024b3-283">Wątek kontroli używa <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> metodę, aby ustawić zmienną na wartość -1 (minus jeden), ale tylko wtedy, gdy ta wartość wynosi obecnie zero.</span><span class="sxs-lookup"><span data-stu-id="024b3-283">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="024b3-284">Jeśli niepodzielnych operacji zwraca różna od zera, zdarzenie jest w trakcie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="024b3-284">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="024b3-285">Wątek kontroli czeka i próbuje ponownie.</span><span class="sxs-lookup"><span data-stu-id="024b3-285">The control thread waits and tries again.</span></span> <span data-ttu-id="024b3-286">Przykład zlicza liczbę przypadków, gdy trzeba było oczekiwać na zdarzenie zakończyć wątek kontroli.</span><span class="sxs-lookup"><span data-stu-id="024b3-286">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Timers.Timer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="024b3-287">Pobiera lub ustawia obiekt używany do organizowania wywołań programu obsługi zdarzeń, które są wydawane po upływie interwału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-287">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="024b3-288">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> Reprezentujący obiekt używany do organizowania wywołania programu obsługi zdarzeń, które są wydawane po upływie interwału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-288">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span>
          </span>
          <span data-ttu-id="024b3-289">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="024b3-289">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024b3-290">Gdy <xref:System.Timers.Timer.SynchronizingObject%2A> jest `null`, metoda, która obsługuje <xref:System.Timers.Timer.Elapsed> zdarzenie jest wywoływane w wątku z puli wątków systemu.</span><span class="sxs-lookup"><span data-stu-id="024b3-290">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="024b3-291">Aby uzyskać więcej informacji na temat pul wątków systemu, zobacz <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="024b3-291">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="024b3-292">Gdy <xref:System.Timers.Timer.Elapsed> zdarzenie jest obsługiwane przez visual składnika Windows Forms, takie jak przycisk, dostęp do składnika w za pośrednictwem puli wątków systemu może wynik, wyjątek lub po prostu mogą nie działać.</span><span class="sxs-lookup"><span data-stu-id="024b3-292">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="024b3-293">Należy unikać ten efekt, ustawiając <xref:System.Timers.Timer.SynchronizingObject%2A> do składnika Windows Forms, co powoduje, że metoda, która obsługuje <xref:System.Timers.Timer.Elapsed> zdarzenie ma być wywołane na tym samym wątku, który składnik został utworzony na.</span><span class="sxs-lookup"><span data-stu-id="024b3-293">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="024b3-294">Nawet wtedy, gdy <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość nie jest `null`, <xref:System.Timers.Timer.Elapsed> zdarzenia może wystąpić po <xref:System.Timers.Timer.Dispose%2A> lub <xref:System.Timers.Timer.Stop%2A> wywołano metodę lub po <xref:System.Timers.Timer.Enabled%2A> została ustawiona właściwość `false`, ponieważ sygnału, aby wywołać <xref:System.Timers.Timer.Elapsed> zdarzenie jest zawsze w kolejce do wykonania w wątku z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="024b3-294">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="024b3-295">Jednym ze sposobów, aby rozwiązać sytuacja wyścigu jest ustawiona flaga, która informuje program obsługi zdarzeń dla <xref:System.Timers.Timer.Elapsed> zdarzenie, aby zignorować kolejnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="024b3-295">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="024b3-296">Jeśli <xref:System.Timers.Timer> jest używany w programie Visual Studio za pomocą projektanta Windows Forms <xref:System.Timers.Timer.SynchronizingObject%2A> jest automatycznie ustawiana na formant, który zawiera <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="024b3-296">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="024b3-297">Na przykład jeśli umieścisz <xref:System.Timers.Timer> w Projektancie dla `Form1` (który dziedziczy z <xref:System.Windows.Forms.Form>), <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość <xref:System.Timers.Timer> jest ustawiona na wystąpienie `Form1`.</span><span class="sxs-lookup"><span data-stu-id="024b3-297">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="024b3-298">Poniższy przykład jest aplikacji Windows Forms, która służy jako bardzo prostego pliku edytora tekstów.</span><span class="sxs-lookup"><span data-stu-id="024b3-298">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="024b3-299">Gdy nie został zapisany tekst w polu tekstowym, aplikacja prosi użytkownika w odstępach jednej minuty czy chce zapisać zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="024b3-299">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="024b3-300">Aby to zrobić, <xref:System.Timers.Timer.Interval%2A> właściwość jest ustawiona na jednej minuty (60 000 milisekund), a <xref:System.Timers.Timer.SynchronizingObject%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.Form> obiektu.</span><span class="sxs-lookup"><span data-stu-id="024b3-300">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="024b3-301">Przykład wymaga, Dodaj następujące formanty do formularza:</span><span class="sxs-lookup"><span data-stu-id="024b3-301">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="024b3-302">A <xref:System.Windows.Forms.TextBox> formantu o nazwie `TextBox1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="024b3-302">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="024b3-303">A <xref:System.Windows.Forms.Button> formantu o nazwie `Button1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="024b3-303">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="024b3-304">A <xref:System.Windows.Forms.SaveFileDialog> formantu o nazwie `SaveSaveFileDialog1` (domyślnej nazwy).</span><span class="sxs-lookup"><span data-stu-id="024b3-304">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>