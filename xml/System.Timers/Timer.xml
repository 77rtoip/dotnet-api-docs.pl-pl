<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5618b69c9a4d91151391fe5e2c79054e0441f4aec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">618b69c9a4d91151391fe5e2c79054e0441f4aec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Timers.Timer">
          <source>Generates an event after a set interval, with an option to generate recurring events.</source>
          <target state="translated">Generuje zdarzenie po upływie czasu zestawu z opcją generowanie zdarzeń cyklicznego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> component is a server-based timer that raises an <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event in your application after the number of milliseconds in the <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property has elapsed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> Składnik jest czasomierza na serwerze, który wywołuje <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń aplikacji po liczbę milisekund <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> upłynął właściwości.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>You can configure the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object to raise the event just once or repeatedly using the <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> property.</source>
          <target state="translated">Można skonfigurować <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, aby zgłosić zdarzenie tylko raz lub wielokrotnie przy użyciu <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object is declared at the class level so that it stays in scope as long as it is needed.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiektu jest zadeklarowane na poziomie klasy tak, aby pozostaje w zakresie tak długo, jak jest to potrzebne.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>You can then handle its <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to provide regular processing.</source>
          <target state="translated">Następnie można obsługiwać jego <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń, aby zapewnić prawidłowe przetwarzania.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</source>
          <target state="translated">Na przykład, załóżmy, że krytyczne serwer, który musi znajdować się systemem 24 godziny na dobę, 7 dni w tygodniu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>You could create a service that uses a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object to periodically check the server and ensure that the system is up and running.</source>
          <target state="translated">Można utworzyć usługi, która używa <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, aby okresowo Sprawdź serwer i upewnij się, że system jest uruchomiona.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>If the system is not responding, the service could attempt to restart the server or notify an administrator.</source>
          <target state="translated">Jeśli system nie odpowiada, usługa może próbować ponownie uruchomić serwer lub zawiadomić administratora.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> Klasa nie jest dostępna dla wszystkich implementacje .NET i wersji, takie jak standardowe 1.6 .NET i niższych wersjach.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>In these cases, you can use the <ph id="ph1">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph> class instead.</source>
          <target state="translated">W takich przypadkach można użyć <ph id="ph1">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph> zamiast klasy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ten typ implementuje <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Do usuwania tego typu, należy wywołać jej <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metody w <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak <ph id="ph1">`using`</ph> (w języku C#) lub <ph id="ph2">`Using`</ph> (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu tematu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The server-based <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> class is designed for use with worker threads in a multithreaded environment.</source>
          <target state="translated">Na serwerze <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> klasy jest przeznaczony do użytku z wątków roboczych w środowisku wielowątkowym.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Server timers can move among threads to handle the raised <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event, resulting in more accuracy than Windows timers in raising the event on time.</source>
          <target state="translated">Czasomierze serwera można przenosić między wątków do obsługi zgłoszono <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie powodujące dokładności więcej niż czasomierze systemu Windows w wywołaniem zdarzenia w czasie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> component raises the <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event, based on the value (in milliseconds) of the <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> Składnik wywołuje <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia na podstawie wartości (w milisekundach) z <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>You can handle this event to perform the processing you need.</source>
          <target state="translated">Może obsłużyć tego zdarzenia do przetwarzania, które są potrzebne.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For example, suppose that you have an online sales application that continuously posts sales orders to a database.</source>
          <target state="translated">Na przykład załóżmy, że masz aplikację sprzedaży online stale ogłoszeń zamówień z bazą danych.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</source>
          <target state="translated">Usługi, który kompiluje się instrukcje dotyczące wysyłania działa na partię zamówienia, a nie poszczególnych kolejność przetwarzania indywidualnie.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>You could use a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> to start the batch processing every 30 minutes.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> można uruchomić co 30 minut przetwarzania wsadowego.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The System.Timers.Timer class has the same resolution as the system clock.</source>
          <target state="translated">Klasa System.Timers.Timer ma taką samą rozdzielczość zegara systemowego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>This means that the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event will fire at an interval defined by the resolution of the system clock if the <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property is less than the resolution of the system clock.</source>
          <target state="translated">Oznacza to, że <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych uzyskuje się poprzez rozpoznanie zegar systemowy, jeśli <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości jest mniejsza niż rozdzielczość zegara systemowego.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>When <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> object raises the <ph id="ph4">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event only once, after the first <ph id="ph5">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> has elapsed.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> ma ustawioną wartość <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> obiekt zgłasza <ph id="ph4">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń tylko jeden raz, po pierwszym <ph id="ph5">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> upłynął.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>To keep raising the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event regularly at the interval defined by the <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>, set <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> to <ph id="ph4">`true`</ph>, which is the default value.</source>
          <target state="translated">Aby zachować wywoływanie <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń regularnie w odstępach czasu zdefiniowanych przez <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>ustaw <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> do <ph id="ph4">`true`</ph>, która jest wartością domyślną.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> component catches and suppresses all exceptions thrown by event handlers for the <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> Składnika przechwytuje i pomija wszystkie wyjątki zgłaszane przez programy obsługi zdarzeń dla <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Note, however, that this is not true of event handlers that execute asynchronously and include the <ph id="ph1">`await`</ph> operator (in C#)  or the <ph id="ph2">`Await`</ph> operator (in Visual Basic).</source>
          <target state="translated">Należy jednak pamiętać, że nie jest to wartość true, programów obsługi zdarzeń, które asynchroniczne i obejmują <ph id="ph1">`await`</ph> — operator (w języku C#) lub <ph id="ph2">`Await`</ph> — operator (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</source>
          <target state="translated">Wyjątki zgłaszane w tych programów obsługi zdarzeń są propagowane do wątek wywołujący, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For more information on exceptions thrown in asynchronous methods, see   <bpt id="p1">[</bpt>Exception Handling<ept id="p1">](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na wyjątki zgłaszane w metodach asynchronicznych, zobacz <bpt id="p1">[</bpt>obsługi wyjątków<ept id="p1">](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>If the <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised on a <ph id="ph4">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> właściwość jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zgłaszane przy <ph id="ph4">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>If processing of the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event lasts longer than <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>, the event might be raised again on another <ph id="ph3">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Jeśli przetwarzanie <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia okresu dłuższego niż <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>, zdarzenie może zostać wywołane ponownie na innym <ph id="ph3">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">W takiej sytuacji należy współużytkowane programu obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The event-handling method might run on one thread at the same time that another thread calls the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method or sets the <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Metoda obsługi zdarzeń może działać w jednym wątku, w tym samym czasie, który wywołuje inny wątek <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metody lub zestawy <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>This might result in the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event being raised after the timer is stopped.</source>
          <target state="translated">Może to spowodować <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po czasomierz jest zatrzymana.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The example code for the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method shows one way to avoid this race condition.</source>
          <target state="translated">Przykład kodu dla <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metody przedstawia sposób, aby uniknąć tej sytuacji wyścigu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Even if <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> is not <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> events can occur after the <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method has been called or after the <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property has been set to <ph id="ph7">`false`</ph>, because the signal to raise the <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Nawet jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> nie jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń może wystąpić po <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> lub <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> została wywołana metoda lub po <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawioną właściwość <ph id="ph7">`false`</ph>, ponieważ sygnału, aby podnieść <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to ignore subsequent events.</source>
          <target state="translated">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń ignorowanie kolejnych zdarzeń.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>If you use the <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <ph id="ph2">&lt;xref:System.Timers.Timer&gt;</ph> to the <ph id="ph3">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property, so that the event is marshaled to the user interface thread.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> klasy z elementu interfejsu użytkownika, takich jak formularz lub formant bez wprowadzania czasomierza na ten element interfejsu użytkownika, przypisać do formularza lub kontrolki, która zawiera <ph id="ph2">&lt;xref:System.Timers.Timer&gt;</ph> do <ph id="ph3">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> właściwości, tak, aby zdarzenia przekazywane do wątku interfejsu użytkownika.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>For a list of default property values for an instance of <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Timers.Timer.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Aby uzyskać listę domyślnych wartości właściwości dla wystąpienia <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>, zobacz <ph id="ph2">&lt;xref:System.Timers.Timer.%23ctor%2A&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Be aware that .NET includes four classes named <ph id="ph1">`Timer`</ph>, each of which offers different functionality:</source>
          <target state="translated">Należy pamiętać, że .NET zawiera cztery klasy o nazwie <ph id="ph1">`Timer`</ph>, każdy z którym znajdują się różne funkcje:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source><ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> (this topic): fires an event at regular intervals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> (w tym temacie): wyzwala zdarzenie w regularnych odstępach czasu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Klasa jest przeznaczony do użycia jako oparte na serwerze lub składnik usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source><ph id="ph1">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph>: executes a single callback method on a thread pool thread at regular intervals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Timer?displayProperty=nameWithType&gt;</ph>: wykonuje metodę jednego wywołania zwrotnego w wątku puli wątków w regularnych odstępach czasu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The callback method is defined when the timer is instantiated and cannot be changed.</source>
          <target state="translated">Metody wywołania zwrotnego jest zdefiniowany, gdy zegar zostanie uruchomiony i nie można zmienić.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Like the <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Podobnie jak <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> klasy, ta klasa jest przeznaczona do użycia jako składnik serwera lub usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Timer?displayProperty=nameWithType&gt;</ph> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer?displayProperty=nameWithType&gt;</ph> (Tylko w programie .NET framework): składnik formularzy systemu Windows, który wyzwala zdarzenie w regularnych odstępach czasu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The component has no user interface and is designed for use in a single-threaded environment.</source>
          <target state="translated">Składnik nie ma interfejsu użytkownika i jest przeznaczony do użytku w środowisku jednowątkowy.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source><ph id="ph1">&lt;xref:System.Web.UI.Timer?displayProperty=nameWithType&gt;</ph> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Timer?displayProperty=nameWithType&gt;</ph> (Tylko w programie .NET framework): składnik ASP.NET, który wykonuje asynchroniczne i synchroniczne strony sieci web ogłaszania zwrotnego w regularnych odstępach czasu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The following example instantiates a <ph id="ph1">`System.Timers.Timer`</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">`System.Timers.Timer`</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Any public <ph id="ph1">&lt;see langword="static" /&gt;</ph> members of this type are thread safe.</source>
          <target state="translated">Wszystkie publiczne <ph id="ph1">&lt;see langword="static" /&gt;</ph> elementy członkowskie tego typu są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.Timer">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.Timers.Timer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> class, and sets all the properties to their initial values.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> klasy, a następnie ustawia wszystkie właściwości ich wartości początkowe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>Property</source>
          <target state="translated">Właściwość</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>Initial value</source>
          <target state="translated">Wartość początkowa</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>100 milliseconds</source>
          <target state="translated">100 milisekund</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Odwołanie o wartości null (<ph id="ph1">`Nothing`</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>The time, in milliseconds, between events.</source>
          <target state="translated">Czas w milisekundach między zdarzeniami.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>The value must be greater than zero and less than or equal to <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość musi być większa niż zero i mniejsza niż lub równa <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> class, and sets the <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Interval" /&gt;</ph> property to the specified number of milliseconds.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> klasy i zestawy <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Interval" /&gt;</ph> właściwości na określoną liczbę milisekund.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property of the new timer instance, but does not enable the timer.</source>
          <target state="translated">Ten konstruktor ustawia <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości nowe wystąpienie czasomierza, ale nie obsługuje czasomierza.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.#ctor(System.Double)">
          <source>The value of the <ph id="ph1">&lt;paramref name="interval" /&gt;</ph> parameter is less than or equal to zero, or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="interval" /&gt;</ph> parametr jest większa od zera lub większej niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.AutoReset">
          <source>Gets or sets a Boolean indicating whether the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> should raise the <ph id="ph2">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event only once (<ph id="ph3">&lt;see langword="false" /&gt;</ph>) or repeatedly (<ph id="ph4">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated">Pobiera lub ustawia wartość logiczna wskazującą czy <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> należy podnieść <ph id="ph2">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń tylko raz (<ph id="ph3">&lt;see langword="false" /&gt;</ph>) lub wielokrotnie (<ph id="ph4">&lt;see langword="true" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> should raise the <ph id="ph3">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event each time the interval elapses; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if it should raise the <ph id="ph5">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event only once, after the first time the interval elapses.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> należy podnieść <ph id="ph3">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń zawsze czasu; <ph id="ph4">&lt;see langword="false" /&gt;</ph> powinien on podniesieniu <ph id="ph5">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń tylko raz, po raz pierwszy czasu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>If the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> is already enabled when the <ph id="ph2">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> method is called, the interval is reset.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> jest już włączona, gdy <ph id="ph2">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> metoda jest wywoływana, interwał zostanie zresetowana.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> method must be called in order to start the count again.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> jest <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> można wywołać metody, aby można było rozpocząć obliczanie ponownie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>Resetting the interval affects when the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised.</source>
          <target state="translated">Resetowanie interwał wpływa na kiedy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>For example, if you set the interval to 5 seconds and then set the <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the count starts at the time <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set.</source>
          <target state="translated">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph>, licznik, który rozpoczyna się w czasie <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>If you reset the interval to 10 seconds when the count is 3 seconds, the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised for the first time 13 seconds after the <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property was set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli zresetujesz interwał na 10 sekund, jeśli licznik osiągnie wartość 3 sekundy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> whose <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event fires after 1.5 seconds.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> którego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie wyzwalane po 1,5 s.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>Its event handler then displays "Hello World!"</source>
          <target state="translated">Jej procedura obsługi zdarzeń następnie wyświetla "Witaj świecie!"</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.AutoReset">
          <source>on the console.</source>
          <target state="translated">w konsoli.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.BeginInit">
          <source>Begins the run-time initialization of a <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> that is used on a form or by another component.</source>
          <target state="translated">Rozpoczyna inicjowanie środowiska wykonawczego <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> używany w formularzu lub przez inny składnik.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.BeginInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to start the initialization of a component that is used on a form or by another component.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> Projekt środowiska korzystania z tej metody można uruchomić inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> Metoda kończy się inicjowania.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Przy użyciu <ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Close">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph>.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Close">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer.Close%2A&gt;</ph> method in turn calls the <ph id="ph2">`Dispose`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer.Close%2A&gt;</ph> Metoda z kolei wywołuje <ph id="ph2">`Dispose`</ph> metody.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Dispose(System.Boolean)">
          <source>Releases all resources used by the current <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph>.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="E:System.Timers.Timer.Elapsed">
          <source>Occurs when the interval elapses.</source>
          <target state="translated">Występuje, gdy upłynie interwał.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised if the <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property is <ph id="ph3">`true`</ph> and the time interval (in milliseconds) defined by the <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property elapses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> Zdarzenie jest wywoływane, gdy <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwość jest <ph id="ph3">`true`</ph> i przedział czasu (w milisekundach) zdefiniowanych przez <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> upłynie właściwości.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>If the <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the event is raised repeatedly at an interval defined by the <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property; otherwise, the event is raised only once, the first time the <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> value elapses.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, zdarzenie jest wywoływane wielokrotnie w odstępach czasu zdefiniowanych przez <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwość; w przeciwnym razie zdarzenie jest wywoływane tylko raz, po raz pierwszy <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> wartość upłynie.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> is set after the <ph id="ph2">&lt;xref:System.Timers.Timer&gt;</ph> has started, the count is reset.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> jest ustawiany po <ph id="ph2">&lt;xref:System.Timers.Timer&gt;</ph> została uruchomiona, zostanie zresetowany.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>For example, if you set the interval to 5 seconds and then set <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> to <ph id="ph2">`true`</ph>, the count starts at the time <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set.</source>
          <target state="translated">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> do <ph id="ph2">`true`</ph>, licznik, który rozpoczyna się w czasie <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised for the first time 13 seconds after <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> was set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>If the <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property is <ph id="ph2">`null`</ph>,the <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised on a <ph id="ph4">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> właściwość jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zgłaszane przy <ph id="ph4">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>If the processing of the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event lasts longer than <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>, the event might be raised again on another <ph id="ph3">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Jeśli przetwarzanie <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia okresu dłuższego niż <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph>, zdarzenie może zostać wywołane ponownie na innym <ph id="ph3">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">W takiej sytuacji należy współużytkowane programu obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The event-handling method might run on one thread at the same time that another thread calls the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method or sets the <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Metoda obsługi zdarzeń może działać w jednym wątku, w tym samym czasie, który wywołuje inny wątek <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metody lub zestawy <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>This might result in the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event being raised after the timer is stopped.</source>
          <target state="translated">Może to spowodować <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po czasomierz jest zatrzymana.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The example code for the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method shows one way to avoid this race condition.</source>
          <target state="translated">Przykład kodu dla <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metody przedstawia sposób, aby uniknąć tej sytuacji wyścigu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>Even if <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> is not <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> events can occur after the <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method has been called or after the <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property has been set to <ph id="ph7">`false`</ph>, because the signal to raise the <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Nawet jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> nie jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń może wystąpić po <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> lub <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> została wywołana metoda lub po <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawioną właściwość <ph id="ph7">`false`</ph>, ponieważ sygnału, aby podnieść <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to ignore subsequent events.</source>
          <target state="translated">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń ignorowanie kolejnych zdarzeń.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> component catches and suppresses all exceptions thrown by event handlers for the <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> Składnika przechwytuje i pomija wszystkie wyjątki zgłaszane przez programy obsługi zdarzeń dla <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Jest to zachowanie może ulec zmianie w przyszłych wersjach programu .NET Framework.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Timers.Timer.Elapsed">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Enabled">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> should raise the <ph id="ph2">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> należy podnieść <ph id="ph2">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> should raise the <ph id="ph3">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> należy podnieść <ph id="ph3">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>Setting <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the same as calling <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph>, while setting <ph id="ph4">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> to <ph id="ph5">`false`</ph> is the same as calling <ph id="ph6">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph>.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> do <ph id="ph2">`true`</ph> jest taka sama jak wywołanie <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph>, podczas gdy ustawienie <ph id="ph4">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> do <ph id="ph5">`false`</ph> jest taka sama jak wywołanie <ph id="ph6">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>The signal to raise the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is always queued for execution on a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Sygnał podnieść <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zawsze umieszczonych w kolejce do wykonania na <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>This might result in the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event being raised after the <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Może to spowodować <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>The code example for the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method shows one way to work around this race condition.</source>
          <target state="translated">Przykład kodu dla <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metody przedstawia sposób obejścia sytuacja wyścigu.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is set to <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> raises the <ph id="ph6">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event only once, the first time the interval elapses.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono <ph id="ph2">`true`</ph> i <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> ustawiono <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> zgłasza <ph id="ph6">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> upływa zdarzeń tylko raz, po raz pierwszy interwał.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>If the interval is set after the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> has started, the count is reset.</source>
          <target state="translated">Jeśli interwał jest ustawiany po <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> została uruchomiona, zostanie zresetowany.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>For example, if you set the interval to 5 seconds and then set the <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the count starts at the time <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set.</source>
          <target state="translated">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph>, licznik, który rozpoczyna się w czasie <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised for the first time 13 seconds after <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> was set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>Some visual designers, such as those in Microsoft Visual Studio, set the <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when inserting a new <ph id="ph3">&lt;xref:System.Timers.Timer&gt;</ph>.</source>
          <target state="translated">Niektóre wizualnych projektantów, takich jak w programie Microsoft Visual Studio, ustaw <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph> przy wstawianiu nowy <ph id="ph3">&lt;xref:System.Timers.Timer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Enabled">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Enabled">
          <source>This property cannot be set because the timer has been disposed.</source>
          <target state="translated">Nie można ustawić tej właściwości, ponieważ zegar został usunięty.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Enabled">
          <source>The <ph id="ph1">&lt;see cref="P:System.Timers.Timer.Interval" /&gt;</ph> property was set to a value greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> before the timer was enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Timers.Timer.Interval" /&gt;</ph> Właściwość została ustawiona na wartość większą niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> przed włączeniem czasomierza.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.EndInit">
          <source>Ends the run-time initialization of a <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> that is used on a form or by another component.</source>
          <target state="translated">Kończy się inicjowanie środowiska wykonawczego <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> używany w formularzu lub przez inny składnik.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.EndInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to end the initialization of a component that is used on a form or by another component.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> Projekt środowiska korzystania z tej metody do zakończenia inicjowania składnika, który jest używany w formularzu lub przez inny składnik.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> Metoda uruchamia inicjowania.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Przy użyciu <ph id="ph1">&lt;xref:System.Timers.Timer.BeginInit%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Timers.Timer.EndInit%2A&gt;</ph> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Interval">
          <source>Gets or sets the interval, expressed in milliseconds, at which to raise the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event.</source>
          <target state="translated">Pobiera lub ustawia interwał wyrażony w milisekundach, w którym należy podnieść <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The time, in milliseconds, between <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> events.</source>
          <target state="translated">Czas w milisekundach między <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzenia.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The value must be greater than zero, and less than or equal to <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość musi być większa niż zero i mniejsza niż lub równa <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The default is 100 milliseconds.</source>
          <target state="translated">Wartość domyślna to 100 milisekund.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>You use the <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property to determine the frequency at which the <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is fired.</source>
          <target state="translated">Możesz użyć <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwość, aby ustalić częstotliwość, z jaką <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>Because the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class depends on the system clock, it has the same resolution as the system clock.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> klasy zależy zegar systemowy, ma taką samą rozdzielczość zegara systemowego.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>This means that the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event will fire at an interval defined by the resolution of the system clock if the <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property is less than the resolution of the system clock.</source>
          <target state="translated">Oznacza to, że <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia będą uruchamiane w odstępach czasu zdefiniowanych uzyskuje się poprzez rozpoznanie zegar systemowy, jeśli <ph id="ph2">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości jest mniejsza niż rozdzielczość zegara systemowego.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property to 5 milliseconds.</source>
          <target state="translated">W poniższym przykładzie <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwości do 5 w milisekundach.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>When run on a <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</source>
          <target state="translated">Uruchomienia <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> systemu, w których zegara systemowego ma rozdzielczość około 15 milisekund, generowane zdarzenie co około 15 milisekund niż co 5 milisekund.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>You can use the following code to determine the resolution of the system clock on the current system:</source>
          <target state="translated">Poniższy kod umożliwia określenie rozdzielczości zegara systemowego w bieżącym systemie:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>If your app requires greater resolution than that offered by the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class or the system clock, use the high-resolution multimedia timers; see <bpt id="p1">[</bpt>How to: Use the High-Resolution Timer<ept id="p1">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.</source>
          <target state="translated">Jeśli aplikacja wymaga rozpoznawania większa niż oferowane przez <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> klasy lub zegar systemowy, użyj wysokiej rozdzielczości czasomierze multimediów; zobacz <bpt id="p1">[</bpt>porady: Użyj czasomierza rozdzielczości<ept id="p1">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>If the interval is set after the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> has started, the count is reset.</source>
          <target state="translated">Jeśli interwał jest ustawiany po <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> została uruchomiona, zostanie zresetowany.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>For example, if you set the interval to 5 seconds and then set the <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the count starts at the time <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set.</source>
          <target state="translated">Na przykład ustawić interwał wynoszący 5 sekund, a następnie ustaw <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph>, licznik, który rozpoczyna się w czasie <ph id="ph3">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is raised for the first time 13 seconds after <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> was set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli zresetujesz interwał na 10 sekund, gdy liczba jest 3 sekundy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po raz pierwszy 13 sekund po <ph id="ph2">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is set to <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> raises the <ph id="ph6">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event only once, the first time the interval elapses.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawiono <ph id="ph2">`true`</ph> i <ph id="ph3">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> ustawiono <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> zgłasza <ph id="ph6">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> upływa zdarzeń tylko raz, po raz pierwszy interwał.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source><ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> is then set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> następnie ustawiono <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> are both set to <ph id="ph3">`false`</ph>, and the timer has previously been enabled, setting the <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property causes the <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to be raised once, as if the <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property had been set to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> są ustawione na <ph id="ph3">`false`</ph>, i czasomierza wcześniej została włączona, ustawienie <ph id="ph4">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> powoduje, że właściwość <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> się jeden raz, zdarzenia tak, jakby <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwość ma wartość <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>To set the interval without raising the event, you can temporarily set the <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, set the <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property to the desired time interval, and then immediately set the <ph id="ph4">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property back to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Aby ustawić interwał bez wywołaniem zdarzenia, można tymczasowo ustawić <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph>, ustaw <ph id="ph3">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> przedział czasu odpowiednią dla właściwości, a następnie ustaw natychmiast <ph id="ph4">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> właściwości z powrotem do <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Interval">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Interval">
          <source>The interval is less than or equal to zero.</source>
          <target state="translated">Interwał jest mniejsza lub równa zero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Interval">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Interval">
          <source>The interval is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>, and the timer is currently enabled.</source>
          <target state="translated">Interwał jest większa niż <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>, a czasomierz jest aktualnie włączone.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Interval">
          <source>(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</source>
          <target state="translated">(Jeśli licznik nie jest aktualnie włączone, nie jest zwracany wyjątek, dopóki nie zostanie włączona.)</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.Site">
          <source>Gets or sets the site that binds the <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> to its container in design mode.</source>
          <target state="translated">Pobiera lub ustawia lokacji, która jest powiązywana <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> do jego kontenera w trybie projektowania.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> interface representing the site that binds the <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> object to its container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> Interfejs reprezentujący lokacji, która jest powiązywana <ph id="ph2">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> obiektu do jego kontenera.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as providing a way for the container to manage its components.</source>
          <target state="translated">Powiązania witryny <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> do <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> i umożliwić komunikację między nimi, dzięki czemu kontener, aby zarządzać jego składniki.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Start">
          <source>Starts raising the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event by setting <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Enabled" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Uruchamia wywoływanie <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzenia przez ustawienie <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Enabled" /&gt;</ph> do <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Start">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> is called and <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Timers.Timer&gt;</ph> raises the <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event only once, the first time the interval elapses.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> nosi nazwę i <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> ustawiono <ph id="ph3">`false`</ph>, <ph id="ph4">&lt;xref:System.Timers.Timer&gt;</ph> zgłasza <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> upływa zdarzeń tylko raz, po raz pierwszy interwał.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Start">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> is called and <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is <ph id="ph3">`true`</ph>, the <ph id="ph4">&lt;xref:System.Timers.Timer&gt;</ph> raises the <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event the first time the interval elapses and continues to raise the event on the specified interval.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> nosi nazwę i <ph id="ph2">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> jest <ph id="ph3">`true`</ph>, <ph id="ph4">&lt;xref:System.Timers.Timer&gt;</ph> zgłasza <ph id="ph5">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> czas trwania zdarzenia pierwszy interwał upływa i będzie nadal występować wywołać zdarzenia w określonym przedziale czasu.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Start">
          <source>You can also start timing by setting <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Można także uruchomić przez ustawienie czasu <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> do <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Start">
          <source>If <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> method must be called in order to start the count again.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.AutoReset%2A&gt;</ph> jest <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> można wywołać metody, aby można było rozpocząć obliczanie ponownie.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Start">
          <source>A call to the <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> method when the timer is enabled has no effect.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Timers.Timer.Start%2A&gt;</ph> metody włączenie czasomierza nie ma wpływu.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Start">
          <source>The <ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> is created with an interval equal to or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> + 1, or set to an interval less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Timers.Timer" /&gt;</ph> Utworzeniu interwał równy lub większy niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> + 1 lub ustaw interwał mniejsze od zera.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Timers.Timer.Stop">
          <source>Stops raising the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event by setting <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Enabled" /&gt;</ph> to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Zatrzymuje wywoływanie <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> zdarzenia przez ustawienie <ph id="ph2">&lt;see cref="P:System.Timers.Timer.Enabled" /&gt;</ph> do <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>You can also stop timing by setting <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Można również zatrzymać chronometrażu przez ustawienie <ph id="ph1">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> do <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The signal to raise the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is always queued for execution on a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread, so the event-handling method might run on one thread at the same time that a call to the <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method runs on another thread.</source>
          <target state="translated">Sygnał podnieść <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zawsze umieszczonych w kolejce do wykonania na <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku, co metoda obsługi zdarzeń może być uruchamiane w jeden wątek, w tym samym czasie, który wywołanie <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metoda jest uruchamiana w innym wątku.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>This might result in the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event being raised after the <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method is called.</source>
          <target state="translated">Może to spowodować <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane po <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The code example in the next section shows one way to work around this race condition.</source>
          <target state="translated">W następnej sekcji przykładowy kod przedstawia sposób obejścia sytuacja wyścigu.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The following example instantiates a <ph id="ph1">`System.Timers.Timer`</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">`System.Timers.Timer`</ph> obiekt, który uruchamia się jego <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> zdarzeń co dwie sekundy (2000 MS), ustawia program obsługi zdarzeń dla zdarzenia i uruchamia czasomierz.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">Program obsługi zdarzeń zawiera wartość <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> właściwość zawsze jest on uruchamiany.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>When the user presses the Enter key, the application calls the  <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method before terminating the application.</source>
          <target state="translated">Gdy użytkownik naciśnie klawisz Enter, <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metoda przed zakończeniem aplikacji.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The following code example shows one way to prevent the thread that calls the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method from continuing until a currently executing <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event ends, and also to prevent two <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> events from executing the event handler at the same time (often referred to as reentrancy).</source>
          <target state="translated">Poniższy przykładowy kod przedstawia sposób zapobiec wątku, który wywołuje <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> metoda przed kontynuowaniem do aktualnie wykonywanych <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zakończenia zdarzenia i również dwa zapobiec <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenia wykonywanie programu obsługi zdarzeń w tym samym czas (nazywanej często ponownego rozpoczęcia).</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The example executes 100 test runs.</source>
          <target state="translated">Przykład wykonuje 100 uruchomień testów.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>Each time the test is run, the timer is started with an interval of 150 milliseconds.</source>
          <target state="translated">Zawsze, gdy test jest uruchomiony, czasomierza została uruchomiona z interwałem równym 150 milisekund.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The event handler uses the <ph id="ph1">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</source>
          <target state="translated">Program obsługi zdarzeń używa <ph id="ph1">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> metodę, aby symulować zadanie, które losowo różni się o długości od 50 do 200 ms.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The test method also starts a control thread that waits for a second and then stops the timer.</source>
          <target state="translated">Metoda testowa uruchamia również wątku formant, który oczekuje na sekundę, a następnie zatrzymuje czasomierza.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</source>
          <target state="translated">Jeśli zdarzenie jest obsługiwane czasomierza zatrzymania wątku kontroli, wątek kontroli musi poczekać na zdarzenie zostało zakończone przed kontynuowaniem.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> Przeciążenie metody jest używana w celu uniknięcia ponownego rozpoczęcia i uniemożliwić wątku kontroli kontynuowana do czasu zakończenia wykonywania zdarzenia.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The event handler uses the <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to set a control variable to 1, but only if the value is currently zero.</source>
          <target state="translated">Program obsługi zdarzeń używa <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> metodę, aby ustawić formantu zmiennej na wartość 1, ale tylko wtedy, gdy wartość jest obecnie zero.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>This is an atomic operation.</source>
          <target state="translated">Jest to niepodzielną operację.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</source>
          <target state="translated">Jeśli wartość zwracana jest wartość zero, 1 została ustawiona zmienna kontroli i obsługi zdarzeń będzie kontynuowana.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>If the return value is non-zero, the event is simply discarded to avoid reentrancy.</source>
          <target state="translated">Jeśli wartość zwracana jest niezerowa, zdarzenie jest po prostu odrzucony Aby uniknąć ponownego rozpoczęcia.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>(If it were necessary to execute every event, the <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</source>
          <target state="translated">(Jakby wykonać każde zdarzenie <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph> klasy będzie lepszym sposobem zdarzenia synchronizacji.) Po zakończeniu obsługi zdarzeń, ustawia zmienna sterująca wstecz na zero.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method was called.</source>
          <target state="translated">Przykład rejestruje łączną liczbę zdarzeń, które wykonane, które zostały odrzucone z powodu ponownego rozpoczęcia i które wystąpiły po <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> wywołano metodę.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The control thread uses the <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to set the control variable to -1 (minus one), but only if the value is currently zero.</source>
          <target state="translated">Wątek kontroli używa <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> metodę, aby ustawić formant zmiennej na wartość -1 (minus jeden), ale tylko wtedy, gdy wartość jest obecnie zero.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>If the atomic operation returns non-zero, an event is currently executing.</source>
          <target state="translated">Jeśli niepodzielną operację zwraca wartość inną niż zero, zdarzenie jest obecnie wykonywane.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The control thread waits and tries again.</source>
          <target state="translated">Wątek kontroli czeka i próbuje ponownie.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Timers.Timer.Stop">
          <source>The example records the number of times the control thread had to wait for an event to finish.</source>
          <target state="translated">Przykład rejestruje liczbę razy wątku formant miał oczekiwania na zdarzenie zakończyć.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Pobiera lub ustawia obiekt używany do organizowania wywołań obsługi zdarzeń, które są wydawane po upłynięciu interwału.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> Reprezentujący obiekt używany do organizowania wywołań obsługi zdarzeń, które są wydawane po upłynięciu interwału.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>When <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the method that handles the <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is called on a thread from the system-thread pool.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> jest <ph id="ph2">`null`</ph>, metoda obsługująca <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest wywoływane w wątku z puli wątków systemu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>For more information on system-thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na pule wątków systemu, zobacz <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>When the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest obsługiwane przez składnik visual formularzy systemu Windows, takie jak przycisk, uzyskiwanie dostępu do składnika za pośrednictwem puli wątków systemu może wynik wyjątku lub po prostu mogą nie działać.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>Avoid this effect by setting <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the method that handles the <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to be called on the same thread that the component was created on.</source>
          <target state="translated">Ustawiając uniknąć tego efektu <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> składnika formularzy systemu Windows, co powoduje, że metoda obsługująca <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń ma być wywołane na tym samym wątku, który składnik został utworzony na.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>Even if the <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> events can occur after the <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method has been called or after the <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> property has been set to <ph id="ph7">`false`</ph>, because the signal to raise the <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Nawet jeśli <ph id="ph1">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> właściwość nie jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń może wystąpić po <ph id="ph4">&lt;xref:System.Timers.Timer.Dispose%2A&gt;</ph> lub <ph id="ph5">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> została wywołana metoda lub po <ph id="ph6">&lt;xref:System.Timers.Timer.Enabled%2A&gt;</ph> ustawioną właściwość <ph id="ph7">`false`</ph>, ponieważ sygnału, aby wywołać <ph id="ph8">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzenie jest zawsze w kolejce do wykonania w wątku puli wątków.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event to ignore subsequent events.</source>
          <target state="translated">Jednym ze sposobów rozwiązania jest sytuacja wyścigu można ustawić flagi, który informuje program obsługi zdarzeń dla <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> zdarzeń ignorowanie kolejnych zdarzeń.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>If the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> is used inside Visual Studio in a Windows Forms designer, <ph id="ph2">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> is automatically set to the control that contains the <ph id="ph3">&lt;xref:System.Timers.Timer&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> jest używany w programie Visual Studio za pomocą projektanta formularzy systemu Windows <ph id="ph2">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> jest automatycznie ustawiana formant, który zawiera <ph id="ph3">&lt;xref:System.Timers.Timer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>For example, if you place a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> on a designer for <ph id="ph2">`Form1`</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>), the <ph id="ph4">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property of <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> is set to the instance of <ph id="ph6">`Form1`</ph>.</source>
          <target state="translated">Na przykład, jeśli zostanie <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> na projektanta dla <ph id="ph2">`Form1`</ph> (który dziedziczy z <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>), <ph id="ph4">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> właściwość <ph id="ph5">&lt;xref:System.Timers.Timer&gt;</ph> ustawiono wystąpienie <ph id="ph6">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>The following example is a Windows Forms app that serves as a very simple text file editor.</source>
          <target state="translated">Poniższy przykład jest aplikacji formularzy systemu Windows, która służy jako edytora tekstu bardzo proste.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</source>
          <target state="translated">Gdy tekst w polu tekstowym nie został zapisany, aplikacja pyta użytkownika w odstępach jednej minuty czy chce można zapisać zawartości pola tekstowego.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>To do this, the <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> property is set to one minute (60,000 milliseconds), and the <ph id="ph2">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> property is set to the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> object.</source>
          <target state="translated">Aby to zrobić, <ph id="ph1">&lt;xref:System.Timers.Timer.Interval%2A&gt;</ph> właściwość jest ustawiona na minutę (60 000 w milisekundach) i <ph id="ph2">&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;</ph> ma ustawioną właściwość <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>The example requires that you add the following controls to the form:</source>
          <target state="translated">Przykład wymaga, Dodaj następujące formanty do formularza:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`TextBox1`</ph> (its default name).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> formantu o nazwie <ph id="ph2">`TextBox1`</ph> (domyślnej nazwy).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control named <ph id="ph2">`Button1`</ph> (its default name).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> formantu o nazwie <ph id="ph2">`Button1`</ph> (domyślnej nazwy).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.Timer.SynchronizingObject">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> control named <ph id="ph2">`SaveSaveFileDialog1`</ph> (its default name) .</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.SaveFileDialog&gt;</ph> formantu o nazwie <ph id="ph2">`SaveSaveFileDialog1`</ph> (domyślnej nazwy).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>