<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f5db2fabcb7d8bd16865ae93253c3f12de7ee2" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209610" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interaktywnie kontroluje <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Media.Animation.ClockController> do interaktywnego rozpocząć, wstrzymać, wznowić, wyszukiwanie, Pomiń, Zatrzymaj i Usuń <xref:System.Windows.Media.Animation.Clock>. Można korzystać tylko z interakcyjnego kontrolować zegary na poziomie głównym.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia element docelowy <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> na początek następnego znaczników.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powoduje, że element docelowy <xref:System.Windows.Media.Animation.Clock> do zachowują się tak, jakby jego <xref:System.Windows.Media.Animation.Timeline> obiektu <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> zostały ustawione na czas następnego znaczników. Oś czasu użytkownika rzeczywiste <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> ustawienie jest ignorowane (ale nie zmianie).  
  
 Ta metoda zmienia zegara docelowej <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> do <xref:System.Windows.Media.Animation.ClockState.Active>. <xref:System.Windows.Media.Animation.ClockController.Begin%2A> Metody nie wznawia wstrzymania zegara.  
  
 Ta metoda nie ma wpływu na drzewie chronometrażu aż do następnego znacznik jest przetwarzana. Jako efekt uboczny odpowiednie również nie zostaną wywołane do tego czasu. Wywołanie tej metody wyzwala <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> i <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Media.Animation.Clock" /> kontrolowane przez to <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value><see cref="T:System.Windows.Media.Animation.Clock" /> Kontrolowane przez to <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatrzymuje element docelowy <see cref="T:System.Windows.Media.Animation.Clock" /> z postępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wstrzymać <xref:System.Windows.Media.Animation.Clock> niezależnie od jego bieżącego stanu i wstrzymywanie zegar nie zmienia bieżącego stanu. Zegar może być wstrzymana podczas <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, lub <xref:System.Windows.Media.Animation.ClockState.Filling>. Jedynym sposobem, aby wznowić zegar polega na użyciu <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metody. Wstrzymywanie zegar niejawnie wstrzymuje jego elementów podrzędnych.  
  
 Wywołanie tej metody, gdy zegara docelowego jest już wstrzymany nie ma znaczenia.  
  
 Wstrzymywanie wyzwalaczy zegara <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa <see cref="T:System.Windows.Media.Animation.Clock" /> skojarzony z tym <see cref="T:System.Windows.Media.Animation.ClockController" /> przy użyciu właściwości animuje go. Zegar i jego zegary podrzędne już nie wpłynie na tych właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wyzwala <xref:System.Windows.Media.Animation.Clock.RemoveRequested> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak do usunięcia, a w przeciwnym razie Kontroluj zegar interaktywnie.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Włącza <see cref="T:System.Windows.Media.Animation.Clock" /> wcześniej został wstrzymany wznowienie postępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można wstrzymać lub wznowić <xref:System.Windows.Media.Animation.Clock> niezależnie od tego, czy jego bieżący stan i wstrzymanie lub wznowienie zegar nie zmienia bieżącego stanu. Zegar może być wstrzymana podczas <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, lub <xref:System.Windows.Media.Animation.ClockState.Filling>. Jedynym sposobem, aby wznowić wstrzymany zegara polega na użyciu <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metody. Wznawianie zegar niejawnie wznawia jego elementów podrzędnych. Wywołanie tej metody na zegarze, która nie została wstrzymana nie ma znaczenia.  
  
 Wznawianie wyzwalaczy wstrzymania zegara <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Przesunięcie wyszukiwania mierzona w jednostkach zegara docelowego czasu. To przesunięcie jest określana względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, w zależności od wartości <paramref name="origin" />.</param>
        <param name="origin">Wartość, która wskazuje, czy określone przesunięcie względem zegara docelowej <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</param>
        <summary>Wyszukuje element docelowy <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> według określonej ilości sytuacji dalej znaczników. Jeśli zegar docelowej zostanie zatrzymana, wyszukiwanie sprawia, że active ponownie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyszukiwanie operacje nie przyjmują <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> lub <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> ustawienia oś czasu na zegarze pod uwagę: zegar jest traktowany tak, jakby jego osi czasu <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 i bez <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Ta metoda zmienia zegara <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> do <xref:System.Windows.Media.Animation.ClockState.Active>. Ta metoda nie ma wpływu na drzewie chronometrażu aż do następnego znacznik jest przetwarzana. Jako efekt uboczny odpowiednie również nie zostaną wywołane do tego czasu.  
  
 Wyszukiwanie wyzwalaczy scenorysu <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia.  
  
 Jeśli zegar docelowy ma elementy podrzędne, ich bieżący czas jest odpowiednio aktualizowana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wyszukiwanie przy użyciu <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Przesunięcie wyszukiwania mierzona w jednostkach zegara docelowego czasu. To przesunięcie jest określana względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, w zależności od wartości <paramref name="origin" />.</param>
        <param name="origin">Wartość, która wskazuje, czy określone przesunięcie względem zegara docelowej <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</param>
        <summary>Wyszukuje element docelowy <see cref="T:System.Windows.Media.Animation.Clock" /> według określonej ilości natychmiast. Jeśli zegar docelowej zostanie zatrzymana, wyszukiwanie sprawia, że active ponownie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyszukiwanie operacje nie przyjmują <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> lub <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> ustawienia oś czasu na zegarze pod uwagę: zegar jest traktowany tak, jakby jego osi czasu <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 i bez <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> Wyrównuje czas seeked zegar z ostatniej najmniejszej zegara. Wartości od razu są aktualizowane w celu odzwierciedlenia zmian ze względu na <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, nawet jeśli ekran nie będą odzwierciedlać te zmiany do momentu aktualizacji ekranu.  
  
 Jeśli zegar docelowy ma elementy podrzędne, ich bieżący czas jest odpowiednio aktualizowana.  
  
 Ta metoda zmienia zegara <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> do <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Wyszukiwanie wyzwalaczy scenorysu <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano oba <xref:System.Windows.Media.Animation.ClockController.Seek%2A> i <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> metody <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przesuwa bieżący czas docelowy <see cref="T:System.Windows.Media.Animation.Clock" /> do końca okresu aktywacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przechodzi zegara docelowej bieżący czas na koniec okresu aktywnego; zachowanie zegara w tym momencie jest określona przez <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> ustawienie jego <xref:System.Windows.Media.Animation.Timeline>. Jeśli oś czasu <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> właściwość jest ustawiona na <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, wypełnia zegar; Jeśli ustawiono właściwość <xref:System.Windows.Media.Animation.FillBehavior.Stop>, zatrzymuje zegara.  
  
 Ta metoda ma wpływ tylko wtedy, gdy zegar docelowej <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> jest <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Ta metoda nie ma wpływu na drzewie chronometrażu aż do następnego znacznik jest przetwarzana. Jako efekt uboczny odpowiednie również nie zostaną wywołane do tego czasu.  
  
 Przesuwania scenorysu do wypełnienia jego okresu wyzwalaczy <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia interaktywne szybkości docelowego <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <value>Skończoną wartość większą niż zero, opisujący interaktywne prędkość zegara docelowego. Ta wartość jest mnożony względem wartości <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> zegara <see cref="T:System.Windows.Media.Animation.Timeline" />. Na przykład jeśli oś czasu <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> wynosi 0,5 i <see cref="T:System.Windows.Media.Animation.ClockController" /> obiektu <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> jest 3.0, oś czasu przenosi na 1,5 raza więcej niż normalna szybkość (0,5 * 3.0). Wartość domyślna to 1.0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości nie obowiązuje do czasu następnego znaczników. Jeśli możesz ustawić tę właściwość, a następnie jego wartość przed występuje dalej znaczników, otrzymasz starej wartości. Właściwość ta zwróci nową wartość po następnym znaczników.  
  
 Ustawienie tej właściwości nie powoduje zmiany wartości podstawowej osi czasu <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Ustawienie tej właściwości wyzwala zegara docelowej <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatrzymuje element docelowy <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zmienia zegara docelowej <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> do <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 A <xref:System.Windows.Media.Animation.Clock.Stopped%2A> zegara może zostać uruchomiony ponownie, używając <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, lub <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> metody.  
  
 Ta metoda nie ma wpływu na drzewie chronometrażu aż do następnego znacznik jest przetwarzana. Jako efekt uboczny odpowiednie również nie zostaną wywołane do tego czasu.  
  
 Zatrzymywanie wyzwalaczy zegara <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia, ale nie <xref:System.Windows.Media.Animation.Clock.Completed> zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>