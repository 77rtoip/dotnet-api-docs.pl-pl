<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a91fa3fc50a96226811a98aa08d858ffa256d74" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69165615" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interaktywnie kontroluje <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj, <xref:System.Windows.Media.Animation.Clock>aby interaktywnie zacząć, wstrzymywać, wznawiać, poszukiwać, pomijać, zatrzymywać i usuwać. <xref:System.Windows.Media.Animation.ClockController> Możesz interaktywnie kontrolować zegary na poziomie głównym.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia obiekt docelowy <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> do rozpoczęcia od następnego taktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powoduje, że <xref:System.Windows.Media.Animation.Clock> obiekt docelowy zachowuje się tak <xref:System.Windows.Media.Animation.Timeline> , jakby <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> jego obiekt został ustawiony na godzinę następnego taktu. Rzeczywiste <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> ustawienie osi czasu jest ignorowane (ale nie zmienia się).  
  
 Ta metoda zmienia zegar <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> docelowy na. <xref:System.Windows.Media.Animation.ClockState.Active> <xref:System.Windows.Media.Animation.ClockController.Begin%2A> Metoda nie wznawia wstrzymanego zegara.  
  
 Ta metoda nie ma wpływu na drzewo chronometrażu do czasu następnego przetworzenia taktu. Jako efekt uboczny, odpowiednie zdarzenia nie będą również zgłaszane do momentu. Wywołanie tej metody wyzwala <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia i. <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontrolowane przez ten <see cref="T:System.Windows.Media.Animation.ClockController" />. <see cref="T:System.Windows.Media.Animation.Clock" /></summary>
        <value>Kontrolowane przez ten <see cref="T:System.Windows.Media.Animation.ClockController" />. <see cref="T:System.Windows.Media.Animation.Clock" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uniemożliwia przejście elementu <see cref="T:System.Windows.Media.Animation.Clock" /> docelowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można wstrzymywać bez względu na <xref:System.Windows.Media.Animation.Clock> bieżący stan, a wstrzymywanie zegara nie zmienia jego bieżącego stanu. Zegar można wstrzymać w czasie <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, lub <xref:System.Windows.Media.Animation.ClockState.Filling>. Jedynym sposobem na odwstrzymywanie zegara jest użycie <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metody. Wstrzymywanie zegara niejawnie wstrzymuje jego elementy podrzędne.  
  
 Wywołanie tej metody, gdy zegar docelowy jest już wstrzymany, nie ma żadnego wpływu.  
  
 Wstrzymywanie zegara wyzwala <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa powiązane z tym <see cref="T:System.Windows.Media.Animation.ClockController" /> z właściwości, które są animowane. <see cref="T:System.Windows.Media.Animation.Clock" /> Zegar i jego elementy podrzędne nie będą miały już wpływu na te właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wyzwala <xref:System.Windows.Media.Animation.Clock.RemoveRequested> zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak usunąć i w inny sposób interaktywnie sterować zegarem.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia wznowienie postępów, które zostały wcześniej wstrzymane. <see cref="T:System.Windows.Media.Animation.Clock" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można wstrzymywać lub wznawiać <xref:System.Windows.Media.Animation.Clock> niezależnie od bieżącego stanu, a Wstrzymywanie i wznawianie zegara nie zmienia jego bieżącego stanu. Zegar można wstrzymać w czasie <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, lub <xref:System.Windows.Media.Animation.ClockState.Filling>. Jedynym sposobem wznowienia wstrzymanego zegara jest użycie <xref:System.Windows.Media.Animation.ClockController.Resume%2A> metody. Wznawianie zegara niejawnie wznawia jego elementy podrzędne. Wywołanie tej metody na zegarze, który nie jest wstrzymany, nie ma żadnego wpływu.  
  
 Wznawianie wstrzymanego zegara wyzwala <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Przesunięcie wyszukiwania mierzone w czasie docelowego zegara. To przesunięcie jest względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, w <paramref name="origin" />zależności od wartości.</param>
        <param name="origin">Wartość wskazująca, czy określone przesunięcie jest względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> docelowego, czy też. <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /></param>
        <summary>Wyszukuje element docelowy <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> o określonej wartości, gdy występuje następny takt. Jeśli zegar docelowy jest zatrzymany, wyszukiwanie spowoduje jego ponowne uaktywnienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacje <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> wyszukiwania nie przyjmują ani <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> nie są ustawieniami osi czasu tego zegara do konta: zegar jest traktowany jak w przypadku, gdy jego <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oś czasu ma wartość <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>1 i nie.  
  
 Ta metoda zmienia zegar <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> na. <xref:System.Windows.Media.Animation.ClockState.Active> Ta metoda nie ma wpływu na drzewo chronometrażu do czasu następnego przetworzenia taktu. Jako efekt uboczny, odpowiednie zdarzenia również nie będą zgłaszane do momentu.  
  
 Wyszukiwanie scenorysu wyzwala <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> zdarzenia i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> .  
  
 Jeśli zegar docelowy ma elementy podrzędne, jego bieżący czas jest odpowiednio aktualizowany.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Media.Animation.ClockController>jak wyszukiwać przy użyciu.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Przesunięcie wyszukiwania mierzone w czasie docelowego zegara. To przesunięcie jest względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> lub <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, w <paramref name="origin" />zależności od wartości.</param>
        <param name="origin">Wartość wskazująca, czy określone przesunięcie jest względem zegara <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> docelowego, czy też. <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /></param>
        <summary>Wyszukuje element docelowy <see cref="T:System.Windows.Media.Animation.Clock" /> o określonej kwocie od razu. Jeśli zegar docelowy jest zatrzymany, wyszukiwanie spowoduje jego ponowne uaktywnienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacje <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> wyszukiwania nie przyjmują ani <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> nie są ustawieniami osi czasu tego zegara do konta: zegar jest traktowany jak w przypadku, gdy jego <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oś czasu ma wartość <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>1 i nie.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>Wyrównuje czas przeszukiwania zegara z ostatnim taktem zegara. Wartości są natychmiast aktualizowane w celu odzwierciedlenia zmian z <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>powodu, nawet jeśli ekran nie będzie odzwierciedlał tych zmian do momentu aktualizacji ekranu.  
  
 Jeśli zegar docelowy ma elementy podrzędne, jego bieżący czas jest odpowiednio aktualizowany.  
  
 Ta metoda zmienia zegar <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> na. <xref:System.Windows.Media.Animation.ClockState.Active>  
  
 Wyszukiwanie scenorysu wyzwala <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> zdarzenia i <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> .  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Windows.Media.Animation.ClockController.Seek%2A> metody <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> <xref:System.Windows.Media.Animation.ClockController>i.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przesuwa bieżący czas docelowy <see cref="T:System.Windows.Media.Animation.Clock" /> na koniec okresu aktywności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda postępuje bieżący czas dla zegara docelowego do końca okresu aktywności; zachowanie zegara w tym punkcie jest określone przez <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> ustawienie. <xref:System.Windows.Media.Animation.Timeline> Jeśli <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> Właściwość osi czasu jest ustawiona na <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, zegar jest wypełniany; Jeśli właściwość jest ustawiona na <xref:System.Windows.Media.Animation.FillBehavior.Stop>, zegar zostanie zatrzymany.  
  
 Ta metoda ma efekt tylko wtedy, gdy zegar <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> docelowy to. <xref:System.Windows.Media.Animation.ClockState.Active>  
  
 Ta metoda nie ma wpływu na drzewo chronometrażu do czasu następnego przetworzenia taktu. Jako efekt uboczny, odpowiednie zdarzenia również nie będą zgłaszane do momentu.  
  
 Przechodzenie scenorysu do jego okresu wypełnienia wyzwala <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzenia i. <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szybkość dla elementu docelowego <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <value>Wartość skończoną większa od zera, która opisuje interaktywną szybkość zegara docelowego. Ta wartość jest mnożona względem wartości <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> <see cref="T:System.Windows.Media.Animation.Timeline" />zegara. Na przykład, jeśli oś czasu <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> to 0,5, <see cref="T:System.Windows.Media.Animation.ClockController" /> a obiekt <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> jest 3,0, oś czasu jest przesuwana o godzinie 1,5 (0,5 * 3,0). Wartość domyślna to 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości nie ma wpływu do następnego taktu. Jeśli ustawisz tę właściwość, a następnie otrzymasz jej wartość przed wystąpieniem następnego taktu, otrzymasz starą wartość. Ta właściwość zwróci nową wartość po następnym taktie.  
  
 Ustawienie tej właściwości nie powoduje zmiany wartości źródłowej osi czasu <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Ustawienie tej właściwości wyzwala <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> zdarzenie zegara docelowego.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka element docelowy <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zmienia zegar <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> docelowy na. <xref:System.Windows.Media.Animation.Clock.Stopped%2A>  
  
 Zegar można uruchomić ponownie przy <xref:System.Windows.Media.Animation.ClockController.Begin%2A>użyciu metody, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, lub <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>. <xref:System.Windows.Media.Animation.Clock.Stopped%2A>  
  
 Ta metoda nie ma wpływu na drzewo chronometrażu do czasu następnego przetworzenia taktu. Jako efekt uboczny, odpowiednie zdarzenia również nie będą zgłaszane do momentu.  
  
 Zatrzymywanie zegara wyzwala <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> zdarzenia i, ale nie zdarzenia.<xref:System.Windows.Media.Animation.Clock.Completed>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
