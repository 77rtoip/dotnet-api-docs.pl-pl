<Type Name="CubicEase" FullName="System.Windows.Media.Animation.CubicEase">
  <TypeSignature Language="C#" Value="public class CubicEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CubicEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.CubicEase" />
  <TypeSignature Language="VB.NET" Value="Public Class CubicEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CubicEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72dd0-101">Reprezentuje funkcji sterowania tempem zmian, które tworzy animacji, które przyspieszają i/lub zwalnia przy użyciu formuły *f*(*t*) = *t*<sup>3</sup>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-101">Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>3</sup>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72dd0-102">Można kontrolować, czy animacja przyspiesza, mimo, lub obu, określając <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-102">You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span> <span data-ttu-id="72dd0-103">Wykres przedstawia różne wartości <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, gdzie *f*(*t*) reprezentuje postęp animacji i *t* reprezentuje czas.</span><span class="sxs-lookup"><span data-stu-id="72dd0-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="72dd0-104">![Wykresy obiektu CubicEase w trybie. ] (~/add/media/cubicease-graph.png "Wykresy obiektu CubicEase w trybie.")</span><span class="sxs-lookup"><span data-stu-id="72dd0-104">![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png "CubicEase EasingMode graphs.")</span></span>  
  
 <span data-ttu-id="72dd0-105">Formuła używany dla tej funkcji jest następujące.</span><span class="sxs-lookup"><span data-stu-id="72dd0-105">The formula used for this function is the following.</span></span>  
  
 <span data-ttu-id="72dd0-106">*f*(*t*) = *t*<sup>3</sup></span><span class="sxs-lookup"><span data-stu-id="72dd0-106">*f*(*t*) = *t*<sup>3</sup></span></span>  
  
 <span data-ttu-id="72dd0-107">Istnieje kilka innych funkcji sterowania tempem zmian oprócz <xref:System.Windows.Media.Animation.CubicEase> który można sprawdzić za pomocą poniższego polecenia programu Silverlight.</span><span class="sxs-lookup"><span data-stu-id="72dd0-107">There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample.</span></span>  
  
 [<span data-ttu-id="72dd0-108">Uruchomienie tego przykładu</span><span class="sxs-lookup"><span data-stu-id="72dd0-108">Run this sample</span></span>](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 <span data-ttu-id="72dd0-109">Oprócz przy użyciu funkcji sterowania tempem zmian, zawarte w czasie wykonywania, można tworzyć własne niestandardowe funkcji sterowania tempem zmian przez dziedziczenie z <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-109">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
<a name="xamlObjectElementUsage_CubicEase"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="72dd0-110">Użycie elementu obiektu języka XAML</span><span class="sxs-lookup"><span data-stu-id="72dd0-110">XAML Object Element Usage</span></span>  
  
```  
<CubicEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="72dd0-111">Następujący przykład dotyczy <xref:System.Windows.Media.Animation.CubicEase> łatwiejszym funkcji <xref:System.Windows.Media.Animation.DoubleAnimation> utworzyć decelerating animacji.</span><span class="sxs-lookup"><span data-stu-id="72dd0-111">The following example applies a <xref:System.Windows.Media.Animation.CubicEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span>  
  
 [!code-xaml[CubicEase#CubicEase](~/samples/snippets/csharp/VS_Snippets_Wpf/cubicease/CS/window1.xaml#cubicease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CubicEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CubicEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72dd0-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Animation.CubicEase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="72dd0-112">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CubicEase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72dd0-113">Tworzy nowe wystąpienie klasy <see cref="T:System.Windows.Freezable" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="72dd0-113">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span> <span data-ttu-id="72dd0-114">Podczas tworzenia klasy pochodnej, konieczne jest przesłonięcie tej metody.</span><span class="sxs-lookup"><span data-stu-id="72dd0-114">When creating a derived class, you must override this method.</span></span></summary>
        <returns><span data-ttu-id="72dd0-115">Nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="72dd0-115">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72dd0-116">Animacja klasy dziedziczyć pośrednio <xref:System.Windows.Freezable>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-116">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="72dd0-117">W związku z tym należy zastąpić <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> metody do konstruowania obiektu animacji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="72dd0-117">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72dd0-118">W poniższym przykładzie przedstawiono Typowa implementacja <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-118">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime"><span data-ttu-id="72dd0-119">Czas znormalizowane (postępu) animacji.</span><span class="sxs-lookup"><span data-stu-id="72dd0-119">Normalized time (progress) of the animation.</span></span></param>
        <summary><span data-ttu-id="72dd0-120">Udostępnia część logiki funkcji sterowania tempem zmian, którą można zastąpić w celu utworzenia <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> tryb niestandardowej funkcji sterowania tempem zmian.</span><span class="sxs-lookup"><span data-stu-id="72dd0-120">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span></span></summary>
        <returns><span data-ttu-id="72dd0-121">Wartość o podwójnej precyzji reprezentującą przekształcone postępu.</span><span class="sxs-lookup"><span data-stu-id="72dd0-121">A double that represents the transformed progress.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72dd0-122">Ta metoda przekształca czasu znormalizowane do kontrolowania tempie animacji dla <xref:System.Windows.Media.Animation.EasingMode.EaseIn> przypadku <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="72dd0-122">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="72dd0-123">Należy określić dla funkcji sterowania tempem zmian <xref:System.Windows.Media.Animation.EasingMode.EaseIn> wielkość liter, ponieważ implementacja <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> transformacje metody `normalizedTime` dla <xref:System.Windows.Media.Animation.EasingMode.EaseOut> i <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> przypadków.</span><span class="sxs-lookup"><span data-stu-id="72dd0-123">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>