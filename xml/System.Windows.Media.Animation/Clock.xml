<Type Name="Clock" FullName="System.Windows.Media.Animation.Clock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="829cbcd67b4a6736053ec04245b9b87181268348" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Clock : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Clock extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Clock" />
  <TypeSignature Language="VB.NET" Value="Public Class Clock&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clock : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="79e18-101">Zachowuje swój stan czasu wykonywania chronometrażu dla <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79e18-101">Maintains run-time timing state for a <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-102">A <xref:System.Windows.Media.Animation.Timeline>, samodzielnie, faktycznie nic nie robi innych niż opisano segment czasu.</span><span class="sxs-lookup"><span data-stu-id="79e18-102">A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time.</span></span> <span data-ttu-id="79e18-103">Jest na osi czasu <xref:System.Windows.Media.Animation.Clock> obiekt, który wykonuje rzeczywistą pracę: Ta funkcja obsługuje związany z czasem stan czasu wykonywania dla osi czasu.</span><span class="sxs-lookup"><span data-stu-id="79e18-103">It's the timeline's <xref:System.Windows.Media.Animation.Clock> object that does the real work: it maintains timing-related run-time state for the timeline.</span></span>  
  
 <span data-ttu-id="79e18-104">W większości przypadków zegar jest tworzona automatycznie dla osi czasu.</span><span class="sxs-lookup"><span data-stu-id="79e18-104">In most cases, a clock is created automatically for your timeline.</span></span> <span data-ttu-id="79e18-105">Gdy animować przy użyciu <xref:System.Windows.Media.Animation.Storyboard> lub <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> metody zegary są automatycznie tworzone dla osi czasu i animacji i stosowane do ich właściwości docelowej.</span><span class="sxs-lookup"><span data-stu-id="79e18-105">When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</span></span> <span data-ttu-id="79e18-106">Przykłady można znaleźć [porady: animować właściwości przy użyciu scenorysu](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) i [porady: animowania właściwości bez Using scenorysu](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span><span class="sxs-lookup"><span data-stu-id="79e18-106">For examples, see [How to: Animate a Property by Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) and [How to: Animate a Property Without Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="79e18-107">Można również utworzyć <xref:System.Windows.Media.Animation.Clock> jawnie przy użyciu <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="79e18-107">You can also create a <xref:System.Windows.Media.Animation.Clock> explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method.</span></span> <span data-ttu-id="79e18-108">W scenariuszach intensywnie wydajności, takich jak animacji dużą liczbą obiektów podobne Zarządzanie własne <xref:System.Windows.Media.Animation.Clock> Użyj zapewniają korzyści wydajności.</span><span class="sxs-lookup"><span data-stu-id="79e18-108">In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <xref:System.Windows.Media.Animation.Clock> use can provide performance benefits.</span></span>  
  
 <span data-ttu-id="79e18-109">Zegary ułożone w drzewach, które zgodna ze strukturą <xref:System.Windows.Media.Animation.Timeline> drzewa obiektów, z której są tworzone.</span><span class="sxs-lookup"><span data-stu-id="79e18-109">Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created.</span></span> <span data-ttu-id="79e18-110">Zegar głównego drzewa chronometrażu może interakcyjnie manipulować (wstrzymania, wznowienia zatrzymana i itd.) przez pobranie jej <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span><span class="sxs-lookup"><span data-stu-id="79e18-110">The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span></span> <span data-ttu-id="79e18-111">Inne niż główne zegary nie mogą być kontrolowane bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="79e18-111">Non-root clocks cannot be directly controlled.</span></span>  
  
 <span data-ttu-id="79e18-112">Po utworzeniu zegar nie może być modyfikowana (ale może być modyfikowany w zakresie).</span><span class="sxs-lookup"><span data-stu-id="79e18-112">Once created, a clock cannot be modified (but it can be manipulated).</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="79e18-113">Przy użyciu osi czasu, ponieważ czasomierza</span><span class="sxs-lookup"><span data-stu-id="79e18-113">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="79e18-114">Oś czasu zegara tylko będzie postęp po skojarzony program obsługi zdarzeń lub (w przypadku liczby <xref:System.Windows.Media.Animation.AnimationClock> obiektu) jest skojarzona z właściwością.</span><span class="sxs-lookup"><span data-stu-id="79e18-114">A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="79e18-115">Z tego powodu (i inne), nie jest zalecane używanie <xref:System.Windows.Media.Animation.Timeline> jako czasomierza.</span><span class="sxs-lookup"><span data-stu-id="79e18-115">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="79e18-116">Klasy pochodne powinny implementować <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> Jeśli chcą, aby zmodyfikować sposób czasu przepływy ten zegar.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79e18-116">Derived classes should implement <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> if they want to modify how time flows for this clock.</span>
        </span>
        <span data-ttu-id="79e18-117">Klasy pochodne mogą być dokonywane wykonać dodatkowe czynności, jeśli zegar jest powtarzany, pomija, stara, rozpoczyna się, wstrzymuje, wznawia lub zatrzymuje się przez zastąpienie <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, i <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> metody.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79e18-117">Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, and <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> methods.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal Clock (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Clock(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <span data-ttu-id="79e18-118">
            <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> z której ten zegar powinien skonstruowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-118">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this clock should be constructed.</span>
          </span>
          <span data-ttu-id="79e18-119">Zegary nie są tworzone dla wszystkich podrzędnych <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> obiekty, jeśli istnieją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-119">Clocks are not created for any child <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> objects, if they exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79e18-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Animation.Clock" /> przy użyciu określonego <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> jako szablon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-120">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Clock" /> class, using the specified <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> as a template.</span>
          </span>
          <span data-ttu-id="79e18-121">Nowe <see cref="T:System.Windows.Media.Animation.Clock" /> obiekt nie ma elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-121">The new <see cref="T:System.Windows.Media.Animation.Clock" /> object has no children.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-122">Występuje, gdy ten zegar całkowicie zakończeniu odtwarzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-122">Occurs when this clock has completely finished playing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-123">Jeśli ten zegar jest zegar głównego drzewa zegara, odtwarzanie po osiągnie koniec jego active czas trwania (w tym powtarza) i wszystkie jego elementy podrzędne osiągnęły koniec active czasie ich trwania zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="79e18-123">If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</span></span> <span data-ttu-id="79e18-124">Jeśli ten zegar jest zegar podrzędne, jest on uznawany za całkowicie zakończeniu odtwarzania gdy zegara głównego drzewa zegara, do którego należy osiągnie koniec active czasie i jego zegary podrzędnych zakończą odtwarzanie.</span><span class="sxs-lookup"><span data-stu-id="79e18-124">If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</span></span>  
  
 <span data-ttu-id="79e18-125">Zatrzymywanie zegar nie spowoduje wyzwolenia jego zakończonego zdarzenia, ale nie jego przejściem do okresu.</span><span class="sxs-lookup"><span data-stu-id="79e18-125">Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockController Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.ClockController Controller" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Controller" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controller As ClockController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockController ^ Controller { System::Windows::Media::Animation::ClockController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-126">Pobiera <see cref="T:System.Windows.Media.Animation.ClockController" /> który może służyć do uruchamiania, wstrzymać, wznowić, wyszukiwanie, Pomiń, Zatrzymaj lub usuń to <see cref="T:System.Windows.Media.Animation.Clock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-126">Gets a <see cref="T:System.Windows.Media.Animation.ClockController" /> that can be used to start, pause, resume, seek, skip, stop, or remove this <see cref="T:System.Windows.Media.Animation.Clock" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-127">A <see cref="T:System.Windows.Media.Animation.ClockController" /> Jeśli zegar głównego; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-127">A <see cref="T:System.Windows.Media.Animation.ClockController" /> if this is a root clock; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-128">Tylko zegary głównego można sterować interaktywnie.</span><span class="sxs-lookup"><span data-stu-id="79e18-128">Only root clocks can be interactively controlled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Begin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentGlobalSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentGlobalSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentGlobalSpeed As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentGlobalSpeed { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-129">Pobiera szybkości, jaką jest obecnie postępu czasu zegara, w porównaniu do czasu rzeczywistych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-129">Gets the rate at which the clock's time is currently progressing, compared to real-world time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-130">Szybkość jaką ten zegar jest bieżący postęp w porównaniu do czasu rzeczywistych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-130">The rate at which this clock's time is current progressing, compared to real-world time.</span>
          </span>
          <span data-ttu-id="79e18-131">Jeśli zegar zostanie zatrzymana, ta właściwość zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-131">If the clock is stopped, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-132">Występuje, gdy jest aktualizowana szybkości zegara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-132">Occurs when the clock's speed is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-133">Wstrzymywanie, wznawianie, cofania, przyspieszanie, decelerating, wyszukiwanie, zatrzymywanie lub zmianę zegara do interaktywnego szybkości za pomocą <xref:System.Windows.Media.Animation.ClockController> to zdarzenie jest wyzwalane.</span><span class="sxs-lookup"><span data-stu-id="79e18-133">Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.</span></span>  
  
 <span data-ttu-id="79e18-134">Mimo że to zdarzenie występuje, gdy <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> właściwości staje się nieprawidłowy, który nie musi oznaczać zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="79e18-134">Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalTime">
      <MemberSignature Language="C#" Value="protected TimeSpan CurrentGlobalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentGlobalTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentGlobalTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TimeSpan CurrentGlobalTime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-135">Pobiera bieżący czas globalnych, zgodnie z ustaleniami [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] czasu systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-135">Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-136">Bieżący czas globalne dla [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] czasu systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-136">The current global time for the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CurrentIteration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CurrentIteration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentIteration As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CurrentIteration { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-137">Pobierz bieżącą iterację ten zegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-137">Get the current iteration of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-138">Ten zegar bieżącą iterację w jego bieżącym aktywnym okresie lub <see langword="null" /> Jeśli ten zegar zostanie zatrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-138">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-139">Zegar pierwszej iteracji ma wartość 1.</span><span class="sxs-lookup"><span data-stu-id="79e18-139">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="79e18-140">Jeśli ten zegar osi czasu <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> ustawienie `true`, pełny iteracji składa się z pary wstecznego do przodu, nie tylko jeden z nich segmentów.</span><span class="sxs-lookup"><span data-stu-id="79e18-140">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="79e18-141">Niezależnie od jego bieżącej iteracji wyszukiwanie zegarze zwraca jego bieżącej iteracji do 1.</span><span class="sxs-lookup"><span data-stu-id="79e18-141">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="79e18-142">Ponowne uruchamianie zegar zwraca również wartość jego bieżącej iteracji do 1.</span><span class="sxs-lookup"><span data-stu-id="79e18-142">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="CurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentProgress As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentProgress { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-143">Pobiera bieżący postęp tego <see cref="T:System.Windows.Media.Animation.Clock" /> w jego bieżącej iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-143">Gets the current progress of this <see cref="T:System.Windows.Media.Animation.Clock" /> within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-144">
            <see langword="null" /> Jeśli ten zegar jest <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, lub 0.0, jeśli ten zegar jest aktywna i jego <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> ma <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> z <see cref="P:System.Windows.Duration.Forever" />; w przeciwnym razie wartość z zakresu od 0,0 do 1,0, która wskazuje bieżący postęp ten zegar w jego bieżącej iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-144">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</span>
          </span>
          <span data-ttu-id="79e18-145">Wartość 0.0 oznacza nie postępu, a wartość 1.0 oznacza, że zegar jest na końcu jego bieżącej iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-145">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-146">Wskazuje wartość tej właściwości <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> znormalizowaną przez <xref:System.Windows.Media.Animation.Timeline.Duration%2A> tego zegara <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="79e18-146">The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span></span>  
  
 <span data-ttu-id="79e18-147">Zegara, który jest <xref:System.Windows.Media.Animation.ClockState.Filling> ma <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> 1.0.</span><span class="sxs-lookup"><span data-stu-id="79e18-147">A clock that is <xref:System.Windows.Media.Animation.ClockState.Filling> has a <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> of 1.0.</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="79e18-148">Przy użyciu osi czasu, ponieważ czasomierza</span><span class="sxs-lookup"><span data-stu-id="79e18-148">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="79e18-149">Oś czasu zegara tylko będzie postęp po programu obsługi zdarzeń, skojarzone z nim lub (w przypadku liczby <xref:System.Windows.Media.Animation.AnimationClock> obiektu) jest skojarzona z właściwością.</span><span class="sxs-lookup"><span data-stu-id="79e18-149">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="79e18-150">Z tego powodu (i inne), nie jest zalecane używanie <xref:System.Windows.Media.Animation.Timeline> jako czasomierza.</span><span class="sxs-lookup"><span data-stu-id="79e18-150">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.ClockState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockState CurrentState { System::Windows::Media::Animation::ClockState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-151">Pobiera wartość wskazującą, czy zegar jest obecnie <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, lub <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-151">Gets a value indicating whether the clock is currently <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-152">Bieżący stan zegara: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, lub <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-152">The current state of the clock: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-153">Należy zwrócić uwagę na zegarze <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> właściwości nie informujące, czy została wstrzymana.</span><span class="sxs-lookup"><span data-stu-id="79e18-153">Note the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property doesn't tell you whether it's paused.</span></span> <span data-ttu-id="79e18-154">Aby określić, czy zegar jest wstrzymana, użyj <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="79e18-154">To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.</span></span>  
  
 <span data-ttu-id="79e18-155"><xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> Występuje przy każdej zmianie wartości tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="79e18-155">The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-156">Występuje, gdy zegar <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> właściwość jest aktualizowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-156">Occurs when the clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-157">Użyj <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> zdarzenia, kiedy chcą być powiadamiani, jeśli po uruchomieniu zegar zatrzymuje się lub wypełnia.</span><span class="sxs-lookup"><span data-stu-id="79e18-157">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills.</span></span> <span data-ttu-id="79e18-158"><xref:System.Object> Parametr <xref:System.EventHandler> procedura obsługi zdarzeń jest <xref:System.Windows.Media.Animation.Clock> stan została unieważniona.</span><span class="sxs-lookup"><span data-stu-id="79e18-158">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.</span></span>  
  
 <span data-ttu-id="79e18-159">Wstrzymywanie <xref:System.Windows.Media.Animation.Clock> nie zmienia jej <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span><span class="sxs-lookup"><span data-stu-id="79e18-159">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="79e18-160">Aby otrzymać powiadomienie, gdy zegar zostanie wstrzymana, należy użyć <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="79e18-160">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="79e18-161">Mimo że to zdarzenie występuje, gdy <xref:System.Windows.Media.Animation.ClockState> staje się nieprawidłowy, który nie musi oznaczać <xref:System.Windows.Media.Animation.ClockState> zmienione: <xref:System.Windows.Media.Animation.Clock> zmienia się z <xref:System.Windows.Media.Animation.ClockState.Active> do <xref:System.Windows.Media.Animation.ClockState.Filling> , a następnie z powrotem do <xref:System.Windows.Media.Animation.ClockState.Active> w tej samej osi spowoduje tego zdarzenia, ale jego <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> właściwości rzeczywiście nie zmieni się.</span><span class="sxs-lookup"><span data-stu-id="79e18-161">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="T:System.Windows.Media.Animation.ClockState" />
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; CurrentTime { Nullable&lt;TimeSpan&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-162">Pobiera ten zegar przez bieżący czas w jego bieżącej iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-162">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-163">
            <see langword="null" /> Jeśli ten zegar jest <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; w przeciwnym razie bieżący czas ten zegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-163">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of this clock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="79e18-164">Przy użyciu osi czasu, ponieważ czasomierza</span><span class="sxs-lookup"><span data-stu-id="79e18-164">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="79e18-165">Oś czasu zegara tylko będzie postęp po programu obsługi zdarzeń, skojarzone z nim lub (w przypadku liczby <xref:System.Windows.Media.Animation.AnimationClock> obiektu) jest skojarzona z właściwością.</span><span class="sxs-lookup"><span data-stu-id="79e18-165">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="79e18-166">Z tego powodu (i inne), nie jest zalecane używanie <xref:System.Windows.Media.Animation.Timeline> jako czasomierza.</span><span class="sxs-lookup"><span data-stu-id="79e18-166">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-167">Występuje, gdy ten zegar <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> staje się nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-167">Occurs when this clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> becomes invalid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-168">Zegar <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> jest nieprawidłowy, gdy realizowany zegara.</span><span class="sxs-lookup"><span data-stu-id="79e18-168">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses.</span></span> <span data-ttu-id="79e18-169">Następujące operacje interaktywne również wyzwalacz zdarzenia CurrentTimeInvalidated: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, i <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="79e18-169">The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscontinuousTimeMovement">
      <MemberSignature Language="C#" Value="protected virtual void DiscontinuousTimeMovement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscontinuousTimeMovement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscontinuousTimeMovement ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscontinuousTimeMovement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79e18-170">Po zaimplementowaniu w klasie pochodnej, zostanie wywołany, zawsze, gdy zegar jest powtarzany, pomija lub wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-170">When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCanSlip">
      <MemberSignature Language="C#" Value="protected virtual bool GetCanSlip ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetCanSlip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCanSlip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCanSlip () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetCanSlip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79e18-171">Zwraca czy <see cref="T:System.Windows.Media.Animation.Clock" /> ma własną źródła czas zewnętrzny, które mogą wymagać synchronizacji w systemie chronometrażu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-171">Returns whether the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external time source, which may require synchronization with the timing system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79e18-172">Zwraca **true** Jeśli <see cref="T:System.Windows.Media.Animation.Clock" /> ma zewnętrznego źródła czasu, które mogą wymagać synchronizacji w systemie chronometrażu; w przeciwnym razie **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-172">Returns **true** if the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external source for time, which may require synchronization with the timing system; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-173">Nośnik są odtwarzane przy użyciu <xref:System.Windows.Media.MediaTimeline> w <xref:System.Windows.Media.Animation.Storyboard> przykładem tworzenia <xref:System.Windows.Media.Animation.Clock> które byłyby źródła czas zewnętrzny (klip wideo na przykład), które mogą wymagać synchronizacji z innych osi czasu, w ramach <xref:System.Windows.Media.Animation.Storyboard>.</span><span class="sxs-lookup"><span data-stu-id="79e18-173">Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="79e18-174">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span><span class="sxs-lookup"><span data-stu-id="79e18-174">See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTimeCore">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan GetCurrentTimeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.TimeSpan GetCurrentTimeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCurrentTimeCore () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TimeSpan GetCurrentTimeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79e18-175">Pobiera ten zegar przez bieżący czas w jego bieżącej iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-175">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79e18-176">Bieżący czas zegara, jeśli jest aktywny lub napełniania; w przeciwnym razie <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-176">The current time of this clock if it is active or filling; otherwise, <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-177">Ta metoda jest używana do implementacji <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> metody i nie powinna być wywoływana bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="79e18-177">This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="79e18-178">Klasy pochodne powinny przesłaniać tę metodę, jeśli chcą, aby zmodyfikować sposób określają bieżącego czasu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79e18-178">Derived classes should override this method if they want to modify how they determine the current time.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="HasControllableRoot">
      <MemberSignature Language="C#" Value="public bool HasControllableRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasControllableRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.HasControllableRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasControllableRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasControllableRoot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-179">Pobiera wartość wskazującą, czy to <see cref="T:System.Windows.Media.Animation.Clock" /> jest częścią drzewa sterowane zegara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-179">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" /> is part of a controllable clock tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-180">
            <see langword="true" /> Jeśli ten zegar należy do drzewa zegara zegara sterowane głównego lub jeśli ten zegar jest kontrolowane głównego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-180">
              <see langword="true" /> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-181">Pobiera wartość wskazującą, czy to <see cref="T:System.Windows.Media.Animation.Clock" />, lub dowolnego z jego obiektów nadrzędnych, jest wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-181">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" />, or any of its parents, is paused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-182">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Media.Animation.Clock" /> lub dowolny z jego elementów nadrzędnych jest wstrzymana, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-182">
              <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Clock" /> or any of its parents is paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-183">Pobiera fizyczną czas trwania ten zegar <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-183">Gets the natural duration of this clock's <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-184">Fizyczne czas trwania tego zegara, zgodnie z ustaleniami jego <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-184">The natural duration of this clock, as determined by its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-185">Aby uzyskać więcej informacji o fizycznych czas trwania, zobacz <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="79e18-185">For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Parent { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-186">Pobiera zegar, który jest elementem nadrzędnym tego zegara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-186">Gets the clock that is the parent of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-187">Element nadrzędny tego zegara lub <see langword="null" /> Jeśli ten zegar jest głównym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-187">The parent of this clock or <see langword="null" /> if this clock is a root.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-188">Występuje, gdy <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> metoda jest wywoływana na tym <see cref="T:System.Windows.Media.Animation.Clock" /> lub jednego z jego zegary nadrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-188">Occurs when the <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> method is called on this <see cref="T:System.Windows.Media.Animation.Clock" /> or one of its parent clocks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedChanged">
      <MemberSignature Language="C#" Value="protected virtual void SpeedChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SpeedChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.SpeedChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SpeedChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SpeedChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79e18-189">Po zaimplementowaniu w klasie pochodnej, zostanie wywołany, gdy zegar rozpoczyna, pomija, wstrzymuje, wznawia, lub gdy zegar <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> jest modyfikowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-189">When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="protected virtual void Stopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Stopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.Stopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Stopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Stopped();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79e18-190">Po zaimplementowaniu w klasie pochodnej, zostanie wywołany, gdy zegar zostanie zatrzymana, przy użyciu <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-190">When implemented in a derived class, will be invoked whenever a clock is stopped using the <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeline">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Timeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Timeline Timeline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Timeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeline As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Timeline ^ Timeline { System::Windows::Media::Animation::Timeline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79e18-191">Pobiera <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> z której ta <see cref="T:System.Windows.Media.Animation.Clock" /> został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-191">Gets the <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79e18-192">
            <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> z której ta <see cref="T:System.Windows.Media.Animation.Clock" /> został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79e18-192">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79e18-193">Modyfikowanie obiektu clock <xref:System.Windows.Media.MediaTimeline> nie aktualizuje zegar; musi zostać utworzony nowy zegara z zmodyfikowanych <xref:System.Windows.Media.Animation.Timeline>.</span><span class="sxs-lookup"><span data-stu-id="79e18-193">Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>