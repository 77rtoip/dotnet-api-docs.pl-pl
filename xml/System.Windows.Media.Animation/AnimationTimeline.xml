<Type Name="AnimationTimeline" FullName="System.Windows.Media.Animation.AnimationTimeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d908c87cdd2507d8872ff1d4c6fde911573332a8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36501119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AnimationTimeline : System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnimationTimeline extends System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnimationTimeline&#xA;Inherits Timeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnimationTimeline abstract : System::Windows::Media::Animation::Timeline" />
  <TypeSignature Language="F#" Value="type AnimationTimeline = class&#xA;    inherit Timeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Timeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa segment czasu, w którym są produkowane wartości danych wyjściowych. Te wartości są używane do animowania właściwości docelowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.AnimationTimeline> Jest typem <xref:System.Windows.Media.Animation.Timeline> obiekt, który generuje dane wyjściowe wartości oparte na jego postępu czasu. Wszystkie typy animacji dziedziczyć <xref:System.Windows.Media.Animation.AnimationTimeline>.  
  
 **Funkcje obiektu freezable:** ponieważ dziedziczy on z <xref:System.Windows.Freezable> klasy <xref:System.Windows.Media.Animation.AnimationTimeline> klasa udostępnia kilka funkcje specjalne: <xref:System.Windows.Media.Animation.AnimationTimeline> obiekty mogą być deklarowane jako współużytkowane przez wiele obiektów, aby poprawić jest tylko do odczytu wydajność, sklonowany, a wprowadzone wątkowo. Aby uzyskać więcej informacji o różnych funkcjach dostarczonych przez <xref:System.Windows.Freezable> obiekty, zobacz [obiektu Freezable Przegląd obiektów](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Aby utworzyć animacji niestandardowej, przesłonięcia lub zaimplementowania następujące elementy członkowskie:- <see cref="M:System.Windows.Freezable.CreateInstanceCore" /> — w przypadku konkretnych nowej klasy, konieczne jest przesłonięcie <see cref="M:System.Windows.Freezable.CreateInstanceCore" /> aby zwrócić nowe wystąpienie klasy.  - <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> — Przesłonić tę metodę do zwracania bieżącej wartości animacji. Trwa trzy parametry: wartość pochodzenia domyślną, wartość domyślną docelowego i <see cref="T:System.Windows.Media.Animation.AnimationClock" />. Użyj <see cref="T:System.Windows.Media.Animation.AnimationClock" /> uzyskać bieżącą godzinę lub postępu dla animacji. Można wybrać, czy należy użyć wartości domyślnych źródło i miejsce docelowe.  - <see cref="P:System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault" /> — Zastąpić tę właściwość, aby wskazać, czy animacja używa domyślnej wartości docelowej, określone przez <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> metody.  - <see cref="P:System.Windows.Media.Animation.AnimationTimeline.TargetPropertyType" /> — Zastąpić tę właściwość, aby wskazać <see cref="T:System.Type" /> danych wyjściowych tworzy animacji.  Jeśli klasa nie używa właściwości zależności do przechowywania danych lub wymaga dodatkową inicjację po utworzeniu, konieczne może być zastąpienie dodatkowe metody; Zobacz [obiektu Freezable obiektów Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) Aby uzyskać więcej informacji.  Aby uzyskać więcej informacji na temat tworzenia niestandardowych animacji Zobacz [niestandardowych Overview](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md) animacji.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnimationTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnimationTimeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="animationTimeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Windows.Media.Animation.Clock" /> dla tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</summary>
        <returns>Zegar tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> metody i nie powinna być wywoływana bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Implementacje z <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> powinny przesłaniać tę metodę, jeśli ma odpowiedniego zegara niestandardowych, które mają być używane z klasą. Utworzyć i zwrócić nowe wystąpienie klasy, która dziedziczy przeciążonej <see cref="T:System.Windows.Media.Animation.Clock" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.AnimationTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.AnimationTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As AnimationTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::AnimationTimeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.AnimationTimeline" Usage="animationTimeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.AnimationTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalną klonu tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />, tworzenie bezpośrednich kopii wartości tego obiektu. Podczas kopiowania właściwości zależności, ta metoda umożliwia skopiowanie powiązania odwołań i dane zasobów, ale nie rozpoznają może ale animacje lub ich bieżącymi wartościami.</summary>
        <returns>Można modyfikować klonowania bieżącego obiektu. Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable> obiektów (lub dowolnej <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zasłania dziedziczone wersji.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.AnimationClock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.AnimationClock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As AnimationClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::AnimationClock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="override this.CreateClock : unit -&gt; System.Windows.Media.Animation.AnimationClock" Usage="animationTimeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.AnimationClock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Windows.Media.Animation.AnimationClock" /> tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</summary>
        <returns>Nowe zegara, utworzone na podstawie to <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zasłania dziedziczonego <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A?displayProperty=nameWithType> metody z bezpieczną implementację.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.MediaTimeline.CreateClock" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public virtual object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetCurrentValue(System::Object ^ defaultOriginValue, System::Object ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : obj * obj * System.Windows.Media.Animation.AnimationClock -&gt; obj&#xA;override this.GetCurrentValue : obj * obj * System.Windows.Media.Animation.AnimationClock -&gt; obj" Usage="animationTimeline.GetCurrentValue (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Object" />
        <Parameter Name="defaultDestinationValue" Type="System.Object" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">Podana wartość źródła do animacji Jeśli animacji nie ma własną wartość początkową. Jeśli ta animacji jest to pierwszy w łańcuchu kompozycji będzie wartości podstawowej animowanej; właściwości w przeciwnym razie będzie wartość zwrócona przez poprzednie animacji w łańcuchu.</param>
        <param name="defaultDestinationValue">Podana wartość docelowego do animacji Jeśli animacji nie ma wartości docelowej.</param>
        <param name="animationClock">
          <see cref="T:System.Windows.Media.Animation.AnimationClock" /> Które mogą generować <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> lub <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> wartości do użycia przez animację do generowania wartości jego dane wyjściowe.</param>
        <summary>Pobiera bieżącą wartość animacji.</summary>
        <returns>Wartość, które uważa to animacji powinna być bieżącą wartość właściwości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="animationTimeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">Zegara, który został utworzony dla tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</param>
        <summary>Zwraca długość pojedynczego iteracji tego <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</summary>
        <returns>Fizyczne czas trwania animacji. Ta metoda zawsze zwraca <see cref="T:System.Windows.Duration" /> 1 sekundę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapewnia implementację <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> i nie powinna być wywoływana bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda powinny być implementowane przez klasy, które wymaga podania niestandardowych fizyczną <see cref="T:System.Windows.Duration" /> podczas <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> właściwość jest ustawiona na <see cref="P:System.Windows.Duration.Automatic" />. Jeśli nie można ustalić czas trwania fizycznych, ta metoda powinna zwrócić <see cref="P:System.Windows.Duration.Automatic" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAdditiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAdditiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAdditiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsAdditiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsAdditiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsAdditiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje IsAdditive właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje IsCumulative właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestinationDefault">
      <MemberSignature Language="C#" Value="public virtual bool IsDestinationDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestinationDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDestinationDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDestinationDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDestinationDefault : bool" Usage="System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy używa tej animacji * defaultDestinationValue * parametr <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> metody jako wartości jego przeznaczenia.</summary>
        <value>**TRUE** jeśli * defaultDesintationValue * parametr <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> metody jest wartością tego animacji podczas dociera do końca jego długość proste (jego zegara ma <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 1); w przeciwnym razie ** false **. Domyślna implementacja zawsze zwraca ** false **.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyType">
      <MemberSignature Language="C#" Value="public abstract Type TargetPropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetPropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.AnimationTimeline.TargetPropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TargetPropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TargetPropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPropertyType : Type" Usage="System.Windows.Media.Animation.AnimationTimeline.TargetPropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera <see cref="T:System.Type" /> właściwości, która może być animowane.</summary>
        <value>Typ właściwości, która może być animowany przez ten animacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>