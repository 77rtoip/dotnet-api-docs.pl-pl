<Type Name="ElasticEase" FullName="System.Windows.Media.Animation.ElasticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d3bde7af812cadabd89366fcf9b9e4902de6958" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69163877" /></Metadata><TypeSignature Language="C#" Value="public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ElasticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElasticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type ElasticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje funkcję krzywych napięcia, która tworzy animację, która przypomina sprężynę z powrotem i do przodu, aż do momentu zapełnienia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można kontrolować, kiedy w animacji występuje zachowanie "Sprężyna", określając <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> wartość właściwości. Na poniższym wykresie <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>przedstawiono różne wartości, gdzie *f*(*t*) reprezentuje postęp animacji, a *t* reprezentuje czas.  
  
 ![ElasticEase z wykresami różnych easingmodes.] (~/add/media/elasticease-graph.png "ElasticEase z wykresami różnych easingmodes.")  
  
 Można określić, ile razy animacja powraca do tyłu i do przodu przy użyciu <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> właściwości i jak ciasne Springiness drgań <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> używają właściwości.  
  
> [!NOTE]
>  Ponieważ ta animacja powoduje, że wartości są przekształcane z powrotem i z tyłu, animacja może nieoczekiwanie interpolowane liczby ujemne. Może to spowodować błędy podczas animowania właściwości, które nie dopuszczają liczb ujemnych. Na przykład w przypadku zastosowania <xref:System.Windows.FrameworkElement.Height%2A> tej animacji do obiektu (np. z 0 do 200 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> z <xref:System.Windows.Media.Animation.EasingMode.EaseIn>) animacja będzie próbować interpolować za pomocą liczb ujemnych, dla <xref:System.Windows.FrameworkElement.Height%2A> których zostanie zgłoszony błąd.  
  
 Istnieje kilka innych funkcji <xref:System.Windows.Media.Animation.ElasticEase>krzywych napięcia.
Oprócz korzystania z funkcji krzywych napięcia zawartych w czasie wykonywania, można utworzyć własne niestandardowe funkcje napięcia, dziedzicząc z <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Użycie elementu obiektu języka XAML  
  
```xaml
<ElasticEase .../>  
```  
  
   
  
## Examples  
 Poniższy przykład stosuje <xref:System.Windows.Media.Animation.ElasticEase> funkcję krzywych napięcia do programu <xref:System.Windows.Media.Animation.DoubleAnimation> , aby utworzyć animację, która przypomina sprężynę z powrotem i do przodu, aż do momentu zapełnienia.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElasticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Animation.ElasticEase" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="elasticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Windows.Freezable" /> klasy pochodnej. Podczas tworzenia klasy pochodnej należy zastąpić tę metodę.</summary>
        <returns>Nowe wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy animacji dziedziczą pośrednio <xref:System.Windows.Freezable>od. W związku z tym należy zastąpić <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> metodę w celu skonstruowania niestandardowego obiektu animacji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono typową implementację <xref:System.Windows.Freezable.CreateInstanceCore%2A>programu.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="elasticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Znormalizowany czas (postęp) animacji.</param>
        <summary>Udostępnia część logiki funkcji napięcia, którą można przesłonić w celu utworzenia <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> trybu niestandardowej funkcji napięcia.</summary>
        <returns>Wartość podwójna, która reprezentuje postęp przekształcony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przekształca znormalizowany czas w celu sterowania tempem animacji w <xref:System.Windows.Media.Animation.EasingMode.EaseIn> <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>przypadku.  
  
 Należy tylko określić funkcję krzywej napięcia dla <xref:System.Windows.Media.Animation.EasingMode.EaseIn> przypadku, ponieważ implementacja <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> metody przekształca `normalizedTime` się w <xref:System.Windows.Media.Animation.EasingMode.EaseOut> przypadki i <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oscillations">
      <MemberSignature Language="C#" Value="public int Oscillations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oscillations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberSignature Language="VB.NET" Value="Public Property Oscillations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Oscillations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Oscillations : int with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę przedziałów slajdów docelowych i z nich w miejscu docelowym animacji.</summary>
        <value>Liczba przekroczeń docelowego slajdu i do tyłu w miejscu docelowym animacji. Ta wartość musi być większa lub równa 0. Wartość domyślna to 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  
  
<a name="xamlAttributeUsage_Occilations"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<ElasticEase Oscillations="int"/>  
```  
  
   
  
## Examples  
 Poniższy przykład stosuje <xref:System.Windows.Media.Animation.ElasticEase> funkcję krzywych napięcia do programu <xref:System.Windows.Media.Animation.DoubleAnimation> , aby utworzyć animację, która przypomina sprężynę z powrotem i do przodu, aż do momentu zapełnienia.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OscillationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OscillationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OscillationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OscillationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OscillationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OscillationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Springiness">
      <MemberSignature Language="C#" Value="public double Springiness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Springiness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberSignature Language="VB.NET" Value="Public Property Springiness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Springiness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Springiness : double with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość sztywności sprężyny. Im mniejsza wartość Springiness, tym sztywny sprężyna i szybsza elastyczność zmniejsza intensywność nad każdym drganiem.</summary>
        <value>Liczba dodatnia, która określa sztywność sprężyny. Wartość domyślna to 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im mniejsza <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> wartość, tym sztywny sprężyna i szybsza elastyczność zmniejsza intensywność nad każdym drganiem.  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  
  
 Na poniższym diagramie przedstawiono efekt różnych wartości <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.  
  
 ![Pokazuje różne wartości Springiness.] (~/add/media/elasticease-springiness.png "Pokazuje różne wartości Springiness.")  
  
<a name="xamlAttributeUsage_Springiness"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<ElasticEase Springiness="double"/>  
```  
  
   
  
## Examples  
 Poniższy przykład stosuje <xref:System.Windows.Media.Animation.ElasticEase> funkcję krzywych napięcia do programu <xref:System.Windows.Media.Animation.DoubleAnimation> , aby utworzyć animację, która przypomina sprężynę z powrotem i do przodu, aż do momentu zapełnienia.  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpringinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpringinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpringinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpringinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpringinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpringinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
