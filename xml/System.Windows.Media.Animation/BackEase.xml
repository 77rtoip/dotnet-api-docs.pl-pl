<Type Name="BackEase" FullName="System.Windows.Media.Animation.BackEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba03b17633b6c9116d5305f79d4c21df6f5b0b17" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39885930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BackEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.BackEase" />
  <TypeSignature Language="VB.NET" Value="Public Class BackEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type BackEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje funkcję przyspieszania nieco wycofuje ruchu animacji, zanim rozpocznie się animować w wskazanej ścieżce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można kontrolować, gdy zachowanie "kopie zapasowe" występuje w animacji, określając <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> wartości właściwości w animacji. Poniższy wykres pokazują różne wartości <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, gdzie *f*(*t*) reprezentuje postęp animacji i *t* reprezentuje czas.  
  
 ![Wykresy obiektu BackEase w trybie. ] (~/add/media/backease-graph.png "Obiektu BackEase w trybie wykresów.")  
  
 Formuła używana dla tej funkcji jest następująca.  
  
 ![Formuła BackEase w trybie. ] (~/add/media/backease-formula.png "BackEase w trybie formuły.")  
  
> [!NOTE]
>  Ponieważ ta animacja powoduje, że wartości, aby wycofać przed postępu, animacji może nieoczekiwanie interpolacji do wartości ujemne. Może to spowodować błędy, gdy animowanie właściwości, które nie zezwalają na wartości ujemne. Na przykład w przypadku zastosowania animacji, tak aby <xref:System.Windows.FrameworkElement.Height%2A> obiektu (np. z zakresu od 0 do 200 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> z <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), animacji podejmie próbę interpolacji za pomocą wartości ujemne dla <xref:System.Windows.FrameworkElement.Height%2A> który będzie sygnalizować błąd.  
  
Istnieje kilka innych funkcji sterowania tempem zmian oprócz <xref:System.Windows.Media.Animation.BackEase>. Oprócz używania funkcji easingu zawarte w czasie wykonywania, można utworzyć własne niestandardowe funkcje sterowania tempem zmian przez dziedziczenie z <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Użycie elementu obiektu języka XAML  
  
```xaml
<BackEase .../>  
```  
  
   
  
## Examples  
 Następujący przykład dotyczy <xref:System.Windows.Media.Animation.BackEase> funkcja do przyspieszania <xref:System.Windows.Media.Animation.DoubleAnimation> do tworzenia animacji, które wycofuje się nieco na początku i końca animacji.  
  
 [!code-xaml[BackEase_scale#BackEase_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Animation.BackEase" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Amplitude">
      <MemberSignature Language="C#" Value="public double Amplitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Amplitude" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BackEase.Amplitude" />
      <MemberSignature Language="VB.NET" Value="Public Property Amplitude As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Amplitude { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Amplitude : double with get, set" Usage="System.Windows.Media.Animation.BackEase.Amplitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia amplitudę wycofywania skojarzony <see cref="T:System.Windows.Media.Animation.BackEase" /> animacji.</summary>
        <value>Amplitudę wycofywania skojarzony <see cref="T:System.Windows.Media.Animation.BackEase" /> animacji. Ta wartość musi być większa lub równa 0.  
  
Wartość domyślna to 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>  
  
 Im większy amplitudę, im większy wycofywania, przed i/lub po animacji.  
  
 ![Demonstruje różne wartości amplitudy. ] (~/add/media/backease-amplitude.png "Demonstruje różne wartości amplitudy.")  
  
<a name="xamlAttributeUsage_Opacity"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Amplitude="double" .../>  
```  
  
   
  
## Examples  
 Następujący przykład dotyczy <xref:System.Windows.Media.Animation.BackEase> funkcja do przyspieszania <xref:System.Windows.Media.Animation.DoubleAnimation> do tworzenia animacji, które wycofuje się nieco na początku i końca animacji.  
  
 [!code-xaml[BackEase_scale#BackEase_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmplitudeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AmplitudeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AmplitudeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AmplitudeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AmplitudeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AmplitudeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.BackEase.AmplitudeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> właściwość zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="backEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Windows.Freezable" /> klasy pochodnej. Podczas tworzenia klasy pochodnej, konieczne jest przesłonięcie tej metody.</summary>
        <returns>Nowe wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy animacji dziedziczyć pośrednio <xref:System.Windows.Freezable>. W związku z tym musisz przesłonić <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> metody do konstruowania obiektu animacji niestandardowej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano Typowa implementacja metody <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="backEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Znormalizowany czas (postęp) animacji.</param>
        <summary>Zawiera część logiki funkcji sterowania tempem zmian, którą można przesłonić w celu wygenerowania <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> tryb niestandardowych funkcji sterowania tempem zmian.</summary>
        <returns>Wartość o podwójnej precyzji reprezentującą postęp przekształcone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przekształca znormalizowany czas do kontrolowania tempie animacji <xref:System.Windows.Media.Animation.EasingMode.EaseIn> przypadku <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 Należy określić funkcję sterowania tempem zmian dla <xref:System.Windows.Media.Animation.EasingMode.EaseIn> zamierzone, ponieważ implementacja <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> przekształcenia metoda `normalizedTime` dla <xref:System.Windows.Media.Animation.EasingMode.EaseOut> i <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> przypadków.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>