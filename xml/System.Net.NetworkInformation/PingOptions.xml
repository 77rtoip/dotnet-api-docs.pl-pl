<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf4b821bbaa7b117af28b78d5859e30f7a410504" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69091693" /></Metadata><TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingOptions" />
  <TypeSignature Language="F#" Value="type PingOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy do kontrolowania sposobu <see cref="T:System.Net.NetworkInformation.Ping" /> przesyłania pakietów danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera właściwości<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> i, które służą do sterowania sposobem przesyłania pakietów żądań echa protokołu ICMP (Internet Control Message Protocol). <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> <xref:System.Net.NetworkInformation.PingOptions>  
  
 Właściwość określa czas wygaśnięcia pakietów wysyłanych <xref:System.Net.NetworkInformation.Ping> przez klasę. <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Ta wartość wskazuje liczbę węzłów routingu, które mogą przesłać dalej <xref:System.Net.NetworkInformation.Ping> pakiet, zanim zostanie on odrzucony. Ustawienie tej opcji jest przydatne, jeśli chcesz przetestować liczbę przesyłanych dalej, zwanych również przeskokami, aby wysłać pakiet z komputera źródłowego na komputer docelowy.  
  
 Właściwość <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> określa, czy dane wysyłane do hosta zdalnego można podzielić na wiele pakietów.  Ta opcja jest przydatna, jeśli chcesz przetestować maksymalną jednostkę transmisji (MTU) routerów i bram używanych do przesyłania pakietu.  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> Wystąpieniaklasysą<xref:System.Net.NetworkInformation.Ping.SendAsync%2A> przekazane do metod<xref:System.Net.NetworkInformation.PingReply>i , aKlasazwracawystąpieniaprzezwłaściwość.<xref:System.Net.NetworkInformation.PingReply.Options%2A> <xref:System.Net.NetworkInformation.PingOptions> <xref:System.Net.NetworkInformation.PingOptions>  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Net.NetworkInformation.PingOptions>, <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Net.NetworkInformation.Ping>klas i <xref:System.Net.NetworkInformation.PingReply> , <xref:System.Net.NetworkInformation.PingOptions> aby wysłać żądanie echa ICMP do hosta określonego w wierszu polecenia.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Net.NetworkInformation.PingOptions>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 Właściwości można ustawić na nowe wartości przed wywołaniem <xref:System.Net.NetworkInformation.Ping.Send%2A> lub. <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tego konstruktora.  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ttl As Integer, dontFragment As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions(int ttl, bool dontFragment);" />
      <MemberSignature Language="F#" Value="new System.Net.NetworkInformation.PingOptions : int * bool -&gt; System.Net.NetworkInformation.PingOptions" Usage="new System.Net.NetworkInformation.PingOptions (ttl, dontFragment)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">Wartość większa od zera, która określa, ile razy <see cref="T:System.Net.NetworkInformation.Ping" /> można przesłać dalej pakiety danych. <see cref="T:System.Int32" /></param>
        <param name="dontFragment"><see langword="true" />Aby zapobiec fragmentacji danych wysyłanych do zdalnego hosta; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy i ustawia wartość czasu wygaśnięcia i fragmentacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ttl` Parametr ogranicza liczbę routerów i bram, które mogą przekazywać dane. Jest to przydatne w przypadku testowania długości trasy między komputerem lokalnym i zdalnym. `dontFragment` Parametr umożliwia przetestowanie maksymalnej jednostki transmisji (MTU) routerów i bram używanych do przesyłania pakietu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywoływanie tego konstruktora i wyświetlanie wartości właściwości nowego wystąpienia.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ttl" />jest mniejsze lub równe zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która kontroluje fragmentację danych wysyłanych do hosta zdalnego.</summary>
        <value><see langword="true" />Jeśli dane nie mogą być wysyłane w wielu pakietach; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje używają tej właściwości do kontrolowania, czy dane wysyłane do hosta zdalnego przez <xref:System.Net.NetworkInformation.Ping> klasę można podzielić na wiele pakietów.  Ta opcja jest przydatna, jeśli chcesz przetestować maksymalną jednostkę transmisji (MTU) routerów i bram używanych do przesyłania pakietu. Jeśli ta właściwość jest `true` i dane wysyłane do hosta zdalnego są większe niż MTU bramy lub routera między nadawcą i hostem zdalnym, operacja ping kończy się niepowodzeniem ze stanem. <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie wartości tej właściwości przy użyciu <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> konstruktora, a następnie wyświetlenie wartości.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ttl { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int with get, set" Usage="System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę węzłów routingu, które mogą przekazywać <see cref="T:System.Net.NetworkInformation.Ping" /> dane przed odrzuceniem.</summary>
        <value>Wartość określająca, ile <see cref="T:System.Net.NetworkInformation.Ping" /> razy można przesłać dalej pakiety danych. <see cref="T:System.Int32" /> Wartość domyślna to 128.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jako że bramy i routery przesyłają pakiety za pośrednictwem sieci, zmniejszają bieżącą wartość czasu wygaśnięcia (TTL) znajdującą się w nagłówku pakietu. Jeśli wartość czasu wygaśnięcia osiągnie zero, pakiet jest uznawany za niedostarczenie i jest odrzucany. Ta opcja jest przydatna, jeśli chcesz przetestować liczbę routerów i bram używanych do przesyłania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie wartości tej właściwości przy użyciu <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> konstruktora, a następnie wyświetlenie wartości.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest mniejsza lub równa zero.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
