<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5560e6e05bd6075ce27b18d3cf96f9bcb6df7e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingOptions" />
  <TypeSignature Language="F#" Value="type PingOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy do sterowania jak <see cref="T:System.Net.NetworkInformation.Ping" /> danych pakiety są przesyłane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.PingOptions> Klasa udostępnia <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> i <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> właściwości, aby kontrolować sposób przesyłania pakietów żądań echa protokołu komunikatu sterowania Internetem (ICMP).  
  
 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Właściwość określa czas wygaśnięcia pakiety wysyłane przez <xref:System.Net.NetworkInformation.Ping> klasy. Ta wartość wskazuje liczbę węzłów routingu, które można przekazywać <xref:System.Net.NetworkInformation.Ping> pakietów, zanim zostanie on odrzucony. Ta opcja jest przydatna, jeśli chcesz przetestować liczba wyszukiwanie do przodu, znanej także jako przeskoków, są wymagane do wysyła pakiet z komputera źródłowego do komputera docelowego.  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Formantów właściwości czy dane wysyłane do zdalnego hosta mogą być podzielone na kilka pakietów.  Ta opcja jest przydatna, jeśli chcesz przetestować maksymalna jednostka transmisji (MTU) routerów i bram używany do przesyłania pakietu.  
  
 Wystąpienia <xref:System.Net.NetworkInformation.PingOptions> klasy są przekazywane do <xref:System.Net.NetworkInformation.Ping.Send%2A> i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> metod i <xref:System.Net.NetworkInformation.PingReply> Klasa zwraca wystąpienia <xref:System.Net.NetworkInformation.PingOptions> za pośrednictwem <xref:System.Net.NetworkInformation.PingReply.Options%2A> właściwości.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Net.NetworkInformation.PingOptions>, zobacz <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.NetworkInformation.Ping>, <xref:System.Net.NetworkInformation.PingOptions> i <xref:System.Net.NetworkInformation.PingReply> klasy do wysyłania ICMP echo żądanie do hosta określona w wierszu polecenia.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Net.NetworkInformation.PingOptions>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 Można ustawić właściwości nowymi wartościami przed wywołaniem <xref:System.Net.NetworkInformation.Ping.Send%2A> lub <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie tego konstruktora.  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ttl As Integer, dontFragment As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions(int ttl, bool dontFragment);" />
      <MemberSignature Language="F#" Value="new System.Net.NetworkInformation.PingOptions : int * bool -&gt; System.Net.NetworkInformation.PingOptions" Usage="new System.Net.NetworkInformation.PingOptions (ttl, dontFragment)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">
          <see cref="T:System.Int32" /> Wartość większą niż zero określająca liczbę razy <see cref="T:System.Net.NetworkInformation.Ping" /> pakiety danych mogą być przekazywane.</param>
        <param name="dontFragment">
          <see langword="true" /> Aby zapobiec dane wysyłane do zdalnego hosta z pofragmentowany; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.PingOptions" /> klasy i ustawia czas wygaśnięcia i fragmentacja wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ttl` Parametr ogranicza liczbę routerów i bram, które można przekazać dane. Jest to przydatna przy testowaniu długość trasy między komputerami lokalnymi i zdalnymi. `dontFragment` Parametr umożliwia testowanie maksymalna jednostka transmisji (MTU) routerów i bram używany do przesyłania pakietu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołuje ten konstruktor oraz wyświetlanie wartości właściwości nowe wystąpienie.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="ttl" /> jest mniejsza lub równa zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która kontroluje fragmentacji dane wysyłane do hosta zdalnego.</summary>
        <value>
          <see langword="true" /> Jeśli nie można wysłać danych w wielu pakietach; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje używają tej właściwości do formantu, czy dane wysyłane do zdalnego hosta za <xref:System.Net.NetworkInformation.Ping> klasy mogą być podzielone na kilka pakietów.  Ta opcja jest przydatna, jeśli chcesz przetestować maksymalna jednostka transmisji (MTU) routerów i bram używany do przesyłania pakietu. Jeśli ta właściwość jest `true` i dane wysyłane do zdalnego hosta jest większy, a następnie rozmiar jednostki MTU bramy lub routera między nadawcą i hosta zdalnego operację ping nie powiedzie się ze stanem <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie dla tej właściwości przy użyciu wartości <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> konstruktora, a następnie wyświetlania wartości.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ttl { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int with get, set" Usage="System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę węzłów routingu, które można przekazywać <see cref="T:System.Net.NetworkInformation.Ping" /> dane przed jest pomijany.</summary>
        <value>
          <see cref="T:System.Int32" /> Wartość określająca, ile razy <see cref="T:System.Net.NetworkInformation.Ping" /> pakiety danych mogą być przekazywane. Wartość domyślna to 128.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jak routery i bram przesyłanie pakietów przez sieć, zmniejszyć ich bieżącą wartość czasu wygaśnięcia (TTL) w nagłówku pakietu. Jeśli wartość TTL osiągnie wartość zero, pakiet uważa, że nie można dostarczyć i zostaną odrzucone. Ta opcja jest przydatna, jeśli chcesz przetestować numeru routerów i bram używany do przesyłania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie dla tej właściwości przy użyciu wartości <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> konstruktora, a następnie wyświetlania wartości.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji ustawienia jest mniejsza lub równa zero.</exception>
      </Docs>
    </Member>
  </Members>
</Type>