<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3c52a-101">Zawiera konfigurację i informacje statystyczne dla interfejsu sieciowego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-101">Provides configuration and statistical information for a network interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-102">Ta klasa hermetyzuje dane dla interfejsów sieciowych, znanej także jako karty na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-102">This class encapsulates data for network interfaces, also known as adapters, on the local computer.</span></span> <span data-ttu-id="3c52a-103">Nie należy tworzyć wystąpienia tej klasy; <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> metoda zwraca tablicę, która zawiera jedno wystąpienie tej klasy dla każdego interfejsu sieciowego na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-103">You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-104">Poniższy przykładowy kod przedstawia informacji na temat interfejsów.</span><span class="sxs-lookup"><span data-stu-id="3c52a-104">The following code example displays information about interfaces.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c52a-105">do wykonywania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-105">for executing unmanaged code.</span></span> <span data-ttu-id="3c52a-106">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c52a-106">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-107">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-108">Ten konstruktor może być wywoływany tylko przez klasy, które pochodzą z <xref:System.Net.NetworkInformation.NetworkInterface> klasy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-108">This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-109">Pobiera opis interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-109">Gets the description of the interface.</span></span></summary>
        <value><span data-ttu-id="3c52a-110">A <see cref="T:System.String" /> opisujący tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-110">A <see cref="T:System.String" /> that describes this interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-111">Opis jest czytelny dla człowieka tekst, który opisuje interfejs sieciowy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-111">The description is human-readable text that describes the network interface.</span></span> <span data-ttu-id="3c52a-112">Informacje zawarte w opisie zależy od możliwości systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-112">The information included in the description depends on the capabilities of the operating system.</span></span>  <span data-ttu-id="3c52a-113">W systemie Windows zwykle opisuje interfejs dostawcy, typu (na przykład Ethernet), marki i modelu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-113">On Windows, it typically describes the interface vendor, type (for example, Ethernet), brand, and model.</span></span> <span data-ttu-id="3c52a-114">Na innych platformach, może być zwięzły nazwy interfejsu, takich jak `eth0`.</span><span class="sxs-lookup"><span data-stu-id="3c52a-114">On other platforms, it may be as brief as the name of the interface, such as `eth0`.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3c52a-115">Poniższy przykładowy kod przedstawia podsumowanie wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-115">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-116">Zwraca obiekty, które opisują interfejsów sieciowych na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-116">Returns objects that describe the network interfaces on the local computer.</span></span></summary>
        <returns><span data-ttu-id="3c52a-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> tablicy, która zawiera obiekty opisują interfejsy dostępnej sieci lub pusta tablica, jeśli nie zostaną wykryte żadne interfejsy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-118">Interfejsy sieciowe na komputerze zapewniają łączność sieciową.</span><span class="sxs-lookup"><span data-stu-id="3c52a-118">The network interfaces on a computer provide network connectivity.</span></span> <span data-ttu-id="3c52a-119">Interfejsy sieciowe są nazywane także kart sieciowych.</span><span class="sxs-lookup"><span data-stu-id="3c52a-119">Network interfaces are also known as network adapters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-120">Poniższy przykładowy kod przedstawia informacje o konfiguracji usługi nazw domen (DNS, Domain Name System) dla kart sieciowych na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-120">The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.</span></span>  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="3c52a-121">Wywołanie funkcji systemu Windows nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="3c52a-121">A Windows system function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-122">Zwraca obiekt, który opisano konfigurację tego interfejsu sieciowego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-122">Returns an object that describes the configuration of this network interface.</span></span></summary>
        <returns><span data-ttu-id="3c52a-123"><see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> Obiektu, który opisuje ten interfejs sieciowy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-123">An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-124">Należy pamiętać, że informacje zawarte w obiekcie zwracanym przez tę metodę odzwierciedla interfejsy od czasu utworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-124">Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.</span></span> <span data-ttu-id="3c52a-125">Te informacje nie jest aktualizowana dynamicznie.</span><span class="sxs-lookup"><span data-stu-id="3c52a-125">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-126">Poniższy przykład kodu wyświetla informacje dotyczące kart sieciowych na komputerze lokalnym, które obsługują protokół IPv4.</span><span class="sxs-lookup"><span data-stu-id="3c52a-126">The following code example displays information for the local computer's network adapters that support IPv4.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-127">Pobiera statystyki IP dla tej <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3c52a-127">Gets the IP statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="3c52a-128">Zwraca <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-128">Returns <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span></span>  
  
 <span data-ttu-id="3c52a-129">Statystyki IP.</span><span class="sxs-lookup"><span data-stu-id="3c52a-129">The IP statistics.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-130">Pobiera statystyki IPv4 dla tej <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3c52a-130">Gets the IPv4 statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="3c52a-131"><see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-131">An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-132">Wskazuje, czy dowolne połączenie sieciowe jest dostępne.</span><span class="sxs-lookup"><span data-stu-id="3c52a-132">Indicates whether any network connection is available.</span></span></summary>
        <returns>
          <span data-ttu-id="3c52a-133"><see langword="true" /> Jeśli połączenie sieciowe jest niedostępne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-133"><see langword="true" /> if a network connection is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-134">Połączenie sieciowe jest uznawany za mają być dostępne, jeśli żadnym interfejsem sieciowym oznaczony "" i nie jest interfejsem sprzężenia zwrotnego lub tunelu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-134">A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c52a-135">Zwraca kontroli dostępu do nośnika (MAC) lub adres fizyczny dla tej karty.</span><span class="sxs-lookup"><span data-stu-id="3c52a-135">Returns the Media Access Control (MAC) or physical address for this adapter.</span></span></summary>
        <returns><span data-ttu-id="3c52a-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> obiekt, który zawiera adres fizyczny.</span><span class="sxs-lookup"><span data-stu-id="3c52a-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-137">Obiekt zwrócony przez tę metodę zawiera adres, który jest używana do przesyłania danych w warstwie danych łącza nośnika.</span><span class="sxs-lookup"><span data-stu-id="3c52a-137">The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.</span></span> <span data-ttu-id="3c52a-138">Na przykład w sieci Ethernet, ta metoda zwraca adresie sprzętowym sieci Ethernet.</span><span class="sxs-lookup"><span data-stu-id="3c52a-138">For example, on an Ethernet network, this method returns the Ethernet hardware address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-139">Poniższy przykładowy kod przedstawia wszystkie interfejsy adresów fizycznych na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-139">The following code example displays the physical addresses of all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-140">Pobiera identyfikator karty sieciowej.</span><span class="sxs-lookup"><span data-stu-id="3c52a-140">Gets the identifier of the network adapter.</span></span></summary>
        <value><span data-ttu-id="3c52a-141">A <see cref="T:System.String" /> zawierający identyfikator.</span><span class="sxs-lookup"><span data-stu-id="3c52a-141">A <see cref="T:System.String" /> that contains the identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-142">Pobiera indeks interfejsu sprzężenia zwrotnego protokołu IPv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-142">Gets the index of the IPv6 loopback interface.</span></span></summary>
        <value><span data-ttu-id="3c52a-143">Zwraca <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-143">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="3c52a-144">Indeks dla interfejsu sprzężenia zwrotnego protokołu IPv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-144">The index for the IPv6 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-145">Interfejs sieciowy może mieć inny interfejs indeksów dla interfejsu sprzężenia zwrotnego protokołu IPv4 i IPv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-145">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="3c52a-146">Właściwość P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex zwraca tylko interfejsu sprzężenia zwrotnego protokołu IPv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-146">The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-147">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy interfejsu sieciowego jest ustawiona tylko do odbierania pakietów danych.</span><span class="sxs-lookup"><span data-stu-id="3c52a-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</span></span></summary>
        <value>
          <span data-ttu-id="3c52a-148"><see langword="true" /> Jeśli interfejs tylko do odbierania ruchu sieciowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-148"><see langword="true" /> if the interface only receives network traffic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c52a-149">Poniższy przykładowy kod przedstawia podsumowanie wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-149">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3c52a-150">Ta właściwość nie jest prawidłowy na komputerach z systemem operacyjnym starszym niż Windows XP.</span><span class="sxs-lookup"><span data-stu-id="3c52a-150">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-151">Pobiera indeks interfejsu sprzężenia zwrotnego protokołu IPv4.</span><span class="sxs-lookup"><span data-stu-id="3c52a-151">Gets the index of the IPv4 loopback interface.</span></span></summary>
        <value><span data-ttu-id="3c52a-152">A <see cref="T:System.Int32" /> zawiera indeks interfejsu sprzężenia zwrotnego protokołu IPv4.</span><span class="sxs-lookup"><span data-stu-id="3c52a-152">A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-153">Indeks interfejsu sprzężenia zwrotnego jest zazwyczaj 1, ale nie może polegać na tym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-153">The index of the loopback interface is usually 1, but you cannot rely on this.</span></span> <span data-ttu-id="3c52a-154">Użyj <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> właściwości, aby uzyskać prawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="3c52a-154">Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.</span></span>  
  
 <span data-ttu-id="3c52a-155">Interfejs sieciowy może mieć inny interfejs indeksów dla interfejsu sprzężenia zwrotnego protokołu IPv4 i IPv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-155">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="3c52a-156"><xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> Właściwość zwraca tylko interfejsu sprzężenia zwrotnego protokołu IPv4.</span><span class="sxs-lookup"><span data-stu-id="3c52a-156">The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="3c52a-157">Ta właściwość nie jest prawidłowy na komputerach z systemem tylko protokół Ipv6.</span><span class="sxs-lookup"><span data-stu-id="3c52a-157">This property is not valid on computers running only Ipv6.</span></span></exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-158">Pobiera nazwę karty sieciowej.</span><span class="sxs-lookup"><span data-stu-id="3c52a-158">Gets the name of the network adapter.</span></span></summary>
        <value><span data-ttu-id="3c52a-159">A <see cref="T:System.String" /> zawierający nazwę karty.</span><span class="sxs-lookup"><span data-stu-id="3c52a-159">A <see cref="T:System.String" /> that contains the adapter name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c52a-160">Poniższy przykładowy kod przedstawia podsumowanie wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-160">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-161">Pobiera typ interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3c52a-161">Gets the interface type.</span></span></summary>
        <value><span data-ttu-id="3c52a-162"><see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> Wartość, która określa typ interfejsu sieciowego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-162">An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-163">Typy interfejsów opisano szczegółowo w <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> dokumentacji wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="3c52a-163">The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> enumeration documentation.</span></span>  

 <span data-ttu-id="3c52a-164">Zasadniczo, ta właściwość może zwrócić dowolny element członkowski <xref:System.Net.NetworkInformation.NetworkInterfaceType> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="3c52a-164">In principle, this property can return any member of the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration.</span></span> <span data-ttu-id="3c52a-165">Konkretną wartość, która on zwrócić jest zależna od środowiska uruchomieniowego warunków topologię sieci podstawowej.</span><span class="sxs-lookup"><span data-stu-id="3c52a-165">The specific value that it does return is dependent on the runtime conditions of the underlying network topology.</span></span> <span data-ttu-id="3c52a-166">Oznacza to, że:</span><span class="sxs-lookup"><span data-stu-id="3c52a-166">This means that:</span></span>
 
 - <span data-ttu-id="3c52a-167">Nie jest możliwe określenie z wyprzedzeniem którym wartość właściwość zwraca dla określonej sieci.</span><span class="sxs-lookup"><span data-stu-id="3c52a-167">It is not possible to determine in advance which value the property returns for a particular network.</span></span>
 
 - <span data-ttu-id="3c52a-168">Istnieje możliwość, że w praktyce w określonej sieci pełny zakres wartości wyliczenia nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="3c52a-168">It is possible that in practice on a particular network, the full range of enumeration values is not available.</span></span> <span data-ttu-id="3c52a-169">Na przykład w sieci gigabit Ethernet jest możliwe, że właściwość zwraca <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> zamiast <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c52a-169">For example, on a gigabit Ethernet network, it is possible that the property returns <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> rather than <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span></span>

## Examples  
 <span data-ttu-id="3c52a-170">W poniższym przykładzie przedstawiono informacje o typie dla wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-170">The following example displays type information for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-171">Pobiera bieżący stan operacyjny połączenia sieciowego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-171">Gets the current operational state of the network connection.</span></span></summary>
        <value><span data-ttu-id="3c52a-172">Jeden z <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="3c52a-172">One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-173">Stan operacyjny wartości są szczegółowo opisane w <xref:System.Net.NetworkInformation.OperationalStatus> dokumentacji wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="3c52a-173">The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-174">Poniższy przykładowy kod przedstawia podsumowanie wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-174">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-175">Pobiera szybkości interfejsu sieciowego.</span><span class="sxs-lookup"><span data-stu-id="3c52a-175">Gets the speed of the network interface.</span></span></summary>
        <value><span data-ttu-id="3c52a-176">A <see cref="T:System.Int64" /> wartość, która określa szybkość w bitów na sekundę.</span><span class="sxs-lookup"><span data-stu-id="3c52a-176">A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-177">Wartość zwrócona przez tę właściwość został zgłoszony przez interfejs sieciowy.</span><span class="sxs-lookup"><span data-stu-id="3c52a-177">The value returned by this property is reported by the network interface.</span></span> <span data-ttu-id="3c52a-178">Nie jest ona obliczana dynamicznie.</span><span class="sxs-lookup"><span data-stu-id="3c52a-178">It is not computed dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-179">Poniższy przykład kodu pokazuje, wyświetlanie szybkości interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-179">The following code example demonstrates displaying the speed of interfaces on the local computer.</span></span>  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent"><span data-ttu-id="3c52a-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="3c52a-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</span></span></param>
        <summary><span data-ttu-id="3c52a-181">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy interfejs obsługuje określony protokół.</span><span class="sxs-lookup"><span data-stu-id="3c52a-181">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</span></span></summary>
        <returns>
          <span data-ttu-id="3c52a-182"><see langword="true" /> Jeśli określony protokół jest obsługiwany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-182"><see langword="true" /> if the specified protocol is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c52a-183">Poniższy przykład kodu wyświetla statystyki dla interfejsów IPV4 na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-183">The following code example displays statistics for IPV4 interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c52a-184">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy interfejs sieciowy jest włączone do odbierania pakietów multiemisji.</span><span class="sxs-lookup"><span data-stu-id="3c52a-184">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</span></span></summary>
        <value>
          <span data-ttu-id="3c52a-185"><see langword="true" /> Jeśli interfejs odbiera pakiety multiemisji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3c52a-185"><see langword="true" /> if the interface receives multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c52a-186">Multiemisja to działanie wysłania pakietu dane jednocześnie do wielu miejsc docelowych.</span><span class="sxs-lookup"><span data-stu-id="3c52a-186">Multicasting is the act of sending a data packet to multiple destinations simultaneously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c52a-187">Poniższy przykładowy kod przedstawia podsumowanie wszystkich interfejsów na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="3c52a-187">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3c52a-188">Ta właściwość nie jest prawidłowy na komputerach z systemem operacyjnym starszym niż Windows XP.</span><span class="sxs-lookup"><span data-stu-id="3c52a-188">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>