<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02658955cbcea15b85a8fddda92f34a0084c05ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39987623" /></Metadata><TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f9193-101">Zawiera informacje o stanie i dane wynikowe <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> lub <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="f9193-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-102"><xref:System.Net.NetworkInformation.Ping> Klasy próbuje wysłać żądanie echa kontroli komunikat ICMP (Internet Protocol) z komputerem zdalnym i otrzymywanie informacji z komputera za pośrednictwem komunikatu odpowiedzi echa ICMP.</span><span class="sxs-lookup"><span data-stu-id="f9193-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="f9193-103"><xref:System.Net.NetworkInformation.Ping> Klasa używa wystąpienia <xref:System.Net.NetworkInformation.PingReply> klasy w celu zwracania informacji na temat operacji, takich jak stan i czas potrzebny na wysłanie żądania i odbierania odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f9193-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="f9193-104"><xref:System.Net.NetworkInformation.Ping.Send%2A> Metody zwracają wystąpień <xref:System.Net.NetworkInformation.PingReply> klasy bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f9193-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="f9193-105"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Metody zwracają <xref:System.Net.NetworkInformation.PingReply> w <xref:System.Net.NetworkInformation.PingCompletedEventHandler> metody <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parametru.</span><span class="sxs-lookup"><span data-stu-id="f9193-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="f9193-106"><xref:System.Net.NetworkInformation.PingReply> Odbywa się za pośrednictwem <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9193-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="f9193-107">Jeśli wartość <xref:System.Net.NetworkInformation.PingReply.Status%2A> nie <xref:System.Net.NetworkInformation.IPStatus.Success>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9193-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="f9193-108"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> Właściwości zwróci wartość 0, <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości zwróci pustej tablicy, a <xref:System.Net.NetworkInformation.PingReply.Options%2A> zwróci właściwość `null`.</span><span class="sxs-lookup"><span data-stu-id="f9193-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-109">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.NetworkInformation.Ping> klasy, aby wysłać żądanie echa ICMP synchronicznie i wyświetlić odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f9193-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9193-110">Pobiera adres hosta, który wysyła odpowiedź echa kontroli komunikat ICMP (Internet Protocol).</span><span class="sxs-lookup"><span data-stu-id="f9193-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span></span></summary>
        <value><span data-ttu-id="f9193-111"><see cref="T:System.Net.IPAddress" /> Zawierający miejsce docelowe dla wiadomości echa protokołu ICMP.</span><span class="sxs-lookup"><span data-stu-id="f9193-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-112"><xref:System.Net.NetworkInformation.PingReply.Address%2A> Zwrócony przez żaden z <xref:System.Net.NetworkInformation.Ping.Send%2A> przeciążenia mogą pochodzić z złośliwego komputera zdalnego.</span><span class="sxs-lookup"><span data-stu-id="f9193-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="f9193-113">Nie Podłączaj się z komputerem zdalnym przy użyciu tego adresu.</span><span class="sxs-lookup"><span data-stu-id="f9193-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="f9193-114">Korzystania z serwera DNS, aby określić adres IP komputera, do którego chcesz się połączyć.</span><span class="sxs-lookup"><span data-stu-id="f9193-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-115">Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9193-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9193-116">Pobiera buforu dane odebrane w komunikacie odpowiedzi echa kontroli komunikat ICMP (Internet Protocol).</span><span class="sxs-lookup"><span data-stu-id="f9193-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span></span></summary>
        <value><span data-ttu-id="f9193-117">A <see cref="T:System.Byte" /> tablica zawierająca dane otrzymane w wiadomości odpowiedzi echa ICMP lub pusta tablica, jeśli nie otrzymano odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f9193-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-118">Bufor danych wysyłane z żądania echa protokołu ICMP jest zwracana do nadawcy w odpowiedzi echa, dzięki czemu może zostać obliczony czasu podróży dla pakietu o rozmiarze znane.</span><span class="sxs-lookup"><span data-stu-id="f9193-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="f9193-119">Bufor danych w połączeniu z <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opcji, mogą być używane do odnajdywania maksymalna jednostka transmisji do ścieżki sieciowej między komputerach źródłowym i docelowym.</span><span class="sxs-lookup"><span data-stu-id="f9193-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="f9193-120">Aby uzyskać dodatkowe informacje, zobacz "Traceroute" w specyfikacji RFC 1574, sekcji 3.2 dostępne pod adresem [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="f9193-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="f9193-121">Buforze domyślne używane z <xref:System.Net.NetworkInformation.Ping.Send%2A> i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> zawiera 32 bajtów danych.</span><span class="sxs-lookup"><span data-stu-id="f9193-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-122">Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla rozmiar buforu zwracane przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9193-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9193-123">Pobiera opcje używane do przekazywania odpowiedzi na żądanie echa kontroli komunikat ICMP (Internet Protocol).</span><span class="sxs-lookup"><span data-stu-id="f9193-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span></span></summary>
        <value><span data-ttu-id="f9193-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> obiekt, który zawiera czas wygaśnięcia (TTL) i dyrektywą fragmentacji, używana do przesyłania odpowiedzi, jeśli <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> jest <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9193-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-125">Czas wygaśnięcia definiuje liczbę przypadków, gdy węzły może przekazywać pakiet poruszających się od jego źródłowym i docelowym.</span><span class="sxs-lookup"><span data-stu-id="f9193-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="f9193-126">Jeśli liczba wyszukiwanie do przodu, nazywana również przeskoków, przekracza wartość określona dla czas wygaśnięcia, pakiet jest uznawany za nie można dostarczyć i jest odrzucany.</span><span class="sxs-lookup"><span data-stu-id="f9193-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="f9193-127"><xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wartości określonej w ICMP echo żądania kontroli pakietów fragmentacji.</span><span class="sxs-lookup"><span data-stu-id="f9193-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="f9193-128">Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> jest `true` i rozmiar pakietu przekracza maksymalnej jednostki transmisji ścieżki sieciowej podjęte przez pakiet, pakiet jest odrzucany i <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> zostanie zwrócony błąd.</span><span class="sxs-lookup"><span data-stu-id="f9193-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-129">Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla wartości przechowywane w <xref:System.Net.NetworkInformation.PingOptions> obiektu zwróconego przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9193-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9193-130">Pobiera liczbę milisekund potrzebnych do wysyłania żądanie echa kontroli komunikat ICMP (Internet Protocol) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP.</span><span class="sxs-lookup"><span data-stu-id="f9193-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="f9193-131"><see cref="T:System.Int64" /> Określająca czas obiegu (w milisekundach).</span><span class="sxs-lookup"><span data-stu-id="f9193-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-132">W przypadku niepowodzenia żądania echa <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> czasu jest zgłaszana jako 0, która jest również prawidłową wartość po pomyślnym zakończeniu żądania.</span><span class="sxs-lookup"><span data-stu-id="f9193-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="f9193-133">Należy sprawdzić <xref:System.Net.NetworkInformation.PingReply.Status%2A> do określenia, czy wartość zwracana przez tę właściwość należy zignorować.</span><span class="sxs-lookup"><span data-stu-id="f9193-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-134">Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla rozmiar buforu zwracane przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9193-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9193-135">Pobiera stan próby wysyłania żądanie echa kontroli komunikat ICMP (Internet Protocol) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP.</span><span class="sxs-lookup"><span data-stu-id="f9193-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="f9193-136"><see cref="T:System.Net.NetworkInformation.IPStatus" /> Wskazująca wynik żądania.</span><span class="sxs-lookup"><span data-stu-id="f9193-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9193-137">Jeśli wartość <xref:System.Net.NetworkInformation.PingReply.Status%2A> nie <xref:System.Net.NetworkInformation.IPStatus.Success>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9193-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="f9193-138"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> i <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości zwróci wartość 0, a <xref:System.Net.NetworkInformation.PingReply.Options%2A> zwróci właściwość `null`.</span><span class="sxs-lookup"><span data-stu-id="f9193-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9193-139">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.NetworkInformation.Ping> klasy, aby wysłać żądanie echa ICMP synchronicznie i wyświetlić odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f9193-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>