<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bbf9f65c761d5eccd095f27ca1dcc34e688bd992" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36474446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o stanie oraz dane wynikowe <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> lub <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping> Klasa próbuje wysłać żądanie echa protokołu komunikatu sterowania Internetem (ICMP) do komputera zdalnego i otrzymywanie informacji z komputera za pośrednictwem komunikatu odpowiedzi echa ICMP. <xref:System.Net.NetworkInformation.Ping> Klasa korzysta z wystąpienia <xref:System.Net.NetworkInformation.PingReply> klasy do zwracania informacji dotyczących operacji, takich jak jego stan i czas potrzebny do wysyłania żądania i odbierania odpowiedzi.  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> Metody zwracają wystąpienia <xref:System.Net.NetworkInformation.PingReply> bezpośrednio klasa. <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Metody zwracają <xref:System.Net.NetworkInformation.PingReply> w <xref:System.Net.NetworkInformation.PingCompletedEventHandler> metody <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parametru. <xref:System.Net.NetworkInformation.PingReply> Jest dostępny za pośrednictwem <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> właściwości.  
  
 Jeśli wartość <xref:System.Net.NetworkInformation.PingReply.Status%2A> nie jest <xref:System.Net.NetworkInformation.IPStatus.Success>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości. <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> Właściwość, którą będzie zwracać zera, <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> zwraca pustą tablicę, właściwości i <xref:System.Net.NetworkInformation.PingReply.Options%2A> właściwość, którą będzie zwracać `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.NetworkInformation.Ping> klasę, aby wysłać żądanie echa ICMP synchronicznie i wyświetlić odpowiedzi.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres hosta, który wysyła odpowiedź echa protokołu komunikatu sterowania Internetem (ICMP).</summary>
        <value>
          <see cref="T:System.Net.IPAddress" /> Zawierający docelowe dla komunikatu echa protokołu ICMP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.PingReply.Address%2A> Zwrócony przez <xref:System.Net.NetworkInformation.Ping.Send%2A> przeciążenia może prowadzić złośliwego komputera zdalnego. Nie należy nawiązywać połączenia z komputerem zdalnym przy użyciu tego adresu. Korzystania z serwera DNS, aby określić adres IP komputera, z którym chcesz się połączyć.  
  
   
  
## Examples  
 Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla wartość tej właściwości.  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforu dane otrzymane w wiadomości odpowiedzi echa protokołu komunikatu sterowania Internetem (ICMP).</summary>
        <value>A <see cref="T:System.Byte" /> tablica zawierająca dane otrzymane w wiadomości odpowiedzi echa ICMP lub pusta tablica, jeśli nie otrzymano odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bufor danych wysyłane z żądania echa protokołu ICMP jest zwracana do nadawcy w odpowiedzi echa, można obliczyć czasu podróży pakietu rozmiaru znane. Bufor danych połączone z <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opcji, może być używany w celu odnalezienia maksymalna jednostka transmisji do ścieżki sieciowej między komputerem źródłowym a docelowym. Aby uzyskać dodatkowe informacje, zobacz "Traceroute" w specyfikacji RFC 1574, sekcji 3.2 dostępne pod adresem [ https://www.ietf.org ](https://www.ietf.org).  
  
 Bufor domyślne używane z <xref:System.Net.NetworkInformation.Ping.Send%2A> i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> zawiera 32 bajtów danych.  
  
   
  
## Examples  
 Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla rozmiar buforu zwracane przez tę właściwość.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opcje używane do przesyłania do odpowiedzi na żądanie echa protokołu komunikatu sterowania Internetem (ICMP).</summary>
        <value>A <see cref="T:System.Net.NetworkInformation.PingOptions" /> obiekt, który zawiera czas wygaśnięcia (TTL) i używana do przesyłania odpowiedzi, jeśli dyrektywa fragmentacji <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> jest <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas wygaśnięcia definiuje, ile razy węzłów może przekazywać pakietu podczas przekazywania między jego źródłowym i docelowym. Jeśli liczba przekazuje przeskoków, nazywany również przekracza wartość określona dla czas wygaśnięcia, pakiet uważa, że nie można dostarczyć i zostaną odrzucone.  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Wartości określonej w fragmentacji pakietów formantów żądania echa protokołu ICMP. Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> jest `true` i rozmiar pakietu przekracza maksymalna jednostka transmisji ścieżki sieciowej wykonywaną przez pakiet, pakiet zostanie odrzucony i <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> jest zwracany błąd.  
  
   
  
## Examples  
 Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla wartościami przechowywanymi w <xref:System.Net.NetworkInformation.PingOptions> obiektu zwróconego przez tę właściwość.  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę milisekund potrzebnych do wysyłania żądania echa protokołu komunikatu sterowania Internetem (ICMP) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP.</summary>
        <value>
          <see cref="T:System.Int64" /> Określający czas obiegu (w milisekundach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niepowodzenia żądania echa <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> czasu został zgłoszony jako 0, który jest również prawidłową wartość, gdy żądanie zakończy się pomyślnie. Należy sprawdzić <xref:System.Net.NetworkInformation.PingReply.Status%2A> ustalenie, czy wartość zwrócona przez tę właściwość, należy ją ignorować.  
  
   
  
## Examples  
 Poniższy przykład kodu synchronicznie wysyła żądanie echa ICMP i wyświetla rozmiar buforu zwracane przez tę właściwość.  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan próba wysyłania żądania echa protokołu komunikatu sterowania Internetem (ICMP) i odbierania odpowiedniego komunikatu odpowiedzi echa ICMP.</summary>
        <value>
          <see cref="T:System.Net.NetworkInformation.IPStatus" /> Wskazująca wynik żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.Net.NetworkInformation.PingReply.Status%2A> nie jest <xref:System.Net.NetworkInformation.IPStatus.Success>, nie należy używać wartości zwracanych przez <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> lub <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości. <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> i <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> właściwości zwraca zero i <xref:System.Net.NetworkInformation.PingReply.Options%2A> właściwość, którą będzie zwracać `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.NetworkInformation.Ping> klasę, aby wysłać żądanie echa ICMP synchronicznie i wyświetlić odpowiedzi.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>