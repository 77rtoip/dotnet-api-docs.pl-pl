<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="750f19ccbe5ffeeefe94b6eba1845e3877c47a61" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje wymaganych elementów członkowskich dostawcę stanu sesji dla magazynu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan sesji ASP.NET odczytuje i zapisuje dane sesji od i do magazynu danych przy użyciu stanu sesji przechowywać dostawcy. Dostawca magazynu stanu sesji jest klasa, która dziedziczy <xref:System.Web.SessionState.SessionStateStoreProviderBase> klasa abstrakcyjna i zastąpienia jej elementów członkowskich z implementacjami specyficzne dla danych magazynu. Dostawca magazynu stanu sesji jest wywoływany przez <xref:System.Web.SessionState.SessionStateModule> klasy podczas przetwarzania strony ASP.NET do komunikowania się z magazynem danych do przechowywania i pobierania zmiennych sesji i sesji powiązane informacje, takie jak wartość limitu czasu.  
  
 Dane sesji w ramach każdej aplikacji ASP.NET były przechowywane osobno dla każdego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> właściwości. Aplikacji programu ASP.NET nie udostępniają danych sesji.  
  
 Można określić niestandardowego <xref:System.Web.SessionState.SessionStateStoreProviderBase> wdrożenia dla aplikacji ASP.NET przez ustawienie `mode` atrybutu `sessionState` element konfiguracji do <xref:System.Web.SessionState.SessionStateMode.Custom> i `customProvider` atrybutu nazwy niestandardowego dostawcy jako pokazano w przykładzie dla tego tematu.  
  
## <a name="locking-session-store-data"></a>Blokowanie sesji magazynu danych  
 Ponieważ aplikacje ASP.NET są wielowątkowe do obsługi odpowiada na żądania jednoczesnych, jest możliwe, że równoczesnych żądań może podejmować wielokrotne próby dostęp do informacji o tej samej sesji. Rozważmy scenariusz, w której wiele ramek w zestawie ramek wszystkich dostęp tej samej aplikacji. Oddzielne żądania dla każdej ramki w zestawie ramek mogą być wykonywane na serwerze sieci Web jednocześnie w różnych wątkach. Strony ASP.NET dla każdego źródła ramki dostęp do zmiennych stanu sesji, może mieć wiele wątków jednocześnie dostępu do magazynu sesji.  
  
 Aby uniknąć kolizji danych w magazynie sesji i nieoczekiwane zachowanie stanu sesji, <xref:System.Web.SessionState.SessionStateModule> i <xref:System.Web.SessionState.SessionStateStoreProviderBase> klasy obejmują funkcje wyłącznie blokuje elementu magazynu sesji dla określonej sesji na czas trwania blokady wykonywanie strony ASP.NET. Należy pamiętać, że nawet jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut jest oznaczony jako `ReadOnly`, innych stron ASP.NET, w tej samej aplikacji może mieć możliwość zapisu w magazynie sesji, więc dane mają być zablokowane żądania dla sesji tylko do odczytu danych z magazynu nadal może zakończyć oczekiwania na zwolniony.  
  
 Blokada jest ustawiony na sesji magazynu danych na początku żądania, w wywołaniu <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody. Po zakończeniu wykonywania żądania podczas wywołania zwolnieniu blokady <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> metody.  
  
 Jeśli <xref:System.Web.SessionState.SessionStateModule> obiektu napotka dane sesji zablokowane podczas wywołania albo <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> lub <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> metody go ponownie zażąda podania danych sesji w odstępach czasu pół sekundy aż do zwolnienia blokady lub ilość czasu, który dane sesji została zablokowana przekracza wartość <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> właściwości. Jeśli zostanie przekroczony limit czasu wykonywania, <xref:System.Web.SessionState.SessionStateModule> wywoła obiektu <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metody w celu zwolnienia sesji magazynu danych i żądań sesji magazynu danych w tym czasie.  
  
 Ponieważ zablokowany sesji magazynu danych może być zwolniony przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metody w oddzielnym wątku przed wywołaniem do <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> metody dla bieżącej odpowiedzi, może zostać podjęta próba ustawić i wersji danych magazynu stanu sesji, który ma już zwolnione i zmodyfikowane przez inną sesję. Aby uniknąć tej sytuacji <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody zwracają Identyfikator blokady. Ten identyfikator blokady musi być dołączony do każdego żądania do modyfikowania danych zablokowanym magazynu sesji. Sesja magazynu danych jest modyfikowany tylko wtedy, gdy identyfikator blokady w magazynie danych jest zgodny z identyfikatorem blokady dostarczonych przez <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>Usuwanie wygasłych sesji magazynu danych  
 Gdy <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> metoda jest wywoływana dla określonej sesji, dane dla tej sesji zostaną usunięte z magazynu danych przy użyciu <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> metody; w przeciwnym razie dane pozostaną w magazynie danych sesji do przyszłych żądań serwera dla tej sesji. Do <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementacji, aby usunąć dane wygasłych sesji.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 Poniższy przykładowy kod przedstawia plik Web.config, który jest skonfigurowany do używania dostawcy niestandardowego magazynu stanu sesji aplikacji ASP.NET.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy do implementacji konstruktora dla klasy, która dziedziczy <xref:System.Web.SessionState.SessionStateStoreProviderBase> klasy abstrakcyjnej. Inicjowanie wartości <xref:System.Web.SessionState.SessionStateStoreProviderBase> wdrożenia są przekazywane do <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementacji metody.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="timeout">Stan sesji <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> wartość dla nowej klasy <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Tworzy nową <see cref="T:System.Web.SessionState.SessionStateStoreData" /> obiektu używanego dla bieżącego żądania.</summary>
        <returns>Nowy <see cref="T:System.Web.SessionState.SessionStateStoreData" /> dla bieżącego żądania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> metody na początku żądanie dla strony platformy ASP.NET podczas <xref:System.Web.HttpApplication.AcquireRequestState> zdarzeń. <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Metoda jest wywoływana, gdy:  
  
-   żądanie przychodzące nie ma sesji Identyfikatora, lub  
  
-   żądanie przychodzące ma identyfikator sesji, ale nie znaleziono sesji w magazynie danych.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> Metoda tworzy nowy <xref:System.Web.SessionState.SessionStateStoreData> obiektu z pustą <xref:System.Web.SessionState.ISessionStateItemCollection> obiektu <xref:System.Web.HttpStaticObjectsCollection> kolekcji i określonego `timeout` wartość. <xref:System.Web.HttpStaticObjectsCollection> Kolekcji dla aplikacji ASP.NET można pobrać przy użyciu <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> metody.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> Dla bieżącego żądania.</param>
        <param name="timeout">Sesja <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> dla bieżącego żądania.</param>
        <summary>Dodaje nowy element stanu sesji w magazynie danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Metoda jest używana z sesji podczas `cookieless` i `regenerateExpiredSessionId` atrybuty są `true`. O `regenerateExpiredSessionId attribute` ustawioną `true` powoduje, że <xref:System.Web.SessionState.SessionStateModule> obiekt, aby wygenerować nowy <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość przy wygasłe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> napotkano wartość.  
  
 Proces generowania nowego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość wymaga przekierowywania w przeglądarce adres URL zawierający nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość. <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Metoda jest wywoływana podczas żądania początkowego, który zawiera wygasłe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość. Po <xref:System.Web.SessionState.SessionStateModule> nabędzie nowy obiekt <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość Aby zastąpić wartość wygasłe, wywołuje <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> metodę, aby dodać wpis niezainicjowanej w magazynie danych stanu sesji. Przeglądarka jest przekierowywane do adres URL zawierający nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość. Istnienie niezainicjowanej zapisu w magazynie danych sesji gwarantuje, że przekierowane żądanie, która obejmuje nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość dla żądania wygasłych sesji nie zostanie odczytany i zamiast tego traktowane jako nowej sesji.  
  
 Niezainicjowany zapisu w magazynie danych sesji jest skojarzony z nowo utworzonego <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartości i zawiera tylko wartości domyślne, w tym datę wygaśnięcia, czas i wartość, która odpowiada `actionFlags` parametru <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody. Niezainicjowany wpisu w magazynie danych stanu sesji powinien zawierać `actionFlags` wartość równą <xref:System.Web.SessionState.SessionStateActions.InitializeItem> wartości wyliczenia. Ta wartość jest przekazywana do <xref:System.Web.SessionState.SessionStateModule> obiekt przez <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> i <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metod i informuje o <xref:System.Web.SessionState.SessionStateModule> obiekt, który bieżącej sesji jest nowy ale odinicjowany sesji. <xref:System.Web.SessionState.SessionStateModule> Obiektu będą zainicjować nowej sesji i podnieść `Session_OnStart` zdarzeń.  
  
 Aby uzyskać więcej informacji o sesji bez plików cookie, zobacz <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> właściwości.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> implementacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> Metoda jest wywoływana, gdy <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> metoda jest wykonywana na zamknięcie domeny aplikacji. Klasy, które dziedziczą <xref:System.Web.SessionState.SessionStateStoreProviderBase> klasy można użyć tej metody zwolnić wszystkie zasoby, które nie jest już w użyciu.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <summary>Wywoływane przez <see cref="T:System.Web.SessionState.SessionStateModule" /> obiektu na końcu żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> metody na końcu żądania dla strony platformy ASP.NET podczas <xref:System.Web.HttpApplication.EndRequest> zdarzeń. Można użyć <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> metoda wykonania oczyszczania na żądanie wymaganego przez dostawcę magazynu stanu sesji.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> Dla bieżącego żądania.</param>
        <param name="locked">Po powrocie z tej metody zawiera wartość logiczna, która ma ustawioną wartość <see langword="true" /> Jeśli element żądanej sesji jest zablokowany w magazynie danych sesji; w przeciwnym razie <see langword="false" />.</param>
        <param name="lockAge">Po powrocie z tej metody zawiera <see cref="T:System.TimeSpan" /> obiekt, który ma ustawioną wartość ilość czasu, który został zablokowany element w magazynie danych sesji.</param>
        <param name="lockId">Po powrocie z tej metody zawiera obiekt, który jest ustawiona na identyfikator blokady dla bieżącego żądania. Aby uzyskać więcej informacji na podstawie identyfikatora blokady, zobacz "Blokowania sesji magazynu danych" w <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> klasy podsumowania.</param>
        <param name="actions">Gdy metoda zwróci wartość, zawiera jeden z <see cref="T:System.Web.SessionState.SessionStateActions" /> wartości, wskazującą, czy bieżąca sesja jest zainicjowany, bez plików cookie sesji.</param>
        <summary>Zwraca dane stanu sesji tylko do odczytu z magazynu danych sesji.</summary>
        <returns>A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> wypełniane przy użyciu wartości sesji i informacji z magazynu danych sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> metody na początku żądanie, podczas <xref:System.Web.HttpApplication.AcquireRequestState> zdarzeń, gdy <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut ma ustawioną `ReadOnly`. Jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut ma ustawioną `true`, <xref:System.Web.SessionState.SessionStateModule> obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Metoda zwraca <xref:System.Web.SessionState.SessionStateStoreData> obiektu wypełniane przy użyciu informacji o sesji z magazynu danych i aktualizuje Data wygaśnięcia danych sesji. Jeśli nie element sesji jest znaleziono danych w magazynie danych <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> zestawy metody `locked` `out` parametr `false` i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule> obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> metodę, aby utworzyć element Nowa sesja w magazynie danych.  
  
 Jeśli element sesji danych znajduje się w magazynie danych, ale dane są blokowane, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> zestawów — metoda `locked` `out` parametr `true`, ustawia `lockAge` `out` parametr bieżąca data i godzina minus daty i czasu, jeśli element został zablokowany (które są pobierane z magazynu danych), ustawia `lockId` `out` parametr identyfikator blokady pobierane z magazynu danych i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule> obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> metody ponownie po upływie czasu pół sekundy próbuje pobrać element sesji.  
  
 Jeśli wartość która `lockAge` `out` parametr ma wartość przekracza <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> wartości, a następnie <xref:System.Web.SessionState.SessionStateModule> obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metodę, aby wyczyścić blokady danych elementu sesji, a następnie wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> ponownie — metoda.  
  
 `actionFlags` Parametr jest używany podczas zarówno `cookieless` i `regenerateExpiredSessionId` atrybuty są ustawione na `true`. `actionFlags` Wartość <xref:System.Web.SessionState.SessionStateActions.InitializeItem> wskazuje, że wpis w magazynie danych sesji jest nowej sesji, która wymaga inicjowania. Niezainicjowany zapisy w magazynie danych sesji są tworzone przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> metody. Jeśli element ze źródła danych sesji nie jest niezainicjowany element `actionFlags` parametr będzie można ustawić na zero.  
  
 Implementacji niestandardowego magazynu stanu sesji, obsługujących sesje bez plików cookie należy ustawić `actionFlags` `out` wartość zwracana z magazynu danych sesji dla bieżącego elementu. Jeśli `actionFlags` elementu jest równa wartości parametru żądanego magazynu sesji <xref:System.Web.SessionState.SessionStateActions.InitializeItem> wartości wyliczenia, a następnie <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> metoda powinna ustawić wartość w magazynie danych do zera po ustawieniu `actionFlags` `out` parametru.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> Dla bieżącego żądania.</param>
        <param name="locked">Po powrocie z tej metody zawiera wartość logiczna, która ma ustawioną wartość <see langword="true" /> Jeśli blokady jest pomyślnie uzyskanych; w przeciwnym razie <see langword="false" />.</param>
        <param name="lockAge">Po powrocie z tej metody zawiera <see cref="T:System.TimeSpan" /> obiekt, który ma ustawioną wartość ilość czasu, który został zablokowany element w magazynie danych sesji.</param>
        <param name="lockId">Po powrocie z tej metody zawiera obiekt, który jest ustawiona na identyfikator blokady dla bieżącego żądania. Aby uzyskać więcej informacji na podstawie identyfikatora blokady, zobacz "Blokowania sesji magazynu danych" w <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> klasy podsumowania.</param>
        <param name="actions">Gdy metoda zwróci wartość, zawiera jeden z <see cref="T:System.Web.SessionState.SessionStateActions" /> wartości, wskazującą, czy bieżąca sesja jest zainicjowany, bez plików cookie sesji.</param>
        <summary>Zwraca dane stanu sesji tylko do odczytu z magazynu danych sesji.</summary>
        <returns>A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> wypełniane przy użyciu wartości sesji i informacji z magazynu danych sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody na początku żądanie, podczas <xref:System.Web.HttpApplication.AcquireRequestState> zdarzeń, gdy <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut ma ustawioną `true`, co jest ustawieniem domyślnym. Jeśli <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut ma ustawioną `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule> obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> metody.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Metoda zwraca <xref:System.Web.SessionState.SessionStateStoreData> wypełniane przy użyciu informacji o sesji z magazynu danych obiektu aktualizacji daty wygaśnięcia przechowywanych danych i blokuje element sesji danych w magazynie danych na czas trwania żądania. Jeśli nie element sesji jest znaleziono danych w magazynie danych <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> zestawy metody `locked` `out` parametr `false` i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule> obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> metodę, aby utworzyć element Nowa sesja w magazynie danych. Jeśli element sesji danych znajduje się w magazynie danych, ale dane są blokowane, <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> zestawów — metoda `locked` `out` parametr `true`, ustawia `lockAge` `out` parametr bieżąca data i godzina minus daty i czasu, jeśli element został zablokowany (które są pobierane z magazynu danych), ustawia `lockId` `out` parametr identyfikator blokady pobierane z magazynu danych i zwraca `null`. Powoduje to <xref:System.Web.SessionState.SessionStateModule> obiekt do wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metody ponownie po upływie czasu pół sekundy próbuje pobrać element sesji i nałożyć blokady na danych. Jeśli wartość która `lockAge` `out` parametr ma wartość przekracza <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> wartości, a następnie <xref:System.Web.SessionState.SessionStateModule> wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metodę, aby wyczyścić blokady danych elementu sesji, a następnie wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> ponownie — metoda.  
  
 `actionFlags` Parametr jest używany podczas `cookieless` i `regenerateExpiredSessionId` atrybuty są ustawione na `true`. `actionFlags` Wartość <xref:System.Web.SessionState.SessionStateActions.InitializeItem> wskazuje, że wpis w magazynie danych sesji jest nowej sesji, która wymaga inicjowania. Niezainicjowany zapisy w magazynie danych sesji są tworzone przez wywołanie do <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> metody. Jeśli element ze źródła danych sesji nie jest niezainicjowany element `actionFlags` parametr będzie można ustawić na zero.  
  
 Implementacji niestandardowego magazynu stanu sesji, obsługujących sesje bez plików cookie należy ustawić `actionFlags` `out` wartość zwracana z magazynu danych sesji dla bieżącego elementu. Jeśli `actionFlags` elementu jest równa wartości parametru żądanego magazynu sesji <xref:System.Web.SessionState.SessionStateActions.InitializeItem> wartości wyliczenia, a następnie <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> metoda powinna ustawić wartość w magazynie danych do zera po ustawieniu `actionFlags` `out` parametru.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <summary>Wywoływane przez <see cref="T:System.Web.SessionState.SessionStateModule" /> obiekt do zainicjowania danego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> metoda przed wywołaniem innych <xref:System.Web.SessionState.SessionStateStoreProviderBase> metody. Można użyć <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> metodę w celu inicjowanie na żądanie wymagane przez dostawcę magazynu stanu sesji.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">Identyfikator sesji dla bieżącego żądania.</param>
        <param name="lockId">Identyfikator blokady dla bieżącego żądania.</param>
        <summary>Zwalnia blokadę elementu w dane sesji magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metodę, aby zaktualizować datę wygaśnięcia i zwolnić blokady elementu w magazynie danych sesji. Jest ona wywoływana na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState> zdarzeń, jeśli wartości sesji nie uległy zmianie. W przypadku modyfikacji wartości sesji <xref:System.Web.SessionState.SessionStateModule> obiekt zamiast tego wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> metody.  
  
 <xref:System.Web.SessionState.SessionStateModule> Wymaga także obiekt <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metody przekroczenia blokady elementu w magazynie danych sesji <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> wartość. Więcej informacji na temat blokowania i szczegółowe informacje o identyfikator blokady, zobacz "Blokowanie sesji magazynu danych" w <xref:System.Web.SessionState.SessionStateStoreProviderBase> Przegląd klasy.  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Metody umożliwia tylko usunięcie blokady z elementu w magazynie danych sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` wartości. Jeśli `lockId` różni się w magazynie danych <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> — metoda nie działa.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">Identyfikator sesji dla bieżącego żądania.</param>
        <param name="lockId">Identyfikator blokady dla bieżącego żądania.</param>
        <param name="item">
          <see cref="T:System.Web.SessionState.SessionStateStoreData" /> Reprezentujący element, aby usunąć z magazynu danych.</param>
        <summary>Usuwa element danych z magazynu danych sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> metody na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState> zdarzeń do usunięcia danych dla elementu sesji z magazynu danych sesji, jeśli <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> została wywołana metoda. Tylko dane sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` wartości są usuwane. Więcej informacji na temat blokowania i szczegółowe informacje o identyfikator blokady, zobacz "Blokowanie sesji magazynu danych" w <xref:System.Web.SessionState.SessionStateStoreProviderBase> Przegląd klasy.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">Identyfikator sesji dla bieżącego żądania.</param>
        <summary>Aktualizuje datę i godzinę wygaśnięcia elementu w magazynie danych sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> metodę, aby zaktualizować datę i godzinę wygaśnięcia sesji do bieżącej daty i godziny oraz sesji <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> wartość przy albo:  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybutu `true`, lub  
  
-   żądanie nie wygenerował <xref:System.Web.HttpApplication.AcquireRequestState> i <xref:System.Web.HttpApplication.ReleaseRequestState> zdarzenia z powodu błędu.  
  
 Jeśli żądanie strony ASP.NET i <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atrybut ma ustawioną `false`, <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> wywoływana jest metoda nadal aktualizacji, datę i godzinę wygaśnięcia danych w magazynie danych sesji.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</param>
        <param name="id">Identyfikator sesji dla bieżącego żądania.</param>
        <param name="item">
          <see cref="T:System.Web.SessionState.SessionStateStoreData" /> Obiekt, który zawiera wartości bieżącej sesji, które mają być przechowywane.</param>
        <param name="lockId">Identyfikator blokady dla bieżącego żądania.</param>
        <param name="newItem">
          <see langword="true" /> Aby zidentyfikować element sesji jako nowy element; <see langword="false" /> do identyfikowania element sesji jako istniejący element.</param>
        <summary>Aktualizuje informacji element sesji w magazynie danych stanu sesji przy użyciu wartości z bieżącego żądania, a następnie usuwa blokadę danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> metody na końcu żądania, podczas <xref:System.Web.HttpApplication.ReleaseRequestState> zdarzeń do wstawiania informacji bieżący element sesji do magazynu danych lub zaktualizowanie istniejących informacji element sesji w magazynie danych z bieżącej wartości Aby zaktualizować czas wygaśnięcia w elemencie i zwalnia blokadę na danych. Tylko dane sesji dla bieżącej aplikacji, która odpowiada podanej sesji `id` i `lockId` zaktualizować wartości. Aby uzyskać więcej informacji na temat blokowania, zobacz "Blokowanie sesji magazynu danych" w <xref:System.Web.SessionState.SessionStateStoreProviderBase> Przegląd klasy.  
  
 Jeśli nie zostały zmodyfikowane wartości sesji dla bieżącego żądania, <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> nie jest wywoływana metoda. Zamiast tego <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> metoda jest wywoływana.  
  
 Jeśli <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> została wywołana metoda <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> nie jest wywoływana metoda. Zamiast tego <xref:System.Web.SessionState.SessionStateModule> obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> metodę, aby usunąć element sesji dane ze źródła danych.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">
          <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> Delegować <see langword="Session_OnEnd" /> zdarzeń zdefiniowanych w pliku Global.asax.</param>
        <summary>Ustawia odwołanie <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> delegować <see langword="Session_OnEnd" /> zdarzeń zdefiniowanych w pliku Global.asax.</summary>
        <returns>
          <see langword="true" /> Jeśli dostawca magazynu stanu sesji obsługuje wywoływania <see langword="Session_OnEnd" /> zdarzeń; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> Obiektu wywołania <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> metody podczas inicjowania modułu ustalenie, czy wywołań `Session_OnEnd` zdarzenia są obsługiwane przez <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementacji i kojarzenia <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegat `Session_OnEnd` zdarzeń.  
  
 Należy użyć implementacji dostawcy magazynu stanu sesji niestandardowego <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> metodę, aby poinformować <xref:System.Web.SessionState.SessionStateModule> obiektu czy wywołań `Session_OnEnd` zdarzenia są obsługiwane i ustawić lokalnego odwołania <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegata dostarczonych przez `expireCallback` parametru. Implementacja niestandardowa należy określić, kiedy lokalnej <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegata zostanie wywołana. Na przykład można wywołać delegata podczas wywołanie <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> metodę, która jest wywoływana, gdy sesja zostanie zaniechana.  
  
   
  
## Examples  
 Na przykład implementacji dostawcy magazynu stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>