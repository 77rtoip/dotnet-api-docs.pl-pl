<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae4ca9a4670ae745ae7f68a9bf24402e4ec78440" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia dostęp do wartości stanu sesji oraz ustawienia poziomu sesji i metod zarządzania okres istnienia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET udostępnia Zarządzanie stanu sesji, aby umożliwić można przechowywać informacje związane z sesji unikatowe przeglądarki dla wielu żądań. Może przechowywać Kolekcja wartości nazwy klucza lub indeksu liczbowego. Dostęp do wartości sesji i funkcjonalność jest dostępne przy użyciu <xref:System.Web.SessionState.HttpSessionState> klasy, która jest dostępna za pośrednictwem <xref:System.Web.HttpContext.Session%2A> właściwości bieżącego <xref:System.Web.HttpContext>, lub <xref:System.Web.UI.Page.Session%2A> właściwość <xref:System.Web.UI.Page>.  
  
 Dane sesji jest skojarzona z sesji przeglądarki określonego za pomocą unikatowego identyfikatora. Domyślnie ten identyfikator jest przechowywana w pliku cookie sesji nie wygasa w przeglądarce, ale można również skonfigurować aplikację do przechowywania identyfikatora sesji w adresie URL przez ustawienie `cookieless` atrybutu `true` lub <xref:System.Web.HttpCookieMode.UseUri> w elemencie. konfiguracji aplikacji. Program ASP.NET, określić, czy pliki cookie są obsługiwane przez przeglądarkę, określając wartość <xref:System.Web.HttpCookieMode.UseDeviceProfile> dla `cookieless` atrybutu. Może także zawierać ASP.NET, czy pliki cookie są włączone dla przeglądarki, określając wartość <xref:System.Web.HttpCookieMode.AutoDetect> dla `cookieless` atrybutu. Jeśli pliki cookie są obsługiwane podczas <xref:System.Web.HttpCookieMode.UseDeviceProfile> jest określony lub włączona, gdy <xref:System.Web.HttpCookieMode.AutoDetect> jest określony, a następnie sesji identyfikator będzie przechowywana w pliku cookie; w przeciwnym razie identyfikator sesji będzie przechowywany w adresie URL.  
  
 Sesje są uruchamiane podczas pierwszego żądania i wartości sesji zostanie utrzymana tak długo, jak nowe żądanie zostało utworzone przez przeglądarkę przed określony w minutach <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> przebiegu właściwości. Rozpoczęcia nowej sesji, sesja <xref:System.Web.SessionState.SessionStateModule.Start> zdarzenia. To zdarzenie służy do wykonania żadnych dodatkowych działań na początku sesji, takie jak ustawienie domyślne wartości sesji. Gdy wygaśnie sesja <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> metoda jest wywoływana lub aplikacji ASP.NET jest wyłączony, sesja <xref:System.Web.SessionState.SessionStateModule.End> zdarzenia. To zdarzenie służy do wykonania niezbędnych oczyszczania. <xref:System.Web.SessionState.SessionStateModule.End> Zdarzenie jest wywoływane tylko wtedy, gdy stan sesji `mode` ma ustawioną wartość <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 Aby zwiększyć wydajność, sesje, które używają plików cookie nie zostanie przydzielona magazynu sesji do momentu rzeczywistości przechowywania danych w <xref:System.Web.UI.Page.Session%2A> obiektu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> właściwości.  
  
 Stan sesji nie zmieniają się w granicach aplikacji ASP.NET. Jeśli przeglądarką przechodzi do innej aplikacji, informacji o sesji nie jest dostępny w nowej aplikacji.  
  
 Wartości sesji są domyślnie przechowywane w pamięci na serwerze sieci Web. Można również przechowywać wartości sesji w bazie danych programu SQL Server, serwer stanu ASP.NET lub niestandardowy serwer. Dzięki temu można zachować wartości sesji w przypadkach, gdy ponowne uruchomienie procesu ASP.NET lub usługi IIS lub w aplikacji ASP.NET i udostępnić sesji wartości na wszystkich serwerach w kolektywie serwerów sieci Web. To zachowanie jest skonfigurowana przez ustawienie `mode` atrybutu do prawidłowej <xref:System.Web.SessionState.SessionStateMode> wartość w elemencie konfiguracji aplikacji. Aby uzyskać więcej informacji, zobacz [tryby stanu sesji](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 Alternatywy dla stanu sesji obejmują stan aplikacji (zobacz <xref:System.Web.HttpApplication.Application%2A> właściwości) i pamięci podręcznej programu ASP.NET (zobacz <xref:System.Web.Caching> przestrzeni nazw), które zmienne magazynu, które są dostępne dla wszystkich użytkowników w aplikacji ASP.NET; profilu platformy ASP.NET (zobacz <xref:System.Web.Profile> przestrzeni nazw), który będzie się powtarzał wartości użytkownika w magazynie danych bez wygasa je za pomocą limit czasu; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, utrzymujących się wartości formantu w <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A> właściwość; i pola formularza HTML, które są dostępne z protokołu HTTP `POST` przy użyciu <xref:System.Web.HttpRequest.Form%2A> kolekcji. Więcej szczegółów na temat różnic między stan sesji i alternatywnych Zarządzanie stanem, zobacz [zalecenia dotyczące zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia i pobiera wartości ze stanu sesji.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje bieżącą sesję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raz <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> metoda jest wywoływana, bieżąca sesja nie jest już prawidłowe, i będzie można uruchomić nowej sesji. <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> powoduje, że <xref:System.Web.SessionState.SessionStateModule.End> się zdarzenia. Nowy <xref:System.Web.SessionState.SessionStateModule.Start> zdarzeń zostanie wygenerowany dla następnego żądania.  
  
 Identyfikatory sesji porzuconych wygasłych sesji są poddawane recyklingowi domyślnie. Oznacza to jeśli żądanie zawiera identyfikator sesji dla sesji wygasły lub porzucone, nowej sesji jest uruchomiony przy użyciu tego samego identyfikatora sesji. Można wyłączyć tę opcję, ustawiając `regenerateExpiredSessionId` atrybutu elementu konfiguracji, aby `true`. Aby uzyskać więcej informacji, zobacz [identyfikatory sesji](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).  
  
 <xref:System.Web.SessionState.SessionStateModule.End> Zdarzeń jest obsługiwana tylko wtedy, gdy <xref:System.Web.SessionState.HttpSessionState.Mode%2A> właściwość jest ustawiona na <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu, aby dodać do kolekcji stanu sesji.</param>
        <param name="value">Wartość elementu do dodania do kolekcji stanu sesji.</param>
        <summary>Dodaje nowy element do kolekcji stanu sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `name` parametr odwołuje się do istniejącego elementu stanu sesji, istniejący element jest zastępowany z określonym `value`.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przechowywania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Add%2A> metody. Przedstawiono również sposób usuwania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Remove%2A> metody. A <xref:System.Web.UI.WebControls.Repeater> formantu służy do wyświetlania stanu sesji zawartość na stronie sieci Web. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Metoda jest używana do iterowania po kolekcji stan sesji i wypełnić <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie klucze i wartości z kolekcji stanu sesji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator zestawu znaków dla bieżącej sesji.</summary>
        <value>Identyfikator zestawu znaków dla bieżącej sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zestaw znaków (strona kodowa) służy do interpretowania danych znakowych wielobajtowego, określającą wartość znaku i w związku z tym porządek sortowania. Strona kodowa ustawienia dotyczą tylko danych znakowych wielobajtowego, a nie danych znakowych Unicode.  
  
 To <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> właściwości zapewnia zgodność z wcześniejszymi wersjami programu ASP tylko. Jeśli nie trzeba zachować zgodność z poprzednimi wersjami z strony ASP, użyj <xref:System.Web.HttpResponse.ContentEncoding%2A> właściwości zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do bieżącego obiektu stanu sesji.</summary>
        <value>Bieżący <see cref="T:System.Web.SessionState.HttpSessionState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> Właściwości zapewnia zgodność z wcześniejszymi wersjami programu ASP.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla nazwy elementu i wartości w <xref:System.Web.SessionState.HttpSessionState.Contents%2A> właściwości.  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana pod kątem sesje bez plików cookie.</summary>
        <value>Jeden z <see cref="T:System.Web.HttpCookieMode" /> wartości, które wskazują, czy aplikacja jest skonfigurowana pod kątem sesje bez plików cookie. Wartość domyślna to <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> jest `true`, <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> zwraca <xref:System.Web.HttpCookieMode.UseUri>; w przeciwnym razie <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> zwraca właściwość <xref:System.Web.HttpCookieMode.UseCookies>.  
  
   
  
## Examples  
 Poniższy kod przykładzie `cookieless` sesji dla atrybutu `true` w pliku Web.config. W przypadku tej konfiguracji aplikacji przykładowej <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> zwróci właściwości <xref:System.Web.HttpCookieMode.UseUri>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> Odbierająca wartości sesji.</param>
        <param name="index">Liczony od zera indeks w <c>tablicy</c> , od którego rozpocznie się kopiowanie.</param>
        <summary>Kopiuje kolekcję wartości stanu sesji jednowymiarowej tablicy, zaczynając od określonego indeksu tablicy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji stanu sesji.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który może służyć do odczytu wszystkich nazwy zmiennych stanu sesji w bieżącej sesji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Który iterację nazwy zmiennych w kolekcji stanu sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób przechowywania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Add%2A> metody. Przedstawiono również sposób usuwania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Remove%2A> metody. A <xref:System.Web.UI.WebControls.Repeater> formantu służy do wyświetlania zawartości stanu sesji na stronie sieci Web. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Metoda jest używana do iterowania po kolekcji stan sesji i wypełnić <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy identyfikator sesji jest osadzony w adresie URL lub przechowywane w pliku cookie HTTP.</summary>
        <value>
          <see langword="true" /> Jeśli sesja jest osadzony w adresie URL; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unikatowo identyfikuje sesje z każdą przeglądarkę. Domyślnie unikatowy identyfikator sesji są przechowywane w pliku cookie sesji nie wygasa w przeglądarce. Można określić, że identyfikatory sesji nie można zapisać w pliku cookie przez ustawienie `cookieless` atrybutu `true` w elemencie konfiguracji.  
  
> [!NOTE]
>  Aby zwiększyć bezpieczeństwo aplikacji, aplikacji należy umożliwić użytkownikom Wyloguj się, w takim przypadku należy wywołać <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> metody. Zmniejsza to potencjalnie niechciane źródła przy użyciu Unikatowy identyfikator w adresie URL można pobrać prywatnych danych przechowywanych w sesji użytkownika.  
  
 ASP.NET przechowuje stan sesji bez plików cookie przez automatyczne wstawianie Unikatowy identyfikator sesji do adresu URL strony. Na przykład następujący adres URL został zmodyfikowany przez platformę ASP.NET, aby uwzględnić lit3py55t21z5v55vlm25s55 identyfikator unikatowy sesji:  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET modyfikuje linkami na wszystkich stronach żądanych poprzez zastosowanie wartości Identyfikatora sesji łącza przed wysłaniem każdej strony w przeglądarce. Stan sesji jest zachowywana tak długo, jak długo użytkownik wykonuje ścieżkę łącza, które udostępnia lokacji. Jednak jeśli agent użytkownika ponownie zapisuje adresu URL, wystąpienie stanu sesji zostaną utracone.  
  
 Identyfikator sesji jest osadzony w adresie URL po ukośnika, który następuje nazwa aplikacji, a przed wszelkie pozostałe identyfikator pliku lub katalogu wirtualnego. Dzięki temu program ASP.NET do rozpoznania nazwy aplikacji przed obejmujące <xref:System.Web.SessionState.SessionStateModule> w żądaniu.  
  
 Domyślnie identyfikatory sesji używane w sesji bez plików cookie są odzyskiwane. Oznacza to jeśli żądanie jest identyfikatorem sesji, który wygasł, w nowej sesji jest uruchomiony przy użyciu Identyfikatora sesji dostarczone z żądaniem. To zachowanie może spowodować niepożądane udostępniania danych sesji, gdy łącza, który zawiera identyfikator sesji bez plików cookie jest udostępniany różnych przeglądarkach, być może przez aparat wyszukiwania lub inny program. Można zmniejszyć prawdopodobieństwo wystąpienia dane sesji jest udostępniany przez wielu klientów, wyłączając odtwarzania identyfikatorów sesji. Aby to zrobić, ustaw `regenerateExpiredSessionId` atrybutu elementu konfiguracji, aby `true`. Spowoduje to nowy identyfikator sesji generowany, gdy żądanie sesji bez plików cookie z identyfikatorem wygasłych sesji. Należy pamiętać, że jeśli żądanie o identyfikatorze wygasłych sesji używa HTTP `POST` metody, a następnie wszystkie przesłane dane zostaną utracone `regenerateExpiredSessionId` jest `true`, ponieważ ASP.NET wykonuje przekierowanie do upewnij się, że przeglądarka ma identyfikator nowej sesji w adresie URL.  
  
> [!NOTE]
>  Podczas gdy ustawienie `regenerateExpiredSessionId` atrybutu `true` zmniejsza prawdopodobieństwo niechciane udostępniania danych sesji nie chroni przed źródła niechciane uzyskanie dostępu do sesji innego użytkownika, uzyskując <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość i w tym go w żądaniach wysyłanych do serwera. Jeśli w stanie sesji są przechowywane informacje poufne lub prywatnych, zaleca się używać protokołu SSL do szyfrowania wszelkich komunikacji między przeglądarką i serwerem, który zawiera <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
   
  
## Examples  
 Poniższy kod przykładzie `cookieless` sesji atrybut na wartość true w pliku Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy sesja została utworzona z bieżącego żądania.</summary>
        <value>
          <see langword="true" /> Jeśli sesja została utworzona z bieżącym żądaniem; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy sesja jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli sesja jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do kolekcji wartości stanu sesji jest zsynchronizowany (wielowątkowość).</summary>
        <value>
          <see langword="true" /> Jeśli dostęp do kolekcji jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia wartości poszczególnych sesji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeksu liczbowego wartości sesji.</param>
        <summary>Pobiera lub ustawia wartość sesji przez indeksu liczbowego.</summary>
        <value>Wartość stanu sesji przechowywaną w określonym indeksie lub <see langword="null" /> Jeśli element nie istnieje.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa klucza sesji wartości.</param>
        <summary>Pobiera lub ustawia wartość sesji według nazwy.</summary>
        <value>Wartość stanu sesji o określonej nazwie lub <see langword="null" /> Jeśli element nie istnieje.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję kluczy dla wszystkich wartości przechowywane w kolekcji stanu sesji.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> Zawierający klucze sesji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator ustawień regionalnych (LCID) w bieżącej sesji.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> wystąpienia, który określa kulturę bieżącej sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.LCID%2A> Właściwości zapewnia zgodność z wcześniejszymi wersjami programu ASP tylko. Jeśli nie trzeba zachować zgodność z poprzednimi wersjami z strony ASP, użyj <xref:System.Globalization.CultureInfo.LCID%2A> właściwości zamiast tego.  
  
 Program ASP.NET nie przechowuje identyfikator ustawień regionalnych w stanie sesji. <xref:System.Web.SessionState.HttpSessionState.LCID%2A> Uzyskuje dostęp do właściwości <xref:System.Globalization.CultureInfo.LCID%2A> właściwości do pobierania i ustawiania identyfikatora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący tryb stanu sesji.</summary>
        <value>Jeden z <see cref="T:System.Web.SessionState.SessionStateMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać informacje o sposobie konfigurowania serwera na potrzeby <xref:System.Web.SessionState.SessionStateMode.StateServer> lub <xref:System.Web.SessionState.SessionStateMode.SQLServer> magazynu stanu sesji, zobacz [przegląd stanu sesji ASP.NET](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).  
  
   
  
## Examples  
 Poniższy kod przykładzie `mode` sesji dla atrybutu <xref:System.Web.SessionState.SessionStateMode.SQLServer> w pliku Web.config. Tryb sesji programu SQL Server, aby uzyskać `sqlConnectionString` jest wymagany także atrybut.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu do usunięcia z kolekcji stanu sesji.</param>
        <summary>Usuwa element z kolekcji stanu sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kolekcja stan sesji nie zawiera element z określonym `name`, połączenie pozostaje niezmieniona. Nie wyjątek.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przechowywania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Add%2A> metody. Przedstawiono również sposób usuwania wartości w stan sesji przy użyciu <xref:System.Web.SessionState.HttpSessionState.Remove%2A> metody. A <xref:System.Web.UI.WebControls.Repeater> formantu służy do wyświetlania zawartości stanu sesji na stronie sieci Web. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> Metoda jest używana do iterowania po kolekcji stan sesji i wypełnić <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie klucze i wartości z kolekcji stanu sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> wykonuje taką samą funkcję jak <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu do usunięcia z kolekcji stanu sesji.</param>
        <summary>Usuwa element pod określonym indeksem z kolekcji stanu sesji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 \- lub -  
  
 <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator sesji.</summary>
        <value>Identyfikator unikatowy sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Właściwość jest używana do unikatowej identyfikacji przeglądarki z danych sesji na serwerze. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wartość jest losowo generowany przez platformę ASP.NET i przechowywane w pliku cookie sesji nie wygasa w przeglądarce. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Wartość jest następnie wysyłana w pliku cookie z każdego żądania do aplikacji ASP.NET.  
  
 Aby zablokować używanie plików cookie w aplikacji ASP.NET i nadal należy używać stanu sesji, można skonfigurować aplikację do przechowywania identyfikatora sesji w adresie URL zamiast pliku cookie, ustawiając `cookieless` atrybutu konfiguracji element `true`, lub <xref:System.Web.HttpCookieMode.UseUri>, w pliku Web.config aplikacji. Program ASP.NET, określić, czy pliki cookie są obsługiwane przez przeglądarkę, określając wartość <xref:System.Web.HttpCookieMode.UseDeviceProfile> dla `cookieless` atrybutu. Może także zawierać ASP.NET, czy pliki cookie są włączone dla przeglądarki, określając wartość <xref:System.Web.HttpCookieMode.AutoDetect> dla `cookieless` atrybutu. Jeśli pliki cookie są obsługiwane podczas <xref:System.Web.HttpCookieMode.UseDeviceProfile> jest określony lub włączona, gdy <xref:System.Web.HttpCookieMode.AutoDetect> jest określony, a następnie sesji identyfikator będzie przechowywana w pliku cookie; w przeciwnym razie identyfikator sesji będzie przechowywany w adresie URL. Aby uzyskać więcej informacji, zobacz <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> właściwości.  
  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Są wysyłane między serwerem i przeglądarki w postaci zwykłego tekstu, w pliku cookie lub w adresie URL. W związku z tym źródłem niechciane może uzyskać dostęp do sesji innego użytkownika, uzyskując <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> wartość i dołączenie go do żądań do serwera. Jeśli w stanie sesji są przechowywane informacje poufne lub prywatnych, zaleca się używać protokołu SSL do szyfrowania wszelkich komunikacji między przeglądarką i serwerem, który zawiera <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 Korzystając z stanu sesji na podstawie plików cookie, ASP.NET nie przydzielić magazyn danych sesji do <xref:System.Web.UI.Page.Session%2A> obiekt jest używany. W związku z tym nowy identyfikator sesji jest generowany dla każdego żądania strony, aż do uzyskiwania dostępu do obiektu session. Jeśli aplikacja wymaga Identyfikatora sesji statycznych dla całej sesji, możesz albo zaimplementuj `Session_Start` metody w pliku Global.asax aplikacji i przechowywać dane w <xref:System.Web.UI.Page.Session%2A> obiekt ustalenie identyfikator sesji lub w innej części można użyć kodu jawnie przechowywania danych w aplikacji <xref:System.Web.UI.Page.Session%2A> obiektu.  
  
 Jeśli aplikacja używa stanu sesji bez plików cookie, identyfikator sesji jest generowany na pierwszy widok strony i jest zachowywana na potrzeby całej sesji.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia plik Web.config, który konfiguruje stan sesji, użycie identyfikatorów sesji bez plików cookie. Aby uzyskać więcej informacji, zobacz <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> właściwości.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów deklarowana przez <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> tagów w pliku Global.asax aplikacji ASP.NET.</summary>
        <value>
          <see cref="T:System.Web.HttpStaticObjectsCollection" /> Zawierających obiekty zadeklarowany w pliku Global.asax.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obiekt na stronie nie obsługuje serializacji i <xref:System.Web.SessionState.HttpSessionState.Mode%2A> jest out-of-process (<xref:System.Web.SessionState.SessionStateMode.SQLServer> lub <xref:System.Web.SessionState.SessionStateMode.StateServer>), obiekt nie zostanie utworzona i nie zostanie dodany do tej kolekcji.  
  
 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> Właściwości zapewnia zgodność z wcześniejszymi wersjami programu ASP.  
  
   
  
## Examples  
 Poniższy kod wyświetla przykład `id` i typ obiektu obiektów w <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> kolekcji.  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji wartości stanu sesji.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia ilość czasu (w minutach) między żądań przed dostawcę stanu sesji zakończenia sesji.</summary>
        <value>Okres limitu czasu w minutach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Właściwości można ustawić w pliku Web.config aplikacji przy użyciu `timeout` można ustawić atrybut element konfiguracji, lub <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> wartość właściwości bezpośrednio przy użyciu kodu aplikacji.  
  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Nie można ustawić właściwości na wartość większą niż 525,600 minut (1 rok). Wartość domyślna to 20 minut.  
  
   
  
## Examples  
 Poniższy kod przykładzie `timeout` atrybutu sesji do 30 minut w pliku Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>