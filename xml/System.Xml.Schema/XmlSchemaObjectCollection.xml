<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaObjectCollection.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5937398ee8cecf95ee08471006052183469cfe987.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">937398ee8cecf95ee08471006052183469cfe987</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s.</source>
          <target state="translated">Kolekcja <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>See <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an example using this class.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> na przykład za pomocą tej klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class that takes an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> klasy, która przyjmuje <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Dodaje <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> do <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The index at which the item has been added.</source>
          <target state="translated">Indeks, w którym element został dodany.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> already equals the capacity, the capacity of list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</source>
          <target state="translated">Jeśli <ph id="ph1">`Count`</ph> jest już równa pojemności, pojemność listy jest podwójny przez automatyczne ponowne przydzielanie tablicy wewnętrznej i kopiowanie istniejące elementy do nowej tablicy przed dodaniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> is less than the capacity, this method is an 0(1) operation.</source>
          <target state="translated">Jeśli <ph id="ph1">`Count`</ph> jest mniejsza niż pojemność, ta metoda jest operacją 0(1).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an 0(n) operation, where n is <ph id="ph1">`Count`</ph>.</source>
          <target state="translated">Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się operacja 0(n), gdzie n to <ph id="ph1">`Count`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> method expects only <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> and its derived types (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) as parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> Metoda oczekuje tylko <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> i jego typów pochodnych (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, i <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) jako parametry.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The following example illustrates adding an included schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> collection of an existing <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia dodawanie dołączonego schematu do <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> kolekcji istniejącego <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter specified is not of type <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaExternal" /&gt;</ph> or its derived types <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaImport" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaInclude" /&gt;</ph>, and <ph id="ph5">&lt;see cref="T:System.Xml.Schema.XmlSchemaRedefine" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Określono parametr nie jest typu <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaExternal" /&gt;</ph> lub jego typów pochodnych <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaImport" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaInclude" /&gt;</ph>, i <ph id="ph5">&lt;see cref="T:System.Xml.Schema.XmlSchemaRedefine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>Indicates if the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> is in the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Wskazuje, czy określony <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> w <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified qualified name is in the collection; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli jest określona nazwa kwalifikowana w kolekcji; w przeciwnym razie zwraca <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>If null is supplied, <ph id="ph1">&lt;see langword="false" /&gt;</ph> is returned because there is no qualified name with a null name.</source>
          <target state="translated">Jeśli podano wartość null, <ph id="ph1">&lt;see langword="false" /&gt;</ph> jest zwracany, ponieważ nie została żadna nazwa kwalifikowana nazwą o wartości null.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Tablica musi mieć indeksowane zaczynające od zera.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">Rozpoczyna się od zera indeks w tablicy, od których kopiowanie.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s from the collection into the given array, starting at the given index.</source>
          <target state="translated">Kopiuje wszystkie <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s z kolekcji do danej tablicy, zaczynając od danego indeksu.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Określona tablica musi być zgodne z typem.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A&gt;</ph> to copy the elements.</source>
          <target state="translated">Ta metoda używa <ph id="ph1">&lt;xref:System.Array.Copy%2A&gt;</ph> można skopiować elementów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> to odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multi-dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> lub -</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest równa lub większa niż długość <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> lub -</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> is greater than the available space from index to the end of the destination array.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> jest większa niż dostępne miejsce od indeksu do końca tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> cannot be cast automatically to the type of the destination array.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> nie można automatycznie rzutować na typ tablicy docelowej.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
          <source>Returns an enumerator for iterating through the <ph id="ph1">&lt;see langword="XmlSchemaObjects" /&gt;</ph> contained in the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Zwraca moduł wyliczający dla iteracji <ph id="ph1">&lt;see langword="XmlSchemaObjects" /&gt;</ph> zawartych w <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
          <source>The iterator returns <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" /&gt;</ph>.</source>
          <target state="translated">Zwraca iteratora <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> whose index you want to return.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Indeksu, którego chcesz przywrócić.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>Gets the collection index corresponding to the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Pobiera indeks kolekcji odpowiadający określonym <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>The index corresponding to the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Indeks odpowiadający określonym <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The zero-based index at which an item should be inserted.</source>
          <target state="translated">Liczony od zera indeks, w którym powinien zostać wstawiony element.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to insert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Do wstawienia.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>Inserts an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Wstawia <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> do <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</source>
          <target state="translated">Jeśli <ph id="ph1">`Count`</ph> jest już równa pojemności, pojemność listy jest podwójny przez automatyczne ponowne przydzielanie tablicy wewnętrznej przed wstawieniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">`Count`</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">`XmlSchemaObjectCollection`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`index`</ph> jest równa <ph id="ph2">`Count`</ph>, <ph id="ph3">`value`</ph> zostanie dodany na końcu <ph id="ph4">`XmlSchemaObjectCollection`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">Elementy, które należy wykonać punkt wstawiania Przenieś w dół do uwzględnienia nowego elementu.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Indeks <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> at the specified index.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
          <source><ph id="ph1">&lt;see langword="OnClear" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Clear" /&gt;</ph> behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OnClear" /&gt;</ph> jest wywoływane przed standardowego <ph id="ph2">&lt;see langword="Clear" /&gt;</ph> zachowanie.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
          <source>For more information, see OnClear method for <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz metodę OnClear <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Indeks <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>The item.</source>
          <target state="translated">Element.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Insert" /&gt;</ph> behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> jest wywoływane przed standardowego <ph id="ph2">&lt;see langword="Insert" /&gt;</ph> zachowanie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> method <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> metody <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Indeks <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>The item.</source>
          <target state="translated">Element.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Remove" /&gt;</ph> behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> jest wywoływane przed standardowego <ph id="ph2">&lt;see langword="Remove" /&gt;</ph> zachowanie.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>For more information, see the <ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> method for <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> metodę <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">Indeks <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The old value.</source>
          <target state="translated">Stara wartość.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">Nowa wartość.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnSet" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Set" /&gt;</ph> behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OnSet" /&gt;</ph> jest wywoływane przed standardowego <ph id="ph2">&lt;see langword="Set" /&gt;</ph> zachowanie.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>For more information, see the OnSet method for <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz metodę wystąpienia dla <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Do usunięcia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> from the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">Usuwa <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> z <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym Średni czas wykonania jest proporcjonalny do <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>The elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>