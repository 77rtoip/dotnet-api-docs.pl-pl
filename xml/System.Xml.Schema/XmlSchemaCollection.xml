<Type Name="XmlSchemaCollection" FullName="System.Xml.Schema.XmlSchemaCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="629468585e6a2d11a5b6af0083c5627e59f7058b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69415327" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type XmlSchemaCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera pamięć podręczną schematów języka definicji schematu XML (XSD) i danych XML (XDR). <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> Klasa jest przestarzała. Zamiast nich należy używać słów kluczowych <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schematy są ładowane przy użyciu <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> metody, podczas której schemat jest skojarzony z przestrzenią nazw Uniform Resource Identifier (URI). W przypadku schematów XML jest to zwykle `targetNamespace` Właściwość schematu.  
  
 Chociaż ta klasa przechowuje zarówno schematy XML, jak i schematy XDR, wszelkie metody i właściwości, które pobiera <xref:System.Xml.Schema.XmlSchema> lub zwracają obiekt ma zastosowanie tylko do schematów XML.  
  
 Ta wersja produktu obsługuje zalecenia dotyczące schematu XML organizacja World Wide Web Consortium (W3C) znajdujące się w [schemacie XML schematu część 1: Struktury](https://www.w3.org/TR/xmlschema-1/) i[schemat XML schematu część 2: Typy](https://www.w3.org/TR/xmlschema-2/)danych. Schemat XML musi odwoływać się do przestrzeni nazw `http://www.w3.org/2001/XMLSchema` schematu W3C w jego elemencie Schema. Zobacz na przykład metodę. <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A>  
  
 `XmlSchemaCollection`może być używane przez <xref:System.Xml.XmlValidatingReader> program do wydajnej walidacji danych.  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w Microsoft .NET Framework w wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność dokumentu XML przy użyciu `XmlSchemaCollection`.  
  
 [!code-cpp[XmlSchemaCollection.Basic#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Basic/CPP/aa.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Basic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Basic/CS/aa.cs#1)]
 [!code-vb[XmlSchemaCollection.Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Basic/VB/aa.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see langword="XmlSchemaCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see langword="XmlSchemaCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection (System.Xml.XmlNameTable nametable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nametable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nametable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection(System::Xml::XmlNameTable ^ nametable);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaCollection : System.Xml.XmlNameTable -&gt; System.Xml.Schema.XmlSchemaCollection" Usage="new System.Xml.Schema.XmlSchemaCollection nametable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nametable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nametable"><see langword="XmlNameTable" /> Do użycia.</param>
        <summary>Inicjuje nowe wystąpienie <see langword="XmlSchemaCollection" /> klasy z określonym <see cref="T:System.Xml.XmlNameTable" />. <see langword="XmlNameTable" /> Jest używany podczas ładowania schematów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dany schemat do kolekcji schematów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaCollection.Add schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">, <see langword="XmlSchema" /> Aby dodać do kolekcji.</param>
        <summary><see cref="T:System.Xml.Schema.XmlSchema" /> Dodaje do kolekcji.</summary>
        <returns><see langword="XmlSchema" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten `targetNamespace` atrybut służy do identyfikowania tego schematu.  
  
 Jeśli dodawany schemat zawiera odwołania do innych przestrzeni nazw (przez `include` `import` elementy), poziom zaufania aplikacji określa sposób, w jaki te inne przestrzenie nazw są rozpoznawane. (W .NET Framework w wersji 1,0 jest zawsze używana <xref:System.Xml.XmlUrlResolver> wartość domyślna).  
  
 `Fully trusted code:`Wartość domyślna `XmlUrlResolver` bez poświadczeń użytkownika służy do rozwiązywania wszelkich zasobów zewnętrznych. Schematy dla tych innych przestrzeni nazw są ładowane wyłącznie na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji. Jeśli te zasoby zewnętrzne znajdują się w zasobach sieciowych, które wymagają uwierzytelnienia, Użyj przeciążenia, <xref:System.Xml.XmlResolver> które przyjmuje jako jeden z argumentów i `XmlResolver` podaj z wymaganymi poświadczeniami.  
  
 `Semi-trusted code:`Odwołania zewnętrzne nie są rozpoznawane.  
  
> [!NOTE]
>  <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> `XmlResolver` `Add` <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> Jeśli dostęp jestuzyskiwanyprzyużyciuwłaściwości,metodaużywaokreślonegoprzezwłaściwość.`XmlSchemaCollection`  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaCollection schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaCollection schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schema As XmlSchemaCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaCollection ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchemaCollection -&gt; unit" Usage="xmlSchemaCollection.Add schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchemaCollection" />
      </Parameters>
      <Docs>
        <param name="schema">, <see langword="XmlSchemaCollection" /> Które chcesz dodać do tej kolekcji.</param>
        <summary>Dodaje wszystkie przestrzenie nazw zdefiniowane w danej kolekcji (łącznie ze skojarzonymi z nimi schematami) do tej kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dodawany schemat zawiera odwołania do innych przestrzeni nazw (przez `include` `import` elementy lub `x-schema` atrybuty), poziom zaufania aplikacji określa sposób, w jaki te inne przestrzenie nazw są rozpoznawane. (W .NET Framework w wersji 1,0 jest zawsze używana <xref:System.Xml.XmlUrlResolver> wartość domyślna).  
  
 `Fully trusted code:`Wartość domyślna `XmlUrlResolver` bez poświadczeń użytkownika służy do rozwiązywania wszelkich zasobów zewnętrznych. Schematy dla tych innych przestrzeni nazw są ładowane wyłącznie na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji. Jeśli te zasoby zewnętrzne znajdują się w zasobach sieciowych, które wymagają uwierzytelnienia, Użyj przeciążenia, <xref:System.Xml.XmlResolver> które przyjmuje jako jeden z argumentów i `XmlResolver` podaj z wymaganymi poświadczeniami.  
  
 `Semi-trusted code:`Odwołania zewnętrzne nie są rozpoznawane.  
  
> [!NOTE]
>  <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> `XmlResolver` `Add` <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> Jeśli dostęp jestuzyskiwanyprzyużyciuwłaściwości,metodaużywaokreślonegoprzezwłaściwość.`XmlSchemaCollection`  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, uri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaCollection.Add (ns, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw skojarzony ze schematem. W przypadku schematów XML zwykle <see langword="targetNamespace" />jest to.</param>
        <param name="uri">Adres URL, który określa schemat do załadowania.</param>
        <summary>Dodaje schemat znajdujący się pod danym adresem URL do kolekcji schematów.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchema" /> Dodano do kolekcji schematów; <see langword="null" /> Jeśli dodawany schemat jest schematem XDR lub w schemacie są błędy kompilacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, dodawany schemat zastępuje oryginalny schemat w kolekcji. Na przykład w poniższym kodzie elementy C# Authors. xsd są usuwane z kolekcji i Names. xsd zostanie dodany.  
  
```  
schemaColl.Add("urn:author", "authors.xsd");  
schemaColl.Add("urn:author", "names.xsd");  
```  
  
 Jeśli `ns` `Add` `targetNamespace` jest `null` i dodawany schemat jest schematem XML, metoda używa zdefiniowanej w schemacie XML, aby zidentyfikować schemat w kolekcji. Jeśli dodawany schemat zawiera odwołania do innych przestrzeni nazw (przez `include` `import` elementy lub `x-schema` atrybuty), poziom zaufania aplikacji określa sposób, w jaki te inne przestrzenie nazw są rozpoznawane. (W .NET Framework w wersji 1,0 jest zawsze używana <xref:System.Xml.XmlUrlResolver> wartość domyślna).  
  
 `Fully trusted code:`Wartość domyślna `XmlUrlResolver` bez poświadczeń użytkownika służy do rozwiązywania wszelkich zasobów zewnętrznych. Schematy dla tych innych przestrzeni nazw są ładowane wyłącznie na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji. Jeśli te zasoby zewnętrzne znajdują się w zasobach sieciowych, które wymagają uwierzytelnienia, Użyj przeciążenia, <xref:System.Xml.XmlResolver> które przyjmuje jako jeden z argumentów i `XmlResolver` podaj z wymaganymi poświadczeniami.  
  
 `Semi-trusted code:`Odwołania zewnętrzne nie są rozpoznawane.  
  
> [!NOTE]
>  <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> `XmlResolver` `Add` <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> Jeśli dostęp jestuzyskiwanyprzyużyciuwłaściwości,metodaużywaokreślonegoprzezwłaściwość.`XmlSchemaCollection`  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność trzech plików XML przy użyciu schematów przechowywanych `XmlSchemaCollection`w.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 Przykład używa następujących pięciu plików wejściowych:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaCollection.Add (ns, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw skojarzony ze schematem. W przypadku schematów XML zwykle <see langword="targetNamespace" />jest to.</param>
        <param name="reader"><see cref="T:System.Xml.XmlReader" />zawierający schemat do dodania.</param>
        <summary>Dodaje schemat zawarty w <see cref="T:System.Xml.XmlReader" /> elemencie do kolekcji schematów.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchema" /> Dodano do kolekcji schematów; <see langword="null" /> Jeśli dodawany schemat jest schematem XDR lub w schemacie są błędy kompilacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, dodawany schemat zastępuje oryginalny schemat w kolekcji.  
  
 Jeśli `ns` `Add` `targetNamespace` jest `null` i dodawany schemat jest schematem XML, metoda używa zdefiniowanej w schemacie XML, aby zidentyfikować schemat w kolekcji.  
  
 Jeśli dodawany schemat zawiera odwołania do innych przestrzeni nazw (przez `include` `import` elementy lub `x-schema` atrybuty), poziom zaufania aplikacji określa sposób, w jaki te inne przestrzenie nazw są rozpoznawane. (W .NET Framework w wersji 1,0 jest zawsze używana <xref:System.Xml.XmlUrlResolver> wartość domyślna).  
  
 `Fully trusted code:`Wartość domyślna `XmlUrlResolver` bez poświadczeń użytkownika służy do rozwiązywania wszelkich zasobów zewnętrznych. Schematy dla tych innych przestrzeni nazw są ładowane wyłącznie na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji. Jeśli te zasoby zewnętrzne znajdują się w zasobach sieciowych, które wymagają uwierzytelnienia, Użyj przeciążenia, <xref:System.Xml.XmlResolver> które przyjmuje jako jeden z argumentów i `XmlResolver` podaj z wymaganymi poświadczeniami.  
  
 `Semi-trusted code:`Odwołania zewnętrzne nie są rozpoznawane.  
  
> [!NOTE]
>  <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> `XmlResolver` `Add` <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> Jeśli dostęp jestuzyskiwanyprzyużyciuwłaściwości,metodaużywaokreślonegoprzezwłaściwość.`XmlSchemaCollection`  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchema * System.Xml.XmlResolver -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaCollection.Add (schema, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="schema">, <see langword="XmlSchema" /> Aby dodać do kolekcji.</param>
        <param name="resolver">Służy do rozpoznawania przestrzeni nazw, <see langword="include" /> do których <see langword="import" /> odwołuje się i elementów. <see cref="T:System.Xml.XmlResolver" /> Jeśli tak jest <see langword="null" />, odwołania zewnętrzne nie są rozpoznawane.</param>
        <summary><see cref="T:System.Xml.Schema.XmlSchema" /> Dodaje do kolekcji. Określony <see cref="T:System.Xml.XmlResolver" /> jest używany do rozpoznawania odwołań zewnętrznych.</summary>
        <returns><see langword="XmlSchema" /> Dodano do kolekcji schematów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten `targetNamespace` atrybut służy do identyfikowania tego schematu.  
  
 Jeśli schemat zawiera `include` i `import` elementy odwołujące się do innych przestrzeni nazw, schematy dla tych innych przestrzeni nazw są ładowane tylko do celów sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji.  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład dodaje schemat do kolekcji. Jest przenoszona do metody, która ustawia niezbędne poświadczenia wymagane do uzyskania dostępu do dowolnych zasobów zewnętrznych, do których odwołuje się schemat. `Add` <xref:System.Xml.XmlUrlResolver>  
  
 [!code-cpp[XmlSchemaCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Add/CPP/schemacolladd.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Add/CS/schemacolladd.cs#1)]
 [!code-vb[XmlSchemaCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Add/VB/schemacolladd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Xml.XmlReader * System.Xml.XmlResolver -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaCollection.Add (ns, reader, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw skojarzony ze schematem. W przypadku schematów XML zwykle <see langword="targetNamespace" />jest to.</param>
        <param name="reader"><see cref="T:System.Xml.XmlReader" />zawierający schemat do dodania.</param>
        <param name="resolver">Służy do rozpoznawania przestrzeni nazw, <see langword="include" /> do których <see langword="import" /> odwołuje <see langword="x-schema" /> się i elementów lub atrybutu (schematy XDR). <see cref="T:System.Xml.XmlResolver" /> Jeśli tak jest <see langword="null" />, odwołania zewnętrzne nie są rozpoznawane.</param>
        <summary>Dodaje schemat zawarty w <see cref="T:System.Xml.XmlReader" /> elemencie do kolekcji schematów. Określony <see cref="T:System.Xml.XmlResolver" /> jest używany do rozwiązywania wszystkich zasobów zewnętrznych.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchema" /> Dodano do kolekcji schematów; <see langword="null" /> Jeśli dodawany schemat jest schematem XDR lub w schemacie są błędy kompilacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, dodawany schemat zastępuje oryginalny schemat w kolekcji.  
  
 Jeśli `ns` `Add` `targetNamespace` jest `null` i dodawany schemat jest schematem XML, metoda używa atrybutu zdefiniowanego w schemacie XML, aby zidentyfikować schemat w kolekcji.  
  
 Jeśli dodawany schemat zawiera odwołania do innych przestrzeni nazw (przez `include` `import` elementy lub `x-schema` atrybuty), schematy dla tych innych przestrzeni nazw są ładowane tylko do celów weryfikacji. W przeciwieństwie do oryginalnego schematu, te inne schematy nie są jawnie dodawane do kolekcji schematów. W związku z tym nie są one dostępne przy użyciu żadnej z metod lub właściwości kolekcji.  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy schemat z określoną przestrzenią nazw znajduje się w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="xmlSchemaCollection.Contains ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw skojarzony ze schematem. W przypadku schematów XML zwykle jest to docelowa przestrzeń nazw.</param>
        <summary>Pobiera wartość wskazującą, czy schemat z określoną przestrzenią nazw znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli schemat z określoną przestrzenią nazw znajduje się w kolekcji; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy schemat znajduje się w kolekcji. Jeśli tak jest, wyświetla schemat.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaCollection.Contains schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><see langword="XmlSchema" /> Obiekt.</param>
        <summary>Pobiera wartość wskazującą, czy <see langword="targetNamespace" /> określony <see cref="T:System.Xml.Schema.XmlSchema" /> element znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli w kolekcji istnieje schemat z tym samym <see langword="targetNamespace" />elementem; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.Schema.XmlSchema[] * int -&gt; unit" Usage="xmlSchemaCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica, do której mają zostać skopiowane obiekty.</param>
        <param name="index">Indeks, w <paramref name="array" /> którym rozpocznie się kopiowanie.</param>
        <summary>Kopiuje wszystkie <see langword="XmlSchema" /> obiekty z tej kolekcji do danej tablicy, rozpoczynając od danego indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.Schema.XmlSchemaCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę przestrzeni nazw zdefiniowanych w tej kolekcji.</summary>
        <value>Liczba przestrzeni nazw zdefiniowanych w tej kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As XmlSchemaCollectionEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaCollectionEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Xml.Schema.XmlSchemaCollectionEnumerator" Usage="xmlSchemaCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollectionEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia obsługę iteracji stylu "for each" w kolekcji schematów.</summary>
        <returns>Moduł wyliczający do iteracji we wszystkich schematach w bieżącej kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład wyświetla wszystkie schematy XML w kolekcji schematów.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaCollectionEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema this[string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ns As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchema ^ default[System::String ^] { System::Xml::Schema::XmlSchema ^ get(System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.Schema.XmlSchema" Usage="System.Xml.Schema.XmlSchemaCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw skojarzony ze schematem, który ma zostać zwrócony. Zwykle <see langword="targetNamespace" /> będzie to schemat.</param>
        <summary><see cref="T:System.Xml.Schema.XmlSchema" /> Pobiera skojarzoną z danym identyfikatorem URI przestrzeni nazw.</summary>
        <value><see langword="XmlSchema" /> Skojarzona z identyfikatorem URI przestrzeni nazw; <see langword="null" /> Jeśli nie ma załadowanego schematu skojarzonego z danym obszarem nazw lub jeśli przestrzeń nazw jest skojarzona ze schematem XDR.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy schemat znajduje się w kolekcji. Jeśli tak jest, wyświetla schemat.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.Schema.XmlSchemaCollection.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość domyślną <see langword="XmlNameTable" /> używaną <see langword="XmlSchemaCollection" /> podczas ładowania nowych schematów.</summary>
        <value>A <see langword="XmlNameTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica, do której mają zostać skopiowane obiekty.</param>
        <param name="index">Indeks, w <paramref name="array" /> którym rozpocznie się kopiowanie.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.Schema.XmlSchemaCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />Zobacz.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.Schema.XmlSchemaCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />Zobacz.</summary>
        <value><see langword="true" />Jeśli kolekcja jest synchronizowana; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.Schema.XmlSchemaCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />Zobacz.</summary>
        <value><see cref="P:System.Collections.ICollection.SyncRoot" /> Obiekt, który może służyć do synchronizowania dostępu do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.Schema.XmlSchemaCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />Zobacz.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Dla kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.Schema.XmlSchemaCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IEnumerable> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia procedurę obsługi zdarzeń do uzyskiwania informacji o błędach walidacji schematu XDR i XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia te występują, gdy schematy są dodawane do kolekcji. Jeśli program obsługi zdarzeń nie zostanie podany, <xref:System.Xml.Schema.XmlSchemaException> zostanie zgłoszony w <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A> przypadku błędów walidacji, w których `XmlSeverityType.Error`jest. Aby określić procedurę obsługi zdarzeń, zdefiniuj funkcję wywołania zwrotnego i Dodaj ją do `ValidationEventHandler`elementu.  
  
> [!IMPORTANT]
>  Klasa jest przestarzała w .NET Framework wersji 2,0 i została zastąpiona <xref:System.Xml.Schema.XmlSchemaSet> przez klasę. <xref:System.Xml.Schema.XmlSchemaCollection>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić procedurę obsługi zdarzeń, aby obsługiwać nieprawidłowe schematy XML.  
  
 [!code-cpp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CPP/schemaevent.cpp#1)]
 [!code-csharp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CS/schemaevent.cs#1)]
 [!code-vb[XmlSchema.ValidationEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchema.ValidationEventHandler/VB/schemaevent.vb#1)]  
  
 W poprzednim przykładzie plik `invalid.xsd` jest wykorzystywany jako dane wejściowe.  
  
 [!code-xml[XmlSchema.ValidationEventHandler#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchema.ValidationEventHandler/XML/invalid.xsd#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
