<Type Name="XmlSchemaCollection" FullName="System.Xml.Schema.XmlSchemaCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fec8ddd8d80912cae1352853ba7c3ed04b5d88c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741746" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera pamięć podręczną języka definicji schematu XML (XSD) i schematów XML danych (XDR). <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> Klasa klasy jest przestarzała. Zamiast nich należy używać słów kluczowych <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schematy są załadowane przy użyciu <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> metody po tym czasie schemat jest skojarzony z przestrzenią nazw jednolity identyfikator zasobów (URI). Dla schematów XML, zazwyczaj są to `targetNamespace` właściwości schematu.  
  
 Mimo że ta klasa przechowuje zarówno schematów XML i schematy XDR, wszystkie metody i właściwości który przyjmuje lub zwraca <xref:System.Xml.Schema.XmlSchema> dotyczy tylko schematy XML.  
  
 Ta wersja produktu obsługuje zalecenie schematu XML w sieci World Wide Web konsorcjum W3C w lokalizacji http://www.w3.org/TR/xmlschema-1 i http://www.w3.org/TR/xmlschema-2. Schemat XML musi odwoływać się przestrzeń nazw schematu W3C `http://www.w3.org/2001/XMLSchema` w jego elemencie schema. Zobacz <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> metody, na przykład.  
  
 `XmlSchemaCollection` mogą być używane przez <xref:System.Xml.XmlValidatingReader> do sprawdzania poprawności danych wydajne.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie Microsoft .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność dokumentu XML przy użyciu `XmlSchemaCollection`.  
  
 [!code-cpp[XmlSchemaCollection.Basic#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Basic/CPP/aa.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Basic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Basic/CS/aa.cs#1)]
 [!code-vb[XmlSchemaCollection.Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Basic/VB/aa.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see langword="XmlSchemaCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see langword="XmlSchemaCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection (System.Xml.XmlNameTable nametable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nametable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nametable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection(System::Xml::XmlNameTable ^ nametable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nametable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nametable">
          <see langword="XmlNameTable" /> Do użycia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see langword="XmlSchemaCollection" /> klasy z określonym <see cref="T:System.Xml.XmlNameTable" />. <see langword="XmlNameTable" /> Jest używany podczas ładowania schematów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dany schemat w kolekcji schematów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">
          <see langword="XmlSchema" /> Do dodania do kolekcji.</param>
        <summary>Dodaje <see cref="T:System.Xml.Schema.XmlSchema" /> do kolekcji.</summary>
        <returns>
          <see langword="XmlSchema" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `targetNamespace` Atrybut służy do identyfikowania tego schematu.  
  
 Jeśli schemat dodawany zawiera odwołania do innych przestrzeniach nazw (za pośrednictwem `include` i `import` elementy), poziom zaufania aplikacji określa, jak rozwiązywane są następujące obszary nazw. (W programie .NET Framework w wersji 1.0 domyślny <xref:System.Xml.XmlUrlResolver> zawsze użyto).  
  
 `Fully trusted code:` Domyślnie `XmlUrlResolver` z żadnego użytkownika poświadczeń jest używany do rozpoznawania dowolnych zasobów zewnętrznych. Schematy tych przestrzeni nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości. Jeśli te zasoby zewnętrzne znajdują się w zasobie sieciowym, który wymaga uwierzytelniania, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ `XmlResolver` niezbędne poświadczenia.  
  
 `Semi-trusted code:` Nie można rozpoznać odwołania zewnętrznego.  
  
> [!NOTE]
>  Jeśli `XmlSchemaCollection` jest uzyskiwany za pomocą <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> właściwość `Add` używa metody `XmlResolver` określonego przez <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaCollection schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaCollection schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schema As XmlSchemaCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaCollection ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchemaCollection" />
      </Parameters>
      <Docs>
        <param name="schema">
          <see langword="XmlSchemaCollection" /> Mają zostać dodane do tej kolekcji.</param>
        <summary>Dodaje wszystkich obszarów nazw zdefiniowanych w danej kolekcji (w tym ich skojarzonych schematów) do tej kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli schemat dodawany zawiera odwołania do innych przestrzeniach nazw (za pośrednictwem `include` i `import` elementy lub `x-schema` atrybut), poziom zaufania aplikacji określa, jak rozwiązywane są następujące obszary nazw. (W programie .NET Framework w wersji 1.0 domyślny <xref:System.Xml.XmlUrlResolver> zawsze użyto).  
  
 `Fully trusted code:` Domyślnie `XmlUrlResolver` z żadnego użytkownika poświadczeń jest używany do rozpoznawania dowolnych zasobów zewnętrznych. Schematy tych przestrzeni nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości. Jeśli te zasoby zewnętrzne znajdują się w zasobie sieciowym, który wymaga uwierzytelniania, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ `XmlResolver` niezbędne poświadczenia.  
  
 `Semi-trusted code:` Nie można rozpoznać odwołania zewnętrznego.  
  
> [!NOTE]
>  Jeśli `XmlSchemaCollection` jest uzyskiwany za pomocą <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> właściwość `Add` używa metody `XmlResolver` określonego przez <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, uri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Przestrzeń nazw identyfikator URI skojarzony ze schematem. Dla schematów XML, zazwyczaj są to <see langword="targetNamespace" />.</param>
        <param name="uri">Adres URL, który określa schemat do załadowania.</param>
        <summary>Dodaje schematu znajduje się przez podany adres URL do kolekcji schematów.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> Dodany do kolekcji schematów; <see langword="null" /> Jeśli schemat dodawany jest schematu XDR, lub jeśli występują błędy kompilacji w schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, schemat dodawany zastępuje oryginalnego schematu w kolekcji. Na przykład w następujący kod C#, authors.xsd zostanie usunięty z kolekcji i names.xsd został dodany.  
  
```  
schemaColl.Add("urn:author", "authors.xsd");  
schemaColl.Add("urn:author", "names.xsd");  
```  
  
 Jeśli `ns` jest `null` i schemat dodawany jest schemat XML `Add` używa metody `targetNamespace` zdefiniowanej w schemacie XML, aby zidentyfikować schematu w kolekcji. Jeśli schemat dodawany zawiera odwołania do innych przestrzeniach nazw (za pośrednictwem `include` i `import` elementy lub `x-schema` atrybut), poziom zaufania aplikacji określa, jak rozwiązywane są następujące obszary nazw. (W programie .NET Framework w wersji 1.0 domyślny <xref:System.Xml.XmlUrlResolver> zawsze użyto).  
  
 `Fully trusted code:` Domyślnie `XmlUrlResolver` z żadnego użytkownika poświadczeń jest używany do rozpoznawania dowolnych zasobów zewnętrznych. Schematy tych przestrzeni nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości. Jeśli te zasoby zewnętrzne znajdują się w zasobie sieciowym, który wymaga uwierzytelniania, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ `XmlResolver` niezbędne poświadczenia.  
  
 `Semi-trusted code:` Nie można rozpoznać odwołania zewnętrznego.  
  
> [!NOTE]
>  Jeśli `XmlSchemaCollection` jest uzyskiwany za pomocą <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> właściwość `Add` używa metody `XmlResolver` określonego przez <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład weryfikuje trzy pliki XML przy użyciu przechowywanych w schematach `XmlSchemaCollection`.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 W przykładzie użyto następujących pięć plików wejściowych:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ns">Przestrzeń nazw identyfikator URI skojarzony ze schematem. Dla schematów XML, zazwyczaj są to <see langword="targetNamespace" />.</param>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> zawierającego schematu do dodania.</param>
        <summary>Dodaje zawartych w schemacie <see cref="T:System.Xml.XmlReader" /> do kolekcji schematów.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> Dodany do kolekcji schematów; <see langword="null" /> Jeśli schemat dodawany jest schematu XDR, lub jeśli występują błędy kompilacji w schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, schemat dodawany zastępuje oryginalnego schematu w kolekcji.  
  
 Jeśli `ns` jest `null` i schemat dodawany jest schemat XML `Add` używa metody `targetNamespace` zdefiniowanej w schemacie XML, aby zidentyfikować schematu w kolekcji.  
  
 Jeśli schemat dodawany zawiera odwołania do innych przestrzeniach nazw (za pośrednictwem `include` i `import` elementy lub `x-schema` atrybut), poziom zaufania aplikacji określa, jak rozwiązywane są następujące obszary nazw. (W programie .NET Framework w wersji 1.0 domyślny <xref:System.Xml.XmlUrlResolver> zawsze użyto).  
  
 `Fully trusted code:` Domyślnie `XmlUrlResolver` z żadnego użytkownika poświadczeń jest używany do rozpoznawania dowolnych zasobów zewnętrznych. Schematy tych przestrzeni nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości. Jeśli te zasoby zewnętrzne znajdują się w zasobie sieciowym, który wymaga uwierzytelniania, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlResolver> jako jeden z jego argumentów i określ `XmlResolver` niezbędne poświadczenia.  
  
 `Semi-trusted code:` Nie można rozpoznać odwołania zewnętrznego.  
  
> [!NOTE]
>  Jeśli `XmlSchemaCollection` jest uzyskiwany za pomocą <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> właściwość `Add` używa metody `XmlResolver` określonego przez <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="schema">
          <see langword="XmlSchema" /> Do dodania do kolekcji.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznawania nazw, do którego odwołuje się <see langword="include" /> i <see langword="import" /> elementy. Jeśli jest to <see langword="null" />, odwołań zewnętrznych nie są rozpoznawane.</param>
        <summary>Dodaje <see cref="T:System.Xml.Schema.XmlSchema" /> do kolekcji. Określony <see cref="T:System.Xml.XmlResolver" /> jest używany do rozpoznawania odwołań zewnętrznych.</summary>
        <returns>
          <see langword="XmlSchema" /> Dodany do kolekcji schematów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `targetNamespace` Atrybut służy do identyfikowania tego schematu.  
  
 Jeśli schemat zawiera `include` i `import` elementy, które odwołują schematów innych przestrzeniach nazw dla tych przestrzenie nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład umożliwia dodanie schematu do kolekcji. <xref:System.Xml.XmlUrlResolver> Jest przekazywana do `Add` metodę, która ustawia niezbędnych poświadczeń wymagany dostęp do dowolnych zasobów zewnętrznych występujący w odwołaniu w schemacie.  
  
 [!code-cpp[XmlSchemaCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Add/CPP/schemacolladd.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Add/CS/schemacolladd.cs#1)]
 [!code-vb[XmlSchemaCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Add/VB/schemacolladd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="ns">Przestrzeń nazw identyfikator URI skojarzony ze schematem. Dla schematów XML, zazwyczaj są to <see langword="targetNamespace" />.</param>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> zawierającego schematu do dodania.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> Używany do rozpoznawania nazw, do którego odwołuje się <see langword="include" /> i <see langword="import" /> elementy lub <see langword="x-schema" /> atrybutu (schematy XDR). Jeśli jest to <see langword="null" />, odwołań zewnętrznych nie są rozpoznawane.</param>
        <summary>Dodaje zawartych w schemacie <see cref="T:System.Xml.XmlReader" /> do kolekcji schematów. Określony <see cref="T:System.Xml.XmlResolver" /> jest używany do rozpoznawania dowolnych zasobów zewnętrznych.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> Dodany do kolekcji schematów; <see langword="null" /> Jeśli schemat dodawany jest schematu XDR, lub jeśli występują błędy kompilacji w schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` został już skojarzony z innym schematem w kolekcji, schemat dodawany zastępuje oryginalnego schematu w kolekcji.  
  
 Jeśli `ns` jest `null` i schemat dodawany jest schemat XML `Add` używa metody `targetNamespace` atrybutu zdefiniowana w schemacie XML, aby zidentyfikować schematu w kolekcji.  
  
 Jeśli schemat dodawany zawiera odwołania do innych przestrzeniach nazw (za pośrednictwem `include` i `import` elementy lub `x-schema` atrybut), schematów w tych obszarach nazw są ładowane tylko na potrzeby sprawdzania poprawności. W przeciwieństwie do oryginalnego schematu schematy te nie są jawnie dodać do kolekcji schematów. W związku z tym nie są dostępne przy użyciu dowolnej z metod kolekcji lub właściwości.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Schemat nie jest prawidłowym schematem.</exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy schemat z określonego obszaru nazw znajduje się w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Przestrzeń nazw identyfikator URI skojarzony ze schematem. Dla schematów XML to będzie zwykle docelowego obszaru nazw.</param>
        <summary>Pobiera wartość wskazującą, czy schemat z określonego obszaru nazw znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli schemat z określonego obszaru nazw znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy schemat jest w kolekcji. Jeśli tak jest, Wyświetla schemat.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">
          <see langword="XmlSchema" /> Obiektu.</param>
        <summary>Pobiera wartość wskazującą czy <see langword="targetNamespace" /> określonego <see cref="T:System.Xml.Schema.XmlSchema" /> znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli schemat w kolekcji o tej samej <see langword="targetNamespace" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablicy na skopiowanie obiekty.</param>
        <param name="index">Indeks w <c>tablicy</c> gdy rozpocznie się kopiowanie.</param>
        <summary>Kopiuje wszystkie <see langword="XmlSchema" /> obiekty z tej kolekcji do danej tablicy, zaczynając od danego indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę nazw zdefiniowanych w tej kolekcji.</summary>
        <value>Liczba nazw zdefiniowanych w tej kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As XmlSchemaCollectionEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaCollectionEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollectionEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia obsługę stylu "for each" iteracji w kolekcji schematów.</summary>
        <returns>Moduł wyliczający dla Iterowanie po wszystkich schematów w bieżącej kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wszystkich schematów XML w kolekcji schematów.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaCollectionEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema this[string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ns As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchema ^ default[System::String ^] { System::Xml::Schema::XmlSchema ^ get(System::String ^ ns); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Przestrzeń nazw identyfikatora URI skojarzone ze schematem, który chcesz przywrócić. Są to zazwyczaj <see langword="targetNamespace" /> schematu.</param>
        <summary>Pobiera <see cref="T:System.Xml.Schema.XmlSchema" /> skojarzone z danym identyfikatorem URI przestrzeni nazw.</summary>
        <value>
          <see langword="XmlSchema" /> Skojarzonego z przestrzenią nazw URI; <see langword="null" /> Jeśli brak załadowanego schematu skojarzone z danej przestrzeni nazw lub jeśli przestrzeń nazw jest skojarzony z schematu XDR.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy schemat jest w kolekcji. Jeśli tak jest, Wyświetla schemat.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny <see langword="XmlNameTable" /> używane przez <see langword="XmlSchemaCollection" /> podczas ładowania nowej schematów.</summary>
        <value>
          <see langword="XmlNameTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablicy na skopiowanie obiekty.</param>
        <param name="index">Indeks w <c>tablicy</c> gdy rozpocznie się kopiowanie.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Xml.Schema.XmlSchemaCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
        <value>Zwraca liczbę elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Xml.Schema.XmlSchemaCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
        <value>Zwraca <see langword="true" /> Jeśli kolekcja jest synchronizowane, w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Xml.Schema.XmlSchemaCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
        <value>Zwraca <see cref="P:System.Collections.ICollection.SyncRoot" /> obiekt, który może służyć do synchronizujący dostęp do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Xml.Schema.XmlSchemaCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
        <returns>Zwraca <see cref="T:System.Collections.IEnumerator" /> dla kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Xml.Schema.XmlSchemaCollection> wystąpienia jest rzutowane na <xref:System.Collections.IEnumerable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia program obsługi zdarzeń dla odbieranie informacji o schematu XDR i XML błędy sprawdzania poprawności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia te występują po dodaniu do kolekcji schematów. Jeśli program obsługi zdarzeń nie zostanie podany, <xref:System.Xml.Schema.XmlSchemaException> jest zgłaszany na wszystkie błędy weryfikacji gdzie <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A> jest `XmlSeverityType.Error`. Aby określić program obsługi zdarzeń, zdefiniować funkcję wywołania zwrotnego i dodać go do `ValidationEventHandler`.  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaCollection> Klasy jest przestarzała w programie .NET Framework w wersji 2.0 i zostało zastąpione przez <xref:System.Xml.Schema.XmlSchemaSet> klasy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić programu obsługi zdarzeń do obsługi nieprawidłowych schematów XML.  
  
 [!code-cpp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CPP/schemaevent.cpp#1)]
 [!code-csharp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CS/schemaevent.cs#1)]
 [!code-vb[XmlSchema.ValidationEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchema.ValidationEventHandler/VB/schemaevent.vb#1)]  
  
 Powyższy przykład używa pliku `invalid.xsd` jako dane wejściowe.  
  
 [!code-xml[XmlSchema.ValidationEventHandler#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchema.ValidationEventHandler/XML/invalid.xsd#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>