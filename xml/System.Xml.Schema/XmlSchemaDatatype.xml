<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="627c6b1a8a42922f5afac39c897b465bff6b350a" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39968886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <TypeSignature Language="F#" Value="type XmlSchemaDatatype = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> Klasa jest klasą abstrakcyjną dla mapowania typów języka (XSD) definicji schematu XML na typy środowiska uruchomieniowego języka wspólnego (CLR).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Xml.Schema.XmlSchemaDatatype> klasy.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Następujący plik XML jest używany w poprzednim przykładzie kodu.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływany przez Konstruktory klasy pochodnej do zainicjowania stanu, w tym typie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konwertuje wartość określona, którego typem jest jeden prawidłowy reprezentacje środowiska uruchomieniowego języka wspólnego (CLR) typ schematu XML reprezentowany przez <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, na inną prawidłową CLR reprezentacja taką samą wartość.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type -&gt; obj&#xA;override this.ChangeType : obj * Type -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">Wartość wejściowa do przekonwertowania na określonego typu.</param>
        <param name="targetType">Typ docelowy, aby przekonwertować wartość wejściowa do.</param>
        <summary>Konwertuje wartość określona, którego typem jest jeden prawidłowy reprezentacje środowiska uruchomieniowego języka wspólnego (CLR) typ schematu XML reprezentowany przez <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, do typu CLR określonego.</summary>
        <returns>Przekonwertowana wartości wejściowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat typu obsługi w <xref:System.Xml?displayProperty=nameWithType> klasy i konwersji typów danych XML, zobacz [typu obsługi w ramach klas zestawu System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) tematu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Object" /> Lub <see cref="T:System.Type" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Typ reprezentowany przez <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> nie obsługuje konwersji z typu wartości określonej na typ określony.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="value">Wartość wejściowa do przekonwertowania na określonego typu.</param>
        <param name="targetType">Typ docelowy, aby przekonwertować wartość wejściowa do.</param>
        <param name="namespaceResolver">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> Używany do rozpoznawania prefiksy przestrzeni nazw. Jest to tylko użytkowania Jeśli <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> reprezentuje typu xs:QName lub pochodzić od niego.</param>
        <summary>Konwertuje wartość określona, którego typem jest jeden prawidłowy reprezentacje środowiska uruchomieniowego języka wspólnego (CLR) typ schematu XML reprezentowany przez <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, na typ CLR określony za pomocą <see cref="T:System.Xml.IXmlNamespaceResolver" /> Jeśli <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> reprezentuje xs:QName Typ lub typ pochodzić od niego.</summary>
        <returns>Przekonwertowana wartości wejściowej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat typu obsługi w <xref:System.Xml?displayProperty=nameWithType> klasy i konwersji typów danych XML, zobacz [typu obsługi w ramach klas zestawu System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) tematu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Object" /> Lub <see cref="T:System.Type" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Typ reprezentowany przez <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> nie obsługuje konwersji z typu wartości określonej na typ określony.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool&#xA;override this.IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool" Usage="xmlSchemaDatatype.IsDerivedFrom datatype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" />
      </Parameters>
      <Docs>
        <param name="datatype">
          <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
        <summary>
          <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> Metoda zawsze zwraca <see langword="false" />.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="s">
          <see langword="string" /> Na potrzeby sprawdzania poprawności typu prostego.</param>
        <param name="nameTable">
          <see cref="T:System.Xml.XmlNameTable" /> Na potrzeby polecenie rozproszenie podczas analizowania <see langword="string" /> Jeśli <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> obiekt reprezentuje typ xs:NCName.</param>
        <param name="nsmgr">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> Obiekt ma być używany podczas analizowania <see langword="string" /> Jeśli <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> obiekt reprezentuje typ xs:QName.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, sprawdza poprawność <see langword="string" /> określone dla typu prostego wbudowany lub zdefiniowany przez użytkownika.</summary>
        <returns>
          <see cref="T:System.Object" /> , Może być bezpiecznie umieszczona typ zwracany przez <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> Metoda sprawdza `string` określone dla typu prostego wbudowany lub zdefiniowany przez użytkownika. Na przykład, jeśli <xref:System.Xml.Schema.XmlSchemaDatatype> reprezentuje typu xs: Date, a następnie wystąpienie <xref:System.DateTime> jest zwracana.  
  
 Poniżej przedstawiono czynności wykonywane podczas <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> metody procesu weryfikacji.  
  
1.  Konwertuj wartość określona jako `string` wpisz do jego odpowiedniego Common Language Runtime (CLR).  
  
2.  Sprawdź, czy wartość nie naruszają wszystkie aspekty zdefiniowany dla typu prostego.  
  
 Przekonwertowana wartości jest zwracany jako <xref:System.Object> i może być bezpiecznie rzutowany na typ zwracany przez <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> właściwości.  
  
 Gdy <xref:System.Xml.Schema.XmlSchemaDatatype> obiekt reprezentuje typ listy danych wejściowych `string` wartość jest konwertowana do listy co najmniej jeden obiekt. Gdy <xref:System.Xml.Schema.XmlSchemaDatatype> obiekt reprezentuje typ listy, zostanie podjęta próba można przeanalizować wartości wejściowej jako typ elementu Członkowskiego Unii. Jeśli próba analizy nie powiedzie się, konwersja zostanie podjęta przy użyciu następny element członkowski Unii aż do analizy zakończy się pomyślnie lub nie ma żadnych typów elementu członkowskiego do analizy. Jeśli analizy zakończy się niepowodzeniem, zwracany jest wyjątek.  
  
   
  
## Examples  
 Poniższy przykład pobiera `LotteryNumber` typu prostego z pliku example.xsd jako <xref:System.Xml.Schema.XmlSchemaSimpleType> i następnie weryfikuje `string` wartość `5` przy użyciu <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> metody.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Następujący plik XML jest używany w poprzednim przykładzie kodu.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Wartość wejściowa nie jest prawidłowym wystąpieniem ten typ schematu XML W3C.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość do analizowania nie może być <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As XmlNamespaceManager) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.XmlNamespaceManager -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="nameTable">To be added.</param>
        <param name="nsmgr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenizedType : System.Xml.XmlTokenizedType" Usage="System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera typ <see langword="string" /> wyszczególnione w sieci World Wide Web Consortium (W3C) XML 1.0 specyfikacji.</summary>
        <value>
          <see cref="T:System.Xml.XmlTokenizedType" /> Wartość <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia `string` powinny być odczytywane jako określonego XML typu, na przykład typ sekcji CDATA.  
  
 W poniższej tabeli przedstawiono typy tokenów.  
  
|XmlTokenizedType|Opis|  
|----------------------|-----------------|  
|`CDATA`|Typu CDATA|  
|`ID`|Typ Identyfikatora|  
|`IDREF`|IDREF typu|  
|`IDREFS`|Typ IDREFS|  
|`ENTITY`|Typ jednostki|  
|`ENTITIES`|Typ jednostki|  
|`NMTOKEN`|Typ NMTOKEN|  
|`NMTOKENS`|Typ NMTOKENS|  
|`NOTATION`|Typ NOTACJI|  
|`ENUMERATION`|Typ WYLICZENIOWY|  
|`QName`|Typu QName|  
|`NCName`|Typ NCName|  
|`None`|Brak typu|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : System.Xml.Schema.XmlTypeCode" Usage="System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Xml.Schema.XmlTypeCode" /> wartość dla typu prostego.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlTypeCode" /> Wartość dla typu prostego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista schematu XML W3C typów, takie jak xs:ENTITIES, xs:NMTOKENS i xs:IDREFS nie są reprezentowane przez <xref:System.Xml.Schema.XmlTypeCode> wyliczenia. Zamiast tego są one reprezentowane przez <xref:System.Xml.Schema.XmlTypeCode> wartości dla typów xs:ENTITY, xs:NMTOKEN i xs:IDREF z <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> właściwość <xref:System.Xml.Schema.XmlSchemaDatatype> równa obiektu <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.  
  
> [!NOTE]
>  Xs:anySimpleType i xs: anyType typy nie są reprezentowane przez <xref:System.Xml.Schema.XmlTypeCode> wyliczenia. Są one reprezentowane w <xref:System.Xml.Schema.XmlSchemaDatatype> obiekt z <xref:System.Xml.Schema.XmlTypeCode> o wartości <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> dla xs:anySimpleType lub <xref:System.Xml.Schema.XmlTypeCode.Item> dla xs: AnyType.  
  
   
  
## Examples  
 Na przykład <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> właściwości, zobacz <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera typ środowiska uruchomieniowego języka wspólnego (CLR) elementu.</summary>
        <value>Typ środowiska uruchomieniowego języka wspólnego (CLR) elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> Właściwości pobiera typ CLR elementu. Na przykład elementu typu `xs:int` miałby <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> z <xref:System.Int32> domyślnie. Jednak <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> może być dowolny prawidłowy typy, które mogą być mapowane na `xs:int`, takich jak <xref:System.Int16> lub <xref:System.Double>.  
  
 Aby uzyskać więcej informacji na temat typu obsługi w <xref:System.Xml?displayProperty=nameWithType> przestrzeni nazw, zobacz [typu obsługi w ramach klas zestawu System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).  
  
   
  
## Examples  
 Na przykład <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> właściwości, zobacz <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberSignature Language="F#" Value="member this.Variety : System.Xml.Schema.XmlSchemaDatatypeVariety" Usage="System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> wartość dla typu prostego.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> Wartość dla typu prostego.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>