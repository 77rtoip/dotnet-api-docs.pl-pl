<Type Name="XmlSchemaValidator" FullName="System.Xml.Schema.XmlSchemaValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc12cfc523da976a78abb9032b92b71add9d9d02" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69441091" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaValidator sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje aparat walidacji schematu definicji schematu XML (XSD). <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> Klasa nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> - Nie używaj schematów z nieznanych lub niezaufanych źródeł lub lokalizacji. Takie działanie spowoduje naruszenie zabezpieczeń kodu.
> - Schematy XML (w tym schematy wbudowane) są podatne na ataki typu "odmowa usługi"; nie Akceptuj ich w scenariuszach niezaufanych.
> - Komunikaty o błędach i wyjątki dotyczące sprawdzania poprawności schematu mogą ujawniać poufne informacje o modelu zawartości lub ścieżkach URI do pliku schematu. Należy zachować ostrożność, aby nie ujawniać tych informacji osobom niezaufanym wywołującym.
  
 <xref:System.Xml.Schema.XmlSchemaValidator> Klasa zapewnia wydajny mechanizm o wysokiej wydajności służący do sprawdzania poprawności danych XML w schematach XML w sposób oparty na wypychaniu. Na przykład <xref:System.Xml.Schema.XmlSchemaValidator> Klasa pozwala na sprawdzenie poprawności sprawdzonych XML, bez konieczności serializacji go jako dokumentu XML, a następnie ponowne przeanalizowanie dokumentu przy użyciu walidacji kodu XML. <xref:System.Xml.Schema.XmlSchemaValidator> Klasy można również użyć do kompilowania aparatów walidacji za pośrednictwem niestandardowych źródeł danych XML lub jako sposób tworzenia walidacji składnika zapisywania XML.  
  
 Aby uzyskać więcej informacji na <xref:System.Xml.Schema.XmlSchemaValidator> temat klasy, zobacz temat [Walidacja oparta na XmlSchemaValidator push](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) .  
  
> [!IMPORTANT]
> Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawionejakodomyślne.<xref:System.Xml.Schema.XmlSchemaValidator> <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Ponadto Właściwość <xref:System.Xml.Schema.XmlSchemaValidator> obiektu jest`null` domyślnie. W efekcie schematy zewnętrzne, do których odwołują się elementy include, Imports lub Defined, nie są domyślnie rozwiązywane.   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6">Weryfikacja oparta na wypchnięciach przy użyciu klasy XmlSchemaValidator</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.IXmlNamespaceResolver namespaceResolver, valuetype System.Xml.Schema.XmlSchemaValidationFlags validationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable, schemas As XmlSchemaSet, namespaceResolver As IXmlNamespaceResolver, validationFlags As XmlSchemaValidationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaValidator(System::Xml::XmlNameTable ^ nameTable, System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::Xml::Schema::XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaValidator : System.Xml.XmlNameTable * System.Xml.Schema.XmlSchemaSet * System.Xml.IXmlNamespaceResolver * System.Xml.Schema.XmlSchemaValidationFlags -&gt; System.Xml.Schema.XmlSchemaValidator" Usage="new System.Xml.Schema.XmlSchemaValidator (nameTable, schemas, namespaceResolver, validationFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="validationFlags" Type="System.Xml.Schema.XmlSchemaValidationFlags" />
      </Parameters>
      <Docs>
        <param name="nameTable"><see cref="T:System.Xml.XmlNameTable" /> Obiekt zawierający nazwy elementów i atrybutów jako ciągi atomowe.</param>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający schematy języka definicji schematu XML (XSD) używane na potrzeby walidacji.</param>
        <param name="namespaceResolver"><see cref="T:System.Xml.IXmlNamespaceResolver" /> Obiekt używany do rozpoznawania przestrzeni nazw napotkanych podczas walidacji.</param>
        <param name="validationFlags"><see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> Wartość określająca opcje walidacji schematu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> pod uwagę podczas korzystania z konstruktora.  
  
-   Zawartość <xref:System.Xml.Schema.XmlSchemaSet> parametru jest kopiowana do <xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> obiektu wewnętrznego po ustawieniu opcji lub walidacji.<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> W efekcie zmiany wprowadzone w obiekcie wejściowym <xref:System.Xml.Schema.XmlSchemaSet> podczas weryfikacji nie wpływają na wynik walidacji.  
  
-   Jeśli określony <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> parametr nie jest kompilowany, jego Metoda jest wywoływana. <xref:System.Xml.Schema.XmlSchemaSet>  
  
-   Parametr jest szczególnie istotny dla walidacji `xs:QName` typów. <xref:System.Xml.IXmlNamespaceResolver> Klasa nie kopiuje przestrzeni nazw znajdujących się w zakresie z obiektu <xref:System.Xml.IXmlNamespaceResolver> , ale zamiast tego zawiera odwołanie do niego. <xref:System.Xml.Schema.XmlSchemaValidator> Pozwala to na dodanie nowych przestrzeni nazw do <xref:System.Xml.IXmlNamespaceResolver> obiektu w trakcie procesu walidacji.  
  
> [!IMPORTANT]
>  Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawionejakodomyślne.<xref:System.Xml.Schema.XmlSchemaValidator> <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Ponadto Właściwość <xref:System.Xml.Schema.XmlSchemaValidator> obiektu jest`null` domyślnie. W efekcie schematy zewnętrzne, do których odwołują się elementy include, Imports lub Defined, nie są domyślnie rozwiązywane.  
  
   
  
## Examples  
 Aby zapoznać się z <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> przykładem konstruktora, zobacz temat informacje o <xref:System.Xml.Schema.XmlSchemaValidator> klasie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Co najmniej jeden z określonych parametrów jest <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">Wystąpił błąd podczas kompilowania schematów w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> parametrze.</exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="AddSchema">
      <MemberSignature Language="C#" Value="public void AddSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSchema (schema As XmlSchema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSchema(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.AddSchema : System.Xml.Schema.XmlSchema -&gt; unit" Usage="xmlSchemaValidator.AddSchema schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><see cref="T:System.Xml.Schema.XmlSchema" /> Obiekt do dodania do zestawu schematów używanych do walidacji.</param>
        <summary>Dodaje schemat języka definicji schematu XML (XSD) do zestawu schematów używanych do walidacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> pod uwagę podczas korzystania z metody.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> Metoda może służyć do symulowania efektu napotkania wbudowanego schematu XML w dokumencie XML, który jest sprawdzany.  
  
-   Docelowa przestrzeń nazw <xref:System.Xml.Schema.XmlSchema> parametru nie może być zgodna z elementem lub atrybutem już napotkanym <xref:System.Xml.Schema.XmlSchemaValidator> przez obiekt.  
  
-   Jeśli opcja <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> walidacji nie jest ustawiona, metoda nie wykonuje żadnych operacji. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Określony parametr ma wartość <see langword="null" />. <see cref="T:System.Xml.Schema.XmlSchema" /></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Docelowa przestrzeń nazw <see cref="T:System.Xml.Schema.XmlSchema" /> parametru jest zgodna z dowolnym elementem lub atrybutem już napotkanym <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> przez obiekt.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><see cref="T:System.Xml.Schema.XmlSchema" /> Parametr jest nieprawidłowy.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="EndValidation">
      <MemberSignature Language="C#" Value="public void EndValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndValidation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndValidation();" />
      <MemberSignature Language="F#" Value="member this.EndValidation : unit -&gt; unit" Usage="xmlSchemaValidator.EndValidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Końcowa weryfikacja i sprawdza ograniczenia tożsamości dla całego dokumentu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zatrzymuje walidację i sprawdza ograniczenia tożsamości dla całego dokumentu XML, <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> Jeśli opcja walidacji jest ustawiona. <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">W dokumencie XML znaleziono błąd ograniczenia tożsamości.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedAttributes () As XmlSchemaAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaAttribute ^&gt; ^ GetExpectedAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedAttributes : unit -&gt; System.Xml.Schema.XmlSchemaAttribute[]" Usage="xmlSchemaValidator.GetExpectedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAttribute[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca oczekiwane atrybuty kontekstu bieżącego elementu.</summary>
        <returns>Tablica <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> obiektów lub tablica pusta, jeśli nie ma oczekiwanych atrybutów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> pod uwagę podczas korzystania z metody.  
  
-   Jeśli metoda jest wywoływana natychmiast <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> po metodzie, zwracane są wszystkie atrybuty, które mogą pojawić się w dokumencie XML. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A>  
  
-   Jeśli metoda jest wywoływana po jednym lub większej liczbie wywołań <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> metody, zwracane są atrybuty, które nie zostały jeszcze zweryfikowane dla bieżącego elementu. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedParticles">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedParticles () As XmlSchemaParticle()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaParticle ^&gt; ^ GetExpectedParticles();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedParticles : unit -&gt; System.Xml.Schema.XmlSchemaParticle[]" Usage="xmlSchemaValidator.GetExpectedParticles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca oczekiwane cząstki w bieżącym kontekście elementu.</summary>
        <returns>Tablica <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> obiektów lub tablica pusta, jeśli nie ma oczekiwanych cząstek.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prawidłowe cząstki, które mogą być zwracane przez <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> metodę, są wystąpieniami <xref:System.Xml.Schema.XmlSchemaElement> klas <xref:System.Xml.Schema.XmlSchemaAny> i.  
  
 Gdy compositor dla modelu zawartości to `xs:sequence`, zwracana jest tylko Następna cząstka w sekwencji. Jeśli compositor dla modelu zawartości to `xs:all` `xs:choice`lub a, zwracane są wszystkie prawidłowe cząstki, które mogą się pojawić w kontekście bieżącego elementu.  
  
 Na przykład, w schemacie języka definicji schematu XML (XSD) i w poniższym dokumencie XML po walidacji `book` elementu `book` element jest bieżącym kontekstem elementu. Metoda zwraca tablicę zawierającą pojedynczy <xref:System.Xml.Schema.XmlSchemaElement> obiekt reprezentujący `title` element. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> Gdy kontekst walidacji jest `title` elementem <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> , metoda zwraca pustą tablicę. `description` <xref:System.Xml.Schema.XmlSchemaElement> `description` `title` Jeśli metoda jest wywoływana po sprawdzeniu elementu, ale przed zweryfikowaniem elementu, zwraca tablicę zawierającą pojedynczy obiekt reprezentujący element. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> Jeśli metoda jest wywoływana po sprawdzeniu `description` elementu, zwraca tablicę zawierającą pojedynczy <xref:System.Xml.Schema.XmlSchemaAny> obiekt reprezentujący symbol wieloznaczny. <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A>  
  
```vb  
Dim reader As XmlReader =  XmlReader.Create("input.xml")   
  
Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   
schemaSet.Add(Nothing, "schema.xsd")  
Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   
  
Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  
validator.Initialize()  
  
validator.ValidateElement("book", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("title", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
validator.ValidateEndElement(Nothing)  
  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("description", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  
    Console.WriteLine(particle.GetType())  
Next  
  
validator.ValidateElement("namespace", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlReader reader = XmlReader.Create("input.xml");  
  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize();  
  
validator.ValidateElement("book", "", null);  
  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("title", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("description", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())  
{  
    Console.WriteLine(particle.GetType());  
}  
  
validator.ValidateElement("namespace", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
validator.ValidateEndElement(null);  
```  
  
 Przykład pobiera następujący kod XML jako dane wejściowe.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="book">`  
  
 `<xs:complexType>`  
  
 `<xs:sequence>`  
  
 `<xs:element name="title" type="xs:string" />`  
  
 `<xs:element name="description" type="xs:string" />`  
  
 `<xs:any processContents ="lax"/>`  
  
 `</xs:sequence>`  
  
 `</xs:complexType>`  
  
 `</xs:element>`  
  
 `</xs:schema>`  
  
 Przykład pobiera następujący schemat XSD jako dane wejściowe.  
  
 `<book>`  
  
 `<title>My Book</title>`  
  
 `<description>My Book's Description</description>`  
  
 `<namespace>System.Xml.Schema</namespace>`  
  
 `</book>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaParticle" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAny" />
      </Docs>
    </Member>
    <Member MemberName="GetUnspecifiedDefaultAttributes">
      <MemberSignature Language="C#" Value="public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetUnspecifiedDefaultAttributes(class System.Collections.ArrayList defaultAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUnspecifiedDefaultAttributes (defaultAttributes As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetUnspecifiedDefaultAttributes(System::Collections::ArrayList ^ defaultAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetUnspecifiedDefaultAttributes : System.Collections.ArrayList -&gt; unit" Usage="xmlSchemaValidator.GetUnspecifiedDefaultAttributes defaultAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAttributes" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="defaultAttributes">Element <see cref="T:System.Collections.ArrayList" /> do wypełnienia z <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> obiektami dla wszystkich atrybutów, które nie zostały jeszcze napotkane podczas walidacji w kontekście elementu.</param>
        <summary>Sprawdza poprawność ograniczeń tożsamości dla atrybutów domyślnych i wypełnia <see cref="T:System.Collections.ArrayList" /> określone za pomocą <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> obiektów dla wszelkich atrybutów z wartościami domyślnymi, które nie <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> zostały wcześniej zweryfikowane przy użyciu metody w elemencie. Context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda musi być wywoływana po walidacji wszystkich atrybutów dla bieżącego elementu <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> przy użyciu metody. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> Metoda powinna służyć do określenia, jakie atrybuty domyślne mają zostać wstawione do zweryfikowanego dokumentu XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje stan <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="xmlSchemaValidator.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje stan <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> jest prawidłowa tylko wtedy, gdy jest wywoływana natychmiast po konstrukcji <xref:System.Xml.Schema.XmlSchemaValidator> obiektu <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>lub po wywołaniu metody.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywołanie metody jest prawidłowe bezpośrednio po konstrukcji <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiektu <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> lub po wywołaniu tylko. <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /></exception>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Xml.Schema.XmlSchemaObject partialValidationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (partialValidationType As XmlSchemaObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Xml::Schema::XmlSchemaObject ^ partialValidationType);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Xml.Schema.XmlSchemaObject -&gt; unit" Usage="xmlSchemaValidator.Initialize partialValidationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
      </Parameters>
      <Docs>
        <param name="partialValidationType">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, lub <see cref="T:System.Xml.Schema.XmlSchemaType" /> używanydoinicjowaniakontekstuwalidacjiobiektudlaczęściowej<see cref="T:System.Xml.Schema.XmlSchemaValidator" /> walidacji.</param>
        <summary>Inicjuje stan <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiektu <see cref="T:System.Xml.Schema.XmlSchemaObject" /> przy użyciu określonego do weryfikacji częściowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda, która <xref:System.Xml.Schema.XmlSchemaObject> przyjmuje<xref:System.Xml.Schema.XmlSchemaValidator> jako parametr inicjuje obiekt do stanu początkowego dla częściowej walidacji. <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Xml.Schema.XmlSchemaObject> jest inicjowane dla częściowej walidacji <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> przy użyciu metody. <xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> <xref:System.Xml.Schema.XmlSchemaObjectTable> <xref:System.Xml.XmlQualifiedName> Element schematu jest przesyłany przez wybranie elementu schematu w kolekcji zwróconej przez właściwość obiektu. `orderNumber` Następnie <xref:System.Xml.Schema.XmlSchemaValidator> obiekt sprawdza poprawność tego określonego elementu.  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "schema.xsd")  
schemaSet.Compile()  
Dim nameTable As NameTable = New NameTable()  
Dim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
  
Dim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  
validator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName("orderNumber")))  
  
validator.ValidateElement("orderNumber", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateText("123")  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
schemaSet.Compile();  
NameTable nameTable = new NameTable();  
XmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName("orderNumber")]);  
  
validator.ValidateElement("orderNumber", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateText("123");  
validator.ValidateEndElement(null);  
```  
  
 Przykład pobiera Poniższy schemat XML jako dane wejściowe.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="orderNumber" type="xs:int" />`  
  
 `</xs:schema>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywołanie metody jest prawidłowe bezpośrednio po konstrukcji <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiektu <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> lub po wywołaniu tylko. <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /></exception>
        <exception cref="T:System.ArgumentException">Parametr nie jest obiektem <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> <see cref="T:System.Xml.Schema.XmlSchemaType" />,,ani. <see cref="T:System.Xml.Schema.XmlSchemaElement" /> <see cref="T:System.Xml.Schema.XmlSchemaObject" /></exception>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <see cref="T:System.Xml.Schema.XmlSchemaObject" /></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaObject" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
      </Docs>
    </Member>
    <Member MemberName="LineInfoProvider">
      <MemberSignature Language="C#" Value="public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.IXmlLineInfo LineInfoProvider" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property LineInfoProvider As IXmlLineInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::IXmlLineInfo ^ LineInfoProvider { System::Xml::IXmlLineInfo ^ get(); void set(System::Xml::IXmlLineInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineInfoProvider : System.Xml.IXmlLineInfo with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.IXmlLineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje o numerze wiersza dla zweryfikowanego węzła XML.</summary>
        <value><see cref="T:System.Xml.IXmlLineInfo" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Informacje o wierszu są zgłaszane przez <xref:System.Xml.Schema.XmlSchemaValidationException> wszystkie zgłoszone podczas procesu walidacji.  
  
-   Obiekt domyślny <xref:System.Xml.IXmlLineInfo> <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> zwracany przez <xref:System.Xml.IXmlLineInfo.LinePosition%2A> Właściwość zwraca wartość 0 dla właściwości i.<xref:System.Xml.IXmlLineInfo.LineNumber%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="SkipToEndElement">
      <MemberSignature Language="C#" Value="public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToEndElement (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.SkipToEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.SkipToEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawiane w przypadku pomyślnego pominięcia zawartości bieżącego elementu. Ten parametr może być <see langword="null" />.</param>
        <summary>Pomija sprawdzanie poprawności zawartości bieżącego elementu i przygotowuje <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiekt do walidacji zawartości w kontekście elementu nadrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda pomija sprawdzanie poprawności zawartości bieżącego elementu i przygotowuje <xref:System.Xml.Schema.XmlSchemaValidator> obiekt do walidacji zawartości w kontekście elementu nadrzędnego; jest to równoznaczne z pominięciem walidacji dla wszystkich elementów podrzędnych bieżącego elementu, a następnie <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> Wywoływanie <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> metody.  
  
-   Jeśli bieżący element zawartości zostanie pomyślnie pominięty, <xref:System.Xml.Schema.XmlSchemaInfo> właściwość obiektu (jeśli jest określona) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
> [!NOTE]
>  Błędy sprawdzania poprawności nie są raportowane dla pominiętej zawartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład wywoływanie <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> po wywołaniu <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia źródłowy identyfikator URI dla zweryfikowanego węzła XML.</summary>
        <value>Obiekt reprezentujący źródłowy identyfikator URI dla zweryfikowanego węzła XML; wartość domyślna to <see langword="null" />. <see cref="T:System.Uri" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Źródłowy identyfikator URI jest raportowany przez <xref:System.Xml.Schema.XmlSchemaValidationException> wszystkie zgłoszone podczas procesu walidacji.  
  
-   Jeśli właściwość nie jest ustawiona, nazwa pliku dokumentu XML jest <xref:System.String.Empty> w komunikatach o błędach walidacji. <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza poprawność atrybutu w bieżącym kontekście elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, string attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As String, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::String ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * string * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu do zweryfikowania.</param>
        <param name="namespaceUri">Identyfikator URI przestrzeni nazw atrybutu do zweryfikowania.</param>
        <param name="attributeValue">Wartość atrybutu do zweryfikowania.</param>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji atrybutu. Ten parametr może być <see langword="null" />.</param>
        <summary>Sprawdza poprawność nazwy atrybutu, identyfikatora URI przestrzeni nazw i wartości w kontekście bieżącego elementu.</summary>
        <returns>Wartość zweryfikowanego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda musi być wywoływana po walidacji wszystkich atrybutów dla bieżącego elementu <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> przy użyciu metody. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   Jeśli obiekt został przekazano <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> do metody, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> Metoda sprawdza poprawność atrybutu względem <xref:System.Xml.Schema.XmlSchemaAttribute> obiektu. <xref:System.Xml.Schema.XmlSchemaAttribute>  
  
-   Jeśli atrybut został pomyślnie zweryfikowany w bieżącym kontekście <xref:System.Xml.Schema.XmlSchemaInfo> elementu, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Atrybut nie jest prawidłowy w kontekście bieżącego elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład wywoływanie <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> po wywołaniu <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Co najmniej jeden z określonych parametrów jest <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, class System.Xml.Schema.XmlValueGetter attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As XmlValueGetter, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlValueGetter ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * System.Xml.Schema.XmlValueGetter * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.Xml.Schema.XmlValueGetter" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu do zweryfikowania.</param>
        <param name="namespaceUri">Identyfikator URI przestrzeni nazw atrybutu do zweryfikowania.</param>
        <param name="attributeValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /> Używanydoprzekazywaniawartościatrybutujakotypuśrodowiskauruchomieniowegojęzykawspólnego(CLR)zgodnegoztypematrybutuXMLschematudefinicji<see langword="delegate" /> języka (XSD).</param>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji atrybutu. Ten parametr i może być <see langword="null" />.</param>
        <summary>Sprawdza poprawność nazwy atrybutu, identyfikatora URI przestrzeni nazw i wartości w kontekście bieżącego elementu.</summary>
        <returns>Wartość zweryfikowanego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda musi być wywoływana po walidacji wszystkich atrybutów dla bieżącego elementu <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> przy użyciu metody. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   Jeśli obiekt został przekazano <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> do metody, <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> Metoda sprawdza poprawność atrybutu względem <xref:System.Xml.Schema.XmlSchemaAttribute> obiektu. <xref:System.Xml.Schema.XmlSchemaAttribute>  
  
-   Jeśli atrybut został pomyślnie zweryfikowany w bieżącym kontekście <xref:System.Xml.Schema.XmlSchemaInfo> elementu, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Atrybut nie jest prawidłowy w kontekście bieżącego elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład wywoływanie <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> po wywołaniu <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Co najmniej jeden z określonych parametrów jest <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza poprawność elementu w bieżącym kontekście.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu do zweryfikowania.</param>
        <param name="namespaceUri">Identyfikator URI przestrzeni nazw elementu do zweryfikowania.</param>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji nazwy elementu. Ten parametr może być <see langword="null" />.</param>
        <summary>Sprawdza poprawność elementu w bieżącym kontekście.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> pod uwagę podczas korzystania z metody.  
  
-   Jeśli nazwa elementu zostanie <xref:System.Xml.Schema.XmlSchemaInfo> pomyślnie sprawdzona w bieżącym kontekście, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
-   Jeśli nazwa elementu lub dowolny z jego atrybutów są nieprawidłowe w bieżącym kontekście <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> , właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; w przeciwnym razie <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Nazwa elementu nie jest prawidłowa w bieżącym kontekście.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> Metoda jest wywoływana po wywołaniu <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo, xsiType As String, xsiNil As String, xsiSchemaLocation As String, xsiNoNamespaceSchemaLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::String ^ xsiType, System::String ^ xsiNil, System::String ^ xsiSchemaLocation, System::String ^ xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo * string * string * string * string -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo, xsiType, xsiNil, xsiSchemaLocation, xsiNoNamespaceSchemaLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="xsiType" Type="System.String" />
        <Parameter Name="xsiNil" Type="System.String" />
        <Parameter Name="xsiSchemaLocation" Type="System.String" />
        <Parameter Name="xsiNoNamespaceSchemaLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu do zweryfikowania.</param>
        <param name="namespaceUri">Identyfikator URI przestrzeni nazw elementu do zweryfikowania.</param>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji nazwy elementu. Ten parametr może być <see langword="null" />.</param>
        <param name="xsiType">Wartość atrybutu <c>xsi: Type</c> elementu. Ten parametr może być <see langword="null" />.</param>
        <param name="xsiNil">Wartość atrybutu <c>xsi: nil</c> elementu. Ten parametr może być <see langword="null" />.</param>
        <param name="xsiSchemaLocation">Wartość atrybutu <c>xsi: schemaLocation</c> elementu. Ten parametr może być <see langword="null" />.</param>
        <param name="xsiNoNamespaceSchemaLocation">Wartość atrybutu <c>xsi: NoNamespaceSchemaLocation</c> elementu. Ten parametr może być <see langword="null" />.</param>
        <summary>Sprawdza poprawność elementu w bieżącym kontekście za pomocą określonych wartości atrybutu <c>xsi: Type</c>, <c>xsi: nil</c>, <c>xsi: schemaLocation</c>i <c>xsi: NoNamespaceSchemaLocation</c> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> pod uwagę podczas korzystania z metody.  
  
-   Jeśli nazwa elementu zostanie <xref:System.Xml.Schema.XmlSchemaInfo> pomyślnie sprawdzona w bieżącym kontekście, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
-   Jeśli nazwa elementu lub dowolny z jego atrybutów są nieprawidłowe w bieżącym kontekście <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> , właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; w przeciwnym razie <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
-   Jeśli wartość nie została przeniesiona jako parametr <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> do konstruktora, `xsi:SchemaLocation` a `xsi:NoNamespaceSchemaLocation` wartości atrybutów są ignorowane. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Nazwa elementu nie jest prawidłowa w bieżącym kontekście.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> Metoda jest wywoływana po wywołaniu <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEndElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza, czy zawartość tekstowa elementu jest prawidłowa przy uwzględnieniu jego typu danych dla elementów z prostą zawartością i sprawdza, czy zawartość bieżącego elementu jest kompletna dla elementów z zawartością złożoną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji elementu. Ten parametr może być <see langword="null" />.</param>
        <summary>Sprawdza, czy zawartość tekstowa elementu jest prawidłowa przy uwzględnieniu jego typu danych dla elementów z prostą zawartością i sprawdza, czy zawartość bieżącego elementu jest kompletna dla elementów z zawartością złożoną.</summary>
        <returns>Przeanalizowana, wpisana wartość tekstowa elementu, jeśli element ma prostą zawartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> pod uwagę podczas korzystania z metody.  
  
-   Dla elementów z prostą zawartością <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> metoda weryfikuje, czy zawartość tekstowa elementu jest prawidłowa przy uwzględnieniu jego typu danych i zwraca przeanalizowanej wartości. Zawartość tekstowa elementu jest uzyskiwana z wyników poprzednich wywołań do <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.  
  
-   Dla elementów z zawartością złożoną <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> metoda weryfikuje, czy zawartość bieżącego elementu jest ukończona.  
  
-   Jeśli element ma wartość domyślną, wartość zwracana z <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> metody jest wartością domyślną dla elementu.  
  
-   Jeśli obiekt został skonstruowany <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> przy użyciu wartości <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> jako parametru, Metoda sprawdza reguły ograniczeń tożsamości (jeśli istnieją), które mają zastosowanie do elementu. <xref:System.Xml.Schema.XmlSchemaValidator>  
  
-   Jeśli element <xref:System.Xml.Schema.XmlSchemaInfo> zostanie pomyślnie zweryfikowany w bieżącym kontekście, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Zawartość elementu jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład, jeśli <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> Metoda jest wywoływana po wywołaniu. <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo, typedValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo * obj -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement (schemaInfo, typedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione po pomyślnej weryfikacji zawartości tekstowej elementu. Ten parametr może być <see langword="null" />.</param>
        <param name="typedValue">Wpisana zawartość tekstowa elementu.</param>
        <summary>Sprawdza, czy zawartość tekstowa określonego elementu jest prawidłowa przy uwzględnieniu jego typu danych.</summary>
        <returns>Przeanalizowana, wpisana prosta zawartość elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Jeśli sprawdzasz poprawność `xs:key`względem `xs:keyref`ograniczeń, `xs:unique` lub tożsamości, nie używaj <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> przeciążenia metody. Zamiast tego należy wywołać <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> metodę i przekazać ją do wartości elementu. Następnie Wywołaj <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Przeciążenie metody, które przyjmuje <xref:System.Xml.Schema.XmlSchemaInfo> jako argument, aby sprawdzić, czy zawartość tekstowa elementu jest prawidłowa przy uwzględnieniu jego typu danych.  
  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> pod uwagę podczas korzystania z metody.  
  
-   Dla elementów z prostą zawartością <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> metoda weryfikuje, czy zawartość tekstowa elementu jest prawidłowa przy uwzględnieniu jego typu danych i zwraca przeanalizowanej wartości. Zawartość tekstowa elementu jest uzyskiwana z zawartości z określonym typem, przekazaną jako parametr.  
  
-   Jeśli wywołania <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> metody zostały wykonane wcześniej <xref:System.InvalidOperationException> , jest zgłaszany.  
  
-   Jeśli element ma złożoną zawartość, <xref:System.InvalidOperationException> jest zgłaszany.  
  
-   Jeśli obiekt został skonstruowany <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> przy użyciu wartości <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> jako parametru, Metoda sprawdza reguły ograniczeń tożsamości (jeśli istnieją), które mają zastosowanie do elementu. <xref:System.Xml.Schema.XmlSchemaValidator>  
  
-   Jeśli element <xref:System.Xml.Schema.XmlSchemaInfo> zostanie pomyślnie zweryfikowany w bieżącym kontekście, obiekt (jeśli określony) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>i <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> właściwości są ustawione z wynikami walidacji.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Zawartość tekstu elementu jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Metoda nie została wywołana w poprawnej sekwencji (na przykład <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> Jeśli metoda jest wywoływana po wywołaniu <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), wywołania <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> metody zostały wcześniej wykonane lub element ma zawartość złożoną. <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /></exception>
        <exception cref="T:System.ArgumentNullException">Nie można <see langword="null" />wpisać parametru zawartości tekstowej.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndOfAttributes">
      <MemberSignature Language="C#" Value="public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEndOfAttributes(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEndOfAttributes (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEndOfAttributes(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndOfAttributes : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateEndOfAttributes schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Obiekt <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> , którego właściwości są ustawione w przypadku pomyślnej weryfikacji, że wszystkie wymagane atrybuty w kontekście elementu są obecne. Ten parametr może być <see langword="null" />.</param>
        <summary>Sprawdza, czy wszystkie wymagane atrybuty w kontekście elementu są obecne i przygotowuje <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiekt do zweryfikowania zawartości podrzędnej elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda powinna zawsze być wywoływana przed <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>. <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>  
  
-   <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> Metoda musi zostać wywołana przed kontynuowaniem walidacji zawartości elementu.  
  
-   Jeśli istnieją wszystkie wymagane atrybuty w kontekście elementu, <xref:System.Xml.Schema.XmlSchemaInfo> właściwość obiektu (jeśli jest określona) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> jest ustawiona na <xref:System.Xml.Schema.XmlSchemaValidity.Valid>.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Nie znaleziono co najmniej jednego z wymaganych atrybutów w bieżącym kontekście elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład wywoływanie <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> po wywołaniu <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Co najmniej jeden z określonych parametrów jest <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateText">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza, czy tekst jest dozwolony w kontekście bieżącego elementu i gromadzi tekst do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : string -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">Tekst <see langword="string" /> do walidacji w kontekście bieżącego elementu.</param>
        <summary>Sprawdza, czy określony tekst <see langword="string" /> jest dozwolony w bieżącym kontekście elementu, i gromadzi tekst do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> pod uwagę podczas korzystania z metody.  
  
-   Jeśli element ma prostą zawartość, określony tekst `string` jest dołączona <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> do każdego wywołania metody do momentu <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> wywołania metody. <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Gdy metoda jest wywoływana, cały tekst zostanie sprawdzony.  
  
-   Jeśli element ma zawartość złożoną, nie ma żadnego łączenia z tekstem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Określony tekst <see langword="string" /> jest niedozwolony w bieżącym kontekście elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> Metoda jest wywoływana po wywołaniu <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr tekstowy <see langword="string" /> nie może być <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /> Służydoprzekazywaniawartościtekstowejjakotypuaparatuplikówwykonywalnychjęzykawspólnego(CLR)zgodnegoztypemjęzykadefinicjischematuXML<see langword="delegate" /> (XSD) atrybutu.</param>
        <summary>Sprawdza, czy tekst zwracany przez <see cref="T:System.Xml.Schema.XmlValueGetter" /> określony obiekt jest dozwolony w kontekście bieżącego elementu i gromadzi tekst do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> pod uwagę podczas korzystania z metody.  
  
-   Jeśli element ma prostą zawartość, określony tekst `string` jest dołączona <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> do każdego wywołania metody do momentu <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> wywołania metody. <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Gdy metoda jest wywoływana, cały tekst zostanie sprawdzony.  
  
-   Jeśli element ma zawartość złożoną, nie ma żadnego łączenia z tekstem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Określony tekst <see langword="string" /> jest niedozwolony w bieżącym kontekście elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> Metoda jest wywoływana po wywołaniu <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr tekstowy <see langword="string" /> nie może być <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateWhitespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza, czy biały znak jest dozwolony w bieżącym kontekście elementu i gromadzi biały znak do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : string -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">Biały znak <see langword="string" /> do walidacji w bieżącym kontekście elementu.</param>
        <summary>Sprawdza, czy biały znak w <see langword="string" /> określonym jest dozwolony w bieżącym kontekście elementu i gromadzi biały znak do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Biały znak jest niedozwolony w bieżącym kontekście elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład, jeśli <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> Metoda jest wywoływana po wywołaniu. <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><see cref="T:System.Xml.Schema.XmlValueGetter" /> Używanydoprzekazywaniawartościbiałychznakówjakotypuśrodowiskauruchomieniowegojęzykawspólnego(CLR)zgodnegoztypematrybutuXMLschematudefinicji<see langword="delegate" /> języka (XSD).</param>
        <summary>Sprawdza, czy biały znak zwracany przez <see cref="T:System.Xml.Schema.XmlValueGetter" /> określony obiekt jest dozwolony w kontekście bieżącego elementu i gromadzi biały znak do walidacji, jeśli bieżący element ma prostą zawartość.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Biały znak jest niedozwolony w bieżącym kontekście elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> Metoda nie została wywołana w poprawnej sekwencji. Na przykład, jeśli <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> Metoda jest wywoływana po wywołaniu. <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /></exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Odbiera ostrzeżenia i błędy walidacji schematu ,którezostaływykrytepodczaswalidacjischematu.<see cref="T:System.Xml.Schema.ValidationEventHandler" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie <xref:System.Xml.Schema.ValidationEventHandler> jest określony <xref:System.Xml.Schema.XmlSchemaValidationException> , zostanie zgłoszony dla wszystkich <xref:System.Xml.Schema.XmlSeverityType.Error>błędów walidacji <xref:System.Xml.Schema.XmlSeverityType> schematu z wartością. Nie jest generowany dla ostrzeżeń weryfikacji <xref:System.Xml.Schema.XmlSeverityType> o wartości <xref:System.Xml.Schema.XmlSeverityType.Warning>. <xref:System.Xml.Schema.XmlSchemaValidationException>  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność `contosoBooks.xml` pliku `contosoBooks.xsd` względem schematu. W przykładzie używa <xref:System.Xml.Serialization.XmlSerializer> klasy do `contosoBooks.xml` deserializacji pliku i przekazywania wartości węzłów <xref:System.Xml.Schema.XmlSchemaValidator> do metod klasy.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 Przykład pobiera `contosoBooks.xml` plik jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 Przykład pobiera `contosoBooks.xsd` również jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventSender">
      <MemberSignature Language="C#" Value="public object ValidationEventSender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ValidationEventSender" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationEventSender As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ValidationEventSender { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationEventSender : obj with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt wysyłany jako obiekt nadawcy zdarzenia walidacji.</summary>
        <value>A; wartość domyślna to ten <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> obiekt. <see cref="T:System.Object" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Przykład zdarzenia sprawdzania poprawności znajduje się <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> w zdarzeniu.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><c></c> <c></c> <c></c> <c></c> Ustawia obiekt używany do rozpoznawania elementów xs: import i xs: include, a także atrybutów xsi: schemaLocation i xsi: noNamespaceSchemaLocation. <see cref="T:System.Xml.XmlResolver" /></summary>
        <value>Obiekt; wartość domyślna <see cref="T:System.Xml.XmlUrlResolver" /> to obiekt. <see cref="T:System.Xml.XmlResolver" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawionejakodomyślne.<xref:System.Xml.Schema.XmlSchemaValidator> <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Ponadto Właściwość <xref:System.Xml.Schema.XmlSchemaValidator> obiektu jest`null` domyślnie. W efekcie schematy zewnętrzne, do których odwołują się elementy include, Imports lub Defined, nie są domyślnie rozwiązywane.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
