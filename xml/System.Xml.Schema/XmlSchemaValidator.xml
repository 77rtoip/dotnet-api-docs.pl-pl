<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaValidator.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5593dcfff13b2f3c4579da94de3116830777dc050.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">593dcfff13b2f3c4579da94de3116830777dc050</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">Reprezentuje aparat do sprawdzania poprawności schematu języka definicji schematu XML (XSD).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class cannot be inherited.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> Klasy nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">Nie należy używać schematów z nieznaną lub niezaufaną źródeł lub lokalizacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">W ten sposób spowoduje naruszenie zabezpieczeń kodu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">Schematy XML (w tym wbudowane schematy) są z założenia podatne na ataki; nie akceptuje tych postanowień w scenariuszach niezaufanych.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">Komunikaty o błędach weryfikacji schematu i wyjątków może narazić poufnych informacji o modelu zawartości lub identyfikator URI ścieżki do pliku schematu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">Nie można więc ujawnić te informacje dotyczące obiektów wywołujących niezaufanych.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasy udostępnia mechanizm wydajne, wysokiej wydajności, aby sprawdzić poprawność danych XML względem schematów XML w sposób wypychania.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasa umożliwia sprawdzenie poprawności XML typu infoset sprawdzonych w miejscu, bez konieczności serializować go jako dokument XML i ponownej analizy dokumentu za pomocą sprawdzania poprawności modułu odczytującego XML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasa może również służyć do tworzenia aparaty sprawdzania poprawności, za pośrednictwem niestandardowych źródeł danych XML lub jako sposobu tworzenia sprawdzania poprawności Edytor XML.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> topic.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> , zobacz <bpt id="p1">[</bpt>XmlSchemaValidator wypychania weryfikacji<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> tematu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> i <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> flagi weryfikacji <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu nie są zestaw jest domyślnie.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt jest <ph id="ph3">`null`</ph> domyślnie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">W związku z tym schematów zewnętrznych, do którego odwołuje się uwzględnić, importy lub elementy ponowne definiowanie nie rozwiązane domyślnie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object containing element and attribute names as atomized strings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> Obiekt zawierający element i atrybut nazwy jako ciągi atomized.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> Obiektu zawierającego schematy języka definicji schematu XML (XSD) używany do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object used for resolving namespaces encountered during validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> Obiekt używany do rozpoznawania nazw podczas sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> value specifying schema validation options.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> Wartość określającą opcje sprawdzania poprawności schematu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter are copied into an internal <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> or the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation options are set.</source>
          <target state="translated">Zawartość <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parametru są kopiowane do wewnętrznego <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> obiektu podczas <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> lub <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> są ustawione opcje sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, changes to the input <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object during validation do not affect the outcome of validation.</source>
          <target state="translated">W związku z tym zmiany w danych wejściowych <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> obiektu podczas sprawdzania poprawności nie ma wpływu na wynik weryfikacji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter specified is not compiled, its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method is called.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> określono parametr nie jest skompilowany, jego <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parameter is especially important for validating <ph id="ph2">`xs:QName`</ph> types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> Parametr jest szczególnie ważne w przypadku sprawdzania poprawności <ph id="ph2">`xs:QName`</ph> typów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class does not copy the in-scope namespaces from the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object but instead holds a reference to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasy nie kopiuje przestrzeni nazw w zakresie od <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> obiekt, ale zamiast tego zawiera odwołanie do niej.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>This allows new namespaces to be added to the <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object during the validation process.</source>
          <target state="translated">Dzięki temu nowych przestrzeni nazw do dodania do <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> obiektu w procesie weryfikacji.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> i <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> flagi weryfikacji <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu nie są zestaw jest domyślnie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt jest <ph id="ph3">`null`</ph> domyślnie.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">W związku z tym schematów zewnętrznych, do którego odwołuje się uwzględnić, importy lub elementy ponowne definiowanie nie rozwiązane domyślnie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class reference topic.</source>
          <target state="translated">Przykład <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> konstruktora, zobacz <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> temat referencyjny klasy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Co najmniej jedna określone parametry <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An error occurred while compiling schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> parameter.</source>
          <target state="translated">Wystąpił błąd podczas kompilowania schematów w <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the set of schemas used for validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> Obiekt do dodania do zestawu schematów używany do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">Dodaje zestaw schematów używany do sprawdzania poprawności schematu języka definicji schematu XML (XSD).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> Metody można symulować efekt napotkania wbudowanego schematu XML w dokumencie XML sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parameter cannot match that of any element or attribute already encountered by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object.</source>
          <target state="translated">Docelowa przestrzeń nazw <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parametru nie może być zgodna z dowolny element lub atrybut już występujących <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> validation option is not set, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method does nothing.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> nie ustawiono opcję sprawdzania poprawności, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> — metoda nie działa.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter matches that of any element or attribute already encountered by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Docelowa przestrzeń nazw <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parametru jest zgodny ze dowolny element lub atrybut już występujących <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> Parametr jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">Kończy sprawdzania poprawności i sprawdza ograniczenia tożsamości dla całego dokumentu XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> method ends validation and checks identity constraints for the entire XML document if the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validation option is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> Metoda kończy się sprawdzanie poprawności i ograniczenia tożsamości w całym dokumencie XML sprawdza, czy <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> ustawiono opcję sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">Błąd ograniczenia tożsamości został znaleziony w dokumencie XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">Zwraca oczekiwanych atrybutów dla bieżącego kontekstu elementu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> obiektów lub pusta tablica, jeśli nie oczekiwanych atrybutów.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> metoda jest wywoływana bezpośrednio po <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> metody, zwracane są wszystkie atrybuty, które mogą występować w dokumencie XML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called after one or more calls to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> metoda jest wywoływana po wykonaniu wywołań co najmniej jeden <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody, zwracane są atrybuty, które nie zostały jeszcze zatwierdzone dla bieżącego elementu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">Zwraca oczekiwanych cząstek w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> objects or an empty array if there are no expected particles.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> obiektów lub pusta tablica, jeśli istnieją nie oczekiwano cząstek.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The valid particles that can be returned by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method are instances of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> classes.</source>
          <target state="translated">Nieprawidłowa cząstki, które mogą być zwrócone przez <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> metody są wystąpieniami klasy <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> i <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">Gdy compositor dla modelu zawartości jest <ph id="ph1">`xs:sequence`</ph>, jest zwracana tylko dalej cząstki w sekwencji.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">Jeśli compositor dla modelu zawartości jest <ph id="ph1">`xs:all`</ph> lub <ph id="ph2">`xs:choice`</ph>, a następnie zwracane są wszystkie prawidłowe cząstki, które można wykonać w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">Na przykład w języku definicji schematu XML (XSD) schematu i XML dokumentu poniżej, po weryfikacji <ph id="ph1">`book`</ph> elementu <ph id="ph2">`book`</ph> element jest bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an array containing a single <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph3">`title`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> Metoda zwraca tablicę zawierającą pojedynczy <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> reprezentujący obiekt <ph id="ph3">`title`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an empty array.</source>
          <target state="translated">Gdy jest kontekst weryfikacji <ph id="ph1">`title`</ph> elementu <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> metoda zwraca pustą tablicę.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`title`</ph> element has been validated but before the <ph id="ph3">`description`</ph> element has been validated, it returns an array containing a single <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph5">`description`</ph> element.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> metoda jest wywoływana po wykonaniu <ph id="ph2">`title`</ph> element została zweryfikowana, ale przed wysłaniem <ph id="ph3">`description`</ph> został zweryfikowany element, zwraca tablicę zawierającą pojedynczy <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> reprezentujący obiekt <ph id="ph5">`description`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`description`</ph> element has been validated then it returns an array containing a single <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> object representing the wildcard.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> metoda jest wywoływana po wykonaniu <ph id="ph2">`description`</ph> element został zweryfikowany, a następnie zwraca tablicę zawierającą pojedynczy <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> obiekt reprezentujący symbol wieloznaczny.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XML as input.</source>
          <target state="translated">Przykład przyjmuje następujące XML jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XSD schema as input.</source>
          <target state="translated">Przykład przyjmuje następujące schematu XSD jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to populate with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> Do wypełnienia z <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> obiektów wszystkich atrybutów nie została jeszcze wystąpił podczas sprawdzania poprawności w kontekście elementu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>Validates identity constraints on the default attributes and populates the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> specified with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes with default values that have not been previously validated using the <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method in the element context.</source>
          <target state="translated">Weryfikuje tożsamość ograniczenia dotyczące atrybutów domyślnych i wypełnia <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> określenia <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> obiektów wszystkich atrybutów z wartościami domyślnymi, które nie zostały wcześniej zatwierdzone przy użyciu <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> metody w elemencie kontekst.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Metoda musi zostać wywołana po sprawdzania poprawności atrybutów bieżącego elementu z <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Metodę do określenia atrybutów domyślnych ma zostać wstawiony do sprawdzania poprawności dokumentu XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicjuje stan <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicjuje stan <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method is only valid if called immediately after the construction of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object or after a call to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> Metoda jest prawidłowa, gdy wywoływana natychmiast po wykonaniu konstrukcji tylko <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu lub po wywołaniu <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> metoda jest prawidłowa, natychmiast po skonstruowaniu <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu lub po wywołaniu <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> tylko.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object used to initialize the validation context of the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object for partial validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, Lub <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> obiekt używany do inicjowania kontekst weryfikacji <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu dla częściowego sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object using the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> specified for partial validation.</source>
          <target state="translated">Inicjuje stan <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> przy użyciu <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> określony dla częściowego sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> as a parameter initializes an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to its starting state for partial validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> Metody pobierającej <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> jako parametr inicjuje <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt początkowy stan dla częściowego sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>In the following example, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> is initialized for partial validation using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> inicjowane dla przy użyciu częściowego sprawdzania poprawności <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">`orderNumber`</ph> schema element is passed by selecting the schema element by <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> collection returned by the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`orderNumber`</ph> Elementu schematu jest przekazywana przez wybranie elementu schematu przez <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> w <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> kolekcji zwróconej przez <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> właściwość <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object then validates this specific element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Obiektu następnie weryfikuje ten konkretny element.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The example takes the following XML schema as input.</source>
          <target state="translated">Przykład przyjmuje następujące schematu XML jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> metoda jest prawidłowa, natychmiast po skonstruowaniu <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu lub po wywołaniu <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> tylko.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, lub <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> Parametr nie może być <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">Pobiera lub ustawia informacje o numerach wierszy dla węzła XML sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph> Obiektu.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Line information is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">Informacje dotyczące wiersza został zgłoszony przez żadnego <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> zgłoszony w procesie weryfikacji.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>The default <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> property returns 0 for the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> properties.</source>
          <target state="translated">Wartość domyślna <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> obiektu zwróconego przez <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> właściwość zwraca wartość 0 dla <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione, jeśli pomyślnie pominięto bieżącej zawartości elementu.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Skips validation of the current element content and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate content in the parent element's context.</source>
          <target state="translated">Pomija weryfikację bieżącego elementu zawartości i przygotowuje <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu do weryfikacji zawartości w kontekście elementu nadrzędnego.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method skips validation of the current element content and prepares the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> Metody Pomija weryfikację bieżącego elementu zawartości i przygotowuje <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu sprawdzanie zawartości w kontekście elementu nadrzędnego; jest odpowiednikiem pomijanie sprawdzania poprawności dla wszystkie elementy podrzędne bieżącego elementu, a następnie wywoływanie <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the current element content is successfully skipped, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Jeśli bieżący element zawartości pomyślnie jest pominięta, <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>No validation errors are reported on skipped content.</source>
          <target state="translated">Pominięto zawartości nie zostały zgłoszone błędy nie sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Na przykład wywołanie elementu <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> po wywołaniu <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">Pobiera lub ustawia identyfikator URI źródła dla węzła XML sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object representing the source URI for the XML node being validated; the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> obiekt reprezentujący identyfikator URI źródła dla węzła XML weryfikowany; wartość domyślna to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>The source URI is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">Źródło identyfikatora URI został zgłoszony przez żadnego <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> zgłoszony w procesie weryfikacji.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> property is not set, the file name for the XML document is <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in validation error messages.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> właściwość nie jest ustawiona, to nazwa pliku dokumentu XML <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> w komunikatów o błędach weryfikacji.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the attribute in the current element context.</source>
          <target state="translated">Sprawdza poprawność atrybutu w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Lokalna nazwa atrybutu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">Identyfikator URI przestrzeni nazw atrybutu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The value of the attribute to validate.</source>
          <target state="translated">Wartość atrybutu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione w pomyślnym zweryfikowaniem atrybutu.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Weryfikuje nazwy atrybutu, identyfikator URI przestrzeni nazw i wartości w kontekście bieżącego elementu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Wartość atrybutu zweryfikowany.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Metoda musi zostać wywołana po sprawdzania poprawności atrybutów bieżącego elementu z <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> obiekt został przekazany do <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metoda sprawdza poprawność atrybutu przed <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli ten atrybut zostanie pomyślnie sprawdzony w bieżącym kontekście elementu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">Ten atrybut jest nieprawidłowy w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Na przykład wywołanie elementu <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> po wywołaniu <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Co najmniej jedna określone parametry <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Lokalna nazwa atrybutu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">Identyfikator URI przestrzeni nazw atrybutu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> <ph id="ph2">&lt;see langword="delegate" /&gt;</ph> Służy do przekazywania wartość atrybutu jako typ środowiska uruchomieniowego języka wspólnego (CLR) zgodny z typem języka definicji schematu XML (XSD) atrybutu.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione w pomyślnym zweryfikowaniem atrybutu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter and can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Weryfikuje nazwy atrybutu, identyfikator URI przestrzeni nazw i wartości w kontekście bieżącego elementu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Wartość atrybutu zweryfikowany.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Metoda musi zostać wywołana po sprawdzania poprawności atrybutów bieżącego elementu z <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> obiekt został przekazany do <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> metoda sprawdza poprawność atrybutu przed <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli ten atrybut zostanie pomyślnie sprawdzony w bieżącym kontekście elementu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">Ten atrybut jest nieprawidłowy w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Na przykład wywołanie elementu <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> po wywołaniu <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Co najmniej jedna określone parametry <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the element in the current context.</source>
          <target state="translated">Weryfikuje element w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Lokalna nazwa elementu do zweryfikowania.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">Identyfikator URI przestrzeni nazw elementu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione w pomyślnym zweryfikowaniem nazwy elementu.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the element in the current context.</source>
          <target state="translated">Weryfikuje element w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli pomyślnie sprawdzić poprawności nazwy elementu w bieżącym kontekście <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name or any of its attributes are invalid the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Jeśli nazwa elementu lub dowolny z jego atrybuty są nieprawidłowe bieżącego kontekstu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">Nazwa elementu jest nieprawidłowa w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Lokalna nazwa elementu do zweryfikowania.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">Identyfikator URI przestrzeni nazw elementu do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione w pomyślnym zweryfikowaniem nazwy elementu.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Xsi: type<ept id="p1">&lt;/c&gt;</ept> wartość elementu atrybutu.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Xsi: nil<ept id="p1">&lt;/c&gt;</ept> wartość elementu atrybutu.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Istnieją schematy<ept id="p1">&lt;/c&gt;</ept> wartość elementu atrybutu.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> wartość elementu atrybutu.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>Validates the element in the current context with the <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attribute values specified.</source>
          <target state="translated">Weryfikuje element w bieżącym kontekście z <bpt id="p1">&lt;c&gt;</bpt>xsi: type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi: nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>istnieją schematy<ept id="p3">&lt;/c&gt;</ept>, i <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> wartości określonych atrybutów.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli pomyślnie sprawdzić poprawności nazwy elementu w bieżącym kontekście <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name or any of its attributes are invalid in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Jeśli nazwa elementu lub dowolny z jego atrybuty są prawidłowe w bieżącym kontekście <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> value was not passed as a parameter to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> wartość nie została przekazana jako parametr <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> konstruktora, <ph id="ph3">`xsi:SchemaLocation`</ph> i <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> wartości atrybutów są ignorowane.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">Nazwa elementu jest nieprawidłowa w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Sprawdza, czy zawartości tekstowej elementu jest prawidłowy uwzględnieniu jego typu danych dla elementów z zawartością proste i sprawdza, czy zawartość bieżącego elementu jest pełny dla elementów z zawartością złożoną.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione w pomyślnym zweryfikowaniem elementu.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Sprawdza, czy zawartości tekstowej elementu jest prawidłowy uwzględnieniu jego typu danych dla elementów z zawartością proste i sprawdza, czy zawartość bieżącego elementu jest pełny dla elementów z zawartością złożoną.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">Przeanalizowane, wpisany tekst wartość elementu, jeśli element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Dla elementów z prostej zawartości <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda sprawdza, czy zawartości tekstowej elementu jest prawidłowa zgodnie z jego typem danych i zwraca wartość typu przeanalizowany.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The text content of the element is obtained from the results of previous calls to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</source>
          <target state="translated">Zawartości tekstowej elementu są uzyskiwane z wyników z poprzedniego wywołania <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with complex content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies if the content of the current element is complete.</source>
          <target state="translated">Dla elementów z zawartością złożoną <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda sprawdza, czy zawartość bieżącego elementu jest pełny.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element has a default value, the value returned from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is the default value for the element.</source>
          <target state="translated">Jeśli element ma wartość domyślną, wartość zwracana z <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda jest to wartość domyślna dla elementu.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt został skonstruowany przy <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> wartość jako parametr <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metody kontroli ograniczenia tożsamości zasady (jeśli istnieje), stosowane do elementu.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli element zostanie pomyślnie sprawdzony w bieżącym kontekście <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, i <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's content is not valid.</source>
          <target state="translated">Zawartość elementu jest nieprawidłowa.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione na sprawdzeniu poprawności zawartości tekstowej elementu.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content of the element.</source>
          <target state="translated">Zawartość tekstu elementu.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">Sprawdza, czy zawartości tekstowej określony element jest prawidłowy uwzględnieniu jego typu danych.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">Przeanalizowane, wpisana prostej zawartości elementu.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If you are validating against the <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, or <ph id="ph3">`xs:unique`</ph> identity constraints, do not use the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload.</source>
          <target state="translated">Jeśli jest sprawdzana poprawność przed <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, lub <ph id="ph3">`xs:unique`</ph> ograniczenia tożsamości, nie należy używać <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> przeciążenie metody.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method and pass it the value of the element.</source>
          <target state="translated">Zamiast tego wywołać <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> — metoda i przekaż go wartość elementu.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Then call the  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload, which takes <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">Następnie wywołaj <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> przeciążenie metody, która przyjmuje <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> jako argument, aby sprawdzić poprawność uwzględnieniu jego typu danych zawartości tekstowej elementu.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Dla elementów z prostej zawartości <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> metoda sprawdza, czy zawartości tekstowej elementu jest prawidłowa zgodnie z jego typem danych i zwraca wartość typu przeanalizowany.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">Zawartości tekstowej elementu są uzyskiwane z wpisaną zawartość przekazywana jako parametr.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If calls to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method have been previously made, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Jeśli wywołań <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> wcześniej wprowadzono metoda <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element has complex content an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Jeśli element ma zawartość złożoną <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt został skonstruowany przy <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> wartość jako parametr <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metody kontroli ograniczenia tożsamości zasady (jeśli istnieje), stosowane do elementu.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Jeśli element zostanie pomyślnie sprawdzony w bieżącym kontekście <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, i <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwości są ustawione z wynikami weryfikacji.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The element's text content is not valid.</source>
          <target state="translated">Zawartości tekstowej elementu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence (for example, if the <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), calls to the <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method have been previously made, or the element has complex content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> w prawidłowej sekwencji nie wywołano metody (na przykład, jeśli <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), wywołań <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> wcześniej wprowadzono metody lub element ma zawartość złożoną.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content parameter cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Parametr zawartości tekstu nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> Obiektu, którego właściwości są ustawione na pomyślne weryfikacji, czy wszystkie atrybuty wymagane w kontekście elementu znajdują się.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate the child content of the element.</source>
          <target state="translated">Sprawdza, czy wszystkie wymagane atrybuty w kontekście elementu są przedstawić i przygotowuje <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu do weryfikacji zawartość elementu podrzędnego elementu.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should always be called before <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Zawsze powinna zostać wywołana metoda <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method must be called before proceeding with validation of an element's content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> Metoda musi zostać wywołana przed kontynuowaniem weryfikacji zawartości elementu.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>If all the required attributes in the element context are present, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</source>
          <target state="translated">Jeśli podano wszystkich wymaganych atrybutów w kontekście elementu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> obiektu użytkownika (Jeśli określono) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">Nie znaleziono co najmniej jeden z wymaganych atrybutów w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Na przykład wywołanie elementu <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> po wywołaniu <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Co najmniej jedna określone parametry <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy tekst jest dozwolona w bieżącym kontekście elementu i akumuluje tekst sprawdzania poprawności, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>A text <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> do weryfikacji w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>Validates whether the text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> określony jest dozwolona w bieżącym kontekście elementu i akumuluje tekst sprawdzania poprawności, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Jeśli element ma prostej zawartości, tekst <ph id="ph1">`string`</ph> określony jest połączony na każde wywołanie <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> metody do momentu <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda jest wywoływana, cały tekst został zweryfikowany.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Jeśli element ma zawartość złożoną, występuje nie łączenia tekstu.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">Tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> określonego nie jest dozwolona w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> parametr nie może być <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> <ph id="ph2">&lt;see langword="delegate" /&gt;</ph> Służy do przekazywania wartości tekstowej jako typ środowiska uruchomieniowego języka wspólnego (CLR) zgodny z typem języka definicji schematu XML (XSD) atrybutu.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the text returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy tekst zwrócony przez <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> określony obiekt jest dozwolona w bieżącym kontekście elementu i akumuluje tekst sprawdzania poprawności, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Jeśli element ma prostej zawartości, tekst <ph id="ph1">`string`</ph> określony jest połączony na każde wywołanie <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> metody do momentu <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> metoda jest wywoływana, cały tekst został zweryfikowany.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Jeśli element ma zawartość złożoną, występuje nie łączenia tekstu.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">Tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> określonego nie jest dozwolona w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tekst <ph id="ph1">&lt;see langword="string" /&gt;</ph> parametr nie może być <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy biały znak jest dozwolona w bieżącym kontekście elementu i akumuluje biały znak w celu weryfikacji, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>A white space <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Biały znak <ph id="ph1">&lt;see langword="string" /&gt;</ph> do weryfikacji w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>Validates whether the white space in the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy biały znak miejsce w <ph id="ph1">&lt;see langword="string" /&gt;</ph> określony jest dozwolona w bieżącym kontekście elementu i akumuluje biały znak w celu weryfikacji, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Biały znak jest niedozwolone w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> <ph id="ph2">&lt;see langword="delegate" /&gt;</ph> Służy do przekazywania wartości biały znak jako typ środowiska uruchomieniowego języka wspólnego (CLR) zgodny z typem języka definicji schematu XML (XSD) atrybutu.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the white space returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Sprawdza, czy biały znak zwrócony przez <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> określony obiekt jest dozwolona w bieżącym kontekście elementu i akumuluje biały znak w celu weryfikacji, jeśli bieżący element ma prostą zawartością.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Biały znak jest niedozwolone w bieżącym kontekście elementu.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> Metoda nie została wywołana w poprawnej kolejności.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> metoda jest wywoływana po wywołaniu <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> Odbierająca schemat sprawdzania poprawności ostrzeżeń i błędów napotkanych podczas sprawdzania poprawności schematu.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is specified, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is thrown for all schema validation errors with an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">Jeśli nie <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> jest określony, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> jest generowany dla wszystkich błędów sprawdzania poprawności schematu z <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> wartość <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is not thrown for validation warnings with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> Nie zgłoszono ostrzeżeń weryfikacji z <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> wartość <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Poniższy przykład weryfikuje <ph id="ph1">`contosoBooks.xml`</ph> pliku przed <ph id="ph2">`contosoBooks.xsd`</ph> schematu.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">W przykładzie użyto <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> klasy do deserializacji <ph id="ph2">`contosoBooks.xml`</ph> plik i przekazać wartość węzłów do metody <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">Przykład przyjmuje <ph id="ph1">`contosoBooks.xml`</ph> pliku jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">Przykład również przyjmuje <ph id="ph1">`contosoBooks.xsd`</ph> jako danych wejściowych.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">Pobiera lub ustawia obiekt wysyłane jako obiekt nadawcę zdarzenia sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; the default is this <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; Domyślnie jest to <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>For an example of a validation event, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> event.</source>
          <target state="translated">Na przykład zdarzenie sprawdzania poprawności zobacz <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object used to resolve <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept> elements as well as <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> and <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attributes.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> obiekt używany do rozpoznania <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> i <bpt id="p2">&lt;c&gt;</bpt>xs: obejmują<ept id="p2">&lt;/c&gt;</ept> elementy oraz <bpt id="p3">&lt;c&gt;</bpt>istnieją schematy<ept id="p3">&lt;/c&gt;</ept> i <bpt id="p4">&lt;c&gt;</bpt>xsi: noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> atrybutów.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object; the default is an <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> Obiekt; wartość domyślna jest <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> i <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> flagi weryfikacji <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiektu nie są zestaw jest domyślnie.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> obiekt jest <ph id="ph3">`null`</ph> domyślnie.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">W związku z tym schematów zewnętrznych, do którego odwołuje się uwzględnić, importy lub elementy ponowne definiowanie nie rozwiązane domyślnie.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>