<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc99d3cc2e50bcb25b34037a9ec2f41e7e5d0c08" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414867" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML. <see cref="T:System.Xml.Schema.XmlSchemaInference" /> Klasa nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Nie używaj schematów z nieznanych lub niezaufanych źródeł lub lokalizacji. Takie działanie spowoduje naruszenie zabezpieczeń kodu.  
> -   Schematy XML (w tym schematy wbudowane) są podatne na ataki typu "odmowa usługi"; nie Akceptuj ich w scenariuszach niezaufanych.  
> -   Komunikaty o błędach i wyjątki dotyczące sprawdzania poprawności schematu mogą ujawniać poufne informacje o modelu zawartości lub ścieżkach URI do pliku schematu. Należy zachować ostrożność, aby nie ujawniać tych informacji osobom niezaufanym wywołującym.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Klasa<xref:System.Xml.Schema?displayProperty=nameWithType> w przestrzeni nazw umożliwia wywnioskowanie schematu języka definicji schematu XML (XSD) ze struktury dokumentu XML. <xref:System.Xml.Schema.XmlSchemaInference> Klasa wyprowadza schemat XML, który może sprawdzać poprawność dokumentu XML.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Klasa obsługuje standardy schematów W3C XML i XML. Można go użyć do wywnioskowania nowego schematu lub zawęzić istniejący schemat.  
  
   
  
## Examples  
 Ten przykład pobiera plik XML jako dane wejściowe i generuje schemat, który umożliwia zweryfikowanie przykładowego kodu XML.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Poniżej znajduje się wejściowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Poniżej znajduje się schemat wnioskowany z dokumentu XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Schema.XmlSchemaInference" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z określonego dokumentu XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument"><see cref="T:System.Xml.XmlReader" /> Obiekt zawierający dokument XML, z którego ma zostać wywnioskowany schemat.</param>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartego w <see cref="T:System.Xml.XmlReader" /> określonym obiekcie.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający wywnioskowane schematy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wnioskuje co najmniej jeden schemat W3C (XML Schema Definition Language) z dokumentu wystąpienia XML zawartego <xref:System.Xml.XmlReader> w określonym obiekcie. <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Jeśli dokument XML zawiera elementy i atrybuty z wielu przestrzeni nazw, generowane są wiele schematów: jeden dla każdej przestrzeni nazw używanej w dokumencie. Schemat podstawowy jest schematem, który może sprawdzać poprawność całego dokumentu XML, a jego docelowa przestrzeń nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.  
  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda ignoruje wszelkie `xsi:type`atrybuty `xsi:schemaLocation`,, `xsi:noNamespaceSchemaLocation` lub w dokumencie XML. <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>  
  
-   <xref:System.Xml.XmlReader> Jeśli obiekt jest wpisany, informacje o typie, które zawiera, są ignorowane.  
  
-   <xref:System.Xml.XmlReader> Jeśli obiekt jest umieszczony na elemencie, który nie jest elementem głównym dokumentu XML, schemat jest wywnioskowany tylko dla tego elementu. <xref:System.Xml.XmlNodeType.Element> <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReader.Read%2A> Jeśli obiekt nie jest umieszczony w elemencie, metoda jest wywoływana na parametrze do momentu napotkania elementu (na przykład jeśli jest). <xref:System.Xml.XmlReader> W tym momencie proces wnioskowania zaczyna się od tego elementu. Jeśli żaden element nie zostanie osiągnięty do końca dokumentu, <xref:System.ArgumentException> zostanie zgłoszony.  
  
   
  
## Examples  
 Ten przykład pobiera plik XML jako dane wejściowe i generuje schemat, który umożliwia zweryfikowanie przykładowego kodu XML.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Poniżej znajduje się wejściowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Poniżej znajduje się schemat wnioskowany z dokumentu XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Dokument XML nie jest poprawnie sformułowany.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><see cref="T:System.Xml.XmlReader" /> Obiekt nie jest umieszczony w węźle głównym ani w elemencie. Wystąpił błąd podczas procesu wnioskowania schematu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument"><see cref="T:System.Xml.XmlReader" /> Obiekt zawierający dokument XML, z którego ma zostać wywnioskowany schemat.</param>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający istniejący schemat służący do uściślenia wywnioskowanego schematu.</param>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartego w <see cref="T:System.Xml.XmlReader" /> określonym obiekcie i uściślije schemat wywnioskowany przy użyciu istniejącego schematu <see cref="T:System.Xml.Schema.XmlSchemaSet" /> w obiekcie określonym za pomocą tej samej docelowej przestrzeni nazw.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający wywnioskowane schematy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wnioskuje co najmniej jeden schemat W3C (XML Schema Definition Language) z dokumentu wystąpienia XML zawartego <xref:System.Xml.XmlReader> w określonym obiekcie. <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Jeśli dokument XML zawiera elementy i atrybuty z wielu przestrzeni nazw, generowane są wiele schematów: jeden dla każdej przestrzeni nazw używany w dokumencie. Schemat podstawowy jest schematem, który może sprawdzać poprawność całego dokumentu XML, a jego docelowa przestrzeń nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.  
  
 Poniżej znajdują się ważne uwagi, które należy wziąć <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> pod uwagę podczas korzystania z metody.  
  
-   Metoda ignoruje wszelkie `xsi:type`atrybuty `xsi:schemaLocation`,, `xsi:noNamespaceSchemaLocation` lub w dokumencie XML. <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>  
  
-   <xref:System.Xml.XmlReader> Jeśli obiekt jest wpisany, informacje o typie, które zawiera, są ignorowane.  
  
-   <xref:System.Xml.XmlReader> Jeśli obiekt jest umieszczony na elemencie, który nie jest elementem głównym dokumentu XML, schemat jest wywnioskowany tylko dla tego elementu. <xref:System.Xml.XmlNodeType.Element> <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReader.Read%2A> Jeśli obiekt nie jest umieszczony w elemencie, metoda jest wywoływana na parametrze do momentu napotkania elementu (na przykład jeśli jest). <xref:System.Xml.XmlReader> W tym momencie proces wnioskowania zaczyna się od tego elementu. Jeśli żaden element nie zostanie osiągnięty do końca dokumentu, <xref:System.ArgumentException> zostanie zgłoszony.  
  
-   Jeśli obiekt jest przesunięty jako parametr, a <xref:System.Xml.Schema.XmlSchemaSet>element, na którym <xref:System.Xml.XmlReader> znajduje się obiekt, jest zdefiniowany w jednym z schematów w, wnioskowany schemat jest używany <xref:System.Xml.Schema.XmlSchemaSet> do uściślenia istniejącego schematu w parametrze <xref:System.Xml.Schema.XmlSchemaSet> z tą samą docelową przestrzenią nazw; w przeciwnym razie do przestrzeni nazw zostanie wywnioskowany nowy schemat.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera dokument XML 1 jako dane wejściowe i generuje schemat, który może sprawdzić poprawność dokumentu XML 1. Przykładowy kod pobiera dokument XML 2 i udoskonala schemat wygenerowany na podstawie dokumentu XML 1, na podstawie zmian znalezionych w dokumencie XML dokumentu 2.  
  
 Poniżej znajduje się dokument XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Poniżej znajduje się dokument XML nr 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 Poniższy przykładowy kod wnioskuje schemat z pierwszego dokumentu XML zawartego w `reader`, a następnie udoskonala wnioskowany schemat z zmianami znalezionymi w drugim dokumencie XML zawartym w. `reader1` Przykładowy kod używa pierwszej przeciążonej <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metody do wywnioskowania schematu i drugiej przeciążonej <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metody, aby uściślić istniejący schemat w <xref:System.Xml.Schema.XmlSchemaSet> obiekcie.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Poniższy schemat jest schematem wywnioskowanym z dokumentu XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Poniższy schemat to elegancja wersja schematu powyżej, oparta na dokumencie XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Dokument XML nie jest poprawnie sformułowany.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><see cref="T:System.Xml.XmlReader" /> Obiekt nie jest umieszczony w węźle głównym ani w elemencie. Wystąpił błąd podczas procesu wnioskowania schematu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> wartość, która wpływa na deklaracje wystąpienia schematu wywnioskowane z dokumentu XML.</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, pierwsze elementy czasu są napotkane w dokumencie XML, Deklaracja schematu jest wywnioskowana jako `minOccurs="1"`. <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> Po napotkaniu atrybutów, Deklaracja schematu jest wywnioskowana jako `use="required"`.  
  
 Jeśli właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, deklaracje schematu elementu są wywnioskowane jako `minOccurs="0"`, a deklaracje schematu atrybutu są wywnioskowane `use="optional"`jako. <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>  
  
 Wartość <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> domyślna właściwości to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Ten przykład ilustruje sposób, w jaki ma wpływ <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> właściwość na wystąpienie. Przykładowy kod wnioskuje o wystąpienie z pliku XML na dwa różne sposoby: swobodny i ograniczony. Poniżej znajduje się przykładowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Poniższy przykładowy kod nakazuje <xref:System.Xml.Schema.XmlSchemaInference> klasie, aby w swobodny sposób wywnioskować wystąpienie elementów i atrybutów.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Ponieważ właściwość została ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, generowany jest następujący schemat. <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 W powyższym przykładzie kod, jeśli <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> właściwość nie została ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> Klasa zostałaby domyślnie <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> utworzona i wygenerowała Poniższy schemat.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> wartość, która ma wpływ na typy wywnioskowane z dokumentu XML.</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, wywnioskowany typ elementów i atrybutów w dokumencie XML o prostej zawartości jest zawsze `xs:string`. <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> `xs:date` `xs:unsignedByte` `xs:decimal`Jeśli właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, są wywnioskowane bardziej szczegółowe typy, takie jak,, i tak dalej. <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>  
  
 Wartość <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> domyślna właściwości to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Ten przykład ilustruje, <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> jak ma wpływ Właściwość wnioskowania o typie. Przykładowy kod wnioskuje typy z pliku XML na dwa różne sposoby: swobodny i ograniczony. Poniżej znajduje się przykładowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Poniższy przykładowy kod instruuje <xref:System.Xml.Schema.XmlSchemaInference> klasę do wnioskowania `xs:string` dla elementów i atrybutów z prostą zawartością.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Ponieważ właściwość została ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, generowany jest następujący schemat. <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 W powyższym przykładzie kod, jeśli <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> właściwość nie została ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> Klasa zostałaby domyślnie <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> utworzona i wygenerowała Poniższy schemat.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
