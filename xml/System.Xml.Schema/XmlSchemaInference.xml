<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42dbabff920f5482d6f67fbb43526916a3163a22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML. <see cref="T:System.Xml.Schema.XmlSchemaInference" /> Klasy nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Nie należy używać schematów z nieznaną lub niezaufaną źródeł lub lokalizacji. W ten sposób spowoduje naruszenie zabezpieczeń kodu.  
> -   Schematy XML (w tym wbudowane schematy) są z założenia podatne na ataki; nie akceptuje tych postanowień w scenariuszach niezaufanych.  
> -   Komunikaty o błędach weryfikacji schematu i wyjątków może narazić poufnych informacji o modelu zawartości lub identyfikator URI ścieżki do pliku schematu. Nie można więc ujawnić te informacje dotyczące obiektów wywołujących niezaufanych.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Klasy w <xref:System.Xml.Schema?displayProperty=nameWithType> obszar nazw pozwala na potrzeby wnioskowania dotyczącego schematu języka definicji schematu XML (XSD) ze struktury dokumentu XML. <xref:System.Xml.Schema.XmlSchemaInference> Klasy danych wyjściowych schematu XML, który można sprawdzić poprawności dokumentu XML.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Klasa obsługuje standardami W3C XML i schematów XML. Można go pobrać schematu nowego lub do zaktualizowania schematu.  
  
   
  
## Examples  
 W tym przykładzie przyjmuje jako dane wejściowe pliku XML i generuje schemat, który można sprawdzić poprawności przykład XML.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Poniżej znajduje się wejściowego pliku XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Oto schemat wywnioskować z dokumentu XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Schema.XmlSchemaInference" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML określony.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <see cref="T:System.Xml.XmlReader" /> Obiekt, który zawiera kod XML dokumentu można pobrać schematu z.</param>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartych w <see cref="T:System.Xml.XmlReader" /> określony obiekt.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający wnioskowany schematów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Metody wnioskuje jedną lub więcej schematów języka definicji schematu W3C XML (XSD) z pliku XML wystąpienia zawarte w dokumencie <xref:System.Xml.XmlReader> określony obiekt. Jeśli dokument XML zawiera elementy i atrybuty z kilku obszarów nazw, a następnie wygenerowaniu wielu schematach: jeden dla każdej przestrzeni nazw w dokumencie. Podstawowy schemat jest schemat, który można sprawdzić poprawności całego dokumentu XML, a jego docelowego obszaru nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.  
  
 Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metody.  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Metody ignoruje wszelkie `xsi:type`, `xsi:schemaLocation`, lub `xsi:noNamespaceSchemaLocation` atrybutów w dokumencie XML.  
  
-   Jeśli <xref:System.Xml.XmlReader> jest typu obiektu, informacje o typie zawiera jest ignorowane.  
  
-   Jeśli <xref:System.Xml.XmlReader> obiekt znajduje się w elemencie, który nie jest elementem głównym dokumentu w formacie XML, schemat jest wywnioskowany tylko tego elementu. Jeśli <xref:System.Xml.XmlReader> obiekt nie znajduje się w elemencie <xref:System.Xml.XmlReader.Read%2A> wywoływana jest metoda <xref:System.Xml.XmlReader> parametru aż do napotkania elementu (na przykład, gdy <xref:System.Xml.XmlReader.NodeType%2A> jest <xref:System.Xml.XmlNodeType.Element>). W tym momencie proces wnioskowania rozpoczyna się od tego elementu. Jeśli żaden element nie jest napotkane do końca dokumentu, <xref:System.ArgumentException> jest generowany.  
  
   
  
## Examples  
 W tym przykładzie przyjmuje jako dane wejściowe pliku XML i generuje schemat, który można sprawdzić poprawności przykład XML.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Poniżej znajduje się wejściowego pliku XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Oto schemat wywnioskować z dokumentu XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Dokument XML nie jest poprawnie sformułowany.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <see cref="T:System.Xml.XmlReader" /> Obiekt nie znajduje się w węźle głównym lub w elemencie. Wystąpi błąd podczas wnioskowania schematu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <see cref="T:System.Xml.XmlReader" /> Obiekt, który zawiera kod XML dokumentu można pobrać schematu z.</param>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający schematu pozwala uściślić wnioskowany schematu.</param>
        <summary>Wnioskuje schemat języka definicji schematu XML (XSD) z dokumentu XML zawartych w <see cref="T:System.Xml.XmlReader" /> obiekt określone i udoskonalanie wnioskowany schematu za pomocą schematu w <see cref="T:System.Xml.Schema.XmlSchemaSet" /> obiektu określony za pomocą tego samego docelowego obszaru nazw.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Obiekt zawierający wnioskowany schematów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Metody wnioskuje jedną lub więcej schematów języka definicji schematu W3C XML (XSD) z pliku XML wystąpienia zawarte w dokumencie <xref:System.Xml.XmlReader> określony obiekt. Jeśli dokument XML zawiera elementy i atrybuty z kilku obszarów nazw, wiele schematów są generowane: jeden dla każdej przestrzeni nazw w dokumencie. Podstawowy schemat jest schemat, który można sprawdzić poprawności całego dokumentu XML, a jego docelowego obszaru nazw jest taka sama jak przestrzeń nazw elementu dokumentu dokumentu XML.  
  
 Poniżej przedstawiono ważne uwagi, które należy wziąć pod uwagę przy użyciu <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metody.  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Metody ignoruje wszelkie `xsi:type`, `xsi:schemaLocation`, lub `xsi:noNamespaceSchemaLocation` atrybutów w dokumencie XML.  
  
-   Jeśli <xref:System.Xml.XmlReader> jest typu obiektu, informacje o typie zawiera jest ignorowane.  
  
-   Jeśli <xref:System.Xml.XmlReader> obiekt znajduje się w elemencie, który nie jest elementem głównym dokumentu w formacie XML, schemat jest wywnioskowany tylko tego elementu. Jeśli <xref:System.Xml.XmlReader> obiekt nie znajduje się w elemencie <xref:System.Xml.XmlReader.Read%2A> wywoływana jest metoda <xref:System.Xml.XmlReader> parametru aż do napotkania elementu (na przykład, gdy <xref:System.Xml.XmlReader.NodeType%2A> jest <xref:System.Xml.XmlNodeType.Element>). W tym momencie proces wnioskowania rozpoczyna się od tego elementu. Jeśli żaden element nie jest napotkane do końca dokumentu, <xref:System.ArgumentException> jest generowany.  
  
-   Jeśli <xref:System.Xml.Schema.XmlSchemaSet> obiekt został przekazany jako parametr i element, na którym <xref:System.Xml.XmlReader> obiekt znajduje się jest zdefiniowany w jednym ze schematów w <xref:System.Xml.Schema.XmlSchemaSet>, wywnioskowany schemat jest używany do zaktualizowania schematu w <xref:System.Xml.Schema.XmlSchemaSet> parametru z tego samego obszaru nazw docelowym; w przeciwnym razie nowego schematu jest wywnioskowany dla przestrzeni nazw.  
  
   
  
## Examples  
 Poniższy przykładowy kod XML dokumentu 1 jako dane wejściowe przyjmuje i generuje schemat, który można sprawdzić poprawności dokumentu XML 1. Przykładowy kod następnie pobiera dokument XML 2 i udoskonalanie schematu wygenerowane z dokumentu XML 1, na podstawie zmian w dokumencie XML 2.  
  
 Poniżej znajduje się dokumentu XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Poniżej znajduje się dokumentu XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 Poniższy przykładowy kod wnioskuje schemat z pierwszy dokument XML zawartych w `reader`, a następnie udoskonalanie schematu wnioskowany ze zmianami w drugim dokumentu XML zawartych w `reader1`. Przykład kodu wykorzystuje pierwszy przeciążony <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> przeciążonej metody na potrzeby wnioskowania dotyczącego schematu, a drugi <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodę, aby dostosować istniejący schemat w <xref:System.Xml.Schema.XmlSchemaSet> obiektu.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Następujące schemat jest schematu wywnioskować na podstawie dokumentu XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Następującego schematu jest precyzyjnych wersja schematu powyżej, na podstawie dokumentu XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Dokument XML nie jest poprawnie sformułowany.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <see cref="T:System.Xml.XmlReader" /> Obiekt nie znajduje się w węźle głównym lub w elemencie. Wystąpi błąd podczas wnioskowania schematu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> wartość, która wpływa na deklaracje wystąpienie schematu wywnioskować z dokumentu XML.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>pierwszych elementów czasu występują w dokumencie XML, deklaracja schematu jest wywnioskowany jako `minOccurs="1"`. W przypadku atrybutów są deklaracja schematu jest wywnioskowany jako `use="required"`.  
  
 Jeśli <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, deklaracji elementu schematu są wywnioskować jako `minOccurs="0"`, i atrybutu deklaracji schematów są wywnioskować jako `use="optional"`.  
  
 Wartość domyślna <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> jest właściwość <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 W tym przykładzie przedstawiono wpływ wystąpienie <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> właściwości. Przykładowy kod wnioskuje wystąpienia z pliku XML na dwa sposoby: rozluźnić i ograniczeniami. Poniżej przedstawiono przykładowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Poniższy przykładowy kod powoduje, że <xref:System.Xml.Schema.XmlSchemaInference> klasy na potrzeby wnioskowania dotyczącego wystąpienia elementów i atrybutów w sposób swobodna.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Ponieważ <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> ustawiono właściwość <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, następujący schemat został wygenerowany.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 W przykładowym kodzie przedstawionym powyżej <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> nie ustawiono właściwości <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> będzie mieć domyślnie klasy <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> i generowane następującego schematu.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> wartość, która wpływa na typy wywnioskować z dokumentu XML.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, wnioskowany typ elementów i atrybutów w dokumencie XML z prostej zawartości jest zawsze `xs:string`. Jeśli <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> właściwość jest ustawiona na <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, więcej określonych typów są wywnioskować, takich jak `xs:date`, `xs:decimal`, `xs:unsignedByte`i tak dalej.  
  
 Wartość domyślna <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> jest właściwość <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Ten przykład przedstawia, jaki jest wpływ na wnioskowanie o typie <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> właściwości. Przykładowy kod wnioskuje typów z pliku XML na dwa sposoby: rozluźnić i ograniczeniami. Poniżej przedstawiono przykładowy plik XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Poniższy przykładowy kod powoduje, że <xref:System.Xml.Schema.XmlSchemaInference> klasy w celu uwzględnienia `xs:string` elementów i atrybutów o prostej zawartości.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Ponieważ <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> ustawiono właściwość <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, następujący schemat został wygenerowany.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 W przykładowym kodzie przedstawionym powyżej <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> nie ustawiono właściwości <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> będzie mieć domyślnie klasy <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> i generowane następującego schematu.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>