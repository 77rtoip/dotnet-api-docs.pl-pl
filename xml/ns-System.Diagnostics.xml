<Namespace Name="System.Diagnostics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30745955" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Diagnostics" /> Przestrzeń nazw zawiera klasy, które umożliwiają użytkownikowi interakcję z procesami systemowymi, dziennikami zdarzeń i liczników wydajności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog> Składnik udostępnia funkcje do zapisywania dzienników zdarzeń, Odczytaj wpisy dziennika zdarzeń i tworzenie i usuwanie dzienników zdarzeń i źródła zdarzeń w sieci. <xref:System.Diagnostics.EntryWrittenEventHandler> Zapewnia sposób interakcji z dziennikami zdarzeń asynchronicznie. Klasy pomocnicze zapewniają dostęp do bardziej szczegółową kontrolę, w tym: ograniczenia uprawnień, możliwość określenia typy dziennika zdarzeń (który określa typ dane domyślne, które są zapisywane przy użyciu wpis dziennika zdarzeń) i iterowania przez kolekcje dziennika zdarzeń wpisy. Aby uzyskać więcej informacji na temat tych zadań, zobacz <xref:System.Diagnostics.EventLogPermission>, <xref:System.Diagnostics.EventLogEntryType>, i <xref:System.Diagnostics.EventLogEntryCollection> klasy.  
  
-   <xref:System.Diagnostics.Process> Klasa oferuje funkcje monitorowania procesy systemowe przez sieć i uruchamiać i zatrzymywać procesy systemu lokalnego. Oprócz pobieranie listy uruchomionych procesów (przez określenie komputera, nazwa procesu lub identyfikator procesu) lub wyświetlania informacji na temat procesu, który aktualnie ma dostęp do procesora, możesz uzyskać szczegółową wiedzę na wątki procesów i modułów zarówno przy użyciu <xref:System.Diagnostics.Process> samej klasy, a przez interakcję z <xref:System.Diagnostics.ProcessThread> i <xref:System.Diagnostics.ProcessModule> klasy. <xref:System.Diagnostics.ProcessStartInfo> Klasy można określić różne elementy, z którego ma zostać uruchomiony nowy proces, takie jak strumienie danych wejściowych, danych wyjściowych i błędów, katalogi robocze i poleceń w wierszu polecenia i argumentów. Te zapewniają wystarczające kontrolę nad zachowaniem procesów. Inne klasy pokrewne umożliwiają określenie Style okna ramowego procesu wątku priorytety i prowadzi interakcję z kolekcjami wątków i moduły.  
  
-   <xref:System.Diagnostics.PerformanceCounter> Klasy umożliwia monitorowanie wydajności systemu podczas <xref:System.Diagnostics.PerformanceCounterCategory> klasy zapewnia sposób tworzenie nowych liczników niestandardowych i kategorii. Można zapisać lokalnych liczników niestandardowych i odczytu z lokalnymi i zdalnymi liczników (system także niestandardowych). Próbkowanie liczników przy użyciu <xref:System.Diagnostics.PerformanceCounter> klasy, a następnie Oblicz wyniki z próbek licznika wydajności kolejnych przy użyciu <xref:System.Diagnostics.CounterSample> klasy. <xref:System.Diagnostics.CounterCreationData> Klasy umożliwia tworzenie wielu liczników w kategorii i określić ich typy. Inne klasy skojarzone ze składnikiem licznika wydajności zapewniają dostęp do zbioru liczników, licznik uprawnień i typy licznika.  
  
 <xref:System.Diagnostics> Przestrzeń nazw zawiera także klas, które pozwalają w celu debugowania aplikacji i do śledzenia realizacji kodu. Aby uzyskać więcej informacji, zobacz <xref:System.Diagnostics.Trace> i <xref:System.Diagnostics.Debug> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>