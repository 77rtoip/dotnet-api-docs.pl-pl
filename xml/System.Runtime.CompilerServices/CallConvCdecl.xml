<Type Name="CallConvCdecl" FullName="System.Runtime.CompilerServices.CallConvCdecl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a16e0fe7af2452698a4bb3d07b22a1ad879a181" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066458" /></Metadata><TypeSignature Language="C#" Value="public class CallConvCdecl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvCdecl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvCdecl" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvCdecl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvCdecl" />
  <TypeSignature Language="F#" Value="type CallConvCdecl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, że metoda powinna używać <see langword="Cdecl" /> konwencji wywoływania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący czyści stos. Umożliwia to wywoływanie funkcji `varargs`w programie.  
  
 Ta klasa jest używana tylko jako modyfikator niestandardowy sygnatury metadanych metody.  
  
 Klasy w <xref:System.Runtime.CompilerServices> są przeznaczone wyłącznie do użytku przez autorów kompilatora.  
  
 Kompilatory emitują Modyfikatory niestandardowe w metadanych, aby zmienić sposób, w jaki kompilator just-in-Time (JIT) obsługuje wartości, gdy zachowanie domyślne jest nieodpowiednie.  Gdy kompilator JIT napotyka modyfikator niestandardowy, obsługuje wartość w sposób określany przez modyfikator.  Kompilatory mogą stosować Modyfikatory niestandardowe do metod, parametrów i zwracanych wartości.  Kompilator JIT musi odpowiadać na wymagane modyfikatory, ale może ignorować opcjonalne modyfikatory.  C++ Kompilator może wyemitować modyfikator niestandardowy, aby opisać, jak należy traktować bajt w przypadkach, gdy kompilator JIT traktuje bajty w sposób, który nie jest zgodny C++ z wartością domyślną.  
  
 Modyfikatory niestandardowe można emitować do metadanych przy użyciu jednej z następujących technik:  
  
-   Korzystanie z metod w <xref:System.Reflection.Emit.TypeBuilder> klasie takich jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>,, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który `modopt` zawiera `modreq`wywołania do i i asembler pliku z [Ilasm. exe (Asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Korzystanie z niezarządzanego interfejsu API odbicia.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvCdecl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvCdecl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvCdecl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.CallConvCdecl" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy w <xref:System.Runtime.CompilerServices> są przeznaczone wyłącznie do użytku przez autorów kompilatora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
