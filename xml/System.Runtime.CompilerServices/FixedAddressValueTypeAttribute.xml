<Type Name="FixedAddressValueTypeAttribute" FullName="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa0604aead9774af215d0b13b48b0d79e57fd269" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69274647" /></Metadata><TypeSignature Language="C#" Value="public sealed class FixedAddressValueTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FixedAddressValueTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FixedAddressValueTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedAddressValueTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type FixedAddressValueTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Naprawia adres pola statycznego typu wartości w całym okresie istnienia. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj atrybutu <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> , aby oznaczyć statyczne typy wartości jako przypięte podczas tworzenia.  
  
 Ten atrybut jest używany przez kompilator wizualny C++ firmy Microsoft.  
  
 Pola statycznego typu wartości są tworzone jako obiekty w ramce. Oznacza to, że ich adresy mogą ulec zmianie, ponieważ jest wykonywane odzyskiwanie pamięci. Po zastosowaniu tego atrybutu do typu wartości statycznej jego adres pozostaje stały w okresie istnienia.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> atrybutu do przypinania pola statycznego w pamięci. Definiuje `Age` strukturę i inicjuje dwie klasy, które mają pola statyczne typu `Age`. Druga klasa ma zastosowanie <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> do przypięcia adresu pola. Wiele alokacji pamięci jest wykonywanych przed i po utworzeniu wystąpienia tych dwóch obiektów i wywołaniu modułu wyrzucania elementów bezużytecznych. Dane wyjściowe z przykładu pokazują, że mimo że adres pierwszego `Age` pola uległ zmianie po wyrzucaniu elementów bezużytecznych, adres pola, do którego <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> jest stosowany, nie.  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedAddressValueTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedAddressValueTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> atrybutu do przypinania pola statycznego w pamięci. Definiuje `Age` strukturę i inicjuje dwie klasy, które mają pola statyczne typu `Age`. Druga klasa ma zastosowanie <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> do przypięcia adresu pola. Wiele alokacji pamięci jest wykonywanych przed i po utworzeniu wystąpienia tych dwóch obiektów i wywołaniu modułu wyrzucania elementów bezużytecznych. Dane wyjściowe z przykładu pokazują, że mimo że adres pierwszego `Age` pola uległ zmianie po wyrzucaniu elementów bezużytecznych, adres pola, do którego <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> jest stosowany, nie.  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
