<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75a1ca0bc007b584e93073f8cc318bd920092d8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="6bbd7-101">Typ referencyjny, do której jest dołączona pola.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-101">The reference type to which the field is attached.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="6bbd7-102">Typ pola.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-102">The field's type.</span>
      </span>
      <span data-ttu-id="6bbd7-103">Musi to być typem referencyjnym.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-103">This must be a reference type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="6bbd7-104">Umożliwia kompilatory dynamicznie dołączyć pola obiektu do obiektów zarządzanych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-104">Enables compilers to dynamically attach object fields to managed objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasa umożliwia Kompilatory języka dołączyć dowolne właściwości do zarządzanych obiektów w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="6bbd7-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiekt jest słownik, który wiąże obiekt zarządzany, która jest reprezentowana przez klucz, dołączona właściwość, która jest reprezentowany przez wartość.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="6bbd7-107">Poszczególne wystąpienia są klucze obiektu `TKey` klasy, do której jest dołączona właściwość, a jego wartości są wartości właściwości, które są przypisane do odpowiednich obiektów.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="6bbd7-108">Klucze muszą być unikatowe; innymi słowy <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> klasa obsługuje jedną wartość dołączonych na obiekt zarządzany.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="6bbd7-109">Dwa klucze są takie same, jeśli przekazywanie ich do <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bbd7-110">Porównywanie równości nie może kontrolować przez zastąpienie <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> jawnie ustaw wartość skrótu dla klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="6bbd7-111"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasy nie używa <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> metodę w celu obliczenia skrótów kodów i dlatego nie jest wywoływany <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="6bbd7-112">Mimo że <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> klasy przetrzymuje kolekcję par klucz/wartość, jego jest najlepiej traktować jako tabeli, a nie w obiekt słownika.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="6bbd7-113"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasy różni się od słownik na kilka sposobów:</span><span class="sxs-lookup"><span data-stu-id="6bbd7-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="6bbd7-114">Nie jest trwały kluczy.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-114">It does not persist keys.</span></span> <span data-ttu-id="6bbd7-115">Oznacza to, że klucz jest nie życiu tylko, ponieważ jest elementem członkowskim kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="6bbd7-116">Nie obejmuje wszystkie metody (takie jak `GetEnumerator` lub `Contains`) zawierający zwykle słownika.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="6bbd7-117">Nie implementuje <xref:System.Collections.Generic.IDictionary%602> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="6bbd7-118"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasy różni się od innych obiektów kolekcji w jego zarządzania okres istnienia obiektów z kluczy przechowywanych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="6bbd7-119">Zwykle gdy obiekt jest przechowywany w kolekcji, jego okres istnienia ważny aż do jego usunięciu (i nie żadne dodatkowe odwołania do obiektu) lub samego obiektu kolekcji zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="6bbd7-120">Jednak w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> klasy Dodawanie parę klucza i wartości do tabeli nie upewnij się, że klucz będzie będzie się powtarzać, nawet jeśli jest osiągalna bezpośrednio z wartością przechowywaną w tabeli (na przykład, jeśli tabela zawiera jeden klucz, A, o wartości 1 oraz drugi klucz, B, z wartością P2, który zawiera odwołanie do A).</span><span class="sxs-lookup"><span data-stu-id="6bbd7-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="6bbd7-121">Zamiast tego <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatycznie usuwa wpis klucz/wartość, jak spoza tabeli nie występują żadne inne relacje, do klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="6bbd7-122">Przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbd7-123">Poniższy przykład pokazuje, że klucza przechowywanego u <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli nie zostaną utrwalone po odwołania do niego poza tabeli zostaną zniszczone.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="6bbd7-124">W przykładzie zdefiniowano dwie klasy: `ManagedClass`, reprezentuje klucza w tabeli, i `ClassData`, który reprezentuje wartość klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="6bbd7-125">Przykład tworzy trzy obiekty każdego typu.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="6bbd7-126">Również tworzy <xref:System.WeakReference> obiekt, który reprezentuje drugi `ManagedClass`, a następnie niszczy drugi `ManagedClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="6bbd7-127">Próba pobrania drugi `ManagedClass` obiekt z <xref:System.WeakReference.Target%2A> właściwość wskazuje, że pozostają nie odwołania do obiektu.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6bbd7-128">Wystąpienia <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> klasy są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span>
      </span>
      <span data-ttu-id="6bbd7-129">Nie wymagają wywołań w celu dodatkowe blokowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bbd7-129">They do not require callers to do any additional locking.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bbd7-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-131"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> Konstruktora tworzy pustą <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli; oznacza to, że tabela nie zawiera żadnych pary klucz wartość.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="6bbd7-132">Można dodawać pary klucz wartość, wywołując <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, lub <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="6bbd7-133">Każdy klucz w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiektu musi być unikatowa.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="6bbd7-134">Klucze nie są unikatowe, odnoszące się do tego samego obiektu (to znaczy, jeśli przekazywanie ich jako argumenty do <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> metoda zwraca `true`).</span><span class="sxs-lookup"><span data-stu-id="6bbd7-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6bbd7-135">Klucz do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-135">The key to add.</span>
          </span>
          <span data-ttu-id="6bbd7-136">
            <c>klucz</c> reprezentuje obiekt, do której jest dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-136">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6bbd7-137">Wartość właściwości klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-137">The key's property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bbd7-138">Dodaje klucz do tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-138">Adds a key to the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-139">Każdy klucz w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiektu musi być unikatowa.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="6bbd7-140">Klucze nie są unikatowe, odnoszące się do tego samego obiektu (to znaczy, jeśli przekazywanie ich jako argumenty do <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> metoda zwraca `true`).</span><span class="sxs-lookup"><span data-stu-id="6bbd7-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="6bbd7-141">Jeśli klucz jest zbierane pamięci podczas operacji dodawania, istniejące pary klucza/wartości jest usuwany, a nową parę klucz wartość są dodawane bez wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbd7-142">W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy, która zawiera informacje na temat `MainClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="6bbd7-143">Przykład wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metody w celu dodania `MainClass` obiekt i jego dołączonych `MainInfo` do obiektu <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="6bbd7-144">Wywołania również pokazano w przykładzie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody dodawania pary klucz wartość do tabeli, a także do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metody do pobierania wartości istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6bbd7-145">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-145">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bbd7-146">
            <paramref name="key" /> już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-146">
              <paramref name="key" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6bbd7-147">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-147">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6bbd7-148">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-148">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable`2 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bbd7-149">Gwarantuje, że zasoby są zwalniane i inne operacje oczyszczania są wykonywane, gdy moduł garbage collector zwraca <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-150">Wywołania modułu zbierającego elementy bezużyteczne <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> Jeśli bieżący obiekt jest gotowy do przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6bbd7-151">Klucz do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-151">The key to search for.</span>
          </span>
          <span data-ttu-id="6bbd7-152">
            <c>klucz</c> reprezentuje obiekt, do której jest dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-152">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bbd7-153">Automatycznie wyszukuje określonego klucza w tabeli i zwraca odpowiadającej jej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-153">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="6bbd7-154">Jeśli klucz nie istnieje w tabeli, metoda wywołuje konstruktor domyślny klasy, która reprezentuje wartość tabeli, aby utworzyć wartość, która jest powiązana z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bbd7-155">Wartość, która odpowiada <paramref name="key" />, jeśli <paramref name="key" /> już istnieje w tabeli; w przeciwnym razie nowa wartość utworzone przez domyślny konstruktor obiektu klasy zdefiniowane przez <paramref name="TValue" /> parametr typu ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-156">Jeśli `key` nie istnieje w tabeli, metoda dodaje, wraz z obiektu, który jest uruchomiony przez wywołanie domyślnego konstruktora klasy zdefiniowane przez `TValue` parametr typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="6bbd7-157">Jeśli `TValue` klasa nie ma domyślnego konstruktora, <xref:System.MissingMethodException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="6bbd7-158">Jest zalecana metoda pobierania istniejącej wartości lub dodanie nowej wartości do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli, jeśli klasa wartości tabeli definiuje konstruktora domyślnego.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="6bbd7-159">Jeśli nie definiuje konstruktora domyślnego, możesz zamiast tego wywołać <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodę, która zależy od dostarczane do wywołania zwrotnego metody do tworzenia wystąpienia obiektu reprezentujący wartość tabeli</span><span class="sxs-lookup"><span data-stu-id="6bbd7-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="6bbd7-160">Do pobierania wartości istniejącego klucza bez dodawania parę klucza i wartości, jeśli klucz nie zostanie znaleziony w tabeli, wywołaj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbd7-161">W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy, która zawiera informacje na temat `MainClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="6bbd7-162">Przykład wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metody w celu dodania `MainClass` obiekt i jego dołączonych `MainInfo` do obiektu <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="6bbd7-163">Wywołania również pokazano w przykładzie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody dodawania pary klucz wartość do tabeli, a także do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metody do pobierania wartości istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6bbd7-164">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-164">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="6bbd7-165">W [.NET dla Sklepu Windows apps](http://go.microsoft.com/fwlink/?LinkID=247912) lub [przenośnej biblioteki klas](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch wyjątku klasy podstawowej <see cref="T:System.MissingMemberException" />, zamiast tego.</span>
              <span class="sxs-lookup">
                <span data-stu-id="6bbd7-165">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="6bbd7-166">Klasa, która reprezentuje wartość tabeli nie definiuje konstruktora domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-166">The class that represents the table's value does not define a default constructor.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6bbd7-167">Klucz do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-167">The key to search for.</span>
          </span>
          <span data-ttu-id="6bbd7-168">
            <c>klucz</c> reprezentuje obiekt, do której jest dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-168">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="createValueCallback">
          <span data-ttu-id="6bbd7-169">Delegat do metody, której można utworzyć wartości danego <c>klucza</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-169">A delegate to a method that can create a value for the given <c>key</c>.</span>
          </span>
          <span data-ttu-id="6bbd7-170">Ma jeden parametr typu <c>TKey</c>i zwraca wartość typu <c>TValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-170">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bbd7-171">Automatycznie wyszukuje określonego klucza w tabeli i zwraca odpowiadającej jej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-171">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="6bbd7-172">Jeśli klucz nie istnieje w tabeli, metoda wywołuje metodę wywołania zwrotnego można utworzyć wartości, który jest powiązany z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-172">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bbd7-173">Wartość dołączony do <paramref name="key" />, jeśli <paramref name="key" /> już istnieje w tabeli; w przeciwnym razie nowa wartość zwrócona przez <paramref name="createValueCallback" /> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-173">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-174">Jeśli `key` nie istnieje w tabeli, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> wywołuje metodę, która jest zdefiniowana przez `createValueCallback` parametru i przekazuje je klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-174">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="6bbd7-175">Nowa wartość jest powiązany z klucza w tabeli i zwrócone w wyniku.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-175">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="6bbd7-176">Tej metody można użyć tylko wtedy, gdy klasa, która reprezentuje wartość tabeli nie definiuje konstruktora domyślnego.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-176">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="6bbd7-177">Jeśli ją zdefiniować konstruktora domyślnego, użyj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-177">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="6bbd7-178">Do pobierania wartości istniejącego klucza bez dodawania parę klucza i wartości, jeśli klucz nie zostanie znaleziony w tabeli, wywołaj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-178">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="6bbd7-179">Jeśli wiele wątków próbuje utworzyć ten sam klucz `createValueCallback` może być wywołana kilka razy z tym samym kluczem.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-179">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="6bbd7-180">Powiedzie się tylko jeden z tych wywołań, a jego zwracanej wartości zostaną dodane do tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-180">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="6bbd7-181">Wątek, który zakończy się pomyślnie w tworzeniu wartości jest nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-181">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="6bbd7-182">Ta reguła zezwala tabeli do wywołania `createValueCallback` poza blokady tabeli wewnętrznej, aby zapobiec zakleszczenia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-182">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbd7-183">W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy, która zawiera informacje na temat `MainClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-183">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="6bbd7-184">Definiuje również statycznego (`Shared` w języku Visual Basic) `CreateAttachedValue` metody, które mogą być przypisane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegować i przekazywane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-184">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="6bbd7-185">Przykład wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody w celu dodania `MainClass` obiekt i jego dołączonych `MainInfo` do obiektu <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-185">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="6bbd7-186">Wywołania również pokazano w przykładzie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metody dodawania pary klucz wartość do tabeli, a także do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metody do pobierania wartości istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-186">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6bbd7-187">
            <paramref name="key" /> lub <paramref name="createValueCallback" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-187">
              <paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6bbd7-188">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6bbd7-189">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6bbd7-190">Klucz do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-190">The key to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bbd7-191">Usuwa klucz i wartość z tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-191">Removes a key and its value from the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bbd7-192">
            <see langword="true" /> Jeśli klucz jest odnalezione i usunięte; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-192">
              <see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-193">Jeśli klucz jest zbierane pamięci podczas tej operacji, metoda nie zgłaszał wyjątku i zwracanych wartości są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-193">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6bbd7-194">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-194">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6bbd7-195">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-195">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6bbd7-196">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-196">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6bbd7-197">Klucz reprezentujący obiekt z dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-197">The key that represents an object with an attached property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6bbd7-198">Po powrocie z tej metody zawiera wartość dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-198">When this method returns, contains the attached property value.</span>
          </span>
          <span data-ttu-id="6bbd7-199">Jeśli <c>klucza</c> nie zostanie znaleziony, <c>wartość</c> zawiera domyślną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-199">If <c>key</c> is not found, <c>value</c> contains the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bbd7-200">Pobiera wartość określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-200">Gets the value of the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bbd7-201">
            <see langword="true" /> Jeśli <paramref name="key" /> zostanie odnaleziony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-201">
              <see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbd7-202">Jeśli klucz jest zbierane pamięci podczas tej operacji, metoda może zwracać `false` i ustaw `value` domyślną wartość (tak, jakby nie było klucz).</span><span class="sxs-lookup"><span data-stu-id="6bbd7-202">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbd7-203">W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy, która zawiera informacje na temat `MainClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-203">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="6bbd7-204">Przykład wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody dodawania pary klucz wartość do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-204">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="6bbd7-205">W każdym przypadku przykład wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodę, aby potwierdzić, że para klucza i wartości zostały dodane do tabeli.</span><span class="sxs-lookup"><span data-stu-id="6bbd7-205">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6bbd7-206">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-206">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6bbd7-207">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-207">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6bbd7-208">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bbd7-208">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>