<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91016ece1f3636ce7d1e55388bb6faa7891de6fd" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399620" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="570fb-101">Typ odwołania, do którego pole jest dołączone.</span><span class="sxs-lookup"><span data-stu-id="570fb-101">The reference type to which the field is attached.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="570fb-102">Typ pola.</span><span class="sxs-lookup"><span data-stu-id="570fb-102">The field's type.</span></span> <span data-ttu-id="570fb-103">Musi to być typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="570fb-103">This must be a reference type.</span></span></typeparam>
    <summary><span data-ttu-id="570fb-104">Umożliwia kompilatorom dynamiczne dołączanie pól obiektów do zarządzanych obiektów.</span><span class="sxs-lookup"><span data-stu-id="570fb-104">Enables compilers to dynamically attach object fields to managed objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasa umożliwia kompilatorom języka dołączanie dowolnych właściwości do zarządzanych obiektów w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="570fb-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="570fb-106"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Obiekt jest słownikiem, który wiąże obiekt zarządzany, który jest reprezentowany przez klucz do dołączonej właściwości, która jest reprezentowana przez wartość.</span><span class="sxs-lookup"><span data-stu-id="570fb-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="570fb-107">Klucze obiektu są pojedynczymi wystąpieniami `TKey` klasy, do których jest dołączona właściwość, a jej wartości są wartościami właściwości przypisanymi do odpowiednich obiektów.</span><span class="sxs-lookup"><span data-stu-id="570fb-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="570fb-108">Klucze muszą być unikatowe; Innymi słowy, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasa obsługuje jedną dołączoną wartość na obiekt zarządzany.</span><span class="sxs-lookup"><span data-stu-id="570fb-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="570fb-109">Dwa klucze są równe, <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> Jeśli przekazanie ich do metody zwróci `true`metodę.</span><span class="sxs-lookup"><span data-stu-id="570fb-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="570fb-110">Nie można kontrolować porównania równości poprzez przesłanianie <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> , aby jawnie ustawić kod skrótu dla klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="570fb-111">Klasa nie używa metody do obliczania kodów skrótów i w związku z tym nie wywołuje <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> zastąpień. <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602></span><span class="sxs-lookup"><span data-stu-id="570fb-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="570fb-112"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Chociaż Klasa przechowuje kolekcję par klucz/wartość, najlepiej jest traktować jako tabelę, a nie obiekt słownika.</span><span class="sxs-lookup"><span data-stu-id="570fb-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="570fb-113"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasa różni się od słownika na kilka sposobów:</span><span class="sxs-lookup"><span data-stu-id="570fb-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="570fb-114">Klucze nie są utrwalane.</span><span class="sxs-lookup"><span data-stu-id="570fb-114">It does not persist keys.</span></span> <span data-ttu-id="570fb-115">Oznacza to, że klucz nie jest aktywny tylko, ponieważ jest elementem członkowskim kolekcji.</span><span class="sxs-lookup"><span data-stu-id="570fb-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="570fb-116">Nie zawiera on wszystkich metod (takich jak `GetEnumerator` lub `Contains`), które zwykle mają słownik.</span><span class="sxs-lookup"><span data-stu-id="570fb-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="570fb-117">Nie implementuje <xref:System.Collections.Generic.IDictionary%602> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="570fb-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="570fb-118"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasa różni się od innych obiektów kolekcji w zarządzaniu okresem istnienia obiektu kluczy przechowywanych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="570fb-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="570fb-119">Zwykle gdy obiekt jest przechowywany w kolekcji, jego okres istnienia będzie trwać do momentu jego usunięcia (i nie ma dodatkowych odwołań do obiektu) lub do momentu zniszczenia samego obiektu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="570fb-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="570fb-120">Jednak w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> klasie Dodawanie pary klucz/wartość do tabeli nie gwarantuje, że klucz będzie trwały, nawet jeśli można go uzyskać bezpośrednio z wartości przechowywanej w tabeli (na przykład jeśli tabela zawiera jeden klucz, a, o wartości V1 i drugi klawisz, B, o wartości P2, która zawiera odwołanie do elementu.</span><span class="sxs-lookup"><span data-stu-id="570fb-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="570fb-121">Zamiast tego <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> program automatycznie usuwa wpis klucz/wartość, gdy tylko nie istnieją żadne inne odwołania do klucza poza tabelą.</span><span class="sxs-lookup"><span data-stu-id="570fb-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="570fb-122">Przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="570fb-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570fb-123">Poniższy przykład ilustruje, że klucz przechowywany w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli nie utrwala się po usunięciu odwołań do niego poza tabelą.</span><span class="sxs-lookup"><span data-stu-id="570fb-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="570fb-124">W przykładzie zdefiniowano dwie klasy `ManagedClass`:, która reprezentuje klucz w tabeli i `ClassData`reprezentuje wartość klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="570fb-125">Przykład tworzy wystąpienie trzech obiektów każdego typu.</span><span class="sxs-lookup"><span data-stu-id="570fb-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="570fb-126">Tworzy również wystąpienie <xref:System.WeakReference> obiektu, który reprezentuje sekundę `ManagedClass`, a następnie niszczy drugie `ManagedClass` wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="570fb-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="570fb-127">Próba pobrania drugiego `ManagedClass` obiektu <xref:System.WeakReference.Target%2A> z właściwości wskazuje, że żadne odwołanie do obiektu nie pozostało.</span><span class="sxs-lookup"><span data-stu-id="570fb-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="570fb-128"><see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> Wystąpienia klasy są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="570fb-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span></span> <span data-ttu-id="570fb-129">Nie wymagają od wywołujących żadnych dodatkowych blokad.</span><span class="sxs-lookup"><span data-stu-id="570fb-129">They do not require callers to do any additional locking.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="570fb-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="570fb-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-131">Konstruktor tworzy wystąpienie pustej <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli. oznacza to, że tabela nie zawiera par klucz/wartość. <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="570fb-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="570fb-132">Pary klucz/wartość można dodać <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, wywołując metodę, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, lub <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> .</span><span class="sxs-lookup"><span data-stu-id="570fb-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="570fb-133">Każdy klucz w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiekcie musi być unikatowy.</span><span class="sxs-lookup"><span data-stu-id="570fb-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="570fb-134">Klucze nie są unikatowe, jeśli odwołują się do tego samego obiektu (oznacza to, że w przypadku przekazywania ich <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> jako argumentów `true`do metody).</span><span class="sxs-lookup"><span data-stu-id="570fb-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-135">Klucz, który ma zostać dodany.</span><span class="sxs-lookup"><span data-stu-id="570fb-135">The key to add.</span></span> <span data-ttu-id="570fb-136"><paramref name="key" />reprezentuje obiekt, do którego jest dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="570fb-136"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="value"><span data-ttu-id="570fb-137">Wartość właściwości klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-137">The key's property value.</span></span></param>
        <summary><span data-ttu-id="570fb-138">Dodaje klucz do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-138">Adds a key to the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-139">Każdy klucz w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiekcie musi być unikatowy.</span><span class="sxs-lookup"><span data-stu-id="570fb-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="570fb-140">Klucze nie są unikatowe, jeśli odwołują się do tego samego obiektu (oznacza to, że w przypadku przekazywania ich <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> jako argumentów `true`do metody).</span><span class="sxs-lookup"><span data-stu-id="570fb-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="570fb-141">Jeśli klucz jest odzyskiwany w trakcie operacji dodawania, istniejąca para klucz/wartość jest usuwana, a nowa para klucz/wartość jest dodawana bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="570fb-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570fb-142">W poniższym przykładzie zdefiniowano `MainClass` klasę `MainInfo` i klasę, `MainClass` która zawiera informacje o wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="570fb-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="570fb-143">Przykład następnie wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metodę, aby `MainClass` dodać obiekt i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> jego dołączony `MainInfo` obiekt do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="570fb-144">Przykład ilustruje także wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metod i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> , aby dodać pary klucz/wartość do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> tabeli, oraz metodę, aby pobrać wartość istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-145"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="570fb-146"><paramref name="key" />już istnieje.</span><span class="sxs-lookup"><span data-stu-id="570fb-146"><paramref name="key" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="570fb-147">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="570fb-147">requires full trust for the immediate caller.</span></span> <span data-ttu-id="570fb-148">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="570fb-148">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.AddOrUpdate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="TValue" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-149">Klucz do dodania lub zaktualizowania.</span><span class="sxs-lookup"><span data-stu-id="570fb-149">The key to add or update.</span></span> <span data-ttu-id="570fb-150">Nie może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-150">May not be <see langword="null" />.</span></span></param>
        <param name="value"><span data-ttu-id="570fb-151">Wartość, z <paramref name="key" />którą ma zostać skojarzona.</span><span class="sxs-lookup"><span data-stu-id="570fb-151">The value to associate with <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="570fb-152">Dodaje klucz i wartość, jeśli klucz nie istnieje, lub aktualizuje wartość istniejącego klucza, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="570fb-152">Adds the key and value if the key doesn't exist, or updates the existing key's value if it does exist.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-153"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="conditionalWeakTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="570fb-154">Czyści wszystkie pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="570fb-154">Clears all the key/value pairs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="conditionalWeakTable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="570fb-155">Zapewnia, że zasoby są zwolnione i inne operacje czyszczenia są wykonywane, gdy moduł zbierający <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> elementy bezużyteczne odzyskuje obiekt.</span><span class="sxs-lookup"><span data-stu-id="570fb-155">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-156">Moduł zbierający elementy <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> bezużyteczne wywołuje, kiedy bieżący obiekt jest gotowy do sfinalizowania.</span><span class="sxs-lookup"><span data-stu-id="570fb-156">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateValue : 'Key -&gt; 'Value" Usage="conditionalWeakTable.GetOrCreateValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-157">Klucz, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="570fb-157">The key to search for.</span></span> <span data-ttu-id="570fb-158"><paramref name="key" />reprezentuje obiekt, do którego jest dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="570fb-158"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <summary><span data-ttu-id="570fb-159">Niepodzielnie wyszukuje określony klucz w tabeli i zwraca odpowiadającą wartość.</span><span class="sxs-lookup"><span data-stu-id="570fb-159">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="570fb-160">Jeśli klucz nie istnieje w tabeli, metoda wywołuje Konstruktor bez parametrów klasy, która reprezentuje wartość tabeli, aby utworzyć wartość powiązaną z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="570fb-160">If the key does not exist in the table, the method invokes the parameterless constructor of the class that represents the table's value to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="570fb-161">Wartość, która odnosi się <paramref name="key" />do, <paramref name="key" /> Jeśli istnieje już w tabeli; w przeciwnym razie nowa wartość tworzona przez konstruktora bez parametrów klasy zdefiniowanej przez <paramref name="TValue" /> parametr typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="570fb-161">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the parameterless constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-162">Jeśli `key` nie istnieje w tabeli, Metoda dodaje go wraz z obiektem, który jest skonkretyzowany przez wywołanie konstruktora bez parametrów klasy zdefiniowanej `TValue` przez parametr typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="570fb-162">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the parameterless constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="570fb-163">Jeśli Klasa nie ma konstruktora bez parametrów <xref:System.MissingMethodException> , jest zgłaszany. `TValue`</span><span class="sxs-lookup"><span data-stu-id="570fb-163">If the `TValue` class has no parameterless constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="570fb-164">Jest to zalecana metoda pobierania istniejącej wartości lub dodawania nowej wartości do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli, jeśli Klasa wartości tabeli definiuje konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="570fb-164">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a parameterless constructor.</span></span> <span data-ttu-id="570fb-165">Jeśli nie definiuje konstruktora bez parametrów, zamiast tego można wywołać <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodę, która opiera się na metodzie dostarczonej z wywołaniem zwrotnym, aby utworzyć wystąpienie obiektu reprezentującego wartość tabeli</span><span class="sxs-lookup"><span data-stu-id="570fb-165">If it does not define a parameterless constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="570fb-166">Aby pobrać wartość istniejącego klucza bez dodawania pary klucz/wartość, jeśli klucz nie zostanie znaleziony w tabeli, wywołaj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="570fb-166">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570fb-167">W poniższym przykładzie zdefiniowano `MainClass` klasę `MainInfo` i klasę, `MainClass` która zawiera informacje o wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="570fb-167">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="570fb-168">Przykład wywołuje metodę, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> aby `MainClass` dodać obiekt i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> jego dołączony `MainInfo` obiekt do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-168">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="570fb-169">Przykład ilustruje także wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metod i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> , aby dodać pary klucz/wartość do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> tabeli, oraz metodę, aby pobrać wartość istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-169">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-170"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-170"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="570fb-171">W programie <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET dla aplikacji ze sklepu Windows</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">przenośnej biblioteki klas</see>Przechwyć wyjątek <see cref="T:System.MissingMemberException" />klasy bazowej, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="570fb-171">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="570fb-172">Klasa, która reprezentuje wartość tabeli, nie definiuje konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="570fb-172">The class that represents the table's value does not define a parameterless constructor.</span></span></exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberSignature Language="F#" Value="member this.GetValue : 'Key * System.Runtime.CompilerServices.ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback -&gt; 'Value" Usage="conditionalWeakTable.GetValue (key, createValueCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-173">Klucz, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="570fb-173">The key to search for.</span></span> <span data-ttu-id="570fb-174"><paramref name="key" />reprezentuje obiekt, do którego jest dołączona właściwość.</span><span class="sxs-lookup"><span data-stu-id="570fb-174"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="createValueCallback"><span data-ttu-id="570fb-175">Delegat do metody, która może utworzyć wartość dla danego <paramref name="key" />elementu.</span><span class="sxs-lookup"><span data-stu-id="570fb-175">A delegate to a method that can create a value for the given <paramref name="key" />.</span></span> <span data-ttu-id="570fb-176">Ma jeden parametr typu <c>TKey</c>i zwraca wartość typu <c>TValue</c>.</span><span class="sxs-lookup"><span data-stu-id="570fb-176">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span></span></param>
        <summary><span data-ttu-id="570fb-177">Niepodzielnie wyszukuje określony klucz w tabeli i zwraca odpowiadającą wartość.</span><span class="sxs-lookup"><span data-stu-id="570fb-177">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="570fb-178">Jeśli klucz nie istnieje w tabeli, metoda wywołuje metodę wywołania zwrotnego w celu utworzenia wartości, która jest powiązana z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="570fb-178">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="570fb-179">Wartość dołączona do <paramref name="key" />, jeśli <paramref name="key" /> istnieje już w tabeli; w przeciwnym razie <paramref name="createValueCallback" /> nowa wartość zwrócona przez delegata.</span><span class="sxs-lookup"><span data-stu-id="570fb-179">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-180">Jeśli `key` nie istnieje w tabeli, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> wywołuje metodę `createValueCallback` , która jest zdefiniowana przez parametr i przekazuje go do klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-180">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="570fb-181">Nowa wartość jest powiązana z kluczem w tabeli i zwracana jako wynik.</span><span class="sxs-lookup"><span data-stu-id="570fb-181">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="570fb-182">Tej metody należy użyć tylko wtedy, gdy Klasa reprezentująca wartość tabeli nie definiuje konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="570fb-182">Use this method only when the class that represents the table's value does not define a parameterless constructor.</span></span> <span data-ttu-id="570fb-183">Jeśli zdefiniowano konstruktora bez parametrów, zamiast tego użyj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="570fb-183">If it does define a parameterless constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="570fb-184">Aby pobrać wartość istniejącego klucza bez dodawania pary klucz/wartość, jeśli klucz nie zostanie znaleziony w tabeli, wywołaj <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="570fb-184">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="570fb-185">Jeśli wiele wątków próbuje utworzyć ten sam klucz, `createValueCallback` można wywołać wiele razy z tym samym kluczem.</span><span class="sxs-lookup"><span data-stu-id="570fb-185">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="570fb-186">Tylko jedno z tych wywołań powiedzie się, a zwrócona wartość zostanie dodana do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-186">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="570fb-187">Który wątek kończy się powodzeniem tworzenia wartości jest nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="570fb-187">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="570fb-188">Ta reguła umożliwia wywoływanie `createValueCallback` tabeli poza wewnętrzną blokadą tabeli w celu zapobiegania zakleszczeniom.</span><span class="sxs-lookup"><span data-stu-id="570fb-188">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570fb-189">W poniższym przykładzie zdefiniowano `MainClass` klasę `MainInfo` i klasę, `MainClass` która zawiera informacje o wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="570fb-189">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="570fb-190">Definiuje także statyczną (`Shared` w Visual Basic) `CreateAttachedValue` metodę, która <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> może być przypisana do delegata i przeniesiona <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> do metody.</span><span class="sxs-lookup"><span data-stu-id="570fb-190">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="570fb-191">Przykład wywołuje metodę, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> aby `MainClass` dodać obiekt i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> jego dołączony `MainInfo` obiekt do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-191">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="570fb-192">Przykład ilustruje także wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metod i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> , aby dodać pary klucz/wartość do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> tabeli, oraz metodę, aby pobrać wartość istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-192">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-193"><paramref name="key" />lub <paramref name="createValueCallback" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-193"><paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="570fb-194">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="570fb-194">requires full trust for the immediate caller.</span></span> <span data-ttu-id="570fb-195">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="570fb-195">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'Key -&gt; bool" Usage="conditionalWeakTable.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-196">Klucz do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="570fb-196">The key to remove.</span></span></param>
        <summary><span data-ttu-id="570fb-197">Usuwa klucz i jego wartość z tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-197">Removes a key and its value from the table.</span></span></summary>
        <returns><span data-ttu-id="570fb-198"><see langword="true" />Jeśli klucz zostanie znaleziony i usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="570fb-198"><see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-199">Jeśli klucz jest odzyskiwany w trakcie tej operacji, metoda nie zgłasza wyjątku, a zwracana wartość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="570fb-199">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-200"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-200"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="570fb-201">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="570fb-201">requires full trust for the immediate caller.</span></span> <span data-ttu-id="570fb-202">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="570fb-202">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="conditionalWeakTable.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="570fb-203">Klucz, który reprezentuje obiekt z dołączoną właściwością.</span><span class="sxs-lookup"><span data-stu-id="570fb-203">The key that represents an object with an attached property.</span></span></param>
        <param name="value"><span data-ttu-id="570fb-204">Gdy ta metoda zwraca, zawiera wartość dołączonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="570fb-204">When this method returns, contains the attached property value.</span></span> <span data-ttu-id="570fb-205">Jeśli <paramref name="key" /> nie zostanie znaleziona <paramref name="value" /> , zawiera wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="570fb-205">If <paramref name="key" /> is not found, <paramref name="value" /> contains the default value.</span></span></param>
        <summary><span data-ttu-id="570fb-206">Pobiera wartość określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="570fb-206">Gets the value of the specified key.</span></span></summary>
        <returns><span data-ttu-id="570fb-207"><see langword="true" />Jeśli <paramref name="key" /> został znaleziony; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="570fb-207"><see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="570fb-208">Jeśli klucz jest odzyskiwany w trakcie tej operacji, Metoda może zwracać `false` i ustawić `value` wartość domyślną (tak, jakby klucz nie był obecny).</span><span class="sxs-lookup"><span data-stu-id="570fb-208">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="570fb-209">W poniższym przykładzie zdefiniowano `MainClass` klasę `MainInfo` i klasę, `MainClass` która zawiera informacje o wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="570fb-209">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="570fb-210">Przykład wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>metody,, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> , <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> aby dodać pary klucz/wartość do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-210">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="570fb-211">W każdym przypadku przykład wywołuje metodę, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> aby potwierdzić, że para klucz/wartość została dodana do tabeli.</span><span class="sxs-lookup"><span data-stu-id="570fb-211">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="570fb-212"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="570fb-212"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="570fb-213">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="570fb-213">requires full trust for the immediate caller.</span></span> <span data-ttu-id="570fb-214">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="570fb-214">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>
