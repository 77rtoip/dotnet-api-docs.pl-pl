<Type Name="IsImplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsImplicitlyDereferenced">
  <Metadata><Meta Name="ms.openlocfilehash" Value="960db8b9f3d2f328eb45cfdddc519556925c7507" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58719064" /></Metadata><TypeSignature Language="C#" Value="public static class IsImplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsImplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsImplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsImplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsImplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="259aa-101">Wskazuje, że odwołanie do kolekcji pamięci zmodyfikowanych reprezentuje parametr przekazany przez odwołanie w podpisie metody.</span><span class="sxs-lookup"><span data-stu-id="259aa-101">Indicates that the modified garbage collection reference represents a reference parameter within a method signature.</span></span> <span data-ttu-id="259aa-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="259aa-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="259aa-103">Kompilator C++ używa <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> modyfikator do odróżnienia klas odwołania, które są przekazywane przez zarządzane odwołania z tych, które przeszły przez wskaźnik zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="259aa-103">The C++ compiler uses the <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> modifier to distinguish reference classes that are passed by managed reference from those passed by managed pointer.</span></span>  <span data-ttu-id="259aa-104"><xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> Klasy i jej partnerów <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> klasy, odróżnić parametrów odwołania z parametrów wskaźnika.</span><span class="sxs-lookup"><span data-stu-id="259aa-104">The <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class and its partner, the <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> class, disambiguate reference parameters from pointer parameters.</span></span>  
  
 <span data-ttu-id="259aa-105">Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.</span><span class="sxs-lookup"><span data-stu-id="259aa-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="259aa-106">Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="259aa-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="259aa-107">Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="259aa-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="259aa-108">Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="259aa-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="259aa-109">Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:</span><span class="sxs-lookup"><span data-stu-id="259aa-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="259aa-110">Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="259aa-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="259aa-111">Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="259aa-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="259aa-112">Za pomocą niezarządzany interfejs API odbicia.</span><span class="sxs-lookup"><span data-stu-id="259aa-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="259aa-113">W poniższym przykładzie pokazano sposób emitować <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> obiektu w zespół przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="259aa-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsImplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsImplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>