<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38905f8c9832a171a91648224aa150f1b8b76c31" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48737259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsCopyConstructed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9ffe0-101">Wskazuje, czy kopiowanie wartości tego typu należy użyć konstruktora kopiującego, dostarczone przez typ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ffe0-101">Indicates that any copying of values of this type must use the copy constructor provided by the type.</span>
      </span>
      <span data-ttu-id="9ffe0-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ffe0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ffe0-103">Dowolny typ zmodyfikowany przez <xref:System.Runtime.CompilerServices.IsCopyConstructed> klasa musi implementować metodę o nazwie `MarshalCopy` , wywołuje konstruktor Kopiuj natywnych.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-103">Any type modified by the <xref:System.Runtime.CompilerServices.IsCopyConstructed> class must implement a method named `MarshalCopy` that calls the native copy constructor.</span></span>  
  
 <span data-ttu-id="9ffe0-104">Żadnego natywnego typu C++ jest emitowany do metadanych za pomocą konstruktorów kopiujących trzeba te metody wywoływane przez organizatora podczas kopiowania wartości granicę organizowania.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-104">Any native C++ type that is emitted into metadata with copy constructors needs to have those methods called by the marshaler when copying values across the marshaling boundary.</span></span>  <span data-ttu-id="9ffe0-105">Kompilator Microsoft C++ modyfikuje wszystkich typach natywnych języka C++ w parametrach metody i zwracane typy, które mają ten modyfikator, aby wyzwolić to zachowanie w organizowanie kodu.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-105">The Microsoft C++ compiler modifies all native C++ types in method parameters and return types that have this modifier to trigger this behavior in the marshaling code.</span></span>  
  
 <span data-ttu-id="9ffe0-106">Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="9ffe0-107">Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="9ffe0-108">Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="9ffe0-109">Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="9ffe0-110">Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:</span><span class="sxs-lookup"><span data-stu-id="9ffe0-110">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="9ffe0-111">Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-111">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="9ffe0-112">Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9ffe0-112">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="9ffe0-113">Za pomocą niezarządzany interfejs API odbicia.</span><span class="sxs-lookup"><span data-stu-id="9ffe0-113">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>