<Type Name="IsByValue" FullName="System.Runtime.CompilerServices.IsByValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="836dd4c340c3970457a021d45f72f180eda5d19c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58715363" /></Metadata><TypeSignature Language="C#" Value="public static class IsByValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsByValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsByValue" />
  <TypeSignature Language="VB.NET" Value="Public Class IsByValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsByValue abstract sealed" />
  <TypeSignature Language="F#" Value="type IsByValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b659b-101">Wskazuje, że argument modyfikowana metoda powinno być interpretowane jako posiadające semantyki przekazywane przez wartość obiektu.</span><span class="sxs-lookup"><span data-stu-id="b659b-101">Indicates that a modified method argument should be interpreted as having object passed-by-value semantics.</span></span> <span data-ttu-id="b659b-102">Ten modyfikator, jest stosowany do typy odwołań.</span><span class="sxs-lookup"><span data-stu-id="b659b-102">This modifier is applied to reference types.</span></span>  <span data-ttu-id="b659b-103">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="b659b-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b659b-104"><xref:System.Runtime.CompilerServices.IsByValue> Klasa jest używana przez kompilator C++ firmy Microsoft do określenia parametrów metod i zwracać wartości, których semantyki zgodne z regułami C++ dla obiektów przekazywane przez wartość.</span><span class="sxs-lookup"><span data-stu-id="b659b-104">The <xref:System.Runtime.CompilerServices.IsByValue> class is used by the Microsoft C++ compiler to denote method parameters and return values whose semantics follow the C++ rules for objects passed by value.</span></span>  
  
 <span data-ttu-id="b659b-105">Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.</span><span class="sxs-lookup"><span data-stu-id="b659b-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="b659b-106">Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="b659b-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="b659b-107">Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="b659b-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="b659b-108">Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="b659b-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="b659b-109">Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:</span><span class="sxs-lookup"><span data-stu-id="b659b-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="b659b-110">Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="b659b-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="b659b-111">Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="b659b-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="b659b-112">Za pomocą niezarządzany interfejs API odbicia.</span><span class="sxs-lookup"><span data-stu-id="b659b-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b659b-113">W poniższym przykładzie pokazano sposób emitować <xref:System.Runtime.CompilerServices.IsByValue> obiektu w zespół przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="b659b-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsByValue> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsByValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsByValue/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>