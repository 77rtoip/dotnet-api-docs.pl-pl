<Type Name="RuntimeWrappedException" FullName="System.Runtime.CompilerServices.RuntimeWrappedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46c12b27f5eac15fb05683599f5b173dad38f854" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69273397" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuntimeWrappedException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RuntimeWrappedException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeWrappedException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeWrappedException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeWrappedException sealed : Exception" />
  <TypeSignature Language="F#" Value="type RuntimeWrappedException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawija wyjątek, który nie pochodzi od <see cref="T:System.Exception" /> klasy. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre języki, takie jak C++, umożliwiają zgłaszanie wyjątków dowolnego typu zarządzanego.  Inne języki, takie jak Microsoft C# i Visual Basic, wymagają, aby każdy zgłoszony wyjątek był pochodną <xref:System.Exception> klasy.  Aby zachować zgodność między językami, środowisko uruchomieniowe języka wspólnego (CLR) otacza obiekty, które nie pochodzą <xref:System.Exception> od elementu <xref:System.Runtime.CompilerServices.RuntimeWrappedException> w obiekcie.  
  
 Można użyć klasy, <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> aby określić, czy wyjątki powinny być widoczne wewnątrz bloków catch i filtrów wyjątków dla zestawu.  Wiele kompilatorów języka, w tym kompilatorów firmy Microsoft C# i Visual Basic, Zastosuj ten atrybut domyślnie, aby określić zachowanie zawijania.  
  
 Należy pamiętać, że środowisko uruchomieniowe ciągle otacza wyjątki, nawet jeśli <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> używasz klasy, aby określić, że mają być opakowane.  W takim przypadku wyjątki są rozpakowane tylko wewnątrz bloków catch lub filtrów wyjątków.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zgłosić <xref:System.String> obiekt jako wyjątek w C++ i <xref:System.Runtime.CompilerServices.RuntimeWrappedException> przechwycić go przy użyciu obiektu.  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeWrappedException/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeWrappedException (object thrownObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object thrownObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (thrownObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeWrappedException(System::Object ^ thrownObject);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.RuntimeWrappedException : obj -&gt; System.Runtime.CompilerServices.RuntimeWrappedException" Usage="new System.Runtime.CompilerServices.RuntimeWrappedException thrownObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="thrownObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="thrownObject">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="runtimeWrappedException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt, który przechowuje serializowane dane obiektu dotyczące zgłaszanego wyjątku.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Obiekt, który zawiera informacje kontekstowe o źródle lub miejscu docelowym.</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Ustawia obiekt z informacjami o wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData%2A> Metoda<xref:System.Runtime.Serialization.SerializationInfo> ustawia obiekt ze wszystkimi danymi obiektu wyjątku przeznaczonymi do serializacji. Podczas deserializacji wyjątek zostaje odtworzony od `SerializationInfo` przekazanego strumienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="info" /></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="WrappedException">
      <MemberSignature Language="C#" Value="public object WrappedException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrappedException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrappedException As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrappedException { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WrappedException : obj" Usage="System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który został opakowany przez <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> obiekt.</summary>
        <value>Obiekt, który został opakowany przez <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera obiekt, który został zgłoszony jako wyjątek z języka, który zezwala na wyjątki, które nie pochodzą <xref:System.Exception> od klasy. <xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
