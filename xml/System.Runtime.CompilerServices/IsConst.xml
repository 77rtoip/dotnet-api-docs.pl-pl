<Type Name="IsConst" FullName="System.Runtime.CompilerServices.IsConst">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16ca5bfe528a1557a6c1debf6aaf3dc5d8b9082a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30563278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsConst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsConst extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsConst" />
  <TypeSignature Language="VB.NET" Value="Public Class IsConst" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsConst abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wskazuje, że zmodyfikowany typ ma <see langword="const" /> modyfikator. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kompilator Microsoft C++ emituje modyfikator do metadanych dla każdego parametru zwracany typ lub deklaracja obiektu zadeklarowane jako `const` w kodzie źródłowym.  
  
 Kompilatory Emituj niestandardowych Modyfikatory w metadanych, aby zmienić sposób, że przy użyciu kompilatora just in time (JIT) obsługuje wartości podczas domyślne zachowanie nie jest odpowiedni.  Kompilator JIT napotkał modyfikator niestandardowych, obsługi przez wartość w taki sposób, który określa modyfikator.  Kompilatory można zastosować Modyfikatory niestandardowych metod, parametry i wartości zwracane.  Przy użyciu kompilatora JIT musi odpowiadać na Modyfikatory wymagane, ale można zignorować Modyfikatory opcjonalne.  
  
 Modyfikatory niestandardowy może emitować w metadanych przy użyciu jednej z następujących metod:  
  
-   Przy użyciu metod w <xref:System.Reflection.Emit.TypeBuilder> klas takich jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który zawiera wywołań `modopt` i `modreq`i składania pliku o [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Przy użyciu odbicia niezarządzane interfejsu API.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób Emituj <xref:System.Runtime.CompilerServices.IsConst> obiektu w zestawie przy użyciu odbicia.  
  
 [!code-cpp[Runtime.CompilerServices.IsConst#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsConst/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>