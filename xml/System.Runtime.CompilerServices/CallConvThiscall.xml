<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7dc98-101">Wskazuje, czy należy użyć metody <see langword="ThisCall" /> konwencji wywoływania.</span><span class="sxs-lookup"><span data-stu-id="7dc98-101">Indicates that a method should use the <see langword="ThisCall" /> calling convention.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dc98-102">Korzystając z `ThisCall` konwencji wywoływania, jest pierwszy parametr wywołania metody `this` wskaźnika, który jest przechowywany w rejestrze ECX.</span><span class="sxs-lookup"><span data-stu-id="7dc98-102">When using the `ThisCall` calling convention, the first parameter of a method call is the `this` pointer, which is stored in register ECX.</span></span> <span data-ttu-id="7dc98-103">Inne parametry wywołania metody są przenoszone na stosie.</span><span class="sxs-lookup"><span data-stu-id="7dc98-103">Other parameters of a method call are pushed on the stack.</span></span> <span data-ttu-id="7dc98-104">Konwencja wywoływania służy do wywołania metod w klasach wyeksportowane z niezarządzanej DLL.</span><span class="sxs-lookup"><span data-stu-id="7dc98-104">This calling convention is used to call methods on classes exported from an unmanaged DLL.</span></span>  
  
 <span data-ttu-id="7dc98-105">Klasy w <xref:System.Runtime.CompilerServices> są tylko do użytku autorów kompilatora.</span><span class="sxs-lookup"><span data-stu-id="7dc98-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="7dc98-106">Kompilatory Emituj niestandardowych Modyfikatory w metadanych, aby zmienić sposób, że przy użyciu kompilatora just in time (JIT) obsługuje wartości podczas domyślne zachowanie nie jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="7dc98-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="7dc98-107">Kompilator JIT napotkał modyfikator niestandardowych, obsługi przez wartość w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="7dc98-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="7dc98-108">Kompilatory można zastosować Modyfikatory niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="7dc98-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="7dc98-109">Przy użyciu kompilatora JIT musi odpowiadać na Modyfikatory wymagane, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="7dc98-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="7dc98-110">Kompilator języka C++ może wyemitować niestandardowych modyfikator opisujących sposób bajt powinny być traktowane w przypadkach, gdy przy użyciu kompilatora JIT traktuje bajtów w taki sposób, który nie jest zgodny z C++ domyślnie.</span><span class="sxs-lookup"><span data-stu-id="7dc98-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="7dc98-111">Modyfikatory niestandardowy może emitować w metadanych przy użyciu jednej z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="7dc98-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7dc98-112">Przy użyciu metod w <xref:System.Reflection.Emit.TypeBuilder> klas takich jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="7dc98-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="7dc98-113">Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który zawiera wywołań `modopt` i `modreq`i składania pliku o [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7dc98-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="7dc98-114">Przy użyciu odbicia niezarządzane interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="7dc98-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7dc98-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7dc98-115">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dc98-116">Klasy w <xref:System.Runtime.CompilerServices> są tylko do użytku autorów kompilatora.</span><span class="sxs-lookup"><span data-stu-id="7dc98-116">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>