<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a2d5a139391e58dec40909c64fe1d364288f9bf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39728153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <TypeSignature Language="F#" Value="type CallConvThiscall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, że należy używać metody <see langword="ThisCall" /> konwencji wywoływania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z `ThisCall` konwencji wywoływania, pierwszy parametr wywołania metody jest `this` wskaźnika, który jest przechowywany w rejestrze ECX. Inne parametry wywołania metody są wypychane na stosie. Ta konwencja wywołania jest używany do wywoływania metod w klasach wyeksportowane z niezarządzaną biblioteką DLL.  
  
 Klasy w <xref:System.Runtime.CompilerServices> są twórcom kompilatorów wyłącznie do użytku.  
  
 Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.  Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.  Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.  Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.  Kompilator języka C++ może emitować niestandardowe modyfikator do opisywania sposobu bajt powinny być traktowane w przypadkach, w którym kompilator JIT w taki sposób, który nie jest zgodna z C++ traktuje bajtów domyślnie.  
  
 Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:  
  
-   Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Za pomocą niezarządzany interfejs API odbicia.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy w <xref:System.Runtime.CompilerServices> są twórcom kompilatorów wyłącznie do użytku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>