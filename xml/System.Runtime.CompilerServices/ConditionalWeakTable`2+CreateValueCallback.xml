<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36637486" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key"><span data-ttu-id="b0c00-101">Klucz, który należy do wartości do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="b0c00-101">The key that belongs to the value to create.</span></span></param>
    <summary><span data-ttu-id="b0c00-102">Reprezentuje metodę, która tworzy wartości innych niż domyślne, można dodać jako część pary klucz/wartość do <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="b0c00-102">Represents a method that creates a non-default value to add as part of a key/value pair to a <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
    <returns><span data-ttu-id="b0c00-103">Wystąpienie typu odwołania, która reprezentuje wartość, aby dołączyć do określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="b0c00-103">An instance of a reference type that represents the value to attach to the specified key.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0c00-104"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Delegata hermetyzuje metody wywołania zwrotnego, które jest wywoływane przez <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> metody, gdy klucz jest przekazywany do metody nie zostanie znaleziony w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="b0c00-104">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object.</span></span> <span data-ttu-id="b0c00-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Metoda przekazuje metody wywołania zwrotnego klucz, który reprezentuje obiekt zarządzany, do której ma zostać dynamicznie dołączony wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="b0c00-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.</span></span> <span data-ttu-id="b0c00-106">Metoda jest odpowiedzialna za zwrócenie wartości właściwości do obiektu wywołującego, który z kolei Dodaje parę klucza i wartości do tabeli.</span><span class="sxs-lookup"><span data-stu-id="b0c00-106">The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.</span></span>  
  
 <span data-ttu-id="b0c00-107"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Metoda jest używana do zwrócenia wystąpienia typu referencyjnego, który można dołączyć do określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="b0c00-107">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key.</span></span> <span data-ttu-id="b0c00-108">Dzięki temu można zainicjować przy użyciu innych niż domyślne wartości dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b0c00-108">It enables that instance to be initialized using non-default values.</span></span> <span data-ttu-id="b0c00-109">Jeśli klucz nie zostanie znaleziony w tabeli <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> metoda Dodaje parę klucza i wartości, w której wartość jest inicjowany przy użyciu wartości domyślnych.</span><span class="sxs-lookup"><span data-stu-id="b0c00-109">If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> method adds a key/value pair in which the value is initialized using default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0c00-110">W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy.</span><span class="sxs-lookup"><span data-stu-id="b0c00-110">The following example defines a `MainClass` class and a `MainInfo` class.</span></span> <span data-ttu-id="b0c00-111">`MainInfo` zawiera informacje na temat `MainClass` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b0c00-111">`MainInfo` provides information about the `MainClass` instance.</span></span> <span data-ttu-id="b0c00-112">Umożliwia on również definiowanie statycznego (`Shared` w języku Visual Basic) `CreateAttachedValue` metody, które mogą być przypisane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegować i przekazywane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b0c00-112">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="b0c00-113">Przykład wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody w celu dodania `MainClass` obiektu i odpowiadającymi mu dostawcami `MainInfo` obiekt <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli.</span><span class="sxs-lookup"><span data-stu-id="b0c00-113">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="b0c00-114">Ten przykład ilustruje wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metod dodawania pary klucz/wartość do tabeli i wywołanie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodę, aby pobrać wartość, która należy do istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="b0c00-114">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>