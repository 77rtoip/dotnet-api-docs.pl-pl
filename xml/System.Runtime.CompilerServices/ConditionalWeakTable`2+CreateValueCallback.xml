<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="134801fc6fef443d3c5299eacf2142e1f51b1ec4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69275148" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Klucz, który należy do wartości, która ma zostać utworzona.</param>
    <summary>Reprezentuje metodę, która tworzy wartość różną od wartości domyślnej, która jest dodawana jako część pary klucz/wartość do <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> obiektu.</summary>
    <returns>Wystąpienie typu referencyjnego, które reprezentuje wartość dołączenia do określonego klucza.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Delegat hermetyzuje metodę wywołania zwrotnego, która jest wywoływana <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> przez metodę, gdy klucz przeszedł do metody nie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> został znaleziony w obiekcie. <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Metoda przekazuje metodę wywołania zwrotnego klucz, który reprezentuje zarządzany obiekt, do którego ma być dynamicznie dołączona wartość właściwości. Metoda jest odpowiedzialna za zwracanie wartości właściwości do obiektu wywołującego, co z kolei powoduje dodanie pary klucz/wartość do tabeli.  
  
 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Metoda jest używana do zwracania wystąpienia typu referencyjnego, który może zostać dołączony do określonego klucza. Umożliwia inicjowanie tego wystąpienia przy użyciu wartości innych niż domyślne. Jeśli klucz nie zostanie znaleziony w tabeli, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> Metoda dodaje parę klucz/wartość, w której wartość jest inicjowana przy użyciu wartości domyślnych.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `MainClass` klasę `MainInfo` i klasę. `MainInfo`zawiera informacje o `MainClass` wystąpieniu. Definiuje także statyczną (`Shared` w Visual Basic) `CreateAttachedValue` metodę, która <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> może być przypisana do delegata i przeniesiona <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> do metody. Przykład wywołuje metodę, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> aby `MainClass` dodać obiekt i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> jego odpowiadający `MainInfo` obiekt do tabeli. Przykład ilustruje także wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metod i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> , aby dodać pary klucz/wartość do tabeli <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> oraz wywołanie metody w celu pobrania wartości należącej do istniejącego klucza.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>
