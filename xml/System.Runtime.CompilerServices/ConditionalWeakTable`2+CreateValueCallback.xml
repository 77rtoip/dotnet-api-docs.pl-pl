<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="718db30665f9c856376a45366059227f3e8372ae" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58702354" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Klucz, który należy do wartości do utworzenia.</param>
    <summary>Reprezentuje metodę, która tworzy wartości innych niż domyślne, można dodać jako część pary klucz/wartość do <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> obiektu.</summary>
    <returns>Wystąpienie typu odwołania, która reprezentuje wartość, aby dołączyć do określonego klucza.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Delegata hermetyzuje metody wywołania zwrotnego, które jest wywoływane przez <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> metody, gdy klucz jest przekazywany do metody nie zostanie znaleziony w <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> obiektu. <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Metoda przekazuje metody wywołania zwrotnego klucz, który reprezentuje obiekt zarządzany, do której ma zostać dynamicznie dołączony wartość właściwości. Metoda jest odpowiedzialna za zwrócenie wartości właściwości do obiektu wywołującego, który z kolei Dodaje parę klucza i wartości do tabeli.  
  
 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Metoda jest używana do zwrócenia wystąpienia typu referencyjnego, który można dołączyć do określonego klucza. Dzięki temu można zainicjować przy użyciu innych niż domyślne wartości dla tego wystąpienia. Jeśli klucz nie zostanie znaleziony w tabeli <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> metoda Dodaje parę klucza i wartości, w której wartość jest inicjowany przy użyciu wartości domyślnych.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `MainClass` klasy i `MainInfo` klasy. `MainInfo` zawiera informacje na temat `MainClass` wystąpienia. Umożliwia on również definiowanie statycznego (`Shared` w języku Visual Basic) `CreateAttachedValue` metody, które mogą być przypisane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegować i przekazywane do <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody. Przykład wywołuje <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metody w celu dodania `MainClass` obiektu i odpowiadającymi mu dostawcami `MainInfo` obiekt <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabeli. Ten przykład ilustruje wywołania <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> i <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metod dodawania pary klucz/wartość do tabeli i wywołanie <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodę, aby pobrać wartość, która należy do istniejącego klucza.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>