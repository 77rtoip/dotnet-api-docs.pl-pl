<Type Name="CallConvStdcall" FullName="System.Runtime.CompilerServices.CallConvStdcall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="252a2755236af4d35b0603bde784ff4c2cee0870" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48689646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvStdcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvStdcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvStdcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvStdcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvStdcall" />
  <TypeSignature Language="F#" Value="type CallConvStdcall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5fd97-101">Wskazuje, że należy używać metody <see langword="StdCall" /> konwencji wywoływania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5fd97-101">Indicates that a method should use the <see langword="StdCall" /> calling convention.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd97-102">Wywoływany obiekt czyści stos.</span><span class="sxs-lookup"><span data-stu-id="5fd97-102">The callee cleans the stack.</span></span> <span data-ttu-id="5fd97-103">Jest to domyślnej konwencji wywoływania funkcji niezarządzanych z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="5fd97-103">This is the default convention for calling unmanaged functions from managed code.</span></span>  
  
 <span data-ttu-id="5fd97-104">Klasy w <xref:System.Runtime.CompilerServices> są twórcom kompilatorów wyłącznie do użytku.</span><span class="sxs-lookup"><span data-stu-id="5fd97-104">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="5fd97-105">Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.</span><span class="sxs-lookup"><span data-stu-id="5fd97-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="5fd97-106">Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="5fd97-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="5fd97-107">Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="5fd97-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="5fd97-108">Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="5fd97-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="5fd97-109">Kompilator języka C++ może emitować niestandardowe modyfikator do opisywania sposobu bajt powinny być traktowane w przypadkach, w którym kompilator JIT w taki sposób, który nie jest zgodna z C++ traktuje bajtów domyślnie.</span><span class="sxs-lookup"><span data-stu-id="5fd97-109">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="5fd97-110">Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:</span><span class="sxs-lookup"><span data-stu-id="5fd97-110">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="5fd97-111">Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="5fd97-111">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="5fd97-112">Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="5fd97-112">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="5fd97-113">Za pomocą niezarządzany interfejs API odbicia.</span><span class="sxs-lookup"><span data-stu-id="5fd97-113">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvStdcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvStdcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvStdcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5fd97-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.CallConvStdcall" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fd97-114">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvStdcall" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd97-115">Klasy w <xref:System.Runtime.CompilerServices> są twórcom kompilatorów wyłącznie do użytku.</span><span class="sxs-lookup"><span data-stu-id="5fd97-115">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>