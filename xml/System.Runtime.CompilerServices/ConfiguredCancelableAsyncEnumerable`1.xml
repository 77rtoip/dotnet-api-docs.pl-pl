<Type Name="ConfiguredCancelableAsyncEnumerable&lt;T&gt;" FullName="System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abae9da72730e0ea8e070675f49c905c70508f5f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69275017" /></Metadata><TypeSignature Language="C#" Value="public struct ConfiguredCancelableAsyncEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ConfiguredCancelableAsyncEnumerable`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConfiguredCancelableAsyncEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ConfiguredCancelableAsyncEnumerable" />
  <TypeSignature Language="F#" Value="type ConfiguredCancelableAsyncEnumerable&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Typ wartości do wyliczenia.</typeparam>
    <summary>Zapewnia oczekiwane asynchroniczne wyliczalne, które umożliwia anulowanie iteracji i skonfigurowane oczekiwania.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1&lt;!T&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredCancelableAsyncEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredCancelableAsyncEnumerable&lt;T&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="member this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;'T&gt;" Usage="configuredCancelableAsyncEnumerable.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><see langword="true" />Aby przechwycić i zorganizować z powrotem do bieżącego kontekstu; w przeciwnym razie. <see langword="false" /></param>
        <summary>Określa, jak czeka na zadania zwracane z iteracji asynchronicznej.</summary>
        <returns>Skonfigurowany wyliczalny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
Spowoduje to zastąpienie wszystkich poprzednich wartości ustawionych przez <xref:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.ConfigureAwait(System.Boolean)> dla tej iteracji.
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt;.Enumerator GetAsyncEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1/Enumerator&lt;!T&gt; GetAsyncEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.GetAsyncEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsyncEnumerator () As ConfiguredCancelableAsyncEnumerable(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredCancelableAsyncEnumerable&lt;T&gt;::Enumerator GetAsyncEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetAsyncEnumerator : unit -&gt; System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;'T&gt;.Enumerator" Usage="configuredCancelableAsyncEnumerable.GetAsyncEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację asynchronicznie za poorednictwem kolekcji, które umożliwiają anulowanie iteracji i skonfigurowane oczekiwania.</summary>
        <returns>Moduł wyliczający dla <see cref="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1" /> klasy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCancellation">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt; WithCancellation (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1&lt;!T&gt; WithCancellation(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.WithCancellation(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredCancelableAsyncEnumerable&lt;T&gt; WithCancellation(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WithCancellation : System.Threading.CancellationToken -&gt; System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;'T&gt;" Usage="configuredCancelableAsyncEnumerable.WithCancellation cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Token anulowania, który ma być używany.</param>
        <summary>Ustawia do przekazanie do <see cref="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" /> podczas iteracji. <see cref="T:System.Threading.CancellationToken" /></summary>
        <returns>Skonfigurowany wyliczalny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
Spowoduje to zastąpienie wszystkich poprzednich <xref:System.Threading.CancellationToken> <xref:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.WithCancellation(System.Threading.CancellationToken)> zestawów dla tej iteracji.
          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
