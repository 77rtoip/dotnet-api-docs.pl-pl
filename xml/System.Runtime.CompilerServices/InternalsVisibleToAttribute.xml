<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19b0b72bef78fdaed18e2dca027e9796dc860d5c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39796128" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8fa23-101">Określa, że typy, które są zwykle widoczne tylko w bieżącym zestawie są widoczne dla określonego zestawu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fa23-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa23-102">Zwykle typy i elementy członkowskie z `internal` zakresu (w języku C#) i `friend` zakresu (w języku Visual Basic) są widoczne tylko w zestawie, w której są zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="8fa23-102">Ordinarily, types and members with `internal` scope (in C#) and `friend` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="8fa23-103"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Atrybutu sprawia, że ich również widoczna do typów w określonym zestawie, który jest znany jako zestaw przyjazny.</span><span class="sxs-lookup"><span data-stu-id="8fa23-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span>  
  
 <span data-ttu-id="8fa23-104">Ten atrybut jest stosowany na poziomie zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-104">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="8fa23-105">Oznacza to, że można uwzględnić na początku pliku kodu źródłowego lub może on być uwzględniony w pliku AssemblyInfo w projekcie programu Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="8fa23-105">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="8fa23-106">Ten atrybut służy do określania zestawu friend jednego, który mają dostęp do wewnętrznych typów i elementów członkowskich bieżącego zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-106">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="8fa23-107">Można zdefiniować wiele przyjaznych zestawów na dwa sposoby.</span><span class="sxs-lookup"><span data-stu-id="8fa23-107">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="8fa23-108">One może pojawić się jako poszczególne atrybuty na poziomie zestawu, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="8fa23-108">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="8fa23-109">Również może zostać wyświetlony z oddzielnym <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tagi, ale jeden `assembly` — słowo kluczowe, w poniższym przykładzie pokazano.</span><span class="sxs-lookup"><span data-stu-id="8fa23-109">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="8fa23-110">Przyjazny zestaw jest identyfikowane za pomocą <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8fa23-110">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="8fa23-111">Zarówno w bieżącym zestawie, jak i w przyjazny zestaw muszą być bez znaku lub oba zestawy muszą być podpisane za pomocą silnej nazwy.</span><span class="sxs-lookup"><span data-stu-id="8fa23-111">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="8fa23-112">Jeśli oba zestawy są bez znaku, `assemblyName` argument składa się z nazwy zestawu friend, określony bez rozszerzenia nazwy pliku lub ścieżki katalogu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-112">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="8fa23-113">Jeśli oba zestawy są podpisane za pomocą silnej nazwy, argument <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> konstruktora musi składać się z nazwy zestawu bez jego katalogu ścieżki i rozszerzenia, wraz z kluczem pełnego publicznego (i nie jego token klucza publicznego).</span><span class="sxs-lookup"><span data-stu-id="8fa23-113">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="8fa23-114">Aby uzyskać klucz publiczny pełnego zestawu z silną nazwą, zobacz [uzyskiwania klucza publicznego pełnej](#Key) sekcję w dalszej części tego artykułu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-114">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="8fa23-115">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> za pomocą zestawów o silnych nazwach, zobacz <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8fa23-115">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8fa23-116">Nie ma wartości <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, lub <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> pola w argumencie; Kompilatory języka Visual Basic, C# i C++ traktować to jako błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="8fa23-116">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="8fa23-117">Jeśli używasz kompilatora, które nie traktuje tego jako błąd (takie jak [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) i zestawy o silnych nazwach, <xref:System.MethodAccessException> wyjątek jest zgłaszany po raz pierwszy uzyskuje dostęp do określonego przyjazny zestaw zestaw, który zawiera <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-117">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="8fa23-118">Aby uzyskać więcej informacji na temat używania tego atrybutu zobacz następujące tematy:</span><span class="sxs-lookup"><span data-stu-id="8fa23-118">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8fa23-119">Przyjazne zestawy (C++)</span><span class="sxs-lookup"><span data-stu-id="8fa23-119">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8fa23-120">Przyjazne zestawy</span><span class="sxs-lookup"><span data-stu-id="8fa23-120">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="8fa23-121">Uzyskiwania klucza publicznego pełnej</span><span class="sxs-lookup"><span data-stu-id="8fa23-121">Getting the full public key</span></span>  
 <span data-ttu-id="8fa23-122">Możesz użyć [narzędzie silnych nazw (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) można pobrać pełnej publiczny klucz z pliku klucza o silnej nazwie (.snk).</span><span class="sxs-lookup"><span data-stu-id="8fa23-122">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="8fa23-123">Aby to zrobić, należy wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="8fa23-123">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="8fa23-124">Wyodrębnij klucz publiczny z pliku klucza o silnej nazwie do osobnego pliku:</span><span class="sxs-lookup"><span data-stu-id="8fa23-124">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="8fa23-125">**SN -p***snk_file* *outfile  *</span><span class="sxs-lookup"><span data-stu-id="8fa23-125">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="8fa23-126">Wyświetl pełne publiczny klucz do konsoli:</span><span class="sxs-lookup"><span data-stu-id="8fa23-126">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="8fa23-127">**SN - tp***outfile*</span><span class="sxs-lookup"><span data-stu-id="8fa23-127">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="8fa23-128">Skopiuj i Wklej wartość klucza publicznej do kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="8fa23-128">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="8fa23-129">Kompilowanie zestawu friend w języku C#</span><span class="sxs-lookup"><span data-stu-id="8fa23-129">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="8fa23-130">Użycie kompilator języka C# do kompilowania zestaw przyjazny, należy jawnie określić nazwę pliku wyjściowego (.exe lub .dll), za pomocą **/out** — opcja kompilatora.</span><span class="sxs-lookup"><span data-stu-id="8fa23-130">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="8fa23-131">Jest to wymagane, ponieważ kompilator nie ma jeszcze wygenerować nazwę zestawu, który tworzysz w czasie, który jest wiązanie odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-131">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="8fa23-132">**/Out** — opcja kompilatora jest opcjonalne dla kompilatora języka Visual Basic i odpowiedni **-out** lub **-o** — opcja kompilatora nie należy używać podczas kompilowania friend zestawy za pomocą kompilatora języka F #.</span><span class="sxs-lookup"><span data-stu-id="8fa23-132">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="8fa23-133">Kompilowanie zestawu friend przy użyciu języka C++</span><span class="sxs-lookup"><span data-stu-id="8fa23-133">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="8fa23-134">W języku C++, w celu zapewnienia wewnętrznych składowych włączane przez <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu dostępny zestaw przyjazny, należy użyć `as_friend` atrybutu w dyrektywie C++.</span><span class="sxs-lookup"><span data-stu-id="8fa23-134">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="8fa23-135">Aby uzyskać więcej informacji, zobacz [przyjazne zestawy (C++)](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span><span class="sxs-lookup"><span data-stu-id="8fa23-135">For more information, see [Friend Assemblies (C++)](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa23-136">**Zestawy oznaczone**</span><span class="sxs-lookup"><span data-stu-id="8fa23-136">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="8fa23-137">W poniższym przykładzie użyto <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby wprowadzić `internal` metodę o nazwie `AppendDirectorySeparator` w zestawu podpisanego za pomocą widoczne do innego zestawu podpisem.</span><span class="sxs-lookup"><span data-stu-id="8fa23-137">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="8fa23-138">Definiuje on `FileUtilities` klasa, która zawiera wewnętrzną `AppendDirectorySeparator` metody.</span><span class="sxs-lookup"><span data-stu-id="8fa23-138">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="8fa23-139"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Atrybut jest stosowany do zestawu, który zawiera `FileUtilities` klasy.</span><span class="sxs-lookup"><span data-stu-id="8fa23-139">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="8fa23-140">Ten atrybut umożliwia zestaw o nazwie `Friend1` na dostęp do tego elementu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="8fa23-140">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="8fa23-141">Jeśli poniższy przykład jest kompilowany do zestawu o silnej nazwie o nazwie `Friend1`, `Example.Main` method in Class metoda `Friend1` pomyślnie wywołać `FileUtilities.AppendDirectorySeparator` metody, mimo że metoda jest wewnętrzna `Assembly1` zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-141">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="8fa23-142">Należy pamiętać, że jeśli kompilujesz w języku C# z wiersza polecenia, należy użyć **/out** przełącznika kompilatora, aby upewnić się, nazwa zestawu friend jest dostępna, gdy kompilator tworzy powiązanie z odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-142">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="8fa23-143">**Zestawy nieoznaczone**</span><span class="sxs-lookup"><span data-stu-id="8fa23-143">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="8fa23-144">W poniższym przykładzie użyto <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby wprowadzić `internal` niepodpisanego zestawu widoczne na inny element członkowski niepodpisanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-144">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="8fa23-145">Ten atrybut zapewnia, że `internal` `StringLib.IsFirstLetterUpperCase` metody w zestawie o nazwie `UtilityLib` jest widoczny dla kodu w zestawie o nazwie `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8fa23-145">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="8fa23-146">Poniżej znajduje się kod źródłowy UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="8fa23-146">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="8fa23-147">W poniższym przykładzie przedstawiono kod źródłowy `Friend2` zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-147">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="8fa23-148">Należy pamiętać, że jeśli kompilujesz w języku C# z wiersza polecenia, należy użyć **/out** przełącznika kompilatora, aby upewnić się, nazwa zestawu friend jest dostępna, gdy kompilator tworzy powiązanie z odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-148">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8fa23-149">Nazwa zestawu przyjaciela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-149">The name of a friend assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fa23-150">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> klasy o nazwie określonej przyjazny zestaw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-150">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa23-151"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Konstruktor określa zestaw "friend" to zestaw, który ma dostęp do wewnętrznych typów i elementów członkowskich bieżącego zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-151">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="8fa23-152">Zarówno w bieżącym zestawie, jak i w przyjazny zestaw muszą być bez znaku lub obu z nich musi być podpisany silną nazwą.</span><span class="sxs-lookup"><span data-stu-id="8fa23-152">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="8fa23-153">(Aby uzyskać więcej informacji na temat zestawów o silnych nazwach, zobacz [tworzenie i zestawy Using Strong-Named](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Jeśli obie są bez znaku, `assemblyName` argument składa się z nazwy zestawu friend, określony bez rozszerzenia pliku lub ścieżki katalogu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-153">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="8fa23-154">Jeśli obie są podpisane, `assemblyName` składa się z nazwy zestawu friend bez jego katalogu ścieżki i rozszerzenia, wraz ze swojego klucza publicznego pełnej (ale nie jego token klucza publicznego).</span><span class="sxs-lookup"><span data-stu-id="8fa23-154">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="8fa23-155">Inne składniki silnej nazwy, takie jak te, które zapewniają kultura, wersji lub informacje o architekturze procesora, nie można określić w `assemblyName` argumentu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-155">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fa23-156">Użycie kompilator języka C# do kompilowania zestaw przyjazny, należy jawnie określić nazwę pliku wyjściowego (.exe lub .dll), za pomocą **/out** — opcja kompilatora.</span><span class="sxs-lookup"><span data-stu-id="8fa23-156">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="8fa23-157">Jest to wymagane, ponieważ kompilator nie ma jeszcze wygenerować nazwę zestawu, który tworzysz w czasie, który jest wiązanie odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-157">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="8fa23-158">**/Out** — opcja kompilatora jest opcjonalne dla kompilatora języka Visual Basic i odpowiedni **-out** lub **-o** — opcja kompilatora nie należy używać podczas kompilowania friend zestawy za pomocą kompilatora języka F #.</span><span class="sxs-lookup"><span data-stu-id="8fa23-158">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="8fa23-159">Możesz użyć [Sn.exe (narzędzie silnych nazw)](~/docs/framework/tools/sn-exe-strong-name-tool.md) można pobrać pełnej publiczny klucz z pliku klucza o silnej nazwie (.snk).</span><span class="sxs-lookup"><span data-stu-id="8fa23-159">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="8fa23-160">Aby to zrobić, należy wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="8fa23-160">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="8fa23-161">Wyodrębnij klucz publiczny z pliku klucza o silnej nazwie do osobnego pliku:</span><span class="sxs-lookup"><span data-stu-id="8fa23-161">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="8fa23-162">**SN -p***snk_file* *outfile  *</span><span class="sxs-lookup"><span data-stu-id="8fa23-162">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="8fa23-163">Wyświetl pełne publiczny klucz do konsoli:</span><span class="sxs-lookup"><span data-stu-id="8fa23-163">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="8fa23-164">**SN - tp***outfile*</span><span class="sxs-lookup"><span data-stu-id="8fa23-164">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="8fa23-165">Skopiuj i Wklej wartość klucza publicznej do kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="8fa23-165">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="8fa23-166">Aby uzyskać więcej informacji o sposobie używania <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutów, zobacz następujące tematy:</span><span class="sxs-lookup"><span data-stu-id="8fa23-166">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8fa23-167">Przyjazne zestawy (C++)</span><span class="sxs-lookup"><span data-stu-id="8fa23-167">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8fa23-168">Przyjazne zestawy</span><span class="sxs-lookup"><span data-stu-id="8fa23-168">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="8fa23-169">**Zestawy oznaczone**</span><span class="sxs-lookup"><span data-stu-id="8fa23-169">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="8fa23-170">W poniższym przykładzie użyto <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby wprowadzić `internal` metodę o nazwie `AppendDirectorySeparator` w zestawu podpisanego za pomocą widoczne do innego zestawu podpisem.</span><span class="sxs-lookup"><span data-stu-id="8fa23-170">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="8fa23-171">Definiuje on `FileUtilities` klasa, która zawiera wewnętrzną `AppendDirectorySeparator` metody.</span><span class="sxs-lookup"><span data-stu-id="8fa23-171">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="8fa23-172"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Atrybut jest stosowany do zestawu, który zawiera `FileUtilities` klasy.</span><span class="sxs-lookup"><span data-stu-id="8fa23-172">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="8fa23-173">Ten atrybut umożliwia zestaw o nazwie `Friend1` na dostęp do tego elementu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="8fa23-173">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="8fa23-174">Jeśli poniższy przykład jest kompilowany do zestawu o silnej nazwie o nazwie `Friend1`, można pomyślnie wywołać `FileUtilities.AppendDirectorySeparator` metody, nawet jeśli metoda jest wewnętrzna `Assembly1` zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-174">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="8fa23-175">Należy pamiętać, że jeśli kompilujesz w języku C# z wiersza polecenia, należy użyć **/out** przełącznika kompilatora, aby upewnić się, nazwa zestawu friend jest dostępna, gdy kompilator tworzy powiązanie z odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-175">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="8fa23-176">W poniższym przykładzie użyto <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby wprowadzić `internal` niepodpisanego zestawu widoczne na inny element członkowski niepodpisanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-176">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="8fa23-177">Ten atrybut zapewnia, że `internal` `StringLib.IsFirstLetterUpperCase` metody w zestawie o nazwie `UtilityLib` jest widoczny dla kodu w zestawie o nazwie `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="8fa23-177">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="8fa23-178">Poniżej znajduje się kod źródłowy UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="8fa23-178">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="8fa23-179">**Zestawy nieoznaczone**</span><span class="sxs-lookup"><span data-stu-id="8fa23-179">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="8fa23-180">W poniższym przykładzie przedstawiono kod źródłowy `Friend2` zestawu.</span><span class="sxs-lookup"><span data-stu-id="8fa23-180">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="8fa23-181">Należy pamiętać, że jeśli kompilujesz w języku C# z wiersza polecenia, należy użyć **/out** przełącznika kompilatora, aby upewnić się, nazwa zestawu friend jest dostępna, gdy kompilator tworzy powiązanie z odwołań zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="8fa23-181">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa23-182">Ta właściwość nie jest zaimplementowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-182">This property is not implemented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa23-183">Ta właściwość nie zwraca wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-183">This property does not return a value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fa23-184">Pobiera nazwę zestawu friend na wszystkie typy i składowe typu, które są oznaczone <see langword="internal" /> — słowo kluczowe, które mają być widoczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-184">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fa23-185">Ciąg, który reprezentuje nazwę przyjazny zestaw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fa23-185">A string that represents the name of the friend assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa23-186">Aby uzyskać więcej informacji o sposobie używania <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutów, zobacz następujące tematy:</span><span class="sxs-lookup"><span data-stu-id="8fa23-186">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="8fa23-187">Przyjazne zestawy (C++)</span><span class="sxs-lookup"><span data-stu-id="8fa23-187">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="8fa23-188">Przyjazne zestawy</span><span class="sxs-lookup"><span data-stu-id="8fa23-188">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>