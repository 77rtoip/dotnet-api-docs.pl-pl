<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a76c714e637ea2e4143094372ccfe538204aa2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39754338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <TypeSignature Language="F#" Value="type IsVolatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="16ff5-101">Oznacza pole jako volatile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16ff5-101">Marks a field as volatile.</span>
      </span>
      <span data-ttu-id="16ff5-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16ff5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16ff5-103">`IsVolatile` jest używana tylko w modyfikatorów niestandardowych podpisów metody do wskazania, że pole, które oznacza jest nietrwały.</span><span class="sxs-lookup"><span data-stu-id="16ff5-103">`IsVolatile` is used only in custom modifiers of method signatures to indicate that the field it marks is volatile.</span></span> <span data-ttu-id="16ff5-104">Wszelkie kompilatora, który importuje metadane z co najmniej jedno pole oznaczone jako volatile należy użyć instrukcji z prefiksem `volatile.` można uzyskać dostęp do tych pól.</span><span class="sxs-lookup"><span data-stu-id="16ff5-104">Any compiler that imports metadata with one or more fields marked as volatile must use instructions prefixed with `volatile.` to access such fields.</span></span>  
  
 <span data-ttu-id="16ff5-105">Klasy w <xref:System.Runtime.CompilerServices> są twórcom kompilatorów wyłącznie do użytku.</span><span class="sxs-lookup"><span data-stu-id="16ff5-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="16ff5-106">Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.</span><span class="sxs-lookup"><span data-stu-id="16ff5-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="16ff5-107">Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="16ff5-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="16ff5-108">Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="16ff5-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="16ff5-109">Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="16ff5-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="16ff5-110">Kompilator języka C++ może emitować niestandardowe modyfikator do opisywania sposobu bajt powinny być traktowane w przypadkach, w którym kompilator JIT w taki sposób, który nie jest zgodna z C++ traktuje bajtów domyślnie.</span><span class="sxs-lookup"><span data-stu-id="16ff5-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="16ff5-111">Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:</span><span class="sxs-lookup"><span data-stu-id="16ff5-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="16ff5-112">Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="16ff5-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="16ff5-113">Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="16ff5-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="16ff5-114">Za pomocą niezarządzany interfejs API odbicia.</span><span class="sxs-lookup"><span data-stu-id="16ff5-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>