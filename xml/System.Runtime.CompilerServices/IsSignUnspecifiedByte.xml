<Type Name="IsSignUnspecifiedByte" FullName="System.Runtime.CompilerServices.IsSignUnspecifiedByte">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47dbaea5744a3bb0b065a4afbb61b524826d8d86" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37639176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsSignUnspecifiedByte" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsSignUnspecifiedByte extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte" />
  <TypeSignature Language="VB.NET" Value="Public Class IsSignUnspecifiedByte" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsSignUnspecifiedByte abstract sealed" />
  <TypeSignature Language="F#" Value="type IsSignUnspecifiedByte = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wskazuje, że modyfikator nie jest podpisany ani bez znaku. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektórych języków programowania, takich jak C++ rozpoznaje trzy odrębne `char` wartości: `signed char`, `unsigned char`, i `char`.  Aby rozróżnić niemodyfikowana `char` wpisz od innych, kompilator Microsoft C++ dodaje <xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte> modyfikator do każdego `char` typu wysyłanego do zestawu.  
  
 Kompilatory emitować modyfikatorów niestandardowych w metadanych, aby zmienić sposób, że kompilator just-in-time (JIT) domyślnie nie jest odpowiednie, obsługuje wartości.  Gdy kompilator JIT napotka modyfikator niestandardowych, obsługuje wartości w taki sposób, który określa modyfikator.  Kompilatory zastosować modyfikatorów niestandardowych metod, parametry i wartości zwracane.  Musi odpowiadać na Modyfikatory kompilatora JIT, ale można zignorować Modyfikatory opcjonalne.  
  
 Modyfikatory niestandardowe może emitować do metadanych przy użyciu jednej z następujących technik:  
  
-   Za pomocą metod w <xref:System.Reflection.Emit.TypeBuilder> klasy takie jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generowanie pliku instrukcji Microsoft intermediate language (MSIL), który zawiera wywołania `modopt` i `modreq`i złożenia plik z [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Za pomocą niezarządzany interfejs API odbicia.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy zestawu przy użyciu klas w <xref:System.Reflection.Emit> przestrzeni nazw i emituje <xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte> modyfikator do tego zestawu.  
  
 [!code-cpp[Runtime.CompilerServices.IsSignUnspecifiedByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsSignUnspecifiedByte/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>