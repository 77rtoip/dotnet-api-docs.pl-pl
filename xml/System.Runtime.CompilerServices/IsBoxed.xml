<Type Name="IsBoxed" FullName="System.Runtime.CompilerServices.IsBoxed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98fdca9d104de305cc9a6aac9acaaa49fa0e0d89" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36636729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsBoxed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsBoxed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsBoxed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsBoxed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsBoxed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsBoxed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a411b-101">Wskazuje typ referencyjny zmodyfikowane opakowanym typem wartościowym.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a411b-101">Indicates that the modified reference type is a boxed value type.</span>
      </span>
      <span data-ttu-id="a411b-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a411b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a411b-103">Kompilator Microsoft C++ obsługuje spakowanymi typami wartości bezpośrednio w języku.</span><span class="sxs-lookup"><span data-stu-id="a411b-103">The Microsoft C++ compiler supports boxed value types directly in the language.</span></span>  <span data-ttu-id="a411b-104">Informacje o spakowanymi typami wartości jest wydane do metadanych jako modyfikator niestandardowych, gdzie modyfikator decorates odwołanie do typu wartość jest opakowany.</span><span class="sxs-lookup"><span data-stu-id="a411b-104">Information about boxed value types is emitted into metadata as a custom modifier, where the modifier decorates a reference to the value type being boxed.</span></span>  
  
 <span data-ttu-id="a411b-105">Kompilatory Emituj niestandardowych Modyfikatory w metadanych, aby zmienić sposób, że przy użyciu kompilatora just in time (JIT) obsługuje wartości podczas domyślne zachowanie nie jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="a411b-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="a411b-106">Kompilator JIT napotkał modyfikator niestandardowych, obsługi przez wartość w taki sposób, który określa modyfikator.</span><span class="sxs-lookup"><span data-stu-id="a411b-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="a411b-107">Kompilatory można zastosować Modyfikatory niestandardowych metod, parametry i wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="a411b-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="a411b-108">Przy użyciu kompilatora JIT musi odpowiadać na Modyfikatory wymagane, ale można zignorować Modyfikatory opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="a411b-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="a411b-109">Modyfikatory niestandardowy może emitować w metadanych przy użyciu jednej z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="a411b-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="a411b-110">Przy użyciu metod w <xref:System.Reflection.Emit.TypeBuilder> klas takich jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="a411b-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="a411b-111">Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który zawiera wywołań `modopt` i `modreq`i składania pliku o [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="a411b-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="a411b-112">Przy użyciu odbicia niezarządzane interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="a411b-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a411b-113">W poniższym przykładzie pokazano sposób Emituj <xref:System.Runtime.CompilerServices.IsBoxed> obiektu w zestawie przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="a411b-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsBoxed> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsBoxed/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>