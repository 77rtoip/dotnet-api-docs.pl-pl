<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsExplicitlyDereferenced.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53bed365376a8bc72e6c581461502e633c003fe78.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bed365376a8bc72e6c581461502e633c003fe78</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Indicates that a managed pointer represents a pointer parameter within a method signature.</source>
          <target state="translated">Wskazuje, że wskaźnik zarządzanych reprezentuje parametr wskaźnika w podpisie metody.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>In C++, managed pointers and managed references are emitted into metadata as pointers.</source>
          <target state="translated">W języku C++ zarządzanych wskaźników i zarządzanych odwołania zostały wydane do metadanych jako wskaźników.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>To distinguish between the two types in metadata, the Microsoft  C++ compiler applies this modifier to managed pointers.</source>
          <target state="translated">Kompilator Microsoft C++ do rozróżniania między dwoma typami w metadanych, dotyczy modyfikator wskaźniki zarządzanych.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>It emits no modifier on managed reference types.</source>
          <target state="translated">Emituje go nie modyfikatora w typach referencyjnych zarządzanych.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Compilers need to know the correct calling syntax when importing a method from metadata scope.</source>
          <target state="translated">Kompilatory trzeba znać prawidłowa składnia wywoływania podczas importowania metodę z zakresu metadanych.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced&gt;</ph> class and its partner, the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced&gt;</ph> class, disambiguate reference parameters from pointer parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced&gt;</ph> Klasy i jej partnerów <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced&gt;</ph> klasy, odróżniania parametrów odwołania z parametrów wskaźnika.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">Kompilatory Emituj niestandardowych Modyfikatory w metadanych, aby zmienić sposób, że przy użyciu kompilatora just in time (JIT) obsługuje wartości podczas domyślne zachowanie nie jest odpowiedni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">Kompilator JIT napotkał modyfikator niestandardowych, obsługi przez wartość w taki sposób, który określa modyfikator.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">Kompilatory można zastosować Modyfikatory niestandardowych metod, parametry i wartości zwracane.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">Przy użyciu kompilatora JIT musi odpowiadać na Modyfikatory wymagane, ale można zignorować Modyfikatory opcjonalne.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>You can emit custom modifiers into metadata using one of the following techniques:</source>
          <target state="translated">Modyfikatory niestandardowy może emitować w metadanych przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Using methods in the <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> class such as <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</source>
          <target state="translated">Przy użyciu metod w <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> klas takich jak <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</source>
          <target state="translated">Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który zawiera wywołań <ph id="ph1">`modopt`</ph> i <ph id="ph2">`modreq`</ph>i składania pliku o <bpt id="p1">[</bpt>Ilasm.exe (asembler IL)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>Using the unmanaged reflection API.</source>
          <target state="translated">Przy użyciu odbicia niezarządzane interfejsu API.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced">
          <source>The following example demonstrates how to emit an <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced&gt;</ph> object into an assembly using reflection.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób Emituj <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced&gt;</ph> obiektu w zestawie przy użyciu odbicia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>