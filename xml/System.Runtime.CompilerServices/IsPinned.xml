<Type Name="IsPinned" FullName="System.Runtime.CompilerServices.IsPinned">
  <Metadata><Meta Name="ms.openlocfilehash" Value="533d2858333b5843a5e1e5f740c4acdac34efb6d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69274012" /></Metadata><TypeSignature Language="C#" Value="public static class IsPinned" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsPinned extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsPinned" />
  <TypeSignature Language="VB.NET" Value="Public Class IsPinned" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsPinned abstract sealed" />
  <TypeSignature Language="F#" Value="type IsPinned = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wskazuje, że zmodyfikowane wystąpienie jest przypięte w pamięci. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kompilatory emitują Modyfikatory niestandardowe w metadanych, aby zmienić sposób, w jaki kompilator just-in-Time (JIT) obsługuje wartości, gdy zachowanie domyślne jest nieodpowiednie.  Gdy kompilator JIT napotyka modyfikator niestandardowy, obsługuje wartość w sposób określany przez modyfikator.  Kompilatory mogą stosować Modyfikatory niestandardowe do metod, parametrów i zwracanych wartości.  Kompilator JIT musi odpowiadać na wymagane modyfikatory, ale może ignorować opcjonalne modyfikatory.  C++ Kompilator może wyemitować modyfikator niestandardowy, aby opisać, jak należy traktować bajt w przypadkach, gdy kompilator JIT traktuje bajty w sposób, który nie jest zgodny C++ z wartością domyślną.  
  
 Modyfikatory niestandardowe można emitować do metadanych przy użyciu jednej z następujących technik:  
  
-   Korzystanie z metod w <xref:System.Reflection.Emit.TypeBuilder> klasie takich jak <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>,, i <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generowanie pliku instrukcji języka pośredniego (MSIL) firmy Microsoft, który `modopt` zawiera `modreq`wywołania do i i asembler pliku z [Ilasm. exe (Asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Korzystanie z niezarządzanego interfejsu API odbicia.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób emitowania <xref:System.Runtime.CompilerServices.IsPinned> obiektu do zestawu przy użyciu odbicia.  
  
 [!code-cpp[Runtime.CompilerServices.IsPinned#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsPinned/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
