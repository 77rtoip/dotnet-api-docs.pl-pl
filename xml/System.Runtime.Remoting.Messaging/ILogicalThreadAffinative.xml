<Type Name="ILogicalThreadAffinative" FullName="System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3678102e6ab1363882e5159a05e3f2b57a63512f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69266962" /></Metadata><TypeSignature Language="C#" Value="public interface ILogicalThreadAffinative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogicalThreadAffinative" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogicalThreadAffinative" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogicalThreadAffinative" />
  <TypeSignature Language="F#" Value="type ILogicalThreadAffinative = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oznacza obiekt, który można propagować poza <see cref="T:System.AppDomain" /> obiektem <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />w.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy zdalne wywołanie metody jest wykonywane do obiektu w innym <xref:System.AppDomain>, bieżąca <xref:System.Runtime.Remoting.Messaging.CallContext> Klasa generuje <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> ten ruch wraz z wywołaniem do lokalizacji zdalnej. Tylko obiekty, które uwidaczniają <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interfejs i są przechowywane w, <xref:System.Runtime.Remoting.Messaging.CallContext> <xref:System.AppDomain>są rozmnożone poza. Obiekty, które nie obsługują tego interfejsu, nie są przesyłane <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> w wystąpieniach z wywołaniami metod zdalnych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interfejsu do przesyłania [obiektów Principal i Identity](~/docs/standard/security/principal-and-identity-objects.md) do lokalizacji zdalnej w celu identyfikacji. Aby wyświetlić kod `HelloServiceClass` klasy używanej w przykładzie, zobacz przykład <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> dla metody. Aby wyświetlić kod klasy serwera używanej w tym przykładzie, zobacz przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> klasy. Aby wyświetlić kod klasy klienta używanej w przykładzie, zobacz przykład dla <xref:System.Runtime.Remoting.Messaging.CallContext> klasy.  
  
 [!code-cpp[CallContext#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#2)]
 [!code-csharp[CallContext#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#2)]
 [!code-vb[CallContext#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
