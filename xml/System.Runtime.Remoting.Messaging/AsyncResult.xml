<Type Name="AsyncResult" FullName="System.Runtime.Remoting.Messaging.AsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8dcfaa989a8bc907f295feb15394366e5aa96ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncResult : IAsyncResult, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncResult&#xA;Implements IAsyncResult, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult : IAsyncResult, System::Runtime::Remoting::Messaging::IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="96c80-101">Hermetyzuje wyniki operacji asynchronicznej obiektu delegowanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96c80-101">Encapsulates the results of an asynchronous operation on a delegate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-102"><xref:System.Runtime.Remoting.Messaging.AsyncResult> Klasa jest używana w połączeniu z wywołań metod asynchronicznych przy użyciu delegatów.</span><span class="sxs-lookup"><span data-stu-id="96c80-102">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is used in conjunction with asynchronous method calls made using delegates.</span></span> <span data-ttu-id="96c80-103"><xref:System.IAsyncResult> Zwrócone przez pełnomocnika `BeginInvoke` metody mogą być rzutowane na <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="96c80-103">The <xref:System.IAsyncResult> returned from the delegate's `BeginInvoke` method can be cast to an <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span></span> <span data-ttu-id="96c80-104"><xref:System.Runtime.Remoting.Messaging.AsyncResult> Ma <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> właściwość, która zawiera obiekt delegowany obiekt na został wywołany wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="96c80-104">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> has the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property that holds the delegate object on which the asynchronous call was invoked.</span></span>  
  
 <span data-ttu-id="96c80-105">Aby uzyskać więcej informacji na temat `BeginInvoke` i wywołania asynchroniczne przy użyciu delegatów, zobacz [programowania przy użyciu Delegaty asynchroniczne](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-105">For more information about `BeginInvoke` and asynchronous calls using delegates, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c80-106">W poniższym przykładzie pokazano sposób użycia <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> właściwości do pobrania <xref:System.Threading.WaitHandle>i Oczekiwanie na wywołanie asynchroniczne obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="96c80-106">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="96c80-107"><xref:System.Threading.WaitHandle> Jest sygnalizowane po zakończeniu wywołania asynchronicznego i poczekaj na jego, wywołując <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-107">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="96c80-108">Przykład składa się z dwóch klas, klasy zawierającej metodę, która jest wywoływana asynchronicznie, i klasy, który zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-108">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="96c80-109">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-109">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncDelegate">
      <MemberSignature Language="C#" Value="public virtual object AsyncDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncDelegate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncDelegate { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-110">Pobiera obiekt delegata, w którym wywołano wywołanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-110">Gets the delegate object on which the asynchronous call was invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-111">Obiektu delegowanego, na której wywołano wywołanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-111">The delegate object on which the asynchronous call was invoked.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-112"><xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> Właściwości mogą być rzutowane na rzeczywiste klasy delegatu zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="96c80-112">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property can be cast to the actual class of the user-defined delegate.</span></span>  
  
 <span data-ttu-id="96c80-113">Na przykład, jeśli jest typu delegata, który został użyty do asynchronicznego wywoływania `MyDelegate`, delegata, która jest zwracana przez tę właściwość musi być rzutowane na `MyDelegate`.</span><span class="sxs-lookup"><span data-stu-id="96c80-113">For example, if the delegate that was used to make the asynchronous call is of type `MyDelegate`, the delegate that is returned by this property must be cast to `MyDelegate`.</span></span> <span data-ttu-id="96c80-114">Metoda wywołania zwrotnego może wywoływać delegata `EndInvoke` metody o prawidłowej sygnaturze w celu uzyskania wyników wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="96c80-114">The callback method can then call the delegate's `EndInvoke` method with the correct signature, in order to obtain the results of the asynchronous method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c80-115">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> właściwości do pobrania delegata, który został użyty do wykonać asynchroniczne wywołanie w celu wywołania `EndInvoke`.</span><span class="sxs-lookup"><span data-stu-id="96c80-115">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property to get the delegate that was used to make the asynchronous call, in order to call `EndInvoke`.</span></span> <span data-ttu-id="96c80-116">Przykład rzutowania <xref:System.IAsyncResult>, tylko parametr metody wywołania zwrotnego, która jest do <xref:System.Runtime.Remoting.Messaging.AsyncResult> obiektu.</span><span class="sxs-lookup"><span data-stu-id="96c80-116">The example casts the <xref:System.IAsyncResult>, which is the only parameter of the callback method, to an <xref:System.Runtime.Remoting.Messaging.AsyncResult> object.</span></span>  
  
 <span data-ttu-id="96c80-117">Przykład składa się z dwóch klas, klasy zawierającej metodę, która jest wywoływana asynchronicznie, i klasy, który zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-117">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="96c80-118">Aby uzyskać więcej informacji o sposobie, w tym przykładzie wywołania zwrotnego działa, a więcej przykładów asynchronicznie przez wywołanie metody przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-118">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="96c80-119">Żądanie <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-119">The request <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span>
          </span>
        </param>
        <param name="replySink">
          <span data-ttu-id="96c80-120">Odpowiedź <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-120">The response <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c80-121">Implementuje <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-121">Implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c80-122">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-122">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-123"><xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> Metody <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfejsu nie jest ważna dla <xref:System.Runtime.Remoting.Messaging.AsyncResult> klasy.</span><span class="sxs-lookup"><span data-stu-id="96c80-123">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> method of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface is not relevant to the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span> <span data-ttu-id="96c80-124">Implementacja przez <xref:System.Runtime.Remoting.Messaging.AsyncResult> zgłasza <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="96c80-124">Implementation by <xref:System.Runtime.Remoting.Messaging.AsyncResult> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="96c80-125">Zamiast tego należy uzyskać <xref:System.Runtime.Remoting.Messaging.AsyncResult> przez rzutowanie <xref:System.IAsyncResult> interfejsu zwrócony przez wywołanie asynchroniczne zostało nawiązane przy użyciu delegata.</span><span class="sxs-lookup"><span data-stu-id="96c80-125">Instead, obtain an <xref:System.Runtime.Remoting.Messaging.AsyncResult> by casting the <xref:System.IAsyncResult> interface returned by an asynchronous call made using a delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public virtual object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-126">Pobiera obiekt podana jako ostatni parametr <see langword="BeginInvoke" /> wywołania metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-126">Gets the object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-127">Obiekt udostępniany jako ostatni parametr <see langword="BeginInvoke" /> wywołania metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-127">The object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-128">Aby uzyskać więcej informacji na temat `BeginInvoke` metody, zobacz [programowania przy użyciu Delegaty asynchroniczne](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-128">For more information about the `BeginInvoke` method, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c80-129">Poniższy przykład kodu pokazuje sposób <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> właściwość jest używana do przekazywania informacji do metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="96c80-129">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="96c80-130">Ostatni parametr `BeginInvoke` wywołania metody jest ciąg formatu, który używa metody wywołania zwrotnego do sformatowania komunikatu wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="96c80-130">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="96c80-131">Przykład składa się z dwóch klas, klasy zawierającej metodę, która jest wywoływana asynchronicznie, i klasy, który zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-131">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="96c80-132">Aby uzyskać więcej informacji o sposobie, w tym przykładzie wywołania zwrotnego działa, a więcej przykładów asynchronicznie przez wywołanie metody przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-132">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-133">Pobiera <see cref="T:System.Threading.WaitHandle" /> hermetyzuje dojścia synchronizacji Win32 i umożliwia wykonania różnych systemów synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-133">Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-134">A <see cref="T:System.Threading.WaitHandle" /> hermetyzuje dojścia synchronizacji Win32 i umożliwia wykonania różnych systemów synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-134">A <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-135"><xref:System.Threading.WaitHandle> Zwróconych przez to metoda automatycznie jest sygnalizowane po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="96c80-135">The <xref:System.Threading.WaitHandle> returned by this method is automatically signaled when the asynchronous operation has completed.</span></span>  
  
 <span data-ttu-id="96c80-136">Dojście oczekiwania nie jest automatycznie zamknięte podczas wywoływania `EndInvoke` na delegata, które zostało użyte do nawiązania asynchroniczne wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-136">The wait handle is not closed automatically when you call `EndInvoke` on the delegate that was used to make the asynchronous method call.</span></span> <span data-ttu-id="96c80-137">Jeśli musisz zwolnić wszystkie odwołania do dojścia oczekiwania, zasoby systemowe są zwalniane podczas odzyskiwania pamięci Zwraca dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="96c80-137">If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</span></span> <span data-ttu-id="96c80-138">Aby zwolnić zasobów systemowych, jak najszybciej po zakończeniu korzystania dojście oczekiwania, należy wywołać <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-138">To free the system resources as soon as you are finished using the wait handle, call the <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="96c80-139">Wyrzucanie elementów bezużytecznych działa wydajniej, gdy obiekty możliwe do rozporządzania są jawnie zamknięty lub usunięty.</span><span class="sxs-lookup"><span data-stu-id="96c80-139">Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96c80-140"><xref:System.Threading.WaitHandle> Zawartych w <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> właściwości może służyć do blokowania bieżący wątek, do czasu ukończenia wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="96c80-140">The <xref:System.Threading.WaitHandle> contained in the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property can be used to block the current thread until the asynchronous call is complete.</span></span> <span data-ttu-id="96c80-141">Jednak <xref:System.Threading.WaitHandle> zignoruje <xref:System.AsyncCallback>, jeśli został określony podczas `BeginInvoke` wywołania.</span><span class="sxs-lookup"><span data-stu-id="96c80-141">However the <xref:System.Threading.WaitHandle> will ignore the <xref:System.AsyncCallback>, if one was specified during the `BeginInvoke` call.</span></span> <span data-ttu-id="96c80-142">W związku z tym sytuacja może wystąpić, gdy aplikacja będzie zamykany przed <xref:System.AsyncCallback> zakończono wykonywanie, nawet jeśli <xref:System.Threading.WaitHandle> służy do bloku do momentu ukończenia wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="96c80-142">Therefore, a situation can occur where the application shuts down before the <xref:System.AsyncCallback> has finished executing, even if a <xref:System.Threading.WaitHandle> is used to block until the asynchronous call completion.</span></span> <span data-ttu-id="96c80-143">Na przykład takiej sytuacji Zobacz przykład <xref:System.Runtime.Remoting.Messaging.AsyncResult> klasy, a następnie usuń <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> instrukcji.</span><span class="sxs-lookup"><span data-stu-id="96c80-143">For an example of such a situation, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class, and remove the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c80-144">W poniższym przykładzie pokazano sposób użycia <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> właściwości do pobrania <xref:System.Threading.WaitHandle>i Oczekiwanie na wywołanie asynchroniczne obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="96c80-144">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="96c80-145"><xref:System.Threading.WaitHandle> Jest sygnalizowane po zakończeniu wywołania asynchronicznego i poczekaj na jego, wywołując <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-145">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="96c80-146">Przykład składa się z dwóch klas, klasy zawierającej metodę, która jest wywoływana asynchronicznie, i klasy, który zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-146">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="96c80-147">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-147">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.WaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CompletedSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-148">Pobiera wartość wskazującą czy <see langword="BeginInvoke" /> wywołanie zostało ukończone synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-148">Gets a value indicating whether the <see langword="BeginInvoke" /> call completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-149">
            <see langword="true" /> Jeśli <see langword="BeginInvoke" /> wywołanie zostało ukończone synchronicznie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-149">
              <see langword="true" /> if the <see langword="BeginInvoke" /> call completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-150">Jeśli zostało wykryte, że `BeginInvoke` wywołanie zostało ukończone synchronicznie w <xref:System.AsyncCallback> delegata, jest prawdopodobne, że wątek, który wywołuje BeginInvoke będzie bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="96c80-150">If it is detected that the `BeginInvoke` call completed synchronously in the <xref:System.AsyncCallback> delegate, it is probable that the thread that called BeginInvoke is the current thread.</span></span> <span data-ttu-id="96c80-151">Dostawców większości <xref:System.IAsyncResult> interfejsu nie będzie używać możliwości i zwróci wartości domyślnej `false`.</span><span class="sxs-lookup"><span data-stu-id="96c80-151">Most providers of the <xref:System.IAsyncResult> interface will not use the capability and will return a default `false`.</span></span>  
  
 <span data-ttu-id="96c80-152">Bieżąca implementacja <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="96c80-152">Current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeCalled">
      <MemberSignature Language="C#" Value="public bool EndInvokeCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndInvokeCalled" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property EndInvokeCalled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndInvokeCalled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-153">Pobiera lub ustawia wartość wskazującą czy <see langword="EndInvoke" /> została wywołana dla bieżącego <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-153">Gets or sets a value indicating whether <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-154">
            <see langword="true" /> Jeśli <see langword="EndInvoke" /> została wywołana dla bieżącego <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-154">
              <see langword="true" /> if <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage GetReplyMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage GetReplyMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplyMessage () As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ GetReplyMessage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96c80-155">Pobiera komunikat odpowiedzi dla wywołania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-155">Gets the response message for the asynchronous call.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c80-156">Komunikat remoting powinno reprezentować na odpowiedź na wywołania metody dla obiektu zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-156">A remoting message that should represent a response to a method call on a remote object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-157"><xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> Metoda może zwracać obiektu po <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="96c80-157">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method can return an object after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method is called.</span></span> <span data-ttu-id="96c80-158"><xref:System.Runtime.Remoting.Messaging.IMessage> Zwracanej wartości mogą być rzutowane na <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span><span class="sxs-lookup"><span data-stu-id="96c80-158">The <xref:System.Runtime.Remoting.Messaging.IMessage> return value can be cast to an <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span></span>  
  
 <span data-ttu-id="96c80-159">Jednak nie należy do żadnej z tych metod wywołać bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="96c80-159">However, you do not need to call either of these methods directly.</span></span> <span data-ttu-id="96c80-160">Są one przeznaczone do użytku przez infrastrukturę usług zdalnych platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="96c80-160">They are intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-161">Pobiera wartość wskazującą, czy serwer zakończył połączenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-161">Gets a value indicating whether the server has completed the call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-162">
            <see langword="true" /> Po zakończeniu serwer wywołania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-162">
              <see langword="true" /> after the server has completed the call; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-163">Serwer nie wolno używać żadnych zasobów dostarczane przez klienta poza uzgodnionych na semantykę udostępniania po ustawia <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="96c80-163">The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property to `true`.</span></span> <span data-ttu-id="96c80-164">W związku z tym jest bezpieczne dla klienta do zniszczenia zasobów po <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> zwraca właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="96c80-164">Thus, it is safe for the client to destroy the resources after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c80-165">Poniższy przykład przedstawia użycie <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.Runtime.Remoting.Messaging.AsyncResult> zwrócony przez `BeginInvoke` do odnajdywania, po zakończeniu wykonywania wywołanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="96c80-165">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.Runtime.Remoting.Messaging.AsyncResult> returned by `BeginInvoke` to discover when an asynchronous call completes.</span></span> <span data-ttu-id="96c80-166">Można to zrobić, gdy co wywołanie asynchroniczne z wątku interfejsu użytkownika z usług.</span><span class="sxs-lookup"><span data-stu-id="96c80-166">You might do this when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="96c80-167">Sondowanie w celu ukończenia umożliwia wątek wywołujący kontynuować wykonywanie podczas wywołania asynchronicznego wykonuje na <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="96c80-167">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="96c80-168">Przykład składa się z dwóch klas, klasy zawierającej metodę, która jest wywoływana asynchronicznie, i klasy, który zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-168">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="96c80-169">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="96c80-169">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c80-170">Pobiera dalej odbioru wiadomości w łańcuchu ujścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-170">Gets the next message sink in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c80-171">
            <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> Sink interfejs, który reprezentuje następny komunikat w łańcuchu ujścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-171">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface that represents the next message sink in the sink chain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-172">Bieżąca implementacja <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="96c80-172">The current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageCtrl">
      <MemberSignature Language="C#" Value="public virtual void SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessageCtrl(class System.Runtime.Remoting.Messaging.IMessageCtrl mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMessageCtrl (mc As IMessageCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl ^ mc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
      </Parameters>
      <Docs>
        <param name="mc">
          <span data-ttu-id="96c80-173">
            <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> Dla bieżącego wywołania metody zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-173">The <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c80-174">Ustawia <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> dla bieżącego wywołania metody zdalnego zapewniające pozwala sterować komunikatów asynchronicznych po zostały wysłane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-174">Sets an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-175">Nie należy wywołać <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-175">You do not need to call the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="96c80-176">Komunikat odpowiedzi na wywołanie metody dla obiektu zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-176">A response message to a method call on a remote object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c80-177">Odpowiedź zwrócona przez wywołanie metody dla obiektu zdalnego są przetwarzane synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-177">Synchronously processes a response message returned by a method call on a remote object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c80-178">Zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c80-178">Returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c80-179"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Implementuje metody <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="96c80-179">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method implements the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="96c80-180">Nie trzeba przeprowadzać tę metodę należy wywołać bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="96c80-180">You do not need to call this method directly.</span></span> <span data-ttu-id="96c80-181">Jest przeznaczony do użytku przez infrastrukturę usług zdalnych platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="96c80-181">It is intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 <span data-ttu-id="96c80-182"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Kod użytkownika wywołuje <xref:System.AsyncCallback> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="96c80-182"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invokes the consumer code's <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="96c80-183">Ustawia również <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> zwrócone przez wystąpienie <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96c80-183">It also sets the <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instance returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method.</span></span> <span data-ttu-id="96c80-184">Jeśli `msg` parametr jest typu <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, ten sam obiekt jest zwracany przez <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="96c80-184">If the `msg` parameter is of type <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, the same object is returned by <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span></span> <span data-ttu-id="96c80-185">W przeciwnym razie zwracany jest komunikat odpowiedzi, który zawiera wyjątek komunikacji zdalnej.</span><span class="sxs-lookup"><span data-stu-id="96c80-185">Otherwise, a reply message that contains a remoting exception is returned.</span></span>  
  
 <span data-ttu-id="96c80-186"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Zmodyfikowano wartość zwrócona przez <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="96c80-186"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> also modifies the value returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>