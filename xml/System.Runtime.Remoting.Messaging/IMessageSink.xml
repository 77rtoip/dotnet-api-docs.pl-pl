<Type Name="IMessageSink" FullName="System.Runtime.Remoting.Messaging.IMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b414cab42951a8dbae4b137382c350d328bc2fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30566728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje interfejs dla odbiorcy wiadomości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu metody na serwerze proxy, w zdalnej infrastrukturze zapewnia obsługę konieczne przekazywanie argumentów do rzeczywistego obiektu w zdalnych granicach, wywołanie metody rzeczywistego obiektu z argumentami i zwraca wyniki z powrotem do Klient obiekt serwera proxy.  
  
 Wywołanie metody zdalnej jest komunikat, który przechodzi po stronie klienta w celu serwera i prawdopodobnie z powrotem. Zgodnie z jego przecina granice komunikacji zdalnej w taki sposób, wywołanie metody zdalnego przechodzi przez łańcuch `IMessageSink` obiektów. Każdy zbiornika w łańcuchu otrzymuje obiekt wiadomości, wykonuje określoną operację i deleguje do następnego zbiornika w łańcuchu. Obiekt serwera proxy zawiera odwołanie do pierwszej `IMessageSink` musi być używany do uruchamiania poza łańcucha.  
  
 Wywołania asynchroniczne w czasie delegowania, każdy obiekt sink zapewnia zbiornika odpowiedzi (inny `IMessageSink`) zostanie która wywołana przez dalej zbiornika gdy odpowiedź jest w drodze ponownie.  
  
 Różne typy wychwytywanie wykonywać różne operacje, w zależności od typu obiektu wiadomości odebrane. Na przykład jeden obiekt sink może spowodować, że blokady do wykonania, innego można wymusić wywołania zabezpieczeń innego można wykonać przepływu wywołania usług kontroli i niezawodność i jeszcze innego transportu wywołanie innego <xref:System.AppDomain>, proces lub komputera. Co najmniej dwa obiekty sink komunikat w łańcuchu mogą współdziałać ze sobą w odniesieniu do każdej określonej akcji.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfejsu. Dla przykładu skompilować należy podać przykład zakłada definicje typów i odwołań do zestawów.  
  
 [!code-cpp[IMessageSink_Client#3](~/samples/snippets/cpp/VS_Snippets_Remoting/IMessageSink_Client/CPP/imessagesink_client.cpp#3)]
 [!code-csharp[IMessageSink_Client#3](~/samples/snippets/csharp/VS_Snippets_Remoting/IMessageSink_Client/CS/imessagesink_client.cs#3)]
 [!code-vb[IMessageSink_Client#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMessageSink_Client/VB/imessagesink_client.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Należy pamiętać, że implementacja interfejsu bieżącego kodu muszą zawierać implementacje zarówno dla <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> i <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />, ponieważ synchroniczne wywołania może zostać przekonwertowany na wywołania asynchroniczne i na odwrót. Obie metody musi być implementowana nawet wtedy, gdy obiekt sink nie obsługuje przetwarzania asynchronicznego.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat do przetworzenia.</param>
        <param name="replySink">Obiekt sink odpowiedzi dla komunikatu odpowiedzi.</param>
        <summary>Asynchronicznie przetwarza tego komunikatu.</summary>
        <returns>Zwraca <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> interfejs, który umożliwia sterowanie komunikatów asynchronicznych po zostały wysłane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana na odbioru wiadomości w zdalnej infrastrukturze lub poprzedniego zbiornika komunikatów asynchronicznych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dalej odbioru wiadomości w łańcuchu ujścia.</summary>
        <value>Dalej wiadomości zbiornika w łańcuchu ujścia.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat do przetworzenia.</param>
        <summary>Tego komunikatu są przetwarzane synchronicznie.</summary>
        <returns>Komunikat odpowiedzi w odpowiedzi na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> Wywoływana jest metoda zbiornika komunikat w zdalnej infrastrukturze lub poprzedniego zbiornika synchroniczne komunikatów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>