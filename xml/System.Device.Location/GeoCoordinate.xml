<Type Name="GeoCoordinate" FullName="System.Device.Location.GeoCoordinate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1abc71b59763de7ffde624febcccadeb86ca98" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36676899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GeoCoordinate : IEquatable&lt;System.Device.Location.GeoCoordinate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeoCoordinate extends System.Object implements class System.IEquatable`1&lt;class System.Device.Location.GeoCoordinate&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Device.Location.GeoCoordinate" />
  <TypeSignature Language="VB.NET" Value="Public Class GeoCoordinate&#xA;Implements IEquatable(Of GeoCoordinate)" />
  <TypeSignature Language="C++ CLI" Value="public ref class GeoCoordinate : IEquatable&lt;System::Device::Location::GeoCoordinate ^&gt;" />
  <TypeSignature Language="F#" Value="type GeoCoordinate = class&#xA;    interface IEquatable&lt;GeoCoordinate&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Device</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Device.Location.GeoCoordinate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje lokalizacji geograficznej, który jest określany przez współrzędne geograficzne współrzędnych. Mogą również obejmować wysokość, dokładność, szybkość i informacje o kursu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Device.Location.GeoCoordinate." /></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Device.Location.GeoCoordinate" /> który nie ma żadnych pól danych, ustaw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie pola danych są ustawione na <xref:System.Double.NaN>.  Nowe wystąpienie klasy <xref:System.Device.Location.GeoCoordinate> jest odpowiednikiem <xref:System.Device.Location.GeoCoordinate.Unknown>.  
  
 Ten konstruktor powinien być używany do serializacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinate (double latitude, double longitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 latitude, float64 longitude) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (latitude As Double, longitude As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinate(double latitude, double longitude);" />
      <MemberSignature Language="F#" Value="new System.Device.Location.GeoCoordinate : double * double -&gt; System.Device.Location.GeoCoordinate" Usage="new System.Device.Location.GeoCoordinate (latitude, longitude)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="latitude">Szerokość geograficzna lokalizacji. Może należeć do zakresu od-90.0 do 90.0.</param>
        <param name="longitude">Długość geograficzna lokalizacji. Może należeć do zakresu od-180.0 do 180.0.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Device.Location.GeoCoordinate" /> klasy z danych współrzędne geograficzne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości szerokości i długości geograficznej muszą odpowiadać rzeczywistej lokalizacji na całym świecie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Szerokość lub długość geograficzną jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinate (double latitude, double longitude, double altitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 latitude, float64 longitude, float64 altitude) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (latitude As Double, longitude As Double, altitude As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinate(double latitude, double longitude, double altitude);" />
      <MemberSignature Language="F#" Value="new System.Device.Location.GeoCoordinate : double * double * double -&gt; System.Device.Location.GeoCoordinate" Usage="new System.Device.Location.GeoCoordinate (latitude, longitude, altitude)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="altitude" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="latitude">Szerokość geograficzna. Może należeć do zakresu od-90.0 do 90.0.</param>
        <param name="longitude">Longitude. Może należeć do zakresu od-180.0 do 180.0</param>
        <param name="altitude">Wysokość w liczników. Może być ujemna, dodatnia, 0 lub <see cref="F:System.Double.NaN" />, jeśli jest nieznana.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Device.Location.GeoCoordinate" /> klasy z danych szerokości, długości i wysokość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości szerokości i długości geograficznej muszą odpowiadać rzeczywistej lokalizacji na całym świecie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="latitude" />, <paramref name="longitude" />, lub <paramref name="altitude" /> jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 latitude, float64 longitude, float64 altitude, float64 horizontalAccuracy, float64 verticalAccuracy, float64 speed, float64 course) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (latitude As Double, longitude As Double, altitude As Double, horizontalAccuracy As Double, verticalAccuracy As Double, speed As Double, course As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinate(double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);" />
      <MemberSignature Language="F#" Value="new System.Device.Location.GeoCoordinate : double * double * double * double * double * double * double -&gt; System.Device.Location.GeoCoordinate" Usage="new System.Device.Location.GeoCoordinate (latitude, longitude, altitude, horizontalAccuracy, verticalAccuracy, speed, course)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="altitude" Type="System.Double" />
        <Parameter Name="horizontalAccuracy" Type="System.Double" />
        <Parameter Name="verticalAccuracy" Type="System.Double" />
        <Parameter Name="speed" Type="System.Double" />
        <Parameter Name="course" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="latitude">Szerokość geograficzna lokalizacji. Może należeć do zakresu od-90.0 do 90.0.</param>
        <param name="longitude">Długość geograficzna lokalizacji. Może należeć do zakresu od-180.0 do 180.0.</param>
        <param name="altitude">Wysokość w liczników. Może być ujemna, dodatnia, 0 lub <see cref="F:System.Double.NaN" />, jeśli jest nieznana.</param>
        <param name="horizontalAccuracy">Dokładność współrzędnych współrzędne geograficzne, w liczników. Musi być większa lub równa 0. Jeśli podano wartość 0 do tego konstruktora <see cref="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy" /> będzie mieć ustawioną właściwość <see cref="F:System.Double.NaN" />.</param>
        <param name="verticalAccuracy">Dokładność wysokość, w liczników. Musi być większa lub równa 0. Jeśli podano wartość 0 do tego konstruktora <see cref="P:System.Device.Location.GeoCoordinate.VerticalAccuracy" /> będzie mieć ustawioną właściwość <see cref="F:System.Double.NaN" />.</param>
        <param name="speed">Prędkość mierzona metry na sekundę. Może być ujemna, dodatnia, 0 lub <see cref="F:System.Double.NaN" />, jeśli jest nieznana.  Ujemna szybkości można wskazać przechodzenia wstecz.</param>
        <param name="course">Kierunek podróży, zamiast orientacji. Ten parametr jest mierzony w stopniach względem Północna wartość true. Musi należeć do zakresu od 0 do 360.0 lub być <see cref="F:System.Double.NaN" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Device.Location.GeoCoordinate" /> klasy z szerokości, długości, wysokość, poziomy dokładność, dokładność pionowy, szybkość i kursu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="latitude" />, <paramref name="longitude" />, <paramref name="horizontalAccuracy" />, <paramref name="verticalAccuracy," /> lub <paramref name="course" /> jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Altitude">
      <MemberSignature Language="C#" Value="public double Altitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Altitude" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.Altitude" />
      <MemberSignature Language="VB.NET" Value="Public Property Altitude As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Altitude { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Altitude : double with get, set" Usage="System.Device.Location.GeoCoordinate.Altitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość elementu <see cref="T:System.Device.Location.GeoCoordinate" />, metry.</summary>
        <value>Wysokość w liczników.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wysokość otrzymuje względem sea poziom.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Course">
      <MemberSignature Language="C#" Value="public double Course { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Course" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.Course" />
      <MemberSignature Language="VB.NET" Value="Public Property Course As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Course { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Course : double with get, set" Usage="System.Device.Location.GeoCoordinate.Course" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nagłówek w stopniach względem Północna wartość true.</summary>
        <value>Nagłówek w stopniach względem Północna wartość true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prawidłowy zakres obejmuje wartości od 0,0 do 360.0, i `Double.NaN` Jeśli nagłówek nie został zdefiniowany.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Device.Location.GeoCoordinate.Course%2A> i <xref:System.Device.Location.GeoCoordinate.Speed%2A> właściwości bieżącej lokalizacji <xref:System.Device.Location.GeoCoordinate>.  
  
 [!code-csharp[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.courseandspeed/cs/courseandspeed.cs#2)]
 [!code-vb[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.courseandspeed/vb/courseandspeed.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.Course" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy dwa <see cref="T:System.Device.Location.GeoCoordinate" /> obiekty są odpowiednikami, wyłącznie na współrzędne geograficzne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Device.Location.GeoCoordinate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Device.Location.GeoCoordinate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As GeoCoordinate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Device::Location::GeoCoordinate ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Device.Location.GeoCoordinate -&gt; bool" Usage="geoCoordinate.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Device.Location.GeoCoordinate" /> Obiekt do porównania z obiektu wywołującego.</param>
        <summary>Określa, czy <see cref="T:System.Device.Location.GeoCoordinate" /> obiektu odpowiada parametrowi wyłącznie na współrzędne geograficzne.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Device.Location.GeoCoordinate" /> obiekty są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odpowiednik <xref:System.Device.Location.GeoCoordinate> obiekty mają takie same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> i <xref:System.Device.Location.GeoCoordinate.Longitude%2A> właściwości. <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, I <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> właściwości nie są używane do określania równoważność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="geoCoordinate.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania <see cref="T:System.Device.Location.GeoCoordinate" /> do.</param>
        <summary>Określa, czy określonej <see cref="T:System.Device.Location.GeoCoordinate" /> jest taki sam, jak bieżący <see cref="T:System.Device.Location.GeoCoordinate" />, na podstawie wyłącznie na współrzędne geograficzne.</summary>
        <returns>
          <see langword="true" />, jeśli <see cref="T:System.Device.Location.GeoCoordinate" /> obiekty są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odpowiednik <xref:System.Device.Location.GeoCoordinate> obiekty mają takie same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> i <xref:System.Device.Location.GeoCoordinate.Longitude%2A> właściwości. <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, I <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> właściwości nie są używane do określania równoważność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceTo">
      <MemberSignature Language="C#" Value="public double GetDistanceTo (System.Device.Location.GeoCoordinate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDistanceTo(class System.Device.Location.GeoCoordinate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDistanceTo (other As GeoCoordinate) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDistanceTo(System::Device::Location::GeoCoordinate ^ other);" />
      <MemberSignature Language="F#" Value="member this.GetDistanceTo : System.Device.Location.GeoCoordinate -&gt; double" Usage="geoCoordinate.GetDistanceTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Device.Location.GeoCoordinate" /> Lokalizacji do obliczenia odległość.</param>
        <summary>Zwraca odległość między współrzędne współrzędne geograficzne, które są określone przez to <see cref="T:System.Device.Location.GeoCoordinate" /> i jedno określone <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
        <returns>Odległość między dwie współrzędne, w liczników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła Haversine służy do obliczania odległość.  Formuła Haversine konta dla łuku ziemi, ale przyjmuje kulistego ziemi zamiast elipsy. Na duże odległości formuła Haversine wprowadza błąd mniej niż 0,1 procent.  
  
 Wysokość nie jest używany do obliczania odległość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="geoCoordinate.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pełni rolę funkcji skrótu dla <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Device.Location.GeoCoordinate" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Device.Location.GeoCoordinate> obiekty, które są równoważne mają taki sam skrót. Odpowiednik <xref:System.Device.Location.GeoCoordinate> obiekty mają takie same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> i <xref:System.Device.Location.GeoCoordinate.Longitude%2A> właściwości. <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, I <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> właściwości nie są używane do określania równoważność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAccuracy">
      <MemberSignature Language="C#" Value="public double HorizontalAccuracy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalAccuracy" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAccuracy As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalAccuracy { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAccuracy : double with get, set" Usage="System.Device.Location.GeoCoordinate.HorizontalAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dokładność współrzędne geograficzne podanej przez <see cref="T:System.Device.Location.GeoCoordinate" />, w liczników.</summary>
        <value>Dokładność współrzędne geograficzne, w liczników.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dokładność jest uznawana za radius pewności danych współrzędne geograficzne.  Obszar cykliczne, który został utworzony z dokładnością jak współrzędnych usługi radius i współrzędne geograficzne jako środek zawiera rzeczywistej lokalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Device.Location.GeoCoordinate.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Device.Location.GeoCoordinate" /> nie zawiera danych szerokości geograficznej lub długość geograficzną.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Device.Location.GeoCoordinate" /> nie zawiera danych szerokości geograficznej lub długość geograficzną; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Device.Location.GeoCoordinate> nie zawiera współrzędne lub równa długości danych <xref:System.Device.Location.GeoCoordinate.Unknown>.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza, czy <xref:System.Device.Location.GeoCoordinate> , który odpowiada lokalizacji jest <xref:System.Device.Location.GeoCoordinate.Unknown> przed drukowanie jego współrzędne geograficzne.  
  
 [!code-csharp[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/cs/getlocationdatasynchandleunknown.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/vb/GetLocationDataSyncHandleUnknown.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Latitude">
      <MemberSignature Language="C#" Value="public double Latitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Latitude" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.Latitude" />
      <MemberSignature Language="VB.NET" Value="Public Property Latitude As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Latitude { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Latitude : double with get, set" Usage="System.Device.Location.GeoCoordinate.Latitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
        <value>Szerokość geograficzna lokalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szerokość geograficzna może należeć do zakresu od-90.0 do 90.0. Szerokość geograficzna jest mierzony w stopniach północ lub południe od równika. Wartości dodatnie są na północ od równika i wartości ujemne są południe od równika.  
  
   
  
## Examples  
 Poniższy przykład drukuje współrzędne geograficzne wartości, które są uzyskiwane z <xref:System.Device.Location.GeoCoordinate>.  
  
 [!code-csharp[System.Device.Location.LocationEvent1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.locationevent1/cs/locationevent.cs#1)]
 [!code-vb[System.Device.Location.LocationEvent1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.locationevent1/vb/locationevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.Latitude" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Longitude">
      <MemberSignature Language="C#" Value="public double Longitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Longitude" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.Longitude" />
      <MemberSignature Language="VB.NET" Value="Public Property Longitude As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Longitude { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Longitude : double with get, set" Usage="System.Device.Location.GeoCoordinate.Longitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wysokość <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
        <value>Długość geograficzna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wysokość mogą należeć do zakresu od-180.0 do 180.0. Długość geograficzna jest mierzony w stopniach Wschód lub zachód od głównego południka. Wartości ujemne są zachód od głównego południka, a wartości dodatnie są wschód od głównego południka.  
  
   
  
## Examples  
 Poniższy przykład drukuje współrzędne geograficzne wartości, które są uzyskiwane z <xref:System.Device.Location.GeoCoordinate>.  
  
 [!code-csharp[System.Device.Location.LocationEvent1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.locationevent1/cs/locationevent.cs#1)]
 [!code-vb[System.Device.Location.LocationEvent1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.locationevent1/vb/locationevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.Longitude" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Device.Location.GeoCoordinate left, class System.Device.Location.GeoCoordinate right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As GeoCoordinate, right As GeoCoordinate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Device::Location::GeoCoordinate ^ left, System::Device::Location::GeoCoordinate ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Device.Location.GeoCoordinate * System.Device.Location.GeoCoordinate -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Device.Location.GeoCoordinate" />
        <Parameter Name="right" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="left">Pierwszy <see cref="T:System.Device.Location.GeoCoordinate" /> do porównania.</param>
        <param name="right">Drugi <see cref="T:System.Device.Location.GeoCoordinate" /> do porównania.</param>
        <summary>Określa, czy dwa <see cref="T:System.Device.Location.GeoCoordinate" /> obiektów odwoływać się do tej samej lokalizacji.</summary>
        <returns>
          <see langword="true" />, jeśli <see cref="T:System.Device.Location.GeoCoordinate" /> obiekty zostaną oznaczone jako równoważne; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odpowiednik <xref:System.Device.Location.GeoCoordinate> obiekty mają takie same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> i <xref:System.Device.Location.GeoCoordinate.Longitude%2A> właściwości. <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, I <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> właściwości nie są używane do określania równoważność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Device.Location.GeoCoordinate left, class System.Device.Location.GeoCoordinate right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As GeoCoordinate, right As GeoCoordinate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Device::Location::GeoCoordinate ^ left, System::Device::Location::GeoCoordinate ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Device.Location.GeoCoordinate * System.Device.Location.GeoCoordinate -&gt; bool" Usage="System.Device.Location.GeoCoordinate.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Device.Location.GeoCoordinate" />
        <Parameter Name="right" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="left">Pierwszy <see cref="T:System.Device.Location.GeoCoordinate" /> do porównania.</param>
        <param name="right">Drugi <see cref="T:System.Device.Location.GeoCoordinate" /> do porównania.</param>
        <summary>Określa, czy dwa <see cref="T:System.Device.Location.GeoCoordinate" /> obiektów odpowiada różnych lokalizacjach.</summary>
        <returns>
          <see langword="true" />, jeśli <see cref="T:System.Device.Location.GeoCoordinate" /> obiekty zostaną oznaczone jako różne; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odpowiednik <xref:System.Device.Location.GeoCoordinate> obiekty mają takie same <xref:System.Device.Location.GeoCoordinate.Latitude%2A> i <xref:System.Device.Location.GeoCoordinate.Longitude%2A> właściwości. <xref:System.Device.Location.GeoCoordinate.Altitude%2A>, <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>, I <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A> właściwości nie są używane do określania równoważność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public double Speed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Property Speed As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Speed { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Speed : double with get, set" Usage="System.Device.Location.GeoCoordinate.Speed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szybkości metry na sekundę.</summary>
        <value>Szybkość metry na sekundę. Szybkość musi być większa lub równa zero, lub <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie <xref:System.Device.Location.GeoCoordinate.Course%2A> i <xref:System.Device.Location.GeoCoordinate.Speed%2A> właściwości bieżącej lokalizacji <xref:System.Device.Location.GeoCoordinate>.  
  
 [!code-csharp[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.courseandspeed/cs/courseandspeed.cs#2)]
 [!code-vb[System.Device.Location.CourseAndSpeed#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.courseandspeed/vb/courseandspeed.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.Speed" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="geoCoordinate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który zawiera współrzędne geograficzne.</summary>
        <returns>Ciąg, który zawiera współrzędne geograficzne, rozdzielonych przecinkami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reprezentacja ciągu zwracane przez tę metodę jest przeznaczony tylko do użytku debugowania. Ta metoda nie zwraca żadnych ustawień regionalnych formatowanie współrzędne geograficzne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="public static readonly System.Device.Location.GeoCoordinate Unknown;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Device.Location.GeoCoordinate Unknown" />
      <MemberSignature Language="DocId" Value="F:System.Device.Location.GeoCoordinate.Unknown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Unknown As GeoCoordinate " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Device::Location::GeoCoordinate ^ Unknown;" />
      <MemberSignature Language="F#" Value=" staticval mutable Unknown : System.Device.Location.GeoCoordinate" Usage="System.Device.Location.GeoCoordinate.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Location.GeoCoordinate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see cref="T:System.Device.Location.GeoCoordinate" /> obiekt, który ma nieznany pola współrzędne geograficzne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Device.Location.GeoCoordinate.IsUnknown%2A> Właściwości można sprawdzić, czy <xref:System.Device.Location.GeoCoordinate> nie zawiera żadnych danych.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza, czy <xref:System.Device.Location.GeoCoordinate> , który odpowiada lokalizacji jest <xref:System.Device.Location.GeoCoordinate.Unknown> przed printingout jego współrzędne geograficzne.  
  
 [!code-csharp[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/cs/getlocationdatasynchandleunknown.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasynchandleunknown/vb/GetLocationDataSyncHandleUnknown.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAccuracy">
      <MemberSignature Language="C#" Value="public double VerticalAccuracy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalAccuracy" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinate.VerticalAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAccuracy As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalAccuracy { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalAccuracy : double with get, set" Usage="System.Device.Location.GeoCoordinate.VerticalAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dokładność wysokość przez <see cref="T:System.Device.Location.GeoCoordinate" />, w liczników.</summary>
        <value>Dokładność wysokość, w liczników.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Device.Location.GeoCoordinate.VerticalAccuracy" /> wartość jest poza prawidłowym zakresem.</exception>
      </Docs>
    </Member>
  </Members>
</Type>