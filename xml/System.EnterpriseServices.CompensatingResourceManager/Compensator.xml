<Type Name="Compensator" FullName="System.EnterpriseServices.CompensatingResourceManager.Compensator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d71904cb2c21b24f9043bd16558588216645f054" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Compensator : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compensator extends System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />
  <TypeSignature Language="VB.NET" Value="Public Class Compensator&#xA;Inherits ServicedComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compensator : System::EnterpriseServices::ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aff14-101">Reprezentuje klasę podstawową dla wszystkich kompensatory kompensowanie Menedżera zasobów (CRM).</span>
      <span class="sxs-lookup">
        <span data-stu-id="aff14-101">Represents the base class for all Compensating Resource Manager (CRM) Compensators.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff14-102">Użytkownik powinien być rozszerzany z tego obiektu w celu zapisania niestandardowy element wyrównujący transakcji.</span><span class="sxs-lookup"><span data-stu-id="aff14-102">The user should extend from this object in order to write a custom transaction Compensator.</span></span>  
  
 <span data-ttu-id="aff14-103">Element wyrównujący zawsze musi mieć konstruktora publicznego; w przeciwnym razie aparat odzyskiwania nie można go utworzyć.</span><span class="sxs-lookup"><span data-stu-id="aff14-103">A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.</span></span>  
  
 <span data-ttu-id="aff14-104">Aby uzyskać więcej informacji, zobacz [porady: tworzenie wyrównywania Menedżera zasobów (CRM)](http://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029).</span><span class="sxs-lookup"><span data-stu-id="aff14-104">For more information, see [How to: Create a Compensating Resource Manager (CRM)](http://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aff14-105">Poniższy przykład kodu pokazuje użycie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="aff14-105">The following code example demonstrates the use of this class.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#20](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#20)]
 [!code-csharp[EnterpriseServices_Crm#20](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#20)]
 [!code-vb[EnterpriseServices_Crm#20](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#20)]  
  
 <span data-ttu-id="aff14-106">Ten element wyrównujący jest używana przez następujące klasy procesu roboczego.</span><span class="sxs-lookup"><span data-stu-id="aff14-106">This compensator is used by the following worker class.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#10](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#10)]
 [!code-csharp[EnterpriseServices_Crm#10](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#10)]
 [!code-vb[EnterpriseServices_Crm#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#10)]  
  
 <span data-ttu-id="aff14-107">Poniższy przykład kodu pokazuje klienta, który wykonuje ten element wyrównujący i proces roboczy.</span><span class="sxs-lookup"><span data-stu-id="aff14-107">The following code example demonstrates a client that exercises this compensator and worker.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp#30)]
 [!code-csharp[EnterpriseServices_Crm#30](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs#30)]
 [!code-vb[EnterpriseServices_Crm#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Compensator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff14-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-108">Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortRecord">
      <MemberSignature Language="C#" Value="public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AbortRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AbortRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">
          <span data-ttu-id="aff14-109">Rekord dziennika mają być dostarczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-109">The log record to be delivered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff14-110">Podczas fazy przerwania zapewnia rekordu dziennika Element wyrównujący kompensowanie Menedżera zasobów (CRM).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-110">Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff14-111">
            <see langword="true" /> można zapomnienia dostarczonego rekordu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-111">
              <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-112">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-112">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#28](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#28)]
 [!code-csharp[EnterpriseServices_Crm#28](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#28)]
 [!code-vb[EnterpriseServices_Crm#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbort">
      <MemberSignature Language="C#" Value="public virtual void BeginAbort (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAbort(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginAbort (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAbort(bool fRecovery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <span data-ttu-id="aff14-113">
            <see langword="true" /> Aby rozpocząć etap przerwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-113">
              <see langword="true" /> to begin abort phase; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff14-114">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM) fazy przerwania ukończenia transakcji oraz nadchodzących dostarczania rekordów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-114">Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-115">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-115">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#27](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#27)]
 [!code-csharp[EnterpriseServices_Crm#27](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#27)]
 [!code-vb[EnterpriseServices_Crm#27](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public virtual void BeginCommit (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginCommit(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginCommit (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginCommit(bool fRecovery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <span data-ttu-id="aff14-116">
            <see langword="true" /> Aby rozpocząć faza rezerwacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-116">
              <see langword="true" /> to begin commit phase; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff14-117">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM) fazy rezerwacji ukończenia transakcji i nadchodzących dostarczania rekordów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-117">Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-118">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-118">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#24](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#24)]
 [!code-csharp[EnterpriseServices_Crm#24](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#24)]
 [!code-vb[EnterpriseServices_Crm#24](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrepare">
      <MemberSignature Language="C#" Value="public virtual void BeginPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginPrepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginPrepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff14-119">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM) fazie przygotowywania ukończenia transakcji i nadchodzących dostarczania rekordów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-119">Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-120">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-120">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#21](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#21)]
 [!code-csharp[EnterpriseServices_Crm#21](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#21)]
 [!code-vb[EnterpriseServices_Crm#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clerk">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clerk As Clerk" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::CompensatingResourceManager::Clerk ^ Clerk { System::EnterpriseServices::CompensatingResourceManager::Clerk ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.CompensatingResourceManager.Clerk</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff14-121">Pobiera wartość reprezentującą Menedżera wyrównywania zasobów (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-121">Gets a value representing the Compensating Resource Manager (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff14-122">
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-122">The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitRecord">
      <MemberSignature Language="C#" Value="public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommitRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CommitRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">
          <span data-ttu-id="aff14-123">Rekord dziennika do przesyłania dalej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-123">The log record to forward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff14-124">Dostarcza rekordu dziennika w kolejności do przodu podczas fazy rezerwacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-124">Delivers a log record in forward order during the commit phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff14-125">
            <see langword="true" /> można zapomnienia dostarczonego rekordu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-125">
              <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-126">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-126">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#25](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#25)]
 [!code-csharp[EnterpriseServices_Crm#25](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#25)]
 [!code-vb[EnterpriseServices_Crm#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbort">
      <MemberSignature Language="C#" Value="public virtual void EndAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff14-127">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM) otrzymała dostępne w fazie przerwania rekordów dziennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-127">Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-128">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-128">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#29](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#29)]
 [!code-csharp[EnterpriseServices_Crm#29](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#29)]
 [!code-vb[EnterpriseServices_Crm#29](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public virtual void EndCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff14-129">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM), czy został dostarczony dostępne podczas fazy rezerwacji rekordów dziennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-129">Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-130">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-130">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#26](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#26)]
 [!code-csharp[EnterpriseServices_Crm#26](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#26)]
 [!code-vb[EnterpriseServices_Crm#26](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrepare">
      <MemberSignature Language="C#" Value="public virtual bool EndPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndPrepare () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndPrepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff14-131">Powiadamia Element wyrównujący kompensowanie Menedżera zasobów (CRM), że posiada ona dostępna w fazie przygotowywania rekordów dziennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-131">Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff14-132">
            <see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-132">
              <see langword="true" /> if successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-133">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-133">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#23](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#23)]
 [!code-csharp[EnterpriseServices_Crm#23](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#23)]
 [!code-vb[EnterpriseServices_Crm#23](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareRecord">
      <MemberSignature Language="C#" Value="public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrepareRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrepareRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">
          <span data-ttu-id="aff14-134">Rekord dziennika do przesyłania dalej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-134">The log record to forward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff14-135">Dostarcza rekordu dziennika w kolejności do przodu w fazie przygotowywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-135">Delivers a log record in forward order during the prepare phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff14-136">
            <see langword="true" /> można zapomnienia dostarczonego rekordu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff14-136">
              <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aff14-137">Poniższy przykład kodu pokazuje implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="aff14-137">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#22](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#22)]
 [!code-csharp[EnterpriseServices_Crm#22](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#22)]
 [!code-vb[EnterpriseServices_Crm#22](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>